   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.rawFocussingMode,"ax",%progbits
  18              		.align	2
  19              		.global	rawFocussingMode
  20              		.code	16
  21              		.thumb_func
  23              	rawFocussingMode:
  24              	.LFB2:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** 
   2:../Sources/main.c **** /*************************************
   3:../Sources/main.c **** //// Shield Interfaces Description /////////////////
   4:../Sources/main.c **** 
   5:../Sources/main.c **** //// DIP /////////////////
   6:../Sources/main.c **** 
   7:../Sources/main.c **** Standard Mode:
   8:../Sources/main.c **** 
   9:../Sources/main.c **** 1	2	3	4
  10:../Sources/main.c **** X	0  	0	X	Raw Focusing Mode
  11:../Sources/main.c **** X	1	0	X	Servo Alignment
  12:../Sources/main.c **** X	0	1	X	Derivative Focusing Mode
  13:../Sources/main.c **** X	1	1	X	Line Following Mode
  14:../Sources/main.c **** Pin 1:	1 HBRIDGE enabled, RunningState;	0 HBRIDGE DISSABLED;
  15:../Sources/main.c **** Pin 4:	0 SingleSpeed_SingleUart;	1 DualSpeed_NoUart
  16:../Sources/main.c **** 
  17:../Sources/main.c **** Race Mode:
  18:../Sources/main.c **** 
  19:../Sources/main.c **** Pin 1: HBRIDGE enabled
  20:../Sources/main.c **** Pin 2: S-Mode enabled
  21:../Sources/main.c **** Pin 3: Cross Detection enabled
  22:../Sources/main.c **** Pin 4: Stopline Detection enabled
  23:../Sources/main.c **** 
  24:../Sources/main.c **** 
  25:../Sources/main.c **** //// LEDs /////////////////		0 LED_ON	x LED_OFF
  26:../Sources/main.c **** 
  27:../Sources/main.c **** 0xxx	Line lost
  28:../Sources/main.c **** x0xx	Line temporarily lost
  29:../Sources/main.c **** xx0x	Right edge following
  30:../Sources/main.c **** xxx0	Left edge following
  31:../Sources/main.c **** xx00	Double line following
  32:../Sources/main.c **** 0xx0	Cross Section detected
  33:../Sources/main.c **** 00xx	Stop Line detected
  34:../Sources/main.c **** x00x	S-Mode active
  35:../Sources/main.c **** 0000	Low battery
  36:../Sources/main.c **** 
  37:../Sources/main.c **** 
  38:../Sources/main.c **** //// Pots ///////////
  39:../Sources/main.c **** 
  40:../Sources/main.c **** Standard mode:
  41:../Sources/main.c **** Pot_1	Max Speed percent
  42:../Sources/main.c **** Pot_2	No Function
  43:../Sources/main.c **** 
  44:../Sources/main.c **** Race mode:
  45:../Sources/main.c **** Pot_1	Max Speed percent
  46:../Sources/main.c **** Pot_2	Friction Coefficient Correction - rotate clockwise to decrease friction coefficient
  47:../Sources/main.c **** 
  48:../Sources/main.c **** 
  49:../Sources/main.c **** //// Push Buttons ///////////
  50:../Sources/main.c **** 
  51:../Sources/main.c **** Switch_1	Stop Line reset
  52:../Sources/main.c **** 
  53:../Sources/main.c **** **************************************/
  54:../Sources/main.c **** 
  55:../Sources/main.c **** #include "main.h"
  56:../Sources/main.c **** 
  57:../Sources/main.c **** #define CHANNEL_0 0
  58:../Sources/main.c **** #define CHANNEL_1 1
  59:../Sources/main.c **** #define PUSH_BUTTON_1 1
  60:../Sources/main.c **** #define PUSH_BUTTON_2 2
  61:../Sources/main.c **** 
  62:../Sources/main.c **** 
  63:../Sources/main.c **** 
  64:../Sources/main.c **** #define BLUETOOTH_FLAG	-128
  65:../Sources/main.c **** 
  66:../Sources/main.c **** #define FLOAT_TO_CHAR(x)	(x >= 0.0) ? (signed char)(x + 0.5) : (signed char)(x - 0.5)		
  67:../Sources/main.c **** #define LIMIT_255(x)		(x <= 254.5f && x >= 0.0f && !(x >= 127.5f && x <= 128.5f)) ? x : ((x > 255.0
  68:../Sources/main.c **** #define LIMIT_ABS_127(x)	(x <= 126.9f && x >= -126.9f) ? x : ((x > 126.9f) ? 126.9f : -126.9f)
  69:../Sources/main.c **** 
  70:../Sources/main.c **** #define LINE_SCAN_IMAGE(x)	LINE_SCAN_IMAGE_EXAPND(x)	// Second level of indirection needed to expan
  71:../Sources/main.c **** #define LINE_SCAN_IMAGE_EXAPND(x)	LineScanImage##x
  72:../Sources/main.c **** 
  73:../Sources/main.c **** // carState struct initialization - keeps the main parameters of the car state
  74:../Sources/main.c **** static carState_s carState =
  75:../Sources/main.c **** {   .motorState = FORCED_DISABLED, .UARTSpeedState = UNDEFINED, 
  76:../Sources/main.c ****     .lineDetectionState = LINE_LOST, .lineScanState = NO_NEW_LINESCAN_IMAGE, 
  77:../Sources/main.c **** 	.detectedType = NONE, .edge = NO_EDGE, .crossSection = NO, .crossSectionPosition = NO_CROSS,
  78:../Sources/main.c **** 	.lineDistance = STRAIGHT_DISTANCE_DEFAULT, .carMode = NORMAL_MODE, .sMode = S_MODE_OFF};
  79:../Sources/main.c **** 
  80:../Sources/main.c **** uint16_t loop_time = 0, loop_begin = 0;
  81:../Sources/main.c **** float batteryLevel = 0;
  82:../Sources/main.c **** static float targetSpeed = 0;
  83:../Sources/main.c **** float incline_speed;
  84:../Sources/main.c **** float speedL = 0;
  85:../Sources/main.c **** float speedR = 0;
  86:../Sources/main.c **** static float servoValue = 0;
  87:../Sources/main.c **** extern int32_t newExposure;
  88:../Sources/main.c **** float max_speed_percent = 50;
  89:../Sources/main.c **** uint8_t received_byte1 = 0; //received byte from bluetooth 0 to 255
  90:../Sources/main.c **** uint8_t received_byte2 = 0;
  91:../Sources/main.c **** uint8_t count = 0; //bluetooth count
  92:../Sources/main.c **** static uint8_t stoplineJustDetected = 0;
  93:../Sources/main.c **** float friction_correct = 0;
  94:../Sources/main.c **** 
  95:../Sources/main.c **** #ifdef S_MODE_ENABLE
  96:../Sources/main.c **** uint8_t s_mode_enable = 1;
  97:../Sources/main.c **** #else
  98:../Sources/main.c **** uint8_t s_mode_enable = 0;
  99:../Sources/main.c **** #endif
 100:../Sources/main.c **** 
 101:../Sources/main.c **** #ifdef CROSS_DETECTION_ENABLE
 102:../Sources/main.c **** uint8_t cross_section_enable = 1;
 103:../Sources/main.c **** #else
 104:../Sources/main.c **** uint8_t cross_section_enable = 0;
 105:../Sources/main.c **** #endif
 106:../Sources/main.c **** 
 107:../Sources/main.c **** #ifdef STOPLINE_ENABLE
 108:../Sources/main.c **** uint8_t stopline_enable = 1;
 109:../Sources/main.c **** #else
 110:../Sources/main.c **** uint8_t stopline_enable = 0;
 111:../Sources/main.c **** #endif
 112:../Sources/main.c **** 
 113:../Sources/main.c **** // Test timer ////////////////////
 114:../Sources/main.c **** uint32_t test_begin = 0;
 115:../Sources/main.c **** uint32_t test_time  = 0;
 116:../Sources/main.c **** //////////////////////////////////
 117:../Sources/main.c **** 
 118:../Sources/main.c **** 
 119:../Sources/main.c **** int main(void)
 120:../Sources/main.c **** {
 121:../Sources/main.c **** 	TFC_Init(&carState);
 122:../Sources/main.c **** 	
 123:../Sources/main.c **** 	while(TFC_Ticker[5]<=10000){ //need 1 second wait for LCD display
 124:../Sources/main.c **** 		}
 125:../Sources/main.c **** 	
 126:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 127:../Sources/main.c **** 		Init_I2C();
 128:../Sources/main.c **** 		Init_MMA8451Q();
 129:../Sources/main.c **** 	#endif
 130:../Sources/main.c **** 		
 131:../Sources/main.c **** 		
 132:../Sources/main.c **** 	while (1)
 133:../Sources/main.c **** 	{
 134:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 135:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 136:../Sources/main.c **** 			TFC_Task();
 137:../Sources/main.c **** 		#endif
 138:../Sources/main.c **** 		
 139:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS	
 140:../Sources/main.c **** 			evaluateUARTorSpeed(&carState);		// Checks DIP switch
 141:../Sources/main.c **** 		#endif
 142:../Sources/main.c **** 		
 143:../Sources/main.c **** 		evaluateMotorState(&carState);		// Checks DIP switch
 144:../Sources/main.c **** 		
 145:../Sources/main.c **** 		LEDfeedback(&carState);				// Gives feedback for car state by the 4 LEDs
 146:../Sources/main.c **** 		
 147:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 148:../Sources/main.c **** 		
 149:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS
 150:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03) //
 151:../Sources/main.c **** 			{
 152:../Sources/main.c **** 			default:
 153:../Sources/main.c **** 			case 0:
 154:../Sources/main.c **** 				rawFocussingMode(&carState);
 155:../Sources/main.c **** 				break;
 156:../Sources/main.c **** 	
 157:../Sources/main.c **** 			case 1:
 158:../Sources/main.c **** 				servoAlignment();
 159:../Sources/main.c **** 				break;
 160:../Sources/main.c **** 	
 161:../Sources/main.c **** 			case 2:
 162:../Sources/main.c **** 				derivativeFocussingMode(&carState);
 163:../Sources/main.c **** 				break;
 164:../Sources/main.c **** 	
 165:../Sources/main.c **** 			case 3:
 166:../Sources/main.c **** 				lineFollowingMode(&carState);
 167:../Sources/main.c **** 				break;
 168:../Sources/main.c **** 			}
 169:../Sources/main.c **** 		#else
 170:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 1) & 0x01) == 1)
 171:../Sources/main.c **** 				s_mode_enable = 1;
 172:../Sources/main.c **** 			else
 173:../Sources/main.c **** 				s_mode_enable = 0;
 174:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 2) & 0x01) == 1)
 175:../Sources/main.c **** 				cross_section_enable = 1;
 176:../Sources/main.c **** 			else
 177:../Sources/main.c **** 				cross_section_enable = 0;
 178:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 3) & 0x01) == 1)
 179:../Sources/main.c **** 			{
 180:../Sources/main.c **** 				stopline_enable = 1;
 181:../Sources/main.c **** 			}
 182:../Sources/main.c **** 			else
 183:../Sources/main.c **** 			{
 184:../Sources/main.c **** 				stopline_enable = 0;
 185:../Sources/main.c **** 			}
 186:../Sources/main.c **** 			
 187:../Sources/main.c **** 			friction_correct = ((0 + 1.0f)/2)*MAX_FRICTION_CORRECT;
 188:../Sources/main.c **** 			
 189:../Sources/main.c **** 			lineFollowingMode(&carState);
 190:../Sources/main.c **** 		#endif
 191:../Sources/main.c **** 		
 192:../Sources/main.c **** 		
 193:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 194:../Sources/main.c **** 	}
 195:../Sources/main.c **** 	
 196:../Sources/main.c **** 	return 0;
 197:../Sources/main.c **** }
 198:../Sources/main.c **** 
 199:../Sources/main.c **** 
 200:../Sources/main.c **** void lineFollowingMode(carState_s* carState)
 201:../Sources/main.c **** {
 202:../Sources/main.c **** 	static lineScanState_t steeringControlUpdate;
 203:../Sources/main.c **** 	static uint32_t totalIntensity = 0;
 204:../Sources/main.c **** 	
 205:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 206:../Sources/main.c **** 	{
 207:../Sources/main.c **** 		stoplineJustDetected = 0;
 208:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 209:../Sources/main.c **** 	}
 210:../Sources/main.c **** 
 211:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 212:../Sources/main.c **** 	{
 213:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 214:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 215:../Sources/main.c **** 	}
 216:../Sources/main.c **** 	
 217:../Sources/main.c **** 	#ifdef TELEMETRY_ENABLE
 218:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 219:../Sources/main.c **** 	{
 220:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 221:../Sources/main.c **** 		telemetrySendData();
 222:../Sources/main.c **** 		telemetryReadData();
 223:../Sources/main.c **** 	}
 224:../Sources/main.c **** 	#endif
 225:../Sources/main.c **** 	
 226:../Sources/main.c **** 	if(TFC_Ticker[5]>=50){ 
 227:../Sources/main.c **** 			TFC_Ticker[5]=0;
 228:../Sources/main.c **** 			LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 229:../Sources/main.c **** 	}
 230:../Sources/main.c **** 	
 231:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 232:../Sources/main.c **** 		if(TFC_Ticker[8]>=1000){
 233:../Sources/main.c **** 			TFC_Ticker[8]=0;
 234:../Sources/main.c **** 			//accel_z=getZAcc();
 235:../Sources/main.c **** 			if(getZAcc<-1){
 236:../Sources/main.c **** 				incline_speed=max_speed_percent-25;
 237:../Sources/main.c **** 			}
 238:../Sources/main.c **** 			else{
 239:../Sources/main.c **** 				incline_speed=max_speed_percent;
 240:../Sources/main.c **** 				}
 241:../Sources/main.c **** 		}
 242:../Sources/main.c **** 	#endif
 243:../Sources/main.c **** 	#ifndef ACCELEROMETER_ENABLE
 244:../Sources/main.c **** 		incline_speed=max_speed_percent;
 245:../Sources/main.c **** 	#endif
 246:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 247:../Sources/main.c **** 	{
 248:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 249:../Sources/main.c **** 	//	test_begin = TFC_Ticker[5];
 250:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 251:../Sources/main.c **** 	//	test_time = TFC_Ticker[5] - test_begin;
 252:../Sources/main.c **** 		processRaceLine(carState);
 253:../Sources/main.c **** 	}
 254:../Sources/main.c **** 		
 255:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 256:../Sources/main.c **** 	{
 257:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 258:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 259:../Sources/main.c **** 		
 260:../Sources/main.c **** 		//to make up for vehicle not turning left enough
 261:../Sources/main.c **** 		if(servoValue>0){
 262:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 263:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 264:../Sources/main.c **** 					{
 265:../Sources/main.c **** 						servoValue=STEERING_LIMIT_UPPER;
 266:../Sources/main.c **** 					}
 267:../Sources/main.c **** 				
 268:../Sources/main.c **** 				}
 269:../Sources/main.c **** 		
 270:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 271:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 272:../Sources/main.c **** 	}
 273:../Sources/main.c **** 
 274:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 275:../Sources/main.c **** 	{
 276:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 277:../Sources/main.c **** 		if(stopline_enable == 1)
 278:../Sources/main.c **** 		{
 279:../Sources/main.c **** 			findStop(carState);
 280:../Sources/main.c **** 		}
 281:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 282:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 283:../Sources/main.c **** 	}
 284:../Sources/main.c **** 
 285:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 286:../Sources/main.c **** 	{
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 288:../Sources/main.c **** 		
 289:../Sources/main.c **** 		float activeDifferentialModifier[] =
 290:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 291:../Sources/main.c **** 		
 292:../Sources/main.c **** 		// Speed measurement depending on the particular mode which is used
 293:../Sources/main.c **** 		#if (SPEED_DETECTION_MODE == 0)
 294:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 295:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 296:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 1)
 297:../Sources/main.c **** 			speedR = (getSpeed(CHANNEL_0) + getSpeed(CHANNEL_1))/2;
 298:../Sources/main.c **** 			speedL = speedR;
 299:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 2)
 300:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 301:../Sources/main.c **** 			speedL = speedR;
 302:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 3)
 303:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 304:../Sources/main.c **** 			speedR = speedL;
 305:../Sources/main.c **** 		#endif
 306:../Sources/main.c **** 
 307:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 308:../Sources/main.c **** 		{
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 310:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 312:../Sources/main.c **** 		}
 313:../Sources/main.c **** 		else if (carState->UARTSpeedState == SINGLE_SPEED_SINGLE_UART)
 314:../Sources/main.c **** 		{
 315:../Sources/main.c **** 			// Missing setup - Normally this mode is not used
 316:../Sources/main.c **** 		}
 317:../Sources/main.c **** 	}
 318:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 319:../Sources/main.c **** 	{
 320:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 321:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 322:../Sources/main.c **** 	}
 323:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 324:../Sources/main.c **** 	{
 325:../Sources/main.c **** 		if(stopline_enable == 1)
 326:../Sources/main.c **** 		{	
 327:../Sources/main.c **** 			static uint32_t stoplineDetectedMoment = 0;
 328:../Sources/main.c **** 			static uint32_t stopDelayTime = 0;
 329:../Sources/main.c **** 			
 330:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 331:../Sources/main.c **** 			{
 332:../Sources/main.c **** 				stoplineJustDetected = 1;
 333:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 334:../Sources/main.c **** 				
 335:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 336:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 337:../Sources/main.c **** 				
 338:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 339:../Sources/main.c **** 				{
 340:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 341:../Sources/main.c **** 				}
 342:../Sources/main.c **** 				
 343:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 344:../Sources/main.c **** 			}
 345:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 346:../Sources/main.c **** 			{
 347:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 348:../Sources/main.c **** 				
 349:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 350:../Sources/main.c **** 				{
 351:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 352:../Sources/main.c **** 				}
 353:../Sources/main.c **** 				else
 354:../Sources/main.c **** 				{
 355:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 356:../Sources/main.c **** 				}
 357:../Sources/main.c **** 			}
 358:../Sources/main.c **** 		}	
 359:../Sources/main.c **** 	}
 360:../Sources/main.c **** }
 361:../Sources/main.c **** 
 362:../Sources/main.c **** void rawFocussingMode(carState_s* carState)
 363:../Sources/main.c **** {
  26              		.loc 1 363 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
 364:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
  37              		.loc 1 364 0
  38 0002 204B     		ldr	r3, .L8
 363:../Sources/main.c **** {
  39              		.loc 1 363 0
  40 0004 4746     		mov	r7, r8
  41              		.loc 1 364 0
  42 0006 1A68     		ldr	r2, [r3]
 363:../Sources/main.c **** {
  43              		.loc 1 363 0
  44 0008 80B4     		push	{r7}
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47              		.cfi_offset 8, -24
  48              		.loc 1 364 0
  49 000a C72A     		cmp	r2, #199
  50 000c 02D9     		bls	.L1
  51              		.loc 1 364 0 is_stmt 0
  52 000e C178     		ldrb	r1, [r0, #3]
  53 0010 0029     		cmp	r1, #0
  54 0012 02D0     		beq	.L7
  55              	.LVL1:
  56              	.L1:
 365:../Sources/main.c **** 	{
 366:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 367:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 368:../Sources/main.c **** 
 369:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 370:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 371:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 372:../Sources/main.c **** 
 373:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 374:../Sources/main.c **** 		
 375:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 376:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 377:../Sources/main.c **** 			{
 378:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 379:../Sources/main.c **** 			}
 380:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 381:../Sources/main.c **** 		#endif		
 382:../Sources/main.c **** 	}
 383:../Sources/main.c **** }
  57              		.loc 1 383 0 is_stmt 1
  58              		@ sp needed for prologue
  59 0014 04BC     		pop	{r2}
  60 0016 9046     		mov	r8, r2
  61 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
  62              	.LVL2:
  63              	.L7:
 367:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  64              		.loc 1 367 0
  65 001a 0124     		mov	r4, #1
 366:../Sources/main.c **** 		TFC_Ticker[0] = 0;
  66              		.loc 1 366 0
  67 001c 1960     		str	r1, [r3]
 367:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  68              		.loc 1 367 0
  69 001e C470     		strb	r4, [r0, #3]
 369:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
  70              		.loc 1 369 0
  71 0020 1949     		ldr	r1, .L8+4
  72 0022 0020     		mov	r0, #0
  73              	.LVL3:
  74 0024 FFF7FEFF 		bl	TFC_SetServo
  75              	.LVL4:
 370:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  76              		.loc 1 370 0
  77 0028 184E     		ldr	r6, .L8+8
  78 002a 8020     		mov	r0, #128
  79 002c 8503     		lsl	r5, r0, #14
 371:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  80              		.loc 1 371 0
  81 002e 0020     		mov	r0, #0
  82 0030 011C     		add	r1, r0, #0
 370:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  83              		.loc 1 370 0
  84 0032 B560     		str	r5, [r6, #8]
 371:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  85              		.loc 1 371 0
  86 0034 FFF7FEFF 		bl	TFC_SetMotorPWM
  87              	.LVL5:
 373:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
  88              		.loc 1 373 0
  89 0038 154E     		ldr	r6, .L8+12
  90 003a 0024     		mov	r4, #0
  91 003c 3068     		ldr	r0, [r6]
  92 003e FFF7FEFF 		bl	getTotalIntensity
  93              	.LVL6:
  94 0042 1449     		ldr	r1, .L8+16
  95 0044 FFF7FEFF 		bl	calculateNewExposure
  96              	.LVL7:
  97 0048 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
  98              	.LVL8:
  99              	.LBB23:
 376:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 100              		.loc 1 376 0
 101 004c 8023     		mov	r3, #128
 102 004e 5A00     		lsl	r2, r3, #1
 103 0050 114D     		ldr	r5, .L8+20
 104 0052 124F     		ldr	r7, .L8+24
 105 0054 9046     		mov	r8, r2
 106              	.LVL9:
 107              	.L3:
 378:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 108              		.loc 1 378 0
 109 0056 3168     		ldr	r1, [r6]
 110 0058 0819     		add	r0, r1, r4
 111 005a 0288     		ldrh	r2, [r0]
 112 005c 391C     		mov	r1, r7
 113 005e 281C     		mov	r0, r5
 114 0060 FFF7FEFF 		bl	Qprintf
 115              	.LVL10:
 116 0064 3368     		ldr	r3, [r6]
 117 0066 0234     		add	r4, r4, #2
 118 0068 1A19     		add	r2, r3, r4
 119 006a 1288     		ldrh	r2, [r2]
 120 006c 281C     		mov	r0, r5
 121 006e 391C     		mov	r1, r7
 122 0070 0234     		add	r4, r4, #2
 123 0072 FFF7FEFF 		bl	Qprintf
 124              	.LVL11:
 376:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 125              		.loc 1 376 0
 126 0076 4445     		cmp	r4, r8
 127 0078 EDD1     		bne	.L3
 128              	.LBE23:
 380:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 129              		.loc 1 380 0
 130 007a 281C     		mov	r0, r5
 131 007c 0849     		ldr	r1, .L8+28
 132 007e FFF7FEFF 		bl	Qprintf
 133              	.LVL12:
 134 0082 C7E7     		b	.L1
 135              	.L9:
 136              		.align	2
 137              	.L8:
 138 0084 00000000 		.word	TFC_Ticker
 139 0088 CDCC4C3D 		.word	1028443341
 140 008c 00F10F40 		.word	1074786560
 141 0090 00000000 		.word	LineScanImage0
 142 0094 E0930400 		.word	300000
 143 0098 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 144 009c 00000000 		.word	.LC3
 145 00a0 04000000 		.word	.LC5
 146              		.cfi_endproc
 147              	.LFE2:
 149              		.section	.text.derivativeFocussingMode,"ax",%progbits
 150              		.align	2
 151              		.global	derivativeFocussingMode
 152              		.code	16
 153              		.thumb_func
 155              	derivativeFocussingMode:
 156              	.LFB3:
 384:../Sources/main.c **** 
 385:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 386:../Sources/main.c **** {
 157              		.loc 1 386 0
 158              		.cfi_startproc
 159              	.LVL13:
 160 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 20
 163              		.cfi_offset 4, -20
 164              		.cfi_offset 5, -16
 165              		.cfi_offset 6, -12
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 4746     		mov	r7, r8
 169 0004 80B4     		push	{r7}
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 24
 172              		.cfi_offset 8, -24
 387:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 173              		.loc 1 387 0
 174 0006 284C     		ldr	r4, .L16
 386:../Sources/main.c **** {
 175              		.loc 1 386 0
 176 0008 C0B0     		sub	sp, sp, #256
 177              	.LCFI4:
 178              		.cfi_def_cfa_offset 280
 179              		.loc 1 387 0
 180 000a 2368     		ldr	r3, [r4]
 181 000c C72B     		cmp	r3, #199
 182 000e 02D9     		bls	.L10
 183              		.loc 1 387 0 is_stmt 0
 184 0010 C178     		ldrb	r1, [r0, #3]
 185 0012 0029     		cmp	r1, #0
 186 0014 03D0     		beq	.L15
 187              	.LVL14:
 188              	.L10:
 388:../Sources/main.c **** 	{
 389:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 390:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 391:../Sources/main.c **** 
 392:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 393:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 394:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 395:../Sources/main.c **** 
 396:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 397:../Sources/main.c **** 		int16_t temp[128];
 398:../Sources/main.c **** 		
 399:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 400:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 401:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 402:../Sources/main.c **** 		
 403:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 404:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 405:../Sources/main.c **** 			{
 406:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 407:../Sources/main.c **** 			}
 408:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 409:../Sources/main.c **** 		#endif	
 410:../Sources/main.c **** 	}
 411:../Sources/main.c **** }
 189              		.loc 1 411 0 is_stmt 1
 190 0016 40B0     		add	sp, sp, #256
 191              		@ sp needed for prologue
 192 0018 04BC     		pop	{r2}
 193 001a 9046     		mov	r8, r2
 194 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 195              	.LVL15:
 196              	.L15:
 197              	.LBB24:
 390:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 198              		.loc 1 390 0
 199 001e 0122     		mov	r2, #1
 389:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 200              		.loc 1 389 0
 201 0020 2160     		str	r1, [r4]
 390:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 202              		.loc 1 390 0
 203 0022 C270     		strb	r2, [r0, #3]
 392:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 204              		.loc 1 392 0
 205 0024 2149     		ldr	r1, .L16+4
 206 0026 0020     		mov	r0, #0
 207              	.LVL16:
 208 0028 FFF7FEFF 		bl	TFC_SetServo
 209              	.LVL17:
 393:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 210              		.loc 1 393 0
 211 002c 204E     		ldr	r6, .L16+8
 212 002e 8020     		mov	r0, #128
 213 0030 8503     		lsl	r5, r0, #14
 394:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 214              		.loc 1 394 0
 215 0032 0020     		mov	r0, #0
 216 0034 011C     		add	r1, r0, #0
 393:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 217              		.loc 1 393 0
 218 0036 B560     		str	r5, [r6, #8]
 394:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 219              		.loc 1 394 0
 220 0038 FFF7FEFF 		bl	TFC_SetMotorPWM
 221              	.LVL18:
 396:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 222              		.loc 1 396 0
 223 003c 1D4F     		ldr	r7, .L16+12
 385:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 224              		.loc 1 385 0
 225 003e 40AE     		add	r6, sp, #256
 396:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 226              		.loc 1 396 0
 227 0040 3868     		ldr	r0, [r7]
 228 0042 FFF7FEFF 		bl	getTotalIntensity
 229              	.LVL19:
 230 0046 1C49     		ldr	r1, .L16+16
 231 0048 FFF7FEFF 		bl	calculateNewExposure
 232              	.LVL20:
 233 004c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 234              	.LVL21:
 399:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 235              		.loc 1 399 0
 236 0050 1A4D     		ldr	r5, .L16+20
 237 0052 6369     		ldr	r3, [r4, #20]
 400:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 238              		.loc 1 400 0
 239 0054 3868     		ldr	r0, [r7]
 240 0056 6946     		mov	r1, sp
 241 0058 8022     		mov	r2, #128
 399:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 242              		.loc 1 399 0
 243 005a 2B60     		str	r3, [r5]
 400:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 244              		.loc 1 400 0
 245 005c FFF7FEFF 		bl	edgeDetection
 246              	.LVL22:
 401:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 247              		.loc 1 401 0
 248 0060 6469     		ldr	r4, [r4, #20]
 249 0062 2968     		ldr	r1, [r5]
 250 0064 1648     		ldr	r0, .L16+24
 251 0066 621A     		sub	r2, r4, r1
 385:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 252              		.loc 1 385 0
 253 0068 B046     		mov	r8, r6
 254 006a 164D     		ldr	r5, .L16+28
 255 006c 164E     		ldr	r6, .L16+32
 401:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 256              		.loc 1 401 0
 257 006e 0260     		str	r2, [r0]
 258              	.LVL23:
 259 0070 6C46     		mov	r4, sp
 260              	.LVL24:
 261              	.L12:
 262              	.LBB25:
 406:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 263              		.loc 1 406 0
 264 0072 0023     		mov	r3, #0
 265 0074 E75E     		ldrsh	r7, [r4, r3]
 266 0076 311C     		mov	r1, r6
 267 0078 FB17     		asr	r3, r7, #31
 268 007a FA18     		add	r2, r7, r3
 269 007c 5A40     		eor	r2, r3
 270 007e 281C     		mov	r0, r5
 271 0080 FFF7FEFF 		bl	Qprintf
 272              	.LVL25:
 273 0084 0223     		mov	r3, #2
 274 0086 E15E     		ldrsh	r1, [r4, r3]
 275 0088 0434     		add	r4, r4, #4
 276 008a C817     		asr	r0, r1, #31
 277 008c 0A18     		add	r2, r1, r0
 278 008e 4240     		eor	r2, r0
 279 0090 311C     		mov	r1, r6
 280 0092 281C     		mov	r0, r5
 281 0094 FFF7FEFF 		bl	Qprintf
 282              	.LVL26:
 404:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 283              		.loc 1 404 0
 284 0098 4445     		cmp	r4, r8
 285 009a EAD1     		bne	.L12
 286              	.LBE25:
 408:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 287              		.loc 1 408 0
 288 009c 281C     		mov	r0, r5
 289 009e 0B49     		ldr	r1, .L16+36
 290 00a0 FFF7FEFF 		bl	Qprintf
 291              	.LVL27:
 292 00a4 B7E7     		b	.L10
 293              	.L17:
 294 00a6 C046     		.align	2
 295              	.L16:
 296 00a8 00000000 		.word	TFC_Ticker
 297 00ac CDCC4C3D 		.word	1028443341
 298 00b0 00F10F40 		.word	1074786560
 299 00b4 00000000 		.word	LineScanImage0
 300 00b8 E0930400 		.word	300000
 301 00bc 00000000 		.word	.LANCHOR0
 302 00c0 00000000 		.word	.LANCHOR1
 303 00c4 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 304 00c8 00000000 		.word	.LC3
 305 00cc 04000000 		.word	.LC5
 306              	.LBE24:
 307              		.cfi_endproc
 308              	.LFE3:
 310              		.section	.text.TFC_Init,"ax",%progbits
 311              		.align	2
 312              		.global	TFC_Init
 313              		.code	16
 314              		.thumb_func
 316              	TFC_Init:
 317              	.LFB4:
 412:../Sources/main.c **** 
 413:../Sources/main.c **** 
 414:../Sources/main.c **** void TFC_Init(carState_s* carState)
 415:../Sources/main.c **** {
 318              		.loc 1 415 0
 319              		.cfi_startproc
 320              	.LVL28:
 321 0000 10B5     		push	{r4, lr}
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 4, -8
 325              		.cfi_offset 14, -4
 326              		.loc 1 415 0
 327 0002 041C     		mov	r4, r0
 416:../Sources/main.c **** 	TFC_InitClock();
 328              		.loc 1 416 0
 329 0004 FFF7FEFF 		bl	TFC_InitClock
 330              	.LVL29:
 417:../Sources/main.c **** 	TFC_InitSysTick();
 331              		.loc 1 417 0
 332 0008 FFF7FEFF 		bl	TFC_InitSysTick
 333              	.LVL30:
 418:../Sources/main.c **** 	TFC_InitGPIO();
 334              		.loc 1 418 0
 335 000c FFF7FEFF 		bl	TFC_InitGPIO
 336              	.LVL31:
 419:../Sources/main.c **** 	TFC_InitServos();
 337              		.loc 1 419 0
 338 0010 FFF7FEFF 		bl	TFC_InitServos
 339              	.LVL32:
 420:../Sources/main.c **** 	TFC_InitMotorPWM();
 340              		.loc 1 420 0
 341 0014 FFF7FEFF 		bl	TFC_InitMotorPWM
 342              	.LVL33:
 421:../Sources/main.c **** 	TFC_InitADCs(carState);
 343              		.loc 1 421 0
 344 0018 201C     		mov	r0, r4
 345 001a FFF7FEFF 		bl	TFC_InitADCs
 346              	.LVL34:
 422:../Sources/main.c **** 	TFC_InitLineScanCamera();
 347              		.loc 1 422 0
 348 001e FFF7FEFF 		bl	TFC_InitLineScanCamera
 349              	.LVL35:
 423:../Sources/main.c **** 	
 424:../Sources/main.c **** 	#ifdef CHANGE_BLUETOOTH_BAUD_RATE
 425:../Sources/main.c **** 		TFC_InitUARTs(SDA_SERIAL_BAUD, 38400);	// 38400 is default for the BL module in AT mode 2
 426:../Sources/main.c **** 		int dummy_timee = TFC_Ticker[0];
 427:../Sources/main.c **** 		while(TFC_Ticker[0] - dummy_timee < 30000)
 428:../Sources/main.c **** 		{}
 429:../Sources/main.c **** 		TFC_BluetoothModuleSetBaud(BLUETOOTH_BAUD);		// Need to manually power the AT pin on the module
 430:../Sources/main.c **** 	#endif
 431:../Sources/main.c **** 	
 432:../Sources/main.c **** 	TFC_InitUARTs(SDA_SERIAL_BAUD, 9600);
 350              		.loc 1 432 0
 351 0022 E120     		mov	r0, #225
 352 0024 9621     		mov	r1, #150
 353 0026 4002     		lsl	r0, r0, #9
 354 0028 8901     		lsl	r1, r1, #6
 355 002a FFF7FEFF 		bl	TFC_InitUARTs
 356              	.LVL36:
 433:../Sources/main.c **** 	
 434:../Sources/main.c **** 	#ifdef TERMINAL_ENABLED
 435:../Sources/main.c **** 		TFC_InitTerminal();
 357              		.loc 1 435 0
 358 002e FFF7FEFF 		bl	TFC_InitTerminal
 359              	.LVL37:
 436:../Sources/main.c **** 	#endif
 437:../Sources/main.c **** 		
 438:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 360              		.loc 1 438 0
 361 0032 8022     		mov	r2, #128
 362 0034 084B     		ldr	r3, .L19
 363 0036 9403     		lsl	r4, r2, #14
 364              	.LVL38:
 439:../Sources/main.c **** 	TFC_SetMotorPWM(0, 0);
 365              		.loc 1 439 0
 366 0038 0021     		mov	r1, #0
 438:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 367              		.loc 1 438 0
 368 003a 9C60     		str	r4, [r3, #8]
 369              		.loc 1 439 0
 370 003c 081C     		add	r0, r1, #0
 371 003e FFF7FEFF 		bl	TFC_SetMotorPWM
 372              	.LVL39:
 440:../Sources/main.c **** 	TFC_InitSpeedSensor();
 373              		.loc 1 440 0
 374 0042 FFF7FEFF 		bl	TFC_InitSpeedSensor
 375              	.LVL40:
 441:../Sources/main.c **** 	preloadProbabilityTables(); //Prevents probability tables for stop line evaluation from being crea
 376              		.loc 1 441 0
 377 0046 FFF7FEFF 		bl	preloadProbabilityTables
 378              	.LVL41:
 442:../Sources/main.c **** 	generateKernel();
 379              		.loc 1 442 0
 380 004a FFF7FEFF 		bl	generateKernel
 381              	.LVL42:
 443:../Sources/main.c **** 	
 444:../Sources/main.c **** 	#ifdef RACE_MODE_CONTROLS
 445:../Sources/main.c **** 	PORTA_PCR2 &= 0xFFFFF8FF;
 446:../Sources/main.c **** 	PORTA_PCR2 |= 0x00000300;
 447:../Sources/main.c **** 	disable_irq(INT_UART0-16);
 448:../Sources/main.c **** 	carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 449:../Sources/main.c **** 	#endif
 450:../Sources/main.c **** 	
 451:../Sources/main.c **** 	TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 382              		.loc 1 451 0
 383 004e 0020     		mov	r0, #0
 384 0050 0249     		ldr	r1, .L19+4
 385 0052 FFF7FEFF 		bl	TFC_SetServo
 386              	.LVL43:
 452:../Sources/main.c **** }
 387              		.loc 1 452 0
 388              		@ sp needed for prologue
 389 0056 10BD     		pop	{r4, pc}
 390              	.L20:
 391              		.align	2
 392              	.L19:
 393 0058 00F10F40 		.word	1074786560
 394 005c CDCC4C3D 		.word	1028443341
 395              		.cfi_endproc
 396              	.LFE4:
 398              		.section	.text.TFC_Task,"ax",%progbits
 399              		.align	2
 400              		.global	TFC_Task
 401              		.code	16
 402              		.thumb_func
 404              	TFC_Task:
 405              	.LFB5:
 453:../Sources/main.c **** 
 454:../Sources/main.c **** void TFC_Task()
 455:../Sources/main.c **** {
 406              		.loc 1 455 0
 407              		.cfi_startproc
 408 0000 08B5     		push	{r3, lr}
 409              	.LCFI6:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 3, -8
 412              		.cfi_offset 14, -4
 456:../Sources/main.c **** #if defined(TERMINAL_USE_SDA_SERIAL)
 457:../Sources/main.c **** 	TFC_UART_Process();
 413              		.loc 1 457 0
 414 0002 FFF7FEFF 		bl	TFC_UART_Process
 415              	.LVL44:
 458:../Sources/main.c **** #endif
 459:../Sources/main.c **** 	TFC_ProcessTerminal();
 460:../Sources/main.c **** }
 416              		.loc 1 460 0
 417              		@ sp needed for prologue
 459:../Sources/main.c **** 	TFC_ProcessTerminal();
 418              		.loc 1 459 0
 419 0006 FFF7FEFF 		bl	TFC_ProcessTerminal
 420              	.LVL45:
 421              		.loc 1 460 0
 422 000a 08BD     		pop	{r3, pc}
 423              		.cfi_endproc
 424              	.LFE5:
 426              		.section	.text.evaluateMotorState,"ax",%progbits
 427              		.align	2
 428              		.global	evaluateMotorState
 429              		.code	16
 430              		.thumb_func
 432              	evaluateMotorState:
 433              	.LFB6:
 461:../Sources/main.c **** 
 462:../Sources/main.c **** void evaluateMotorState(carState_s* carState)
 463:../Sources/main.c **** {
 434              		.loc 1 463 0
 435              		.cfi_startproc
 436              	.LVL46:
 437 0000 38B5     		push	{r3, r4, r5, lr}
 438              	.LCFI7:
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 3, -16
 441              		.cfi_offset 4, -12
 442              		.cfi_offset 5, -8
 443              		.cfi_offset 14, -4
 444              		.loc 1 463 0
 445 0002 051C     		mov	r5, r0
 464:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 446              		.loc 1 464 0
 447 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 448              	.LVL47:
 449 0008 0124     		mov	r4, #1
 450 000a 0442     		tst	r4, r0
 451 000c 05D0     		beq	.L23
 465:../Sources/main.c **** 	{
 466:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 452              		.loc 1 466 0
 453 000e 8021     		mov	r1, #128
 454 0010 0848     		ldr	r0, .L25
 455 0012 8A03     		lsl	r2, r1, #14
 456 0014 4260     		str	r2, [r0, #4]
 467:../Sources/main.c **** 		carState->motorState = RUNNING;
 457              		.loc 1 467 0
 458 0016 2C70     		strb	r4, [r5]
 459              	.L22:
 468:../Sources/main.c **** 	}
 469:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 470:../Sources/main.c **** 	{
 471:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 472:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 473:../Sources/main.c **** 	}
 474:../Sources/main.c **** }
 460              		.loc 1 474 0
 461              		@ sp needed for prologue
 462              	.LVL48:
 463 0018 38BD     		pop	{r3, r4, r5, pc}
 464              	.LVL49:
 465              	.L23:
 469:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 466              		.loc 1 469 0
 467 001a FFF7FEFF 		bl	TFC_GetDIP_Switch
 468              	.LVL50:
 469 001e 0442     		tst	r4, r0
 470 0020 FAD1     		bne	.L22
 471:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 471              		.loc 1 471 0
 472 0022 8022     		mov	r2, #128
 473 0024 034B     		ldr	r3, .L25
 474 0026 9003     		lsl	r0, r2, #14
 475 0028 9860     		str	r0, [r3, #8]
 472:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 476              		.loc 1 472 0
 477 002a 0020     		mov	r0, #0
 478 002c 011C     		add	r1, r0, #0
 479 002e FFF7FEFF 		bl	TFC_SetMotorPWM
 480              	.LVL51:
 481 0032 F1E7     		b	.L22
 482              	.L26:
 483              		.align	2
 484              	.L25:
 485 0034 00F10F40 		.word	1074786560
 486              		.cfi_endproc
 487              	.LFE6:
 489              		.section	.text.evaluateUARTorSpeed,"ax",%progbits
 490              		.align	2
 491              		.global	evaluateUARTorSpeed
 492              		.code	16
 493              		.thumb_func
 495              	evaluateUARTorSpeed:
 496              	.LFB7:
 475:../Sources/main.c **** 
 476:../Sources/main.c **** void evaluateUARTorSpeed(carState_s* carState)
 477:../Sources/main.c **** {
 497              		.loc 1 477 0
 498              		.cfi_startproc
 499              	.LVL52:
 500 0000 10B5     		push	{r4, lr}
 501              	.LCFI8:
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 4, -8
 504              		.cfi_offset 14, -4
 505              		.loc 1 477 0
 506 0002 041C     		mov	r4, r0
 478:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 507              		.loc 1 478 0
 508 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 509              	.LVL53:
 510 0008 0307     		lsl	r3, r0, #28
 511 000a 15D4     		bmi	.L28
 512              		.loc 1 478 0 is_stmt 0
 513 000c 1B4B     		ldr	r3, .L37
 514 000e 9868     		ldr	r0, [r3, #8]
 515 0010 4105     		lsl	r1, r0, #21
 516 0012 4A0F     		lsr	r2, r1, #29
 517 0014 022A     		cmp	r2, #2
 518 0016 0FD0     		beq	.L28
 519              	.L29:
 479:../Sources/main.c **** 	{
 480:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 520              		.loc 1 480 0 is_stmt 1
 521 0018 1848     		ldr	r0, .L37
 522 001a 194A     		ldr	r2, .L37+4
 523 001c 8168     		ldr	r1, [r0, #8]
 524 001e 0A40     		and	r2, r1
 525 0020 8260     		str	r2, [r0, #8]
 481:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 526              		.loc 1 481 0
 527 0022 8368     		ldr	r3, [r0, #8]
 528 0024 8021     		mov	r1, #128
 529 0026 8A00     		lsl	r2, r1, #2
 530 0028 1A43     		orr	r2, r3
 531 002a 8260     		str	r2, [r0, #8]
 482:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 532              		.loc 1 482 0
 533 002c 0C20     		mov	r0, #12
 534 002e FFF7FEFF 		bl	enable_irq
 535              	.LVL54:
 483:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 536              		.loc 1 483 0
 537 0032 0020     		mov	r0, #0
 538 0034 6070     		strb	r0, [r4, #1]
 539              	.L27:
 484:../Sources/main.c **** 	}
 485:../Sources/main.c **** 
 486:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 487:../Sources/main.c **** 	{
 488:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 489:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 490:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 491:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 492:../Sources/main.c **** 	}
 493:../Sources/main.c **** }
 540              		.loc 1 493 0
 541              		@ sp needed for prologue
 542              	.LVL55:
 543 0036 10BD     		pop	{r4, pc}
 544              	.LVL56:
 545              	.L28:
 478:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 546              		.loc 1 478 0
 547 0038 6378     		ldrb	r3, [r4, #1]
 548 003a 022B     		cmp	r3, #2
 549 003c ECD0     		beq	.L29
 486:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 550              		.loc 1 486 0
 551 003e FFF7FEFF 		bl	TFC_GetDIP_Switch
 552              	.LVL57:
 553 0042 0307     		lsl	r3, r0, #28
 554 0044 15D5     		bpl	.L32
 486:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 555              		.loc 1 486 0 is_stmt 0
 556 0046 0D48     		ldr	r0, .L37
 557 0048 8168     		ldr	r1, [r0, #8]
 558 004a 4A05     		lsl	r2, r1, #21
 559 004c 530F     		lsr	r3, r2, #29
 560 004e 032B     		cmp	r3, #3
 561 0050 0FD0     		beq	.L32
 562              	.L33:
 488:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 563              		.loc 1 488 0 is_stmt 1
 564 0052 0A4B     		ldr	r3, .L37
 565 0054 0A4A     		ldr	r2, .L37+4
 566 0056 9968     		ldr	r1, [r3, #8]
 567 0058 0A40     		and	r2, r1
 568 005a 9A60     		str	r2, [r3, #8]
 489:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 569              		.loc 1 489 0
 570 005c 9868     		ldr	r0, [r3, #8]
 571 005e C021     		mov	r1, #192
 572 0060 8A00     		lsl	r2, r1, #2
 573 0062 0243     		orr	r2, r0
 574 0064 9A60     		str	r2, [r3, #8]
 490:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 575              		.loc 1 490 0
 576 0066 0C20     		mov	r0, #12
 577 0068 FFF7FEFF 		bl	disable_irq
 578              	.LVL58:
 491:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 579              		.loc 1 491 0
 580 006c 0123     		mov	r3, #1
 581 006e 6370     		strb	r3, [r4, #1]
 582 0070 E1E7     		b	.L27
 583              	.L32:
 486:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 584              		.loc 1 486 0
 585 0072 6078     		ldrb	r0, [r4, #1]
 586 0074 0228     		cmp	r0, #2
 587 0076 DED1     		bne	.L27
 588 0078 EBE7     		b	.L33
 589              	.L38:
 590 007a C046     		.align	2
 591              	.L37:
 592 007c 00900440 		.word	1074040832
 593 0080 FFF8FFFF 		.word	-1793
 594              		.cfi_endproc
 595              	.LFE7:
 597              		.global	__aeabi_fcmpgt
 598              		.section	.text.LEDfeedback,"ax",%progbits
 599              		.align	2
 600              		.global	LEDfeedback
 601              		.code	16
 602              		.thumb_func
 604              	LEDfeedback:
 605              	.LFB8:
 494:../Sources/main.c **** 
 495:../Sources/main.c **** void LEDfeedback(carState_s* carState)
 496:../Sources/main.c **** {
 606              		.loc 1 496 0
 607              		.cfi_startproc
 608              	.LVL59:
 497:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 609              		.loc 1 497 0
 610 0000 4F4B     		ldr	r3, .L66
 496:../Sources/main.c **** {
 611              		.loc 1 496 0
 612 0002 10B5     		push	{r4, lr}
 613              	.LCFI9:
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
 617              		.loc 1 497 0
 618 0004 4F49     		ldr	r1, .L66+4
 496:../Sources/main.c **** {
 619              		.loc 1 496 0
 620 0006 041C     		mov	r4, r0
 621              		.loc 1 497 0
 622 0008 1868     		ldr	r0, [r3]
 623              	.LVL60:
 624 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 625              	.LVL61:
 626 000e 0028     		cmp	r0, #0
 627 0010 1DD0     		beq	.L51
 498:../Sources/main.c **** 	{
 499:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 628              		.loc 1 499 0
 629 0012 A078     		ldrb	r0, [r4, #2]
 630 0014 0228     		cmp	r0, #2
 631 0016 30D0     		beq	.L59
 500:../Sources/main.c **** 		{
 501:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 503:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 504:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 505:../Sources/main.c **** 		}
 506:../Sources/main.c **** 		#ifdef CROSS_DETECTION_ENABLE
 507:../Sources/main.c **** 		else if(carState->crossSection == YES)
 632              		.loc 1 507 0
 633 0018 A379     		ldrb	r3, [r4, #6]
 634 001a 012B     		cmp	r3, #1
 635 001c 39D0     		beq	.L60
 508:../Sources/main.c **** 		{
 509:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 510:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 511:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 512:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 513:../Sources/main.c **** 		}
 514:../Sources/main.c **** 		#endif
 515:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 636              		.loc 1 515 0
 637 001e 617A     		ldrb	r1, [r4, #9]
 638 0020 0129     		cmp	r1, #1
 639 0022 47D0     		beq	.L61
 516:../Sources/main.c **** 		{
 517:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 518:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 519:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 520:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 521:../Sources/main.c **** 		}
 522:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 640              		.loc 1 522 0
 641 0024 2279     		ldrb	r2, [r4, #4]
 642 0026 022A     		cmp	r2, #2
 643 0028 5AD0     		beq	.L62
 523:../Sources/main.c **** 		{
 524:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 526:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 527:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 528:../Sources/main.c **** 		}
 529:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 644              		.loc 1 529 0
 645 002a 6479     		ldrb	r4, [r4, #5]
 646              	.LVL62:
 647 002c 012C     		cmp	r4, #1
 648 002e 68D0     		beq	.L63
 530:../Sources/main.c **** 		{	
 531:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 532:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 534:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 535:../Sources/main.c **** 		}
 536:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 649              		.loc 1 536 0
 650 0030 022C     		cmp	r4, #2
 651 0032 00D1     		bne	.LCB554
 652 0034 71E0     		b	.L64	@long jump
 653              	.LCB554:
 537:../Sources/main.c **** 		{	
 538:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 539:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 540:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 541:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 542:../Sources/main.c **** 		}
 543:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 654              		.loc 1 543 0
 655 0036 0128     		cmp	r0, #1
 656 0038 00D1     		bne	.LCB556
 657 003a 75E0     		b	.L65	@long jump
 658              	.LCB556:
 544:../Sources/main.c **** 		{	
 545:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 547:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 548:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 549:../Sources/main.c **** 		}
 550:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 659              		.loc 1 550 0
 660 003c 0328     		cmp	r0, #3
 661 003e 1BD1     		bne	.L39
 551:../Sources/main.c **** 		{	
 552:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 662              		.loc 1 552 0
 663 0040 4148     		ldr	r0, .L66+8
 664 0042 8021     		mov	r1, #128
 665 0044 8368     		ldr	r3, [r0, #8]
 666 0046 4A00     		lsl	r2, r1, #1
 667 0048 1A43     		orr	r2, r3
 668 004a 8260     		str	r2, [r0, #8]
 669 004c 27E0     		b	.L58
 670              	.LVL63:
 671              	.L51:
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 555:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 556:../Sources/main.c **** 		}
 557:../Sources/main.c **** 	}
 558:../Sources/main.c **** 	else
 559:../Sources/main.c **** 	{
 560:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 672              		.loc 1 560 0
 673 004e 3E48     		ldr	r0, .L66+8
 674 0050 8022     		mov	r2, #128
 675 0052 4168     		ldr	r1, [r0, #4]
 676 0054 5400     		lsl	r4, r2, #1
 677              	.LVL64:
 678 0056 0C43     		orr	r4, r1
 679 0058 4460     		str	r4, [r0, #4]
 561:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 680              		.loc 1 561 0
 681 005a 4368     		ldr	r3, [r0, #4]
 682 005c 8021     		mov	r1, #128
 683 005e 8A00     		lsl	r2, r1, #2
 684 0060 1A43     		orr	r2, r3
 685 0062 4260     		str	r2, [r0, #4]
 686              	.L52:
 562:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 687              		.loc 1 562 0
 688 0064 4368     		ldr	r3, [r0, #4]
 689 0066 8021     		mov	r1, #128
 690 0068 CA00     		lsl	r2, r1, #3
 691 006a 1A43     		orr	r2, r3
 692 006c 4260     		str	r2, [r0, #4]
 693              	.L53:
 563:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 694              		.loc 1 563 0
 695 006e 4468     		ldr	r4, [r0, #4]
 696 0070 8023     		mov	r3, #128
 697 0072 1901     		lsl	r1, r3, #4
 698 0074 2143     		orr	r1, r4
 699 0076 4160     		str	r1, [r0, #4]
 700              	.L39:
 564:../Sources/main.c **** 	}
 565:../Sources/main.c **** }
 701              		.loc 1 565 0
 702              		@ sp needed for prologue
 703 0078 10BD     		pop	{r4, pc}
 704              	.LVL65:
 705              	.L59:
 501:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 706              		.loc 1 501 0
 707 007a 3348     		ldr	r0, .L66+8
 708 007c 8024     		mov	r4, #128
 709              	.LVL66:
 710 007e 8168     		ldr	r1, [r0, #8]
 711 0080 6300     		lsl	r3, r4, #1
 712 0082 0B43     		orr	r3, r1
 713 0084 8360     		str	r3, [r0, #8]
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 714              		.loc 1 502 0
 715 0086 8168     		ldr	r1, [r0, #8]
 716 0088 8022     		mov	r2, #128
 717 008a 9400     		lsl	r4, r2, #2
 718 008c 0C43     		orr	r4, r1
 719 008e 8460     		str	r4, [r0, #8]
 720 0090 E8E7     		b	.L52
 721              	.LVL67:
 722              	.L60:
 509:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 723              		.loc 1 509 0
 724 0092 2D48     		ldr	r0, .L66+8
 725 0094 8021     		mov	r1, #128
 726 0096 4368     		ldr	r3, [r0, #4]
 727 0098 4C00     		lsl	r4, r1, #1
 728              	.LVL68:
 729 009a 1C43     		orr	r4, r3
 730 009c 4460     		str	r4, [r0, #4]
 731              	.L58:
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 732              		.loc 1 553 0
 733 009e 8368     		ldr	r3, [r0, #8]
 734 00a0 8022     		mov	r2, #128
 735 00a2 9100     		lsl	r1, r2, #2
 736 00a4 1943     		orr	r1, r3
 737 00a6 8160     		str	r1, [r0, #8]
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 738              		.loc 1 554 0
 739 00a8 8468     		ldr	r4, [r0, #8]
 740 00aa 8023     		mov	r3, #128
 741 00ac DA00     		lsl	r2, r3, #3
 742 00ae 2243     		orr	r2, r4
 743 00b0 8260     		str	r2, [r0, #8]
 744 00b2 DCE7     		b	.L53
 745              	.LVL69:
 746              	.L61:
 517:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 747              		.loc 1 517 0
 748 00b4 2448     		ldr	r0, .L66+8
 749 00b6 8021     		mov	r1, #128
 750 00b8 8368     		ldr	r3, [r0, #8]
 751 00ba 4A00     		lsl	r2, r1, #1
 752 00bc 1A43     		orr	r2, r3
 753 00be 8260     		str	r2, [r0, #8]
 518:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 754              		.loc 1 518 0
 755 00c0 4468     		ldr	r4, [r0, #4]
 756              	.LVL70:
 757 00c2 8023     		mov	r3, #128
 758 00c4 9900     		lsl	r1, r3, #2
 759 00c6 2143     		orr	r1, r4
 760 00c8 4160     		str	r1, [r0, #4]
 761              	.L55:
 547:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 762              		.loc 1 547 0
 763 00ca 4468     		ldr	r4, [r0, #4]
 764 00cc 8022     		mov	r2, #128
 765 00ce D300     		lsl	r3, r2, #3
 766 00d0 2343     		orr	r3, r4
 767 00d2 4360     		str	r3, [r0, #4]
 768              	.L54:
 548:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 769              		.loc 1 548 0
 770 00d4 8168     		ldr	r1, [r0, #8]
 771 00d6 8024     		mov	r4, #128
 772 00d8 2201     		lsl	r2, r4, #4
 773 00da 0A43     		orr	r2, r1
 774 00dc 8260     		str	r2, [r0, #8]
 775 00de CBE7     		b	.L39
 776              	.LVL71:
 777              	.L62:
 524:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 778              		.loc 1 524 0
 779 00e0 1948     		ldr	r0, .L66+8
 780 00e2 8023     		mov	r3, #128
 781 00e4 4468     		ldr	r4, [r0, #4]
 782              	.LVL72:
 783 00e6 5A00     		lsl	r2, r3, #1
 784 00e8 2243     		orr	r2, r4
 785 00ea 4260     		str	r2, [r0, #4]
 786              	.L57:
 539:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 787              		.loc 1 539 0
 788 00ec 4168     		ldr	r1, [r0, #4]
 789 00ee 8024     		mov	r4, #128
 790 00f0 A300     		lsl	r3, r4, #2
 791 00f2 0B43     		orr	r3, r1
 792 00f4 4360     		str	r3, [r0, #4]
 793              	.L56:
 540:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 794              		.loc 1 540 0
 795 00f6 8168     		ldr	r1, [r0, #8]
 796 00f8 8022     		mov	r2, #128
 797 00fa D400     		lsl	r4, r2, #3
 798 00fc 0C43     		orr	r4, r1
 799 00fe 8460     		str	r4, [r0, #8]
 800 0100 E8E7     		b	.L54
 801              	.L63:
 531:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 802              		.loc 1 531 0
 803 0102 1148     		ldr	r0, .L66+8
 804 0104 8021     		mov	r1, #128
 805 0106 4368     		ldr	r3, [r0, #4]
 806 0108 4C00     		lsl	r4, r1, #1
 807 010a 1C43     		orr	r4, r3
 808 010c 4460     		str	r4, [r0, #4]
 532:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 809              		.loc 1 532 0
 810 010e 8368     		ldr	r3, [r0, #8]
 811 0110 8022     		mov	r2, #128
 812 0112 9100     		lsl	r1, r2, #2
 813 0114 1943     		orr	r1, r3
 814 0116 8160     		str	r1, [r0, #8]
 815 0118 EDE7     		b	.L56
 816              	.L64:
 538:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 817              		.loc 1 538 0
 818 011a 0B48     		ldr	r0, .L66+8
 819 011c 8024     		mov	r4, #128
 820 011e 8168     		ldr	r1, [r0, #8]
 821 0120 6200     		lsl	r2, r4, #1
 822 0122 0A43     		orr	r2, r1
 823 0124 8260     		str	r2, [r0, #8]
 824 0126 E1E7     		b	.L57
 825              	.L65:
 545:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 826              		.loc 1 545 0
 827 0128 0748     		ldr	r0, .L66+8
 828 012a 8023     		mov	r3, #128
 829 012c 8468     		ldr	r4, [r0, #8]
 830 012e 5900     		lsl	r1, r3, #1
 831 0130 2143     		orr	r1, r4
 832 0132 8160     		str	r1, [r0, #8]
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 833              		.loc 1 546 0
 834 0134 8468     		ldr	r4, [r0, #8]
 835 0136 8022     		mov	r2, #128
 836 0138 9300     		lsl	r3, r2, #2
 837 013a 2343     		orr	r3, r4
 838 013c 8360     		str	r3, [r0, #8]
 839 013e C4E7     		b	.L55
 840              	.L67:
 841              		.align	2
 842              	.L66:
 843 0140 00000000 		.word	.LANCHOR2
 844 0144 0000F040 		.word	1089470464
 845 0148 40F00F40 		.word	1074786368
 846              		.cfi_endproc
 847              	.LFE8:
 849              		.section	.text.servoAlignment,"ax",%progbits
 850              		.align	2
 851              		.global	servoAlignment
 852              		.code	16
 853              		.thumb_func
 855              	servoAlignment:
 856              	.LFB9:
 566:../Sources/main.c **** 
 567:../Sources/main.c **** void servoAlignment()		// Helps setting the servo offset value by debugging
 568:../Sources/main.c **** {
 857              		.loc 1 568 0
 858              		.cfi_startproc
 859 0000 08B5     		push	{r3, lr}
 860              	.LCFI10:
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 3, -8
 863              		.cfi_offset 14, -4
 569:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 864              		.loc 1 569 0
 865 0002 054B     		ldr	r3, .L70
 866 0004 1A68     		ldr	r2, [r3]
 867 0006 C72A     		cmp	r2, #199
 868 0008 05D9     		bls	.L68
 869              	.LBB27:
 570:../Sources/main.c **** 	{
 571:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 870              		.loc 1 571 0
 871 000a 0020     		mov	r0, #0
 872 000c 1860     		str	r0, [r3]
 873              	.LVL73:
 572:../Sources/main.c **** 		float offset = 30000 * 0.15f;
 573:../Sources/main.c **** 		TFC_SetServo(0, offset);
 874              		.loc 1 573 0
 875 000e 0349     		ldr	r1, .L70+4
 876 0010 0020     		mov	r0, #0
 877 0012 FFF7FEFF 		bl	TFC_SetServo
 878              	.LVL74:
 879              	.L68:
 880              	.LBE27:
 574:../Sources/main.c **** 	}
 575:../Sources/main.c **** }
 881              		.loc 1 575 0
 882              		@ sp needed for prologue
 883 0016 08BD     		pop	{r3, pc}
 884              	.L71:
 885              		.align	2
 886              	.L70:
 887 0018 00000000 		.word	TFC_Ticker
 888 001c 00A08C45 		.word	1166843904
 889              		.cfi_endproc
 890              	.LFE9:
 892              		.global	__aeabi_fmul
 893              		.global	__aeabi_fcmple
 894              		.global	__aeabi_fcmpge
 895              		.global	__aeabi_f2iz
 896              		.global	__aeabi_fcmpeq
 897              		.global	__aeabi_f2d
 898              		.global	__aeabi_dadd
 899              		.global	__aeabi_d2iz
 900              		.global	__aeabi_dsub
 901              		.global	__aeabi_i2f
 902              		.section	.text.telemetrySendData,"ax",%progbits
 903              		.align	2
 904              		.global	telemetrySendData
 905              		.code	16
 906              		.thumb_func
 908              	telemetrySendData:
 909              	.LFB10:
 576:../Sources/main.c **** 
 577:../Sources/main.c **** void telemetrySendData()
 578:../Sources/main.c **** {
 910              		.loc 1 578 0
 911              		.cfi_startproc
 912 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 913              	.LCFI11:
 914              		.cfi_def_cfa_offset 24
 915              		.cfi_offset 3, -24
 916              		.cfi_offset 4, -20
 917              		.cfi_offset 5, -16
 918              		.cfi_offset 6, -12
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 579:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, BLUETOOTH_FLAG);
 921              		.loc 1 579 0
 922 0002 E348     		ldr	r0, .L377
 923 0004 8021     		mov	r1, #128
 924 0006 FFF7FEFF 		bl	uart_putchar
 925              	.LVL75:
 580:../Sources/main.c **** 	
 581:../Sources/main.c **** 	// 1 - Track Centre Detected by the Camera
 582:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineCenter);
 926              		.loc 1 582 0
 927 000a E24C     		ldr	r4, .L377+4
 928 000c E048     		ldr	r0, .L377
 929 000e A17A     		ldrb	r1, [r4, #10]
 930 0010 FFF7FEFF 		bl	uart_putchar
 931              	.LVL76:
 583:../Sources/main.c **** 	// 2 - Calculated Target Speed
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 932              		.loc 1 584 0
 933 0014 E04B     		ldr	r3, .L377+8
 934 0016 8221     		mov	r1, #130
 935 0018 C905     		lsl	r1, r1, #23
 936 001a 1868     		ldr	r0, [r3]
 937 001c FFF7FEFF 		bl	__aeabi_fmul
 938              	.LVL77:
 939 0020 DE49     		ldr	r1, .L377+12
 940 0022 051C     		add	r5, r0, #0
 941 0024 FFF7FEFF 		bl	__aeabi_fcmple
 942              	.LVL78:
 943 0028 0028     		cmp	r0, #0
 944 002a 00D1     		bne	.LCB820
 945 002c B3E0     		b	.L81	@long jump
 946              	.LCB820:
 947              		.loc 1 584 0 is_stmt 0
 948 002e 281C     		add	r0, r5, #0
 949 0030 0021     		mov	r1, #0
 950 0032 FFF7FEFF 		bl	__aeabi_fcmpge
 951              	.LVL79:
 952 0036 0028     		cmp	r0, #0
 953 0038 00D1     		bne	.LCB826
 954 003a BDE1     		b	.L75	@long jump
 955              	.LCB826:
 956              		.loc 1 584 0
 957 003c 281C     		add	r0, r5, #0
 958 003e D849     		ldr	r1, .L377+16
 959 0040 FFF7FEFF 		bl	__aeabi_fcmpge
 960              	.LVL80:
 961 0044 0028     		cmp	r0, #0
 962 0046 00D1     		bne	.LCB832
 963 0048 B0E1     		b	.L343	@long jump
 964              	.LCB832:
 965              		.loc 1 584 0
 966 004a 281C     		add	r0, r5, #0
 967 004c D549     		ldr	r1, .L377+20
 968 004e FFF7FEFF 		bl	__aeabi_fcmple
 969              	.LVL81:
 970 0052 7F26     		mov	r6, #127
 971 0054 071E     		sub	r7, r0, #0
 972 0056 17D1     		bne	.L79
 973              		.loc 1 584 0
 974 0058 281C     		add	r0, r5, #0
 975 005a 0021     		mov	r1, #0
 976 005c FFF7FEFF 		bl	__aeabi_fcmpeq
 977              	.LVL82:
 978 0060 0028     		cmp	r0, #0
 979 0062 00D1     		bne	.LCB846
 980 0064 A8E1     		b	.L75	@long jump
 981              	.LCB846:
 982              		.loc 1 584 0
 983 0066 002F     		cmp	r7, #0
 984 0068 00D1     		bne	.LCB848
 985 006a BAE1     		b	.L88	@long jump
 986              	.LCB848:
 987              		.loc 1 584 0
 988 006c 281C     		add	r0, r5, #0
 989 006e CE49     		ldr	r1, .L377+24
 990 0070 FFF7FEFF 		bl	__aeabi_fcmpgt
 991              	.LVL83:
 992 0074 0028     		cmp	r0, #0
 993 0076 07D1     		bne	.L79
 994              		.loc 1 584 0
 995 0078 281C     		add	r0, r5, #0
 996 007a C949     		ldr	r1, .L377+16
 997 007c FFF7FEFF 		bl	__aeabi_fcmpge
 998              	.LVL84:
 999 0080 7E26     		mov	r6, #126
 1000 0082 0028     		cmp	r0, #0
 1001 0084 00D1     		bne	.LCB861
 1002 0086 9BE0     		b	.L87	@long jump
 1003              	.LCB861:
 1004              	.L79:
 1005              		.loc 1 584 0
 1006 0088 311C     		mov	r1, r6
 1007 008a C148     		ldr	r0, .L377
 1008 008c FFF7FEFF 		bl	uart_putchar
 1009              	.LVL85:
 585:../Sources/main.c **** 	// 3 - Speed of the right wheel
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1010              		.loc 1 586 0 is_stmt 1
 1011 0090 0020     		mov	r0, #0
 1012 0092 FFF7FEFF 		bl	getSpeed
 1013              	.LVL86:
 1014 0096 8222     		mov	r2, #130
 1015 0098 D105     		lsl	r1, r2, #23
 1016 009a FFF7FEFF 		bl	__aeabi_fmul
 1017              	.LVL87:
 1018 009e BF49     		ldr	r1, .L377+12
 1019 00a0 FFF7FEFF 		bl	__aeabi_fcmple
 1020              	.LVL88:
 1021 00a4 0028     		cmp	r0, #0
 1022 00a6 00D1     		bne	.LCB878
 1023 00a8 99E0     		b	.L92	@long jump
 1024              	.LCB878:
 1025              		.loc 1 586 0 is_stmt 0
 1026 00aa 0020     		mov	r0, #0
 1027 00ac FFF7FEFF 		bl	getSpeed
 1028              	.LVL89:
 1029 00b0 8223     		mov	r3, #130
 1030 00b2 D905     		lsl	r1, r3, #23
 1031 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1032              	.LVL90:
 1033 00b8 0021     		mov	r1, #0
 1034 00ba FFF7FEFF 		bl	__aeabi_fcmpge
 1035              	.LVL91:
 1036 00be 0028     		cmp	r0, #0
 1037 00c0 00D1     		bne	.LCB890
 1038 00c2 8CE0     		b	.L92	@long jump
 1039              	.LCB890:
 1040              		.loc 1 586 0
 1041 00c4 0020     		mov	r0, #0
 1042 00c6 FFF7FEFF 		bl	getSpeed
 1043              	.LVL92:
 1044 00ca 8221     		mov	r1, #130
 1045 00cc C905     		lsl	r1, r1, #23
 1046 00ce FFF7FEFF 		bl	__aeabi_fmul
 1047              	.LVL93:
 1048 00d2 B349     		ldr	r1, .L377+16
 1049 00d4 FFF7FEFF 		bl	__aeabi_fcmpge
 1050              	.LVL94:
 1051 00d8 0028     		cmp	r0, #0
 1052 00da 73D1     		bne	.L95
 1053              	.L98:
 1054              		.loc 1 586 0
 1055 00dc 0020     		mov	r0, #0
 1056 00de FFF7FEFF 		bl	getSpeed
 1057              	.LVL95:
 1058 00e2 8222     		mov	r2, #130
 1059 00e4 D105     		lsl	r1, r2, #23
 1060 00e6 FFF7FEFF 		bl	__aeabi_fmul
 1061              	.LVL96:
 1062 00ea 0021     		mov	r1, #0
 1063 00ec FFF7FEFF 		bl	__aeabi_fcmpeq
 1064              	.LVL97:
 1065 00f0 0028     		cmp	r0, #0
 1066 00f2 00D1     		bne	.LCB915
 1067 00f4 81E0     		b	.L96	@long jump
 1068              	.LCB915:
 1069              		.loc 1 586 0
 1070 00f6 0020     		mov	r0, #0
 1071 00f8 FFF7FEFF 		bl	getSpeed
 1072              	.LVL98:
 1073 00fc 8223     		mov	r3, #130
 1074 00fe D905     		lsl	r1, r3, #23
 1075 0100 FFF7FEFF 		bl	__aeabi_fmul
 1076              	.LVL99:
 1077 0104 A549     		ldr	r1, .L377+12
 1078 0106 FFF7FEFF 		bl	__aeabi_fcmple
 1079              	.LVL100:
 1080 010a 0028     		cmp	r0, #0
 1081 010c 27D0     		beq	.L114
 1082              		.loc 1 586 0
 1083 010e 0020     		mov	r0, #0
 1084 0110 FFF7FEFF 		bl	getSpeed
 1085              	.LVL101:
 1086 0114 8221     		mov	r1, #130
 1087 0116 C905     		lsl	r1, r1, #23
 1088 0118 FFF7FEFF 		bl	__aeabi_fmul
 1089              	.LVL102:
 1090 011c 0021     		mov	r1, #0
 1091 011e FFF7FEFF 		bl	__aeabi_fcmpge
 1092              	.LVL103:
 1093 0122 0028     		cmp	r0, #0
 1094 0124 1BD0     		beq	.L114
 1095              		.loc 1 586 0
 1096 0126 0020     		mov	r0, #0
 1097 0128 8227     		mov	r7, #130
 1098 012a FFF7FEFF 		bl	getSpeed
 1099              	.LVL104:
 1100 012e F905     		lsl	r1, r7, #23
 1101 0130 FFF7FEFF 		bl	__aeabi_fmul
 1102              	.LVL105:
 1103 0134 9A49     		ldr	r1, .L377+16
 1104 0136 FFF7FEFF 		bl	__aeabi_fcmpge
 1105              	.LVL106:
 1106 013a 0028     		cmp	r0, #0
 1107 013c 01D1     		bne	.LCB951
 1108 013e 00F027FD 		bl	.L118	@far jump
 1109              	.LCB951:
 1110              		.loc 1 586 0
 1111 0142 0020     		mov	r0, #0
 1112 0144 8225     		mov	r5, #130
 1113 0146 FFF7FEFF 		bl	getSpeed
 1114              	.LVL107:
 1115 014a E905     		lsl	r1, r5, #23
 1116 014c FFF7FEFF 		bl	__aeabi_fmul
 1117              	.LVL108:
 1118 0150 9449     		ldr	r1, .L377+20
 1119 0152 FFF7FEFF 		bl	__aeabi_fcmple
 1120              	.LVL109:
 1121 0156 0028     		cmp	r0, #0
 1122 0158 01D1     		bne	.LCB963
 1123 015a 00F019FD 		bl	.L118	@far jump
 1124              	.LCB963:
 1125              	.L114:
 1126              		.loc 1 586 0
 1127 015e 0020     		mov	r0, #0
 1128 0160 8226     		mov	r6, #130
 1129 0162 FFF7FEFF 		bl	getSpeed
 1130              	.LVL110:
 1131 0166 F105     		lsl	r1, r6, #23
 1132 0168 FFF7FEFF 		bl	__aeabi_fmul
 1133              	.LVL111:
 1134 016c 8E49     		ldr	r1, .L377+24
 1135 016e FFF7FEFF 		bl	__aeabi_fcmpgt
 1136              	.LVL112:
 1137 0172 0028     		cmp	r0, #0
 1138 0174 00D0     		beq	.LCB976
 1139 0176 82E0     		b	.L113	@long jump
 1140              	.LCB976:
 1141              		.loc 1 586 0
 1142 0178 FFF7FEFF 		bl	getSpeed
 1143              	.LVL113:
 1144 017c 8222     		mov	r2, #130
 1145 017e D105     		lsl	r1, r2, #23
 1146 0180 FFF7FEFF 		bl	__aeabi_fmul
 1147              	.LVL114:
 1148 0184 8649     		ldr	r1, .L377+16
 1149 0186 FFF7FEFF 		bl	__aeabi_fcmpge
 1150              	.LVL115:
 1151 018a 0028     		cmp	r0, #0
 1152 018c 01D0     		beq	.LCB987
 1153 018e 00F03DFD 		bl	.L368	@far jump
 1154              	.LCB987:
 1155              	.L122:
 1156              		.loc 1 586 0
 1157 0192 0021     		mov	r1, #0
 1158 0194 74E0     		b	.L107
 1159              	.L81:
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1160              		.loc 1 584 0 is_stmt 1
 1161 0196 281C     		add	r0, r5, #0
 1162 0198 8349     		ldr	r1, .L377+24
 1163 019a FFF7FEFF 		bl	__aeabi_fcmpgt
 1164              	.LVL116:
 1165 019e 7F26     		mov	r6, #127
 1166 01a0 0028     		cmp	r0, #0
 1167 01a2 00D0     		beq	.LCB1000
 1168 01a4 70E7     		b	.L79	@long jump
 1169              	.LCB1000:
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1170              		.loc 1 584 0 is_stmt 0
 1171 01a6 281C     		add	r0, r5, #0
 1172 01a8 7D49     		ldr	r1, .L377+16
 1173 01aa FFF7FEFF 		bl	__aeabi_fcmpge
 1174              	.LVL117:
 1175 01ae 0028     		cmp	r0, #0
 1176 01b0 06D0     		beq	.L87
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1177              		.loc 1 584 0
 1178 01b2 281C     		add	r0, r5, #0
 1179 01b4 7B49     		ldr	r1, .L377+20
 1180 01b6 FFF7FEFF 		bl	__aeabi_fcmple
 1181              	.LVL118:
 1182 01ba 0028     		cmp	r0, #0
 1183 01bc 00D0     		beq	.LCB1012
 1184 01be 63E7     		b	.L79	@long jump
 1185              	.LCB1012:
 1186              	.L87:
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1187              		.loc 1 584 0
 1188 01c0 0026     		mov	r6, #0
 1189 01c2 61E7     		b	.L79
 1190              	.L95:
 1191              		.loc 1 586 0 is_stmt 1
 1192 01c4 0020     		mov	r0, #0
 1193 01c6 8227     		mov	r7, #130
 1194 01c8 FFF7FEFF 		bl	getSpeed
 1195              	.LVL119:
 1196 01cc F905     		lsl	r1, r7, #23
 1197 01ce FFF7FEFF 		bl	__aeabi_fmul
 1198              	.LVL120:
 1199 01d2 7449     		ldr	r1, .L377+20
 1200 01d4 FFF7FEFF 		bl	__aeabi_fcmple
 1201              	.LVL121:
 1202 01d8 0028     		cmp	r0, #0
 1203 01da 00D1     		bne	.LCB1030
 1204 01dc 7EE7     		b	.L98	@long jump
 1205              	.LCB1030:
 1206              	.L92:
 1207              		.loc 1 586 0 is_stmt 0
 1208 01de 0020     		mov	r0, #0
 1209 01e0 8225     		mov	r5, #130
 1210 01e2 FFF7FEFF 		bl	getSpeed
 1211              	.LVL122:
 1212 01e6 E905     		lsl	r1, r5, #23
 1213 01e8 FFF7FEFF 		bl	__aeabi_fmul
 1214              	.LVL123:
 1215 01ec 6E49     		ldr	r1, .L377+24
 1216 01ee FFF7FEFF 		bl	__aeabi_fcmpgt
 1217              	.LVL124:
 1218 01f2 0028     		cmp	r0, #0
 1219 01f4 01D1     		bne	.LCB1043
 1220 01f6 00F04AFC 		bl	.L369	@far jump
 1221              	.LCB1043:
 1222              	.L96:
 1223              		.loc 1 586 0
 1224 01fa 0020     		mov	r0, #0
 1225 01fc FFF7FEFF 		bl	getSpeed
 1226              	.LVL125:
 1227 0200 8221     		mov	r1, #130
 1228 0202 C905     		lsl	r1, r1, #23
 1229 0204 FFF7FEFF 		bl	__aeabi_fmul
 1230              	.LVL126:
 1231 0208 6449     		ldr	r1, .L377+12
 1232 020a FFF7FEFF 		bl	__aeabi_fcmple
 1233              	.LVL127:
 1234 020e 0028     		cmp	r0, #0
 1235 0210 27D0     		beq	.L103
 1236              		.loc 1 586 0
 1237 0212 0020     		mov	r0, #0
 1238 0214 8227     		mov	r7, #130
 1239 0216 FFF7FEFF 		bl	getSpeed
 1240              	.LVL128:
 1241 021a F905     		lsl	r1, r7, #23
 1242 021c FFF7FEFF 		bl	__aeabi_fmul
 1243              	.LVL129:
 1244 0220 0021     		mov	r1, #0
 1245 0222 FFF7FEFF 		bl	__aeabi_fcmpge
 1246              	.LVL130:
 1247 0226 0028     		cmp	r0, #0
 1248 0228 1BD0     		beq	.L103
 1249              		.loc 1 586 0
 1250 022a 0020     		mov	r0, #0
 1251 022c 8225     		mov	r5, #130
 1252 022e FFF7FEFF 		bl	getSpeed
 1253              	.LVL131:
 1254 0232 E905     		lsl	r1, r5, #23
 1255 0234 FFF7FEFF 		bl	__aeabi_fmul
 1256              	.LVL132:
 1257 0238 5949     		ldr	r1, .L377+16
 1258 023a FFF7FEFF 		bl	__aeabi_fcmpge
 1259              	.LVL133:
 1260 023e 0028     		cmp	r0, #0
 1261 0240 01D1     		bne	.LCB1080
 1262 0242 00F0A5FC 		bl	.L118	@far jump
 1263              	.LCB1080:
 1264              		.loc 1 586 0
 1265 0246 0020     		mov	r0, #0
 1266 0248 8226     		mov	r6, #130
 1267 024a FFF7FEFF 		bl	getSpeed
 1268              	.LVL134:
 1269 024e F105     		lsl	r1, r6, #23
 1270 0250 FFF7FEFF 		bl	__aeabi_fmul
 1271              	.LVL135:
 1272 0254 5349     		ldr	r1, .L377+20
 1273 0256 FFF7FEFF 		bl	__aeabi_fcmple
 1274              	.LVL136:
 1275 025a 0028     		cmp	r0, #0
 1276 025c 01D1     		bne	.LCB1092
 1277 025e 00F097FC 		bl	.L118	@far jump
 1278              	.LCB1092:
 1279              	.L103:
 1280              		.loc 1 586 0
 1281 0262 0020     		mov	r0, #0
 1282 0264 FFF7FEFF 		bl	getSpeed
 1283              	.LVL137:
 1284 0268 8222     		mov	r2, #130
 1285 026a D105     		lsl	r1, r2, #23
 1286 026c FFF7FEFF 		bl	__aeabi_fmul
 1287              	.LVL138:
 1288 0270 4D49     		ldr	r1, .L377+24
 1289 0272 FFF7FEFF 		bl	__aeabi_fcmpgt
 1290              	.LVL139:
 1291 0276 0028     		cmp	r0, #0
 1292 0278 01D1     		bne	.LCB1105
 1293 027a 00F01AFC 		bl	.L346	@far jump
 1294              	.LCB1105:
 1295              	.L113:
 1296 027e 7F21     		mov	r1, #127
 1297              	.L107:
 1298              		.loc 1 586 0
 1299 0280 4348     		ldr	r0, .L377
 1300 0282 FFF7FEFF 		bl	uart_putchar
 1301              	.LVL140:
 587:../Sources/main.c **** 	// 4 - Speed of the left wheel
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1302              		.loc 1 588 0 is_stmt 1
 1303 0286 8225     		mov	r5, #130
 1304 0288 0120     		mov	r0, #1
 1305 028a FFF7FEFF 		bl	getSpeed
 1306              	.LVL141:
 1307 028e E905     		lsl	r1, r5, #23
 1308 0290 FFF7FEFF 		bl	__aeabi_fmul
 1309              	.LVL142:
 1310 0294 4149     		ldr	r1, .L377+12
 1311 0296 FFF7FEFF 		bl	__aeabi_fcmple
 1312              	.LVL143:
 1313 029a 0028     		cmp	r0, #0
 1314 029c 00D1     		bne	.LCB1124
 1315 029e B2E0     		b	.L124	@long jump
 1316              	.LCB1124:
 1317              		.loc 1 588 0 is_stmt 0
 1318 02a0 0120     		mov	r0, #1
 1319 02a2 8226     		mov	r6, #130
 1320 02a4 FFF7FEFF 		bl	getSpeed
 1321              	.LVL144:
 1322 02a8 F105     		lsl	r1, r6, #23
 1323 02aa FFF7FEFF 		bl	__aeabi_fmul
 1324              	.LVL145:
 1325 02ae 0021     		mov	r1, #0
 1326 02b0 FFF7FEFF 		bl	__aeabi_fcmpge
 1327              	.LVL146:
 1328 02b4 0028     		cmp	r0, #0
 1329 02b6 00D1     		bne	.LCB1136
 1330 02b8 A5E0     		b	.L124	@long jump
 1331              	.LCB1136:
 1332              		.loc 1 588 0
 1333 02ba 0120     		mov	r0, #1
 1334 02bc FFF7FEFF 		bl	getSpeed
 1335              	.LVL147:
 1336 02c0 8222     		mov	r2, #130
 1337 02c2 D105     		lsl	r1, r2, #23
 1338 02c4 FFF7FEFF 		bl	__aeabi_fmul
 1339              	.LVL148:
 1340 02c8 3549     		ldr	r1, .L377+16
 1341 02ca FFF7FEFF 		bl	__aeabi_fcmpge
 1342              	.LVL149:
 1343 02ce 0028     		cmp	r0, #0
 1344 02d0 00D0     		beq	.LCB1148
 1345 02d2 8BE0     		b	.L127	@long jump
 1346              	.LCB1148:
 1347              	.L130:
 1348              		.loc 1 588 0
 1349 02d4 0120     		mov	r0, #1
 1350 02d6 8225     		mov	r5, #130
 1351 02d8 FFF7FEFF 		bl	getSpeed
 1352              	.LVL150:
 1353 02dc E905     		lsl	r1, r5, #23
 1354 02de FFF7FEFF 		bl	__aeabi_fmul
 1355              	.LVL151:
 1356 02e2 0021     		mov	r1, #0
 1357 02e4 FFF7FEFF 		bl	__aeabi_fcmpeq
 1358              	.LVL152:
 1359 02e8 0028     		cmp	r0, #0
 1360 02ea 00D1     		bne	.LCB1161
 1361 02ec 98E0     		b	.L128	@long jump
 1362              	.LCB1161:
 1363              		.loc 1 588 0
 1364 02ee 0120     		mov	r0, #1
 1365 02f0 8226     		mov	r6, #130
 1366 02f2 FFF7FEFF 		bl	getSpeed
 1367              	.LVL153:
 1368 02f6 F105     		lsl	r1, r6, #23
 1369 02f8 FFF7FEFF 		bl	__aeabi_fmul
 1370              	.LVL154:
 1371 02fc 2749     		ldr	r1, .L377+12
 1372 02fe FFF7FEFF 		bl	__aeabi_fcmple
 1373              	.LVL155:
 1374 0302 0028     		cmp	r0, #0
 1375 0304 27D0     		beq	.L146
 1376              		.loc 1 588 0
 1377 0306 0120     		mov	r0, #1
 1378 0308 FFF7FEFF 		bl	getSpeed
 1379              	.LVL156:
 1380 030c 8222     		mov	r2, #130
 1381 030e D105     		lsl	r1, r2, #23
 1382 0310 FFF7FEFF 		bl	__aeabi_fmul
 1383              	.LVL157:
 1384 0314 0021     		mov	r1, #0
 1385 0316 FFF7FEFF 		bl	__aeabi_fcmpge
 1386              	.LVL158:
 1387 031a 0028     		cmp	r0, #0
 1388 031c 1BD0     		beq	.L146
 1389              		.loc 1 588 0
 1390 031e 0120     		mov	r0, #1
 1391 0320 FFF7FEFF 		bl	getSpeed
 1392              	.LVL159:
 1393 0324 8223     		mov	r3, #130
 1394 0326 D905     		lsl	r1, r3, #23
 1395 0328 FFF7FEFF 		bl	__aeabi_fmul
 1396              	.LVL160:
 1397 032c 1C49     		ldr	r1, .L377+16
 1398 032e FFF7FEFF 		bl	__aeabi_fcmpge
 1399              	.LVL161:
 1400 0332 0028     		cmp	r0, #0
 1401 0334 01D1     		bne	.LCB1197
 1402 0336 00F04BFC 		bl	.L150	@far jump
 1403              	.LCB1197:
 1404              		.loc 1 588 0
 1405 033a 0120     		mov	r0, #1
 1406 033c FFF7FEFF 		bl	getSpeed
 1407              	.LVL162:
 1408 0340 8221     		mov	r1, #130
 1409 0342 C905     		lsl	r1, r1, #23
 1410 0344 FFF7FEFF 		bl	__aeabi_fmul
 1411              	.LVL163:
 1412 0348 1649     		ldr	r1, .L377+20
 1413 034a FFF7FEFF 		bl	__aeabi_fcmple
 1414              	.LVL164:
 1415 034e 0028     		cmp	r0, #0
 1416 0350 01D1     		bne	.LCB1209
 1417 0352 00F03DFC 		bl	.L150	@far jump
 1418              	.LCB1209:
 1419              	.L146:
 1420              		.loc 1 588 0
 1421 0356 0120     		mov	r0, #1
 1422 0358 8227     		mov	r7, #130
 1423 035a FFF7FEFF 		bl	getSpeed
 1424              	.LVL165:
 1425 035e F905     		lsl	r1, r7, #23
 1426 0360 FFF7FEFF 		bl	__aeabi_fmul
 1427              	.LVL166:
 1428 0364 1049     		ldr	r1, .L377+24
 1429 0366 FFF7FEFF 		bl	__aeabi_fcmpgt
 1430              	.LVL167:
 1431 036a 0028     		cmp	r0, #0
 1432 036c 00D0     		beq	.LCB1222
 1433 036e 96E0     		b	.L145	@long jump
 1434              	.LCB1222:
 1435              		.loc 1 588 0
 1436 0370 0120     		mov	r0, #1
 1437 0372 8225     		mov	r5, #130
 1438 0374 FFF7FEFF 		bl	getSpeed
 1439              	.LVL168:
 1440 0378 E905     		lsl	r1, r5, #23
 1441 037a FFF7FEFF 		bl	__aeabi_fmul
 1442              	.LVL169:
 1443 037e 0849     		ldr	r1, .L377+16
 1444 0380 FFF7FEFF 		bl	__aeabi_fcmpge
 1445              	.LVL170:
 1446 0384 0028     		cmp	r0, #0
 1447 0386 01D0     		beq	.LCB1234
 1448 0388 00F052FC 		bl	.L370	@far jump
 1449              	.LCB1234:
 1450              	.L154:
 1451              		.loc 1 588 0
 1452 038c 0021     		mov	r1, #0
 1453 038e 87E0     		b	.L139
 1454              	.L378:
 1455              		.align	2
 1456              	.L377:
 1457 0390 00C00640 		.word	1074184192
 1458 0394 00000000 		.word	.LANCHOR3
 1459 0398 00000000 		.word	.LANCHOR4
 1460 039c 00807E43 		.word	1132363776
 1461 03a0 0000FF42 		.word	1124007936
 1462 03a4 00800043 		.word	1124106240
 1463 03a8 00007F43 		.word	1132396544
 1464              	.L343:
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1465              		.loc 1 584 0 is_stmt 1
 1466 03ac 281C     		add	r0, r5, #0
 1467 03ae 0021     		mov	r1, #0
 1468 03b0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1469              	.LVL171:
 1470 03b4 0028     		cmp	r0, #0
 1471 03b6 14D1     		bne	.L88
 1472              	.L75:
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1473              		.loc 1 584 0 is_stmt 0
 1474 03b8 281C     		add	r0, r5, #0
 1475 03ba 0021     		mov	r1, #0
 1476 03bc FFF7FEFF 		bl	__aeabi_fcmpge
 1477              	.LVL172:
 1478 03c0 0028     		cmp	r0, #0
 1479 03c2 00D1     		bne	.LCB1265
 1480 03c4 E7E6     		b	.L81	@long jump
 1481              	.LCB1265:
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1482              		.loc 1 584 0
 1483 03c6 281C     		add	r0, r5, #0
 1484 03c8 9149     		ldr	r1, .L379+8
 1485 03ca FFF7FEFF 		bl	__aeabi_fcmpge
 1486              	.LVL173:
 1487 03ce 0028     		cmp	r0, #0
 1488 03d0 07D0     		beq	.L88
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1489              		.loc 1 584 0
 1490 03d2 281C     		add	r0, r5, #0
 1491 03d4 8F49     		ldr	r1, .L379+12
 1492 03d6 FFF7FEFF 		bl	__aeabi_fcmple
 1493              	.LVL174:
 1494 03da 7F26     		mov	r6, #127
 1495 03dc 0028     		cmp	r0, #0
 1496 03de 00D0     		beq	.LCB1278
 1497 03e0 52E6     		b	.L79	@long jump
 1498              	.LCB1278:
 1499              	.L88:
 584:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1500              		.loc 1 584 0
 1501 03e2 281C     		add	r0, r5, #0
 1502 03e4 FFF7FEFF 		bl	__aeabi_f2iz
 1503              	.LVL175:
 1504 03e8 C6B2     		uxtb	r6, r0
 1505 03ea 4DE6     		b	.L79
 1506              	.L127:
 1507              		.loc 1 588 0 is_stmt 1
 1508 03ec 0120     		mov	r0, #1
 1509 03ee FFF7FEFF 		bl	getSpeed
 1510              	.LVL176:
 1511 03f2 8223     		mov	r3, #130
 1512 03f4 D905     		lsl	r1, r3, #23
 1513 03f6 FFF7FEFF 		bl	__aeabi_fmul
 1514              	.LVL177:
 1515 03fa 8649     		ldr	r1, .L379+12
 1516 03fc FFF7FEFF 		bl	__aeabi_fcmple
 1517              	.LVL178:
 1518 0400 0028     		cmp	r0, #0
 1519 0402 00D1     		bne	.LCB1300
 1520 0404 66E7     		b	.L130	@long jump
 1521              	.LCB1300:
 1522              	.L124:
 1523              		.loc 1 588 0 is_stmt 0
 1524 0406 0120     		mov	r0, #1
 1525 0408 FFF7FEFF 		bl	getSpeed
 1526              	.LVL179:
 1527 040c 8221     		mov	r1, #130
 1528 040e C905     		lsl	r1, r1, #23
 1529 0410 FFF7FEFF 		bl	__aeabi_fmul
 1530              	.LVL180:
 1531 0414 8049     		ldr	r1, .L379+16
 1532 0416 FFF7FEFF 		bl	__aeabi_fcmpgt
 1533              	.LVL181:
 1534 041a 0028     		cmp	r0, #0
 1535 041c 00D1     		bne	.LCB1313
 1536 041e 25E3     		b	.L371	@long jump
 1537              	.LCB1313:
 1538              	.L128:
 1539              		.loc 1 588 0
 1540 0420 0120     		mov	r0, #1
 1541 0422 FFF7FEFF 		bl	getSpeed
 1542              	.LVL182:
 1543 0426 8222     		mov	r2, #130
 1544 0428 D105     		lsl	r1, r2, #23
 1545 042a FFF7FEFF 		bl	__aeabi_fmul
 1546              	.LVL183:
 1547 042e 7B49     		ldr	r1, .L379+20
 1548 0430 FFF7FEFF 		bl	__aeabi_fcmple
 1549              	.LVL184:
 1550 0434 0028     		cmp	r0, #0
 1551 0436 25D0     		beq	.L135
 1552              		.loc 1 588 0
 1553 0438 0120     		mov	r0, #1
 1554 043a FFF7FEFF 		bl	getSpeed
 1555              	.LVL185:
 1556 043e 8223     		mov	r3, #130
 1557 0440 D905     		lsl	r1, r3, #23
 1558 0442 FFF7FEFF 		bl	__aeabi_fmul
 1559              	.LVL186:
 1560 0446 0021     		mov	r1, #0
 1561 0448 FFF7FEFF 		bl	__aeabi_fcmpge
 1562              	.LVL187:
 1563 044c 0028     		cmp	r0, #0
 1564 044e 19D0     		beq	.L135
 1565              		.loc 1 588 0
 1566 0450 0120     		mov	r0, #1
 1567 0452 FFF7FEFF 		bl	getSpeed
 1568              	.LVL188:
 1569 0456 8221     		mov	r1, #130
 1570 0458 C905     		lsl	r1, r1, #23
 1571 045a FFF7FEFF 		bl	__aeabi_fmul
 1572              	.LVL189:
 1573 045e 6C49     		ldr	r1, .L379+8
 1574 0460 FFF7FEFF 		bl	__aeabi_fcmpge
 1575              	.LVL190:
 1576 0464 0028     		cmp	r0, #0
 1577 0466 00D1     		bne	.LCB1350
 1578 0468 B2E3     		b	.L150	@long jump
 1579              	.LCB1350:
 1580              		.loc 1 588 0
 1581 046a 0120     		mov	r0, #1
 1582 046c 8227     		mov	r7, #130
 1583 046e FFF7FEFF 		bl	getSpeed
 1584              	.LVL191:
 1585 0472 F905     		lsl	r1, r7, #23
 1586 0474 FFF7FEFF 		bl	__aeabi_fmul
 1587              	.LVL192:
 1588 0478 6649     		ldr	r1, .L379+12
 1589 047a FFF7FEFF 		bl	__aeabi_fcmple
 1590              	.LVL193:
 1591 047e 0028     		cmp	r0, #0
 1592 0480 00D1     		bne	.LCB1362
 1593 0482 A5E3     		b	.L150	@long jump
 1594              	.LCB1362:
 1595              	.L135:
 1596              		.loc 1 588 0
 1597 0484 0120     		mov	r0, #1
 1598 0486 8225     		mov	r5, #130
 1599 0488 FFF7FEFF 		bl	getSpeed
 1600              	.LVL194:
 1601 048c E905     		lsl	r1, r5, #23
 1602 048e FFF7FEFF 		bl	__aeabi_fmul
 1603              	.LVL195:
 1604 0492 6149     		ldr	r1, .L379+16
 1605 0494 FFF7FEFF 		bl	__aeabi_fcmpgt
 1606              	.LVL196:
 1607 0498 0028     		cmp	r0, #0
 1608 049a 00D1     		bne	.LCB1375
 1609 049c 28E3     		b	.L348	@long jump
 1610              	.LCB1375:
 1611              	.L145:
 1612 049e 7F21     		mov	r1, #127
 1613              	.L139:
 1614              		.loc 1 588 0
 1615 04a0 5F48     		ldr	r0, .L379+24
 1616 04a2 FFF7FEFF 		bl	uart_putchar
 1617              	.LVL197:
 589:../Sources/main.c **** 	// 5 - PWM output to right motor
 590:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 1618              		.loc 1 590 0 is_stmt 1
 1619 04a6 0020     		mov	r0, #0
 1620 04a8 FFF7FEFF 		bl	TFC_GetMotorPWM
 1621              	.LVL198:
 1622 04ac 5D49     		ldr	r1, .L379+28
 1623 04ae FFF7FEFF 		bl	__aeabi_fmul
 1624              	.LVL199:
 1625 04b2 0021     		mov	r1, #0
 1626 04b4 FFF7FEFF 		bl	__aeabi_fcmpge
 1627              	.LVL200:
 1628 04b8 0028     		cmp	r0, #0
 1629 04ba 00D1     		bne	.LCB1393
 1630 04bc A7E2     		b	.L349	@long jump
 1631              	.LCB1393:
 1632              		.loc 1 590 0 is_stmt 0
 1633 04be 0020     		mov	r0, #0
 1634 04c0 FFF7FEFF 		bl	TFC_GetMotorPWM
 1635              	.LVL201:
 1636 04c4 5749     		ldr	r1, .L379+28
 1637 04c6 FFF7FEFF 		bl	__aeabi_fmul
 1638              	.LVL202:
 1639 04ca FFF7FEFF 		bl	__aeabi_f2d
 1640              	.LVL203:
 1641 04ce 4F4B     		ldr	r3, .L379+4
 1642 04d0 4D4A     		ldr	r2, .L379
 1643 04d2 FFF7FEFF 		bl	__aeabi_dadd
 1644              	.LVL204:
 1645 04d6 FFF7FEFF 		bl	__aeabi_d2iz
 1646              	.LVL205:
 1647 04da C1B2     		uxtb	r1, r0
 1648              	.L158:
 1649              		.loc 1 590 0
 1650 04dc 5048     		ldr	r0, .L379+24
 1651 04de FFF7FEFF 		bl	uart_putchar
 1652              	.LVL206:
 591:../Sources/main.c **** 	// 6 - PWM output to left motor
 592:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 1653              		.loc 1 592 0 is_stmt 1
 1654 04e2 0120     		mov	r0, #1
 1655 04e4 FFF7FEFF 		bl	TFC_GetMotorPWM
 1656              	.LVL207:
 1657 04e8 4E49     		ldr	r1, .L379+28
 1658 04ea FFF7FEFF 		bl	__aeabi_fmul
 1659              	.LVL208:
 1660 04ee 0021     		mov	r1, #0
 1661 04f0 FFF7FEFF 		bl	__aeabi_fcmpge
 1662              	.LVL209:
 1663 04f4 0028     		cmp	r0, #0
 1664 04f6 00D1     		bne	.LCB1424
 1665 04f8 79E2     		b	.L350	@long jump
 1666              	.LCB1424:
 1667              		.loc 1 592 0 is_stmt 0
 1668 04fa 0120     		mov	r0, #1
 1669 04fc FFF7FEFF 		bl	TFC_GetMotorPWM
 1670              	.LVL210:
 1671 0500 4849     		ldr	r1, .L379+28
 1672 0502 FFF7FEFF 		bl	__aeabi_fmul
 1673              	.LVL211:
 1674 0506 FFF7FEFF 		bl	__aeabi_f2d
 1675              	.LVL212:
 1676 050a 404B     		ldr	r3, .L379+4
 1677 050c 3E4A     		ldr	r2, .L379
 1678 050e FFF7FEFF 		bl	__aeabi_dadd
 1679              	.LVL213:
 1680 0512 FFF7FEFF 		bl	__aeabi_d2iz
 1681              	.LVL214:
 1682 0516 C1B2     		uxtb	r1, r0
 1683              	.L161:
 1684              		.loc 1 592 0
 1685 0518 4148     		ldr	r0, .L379+24
 1686 051a FFF7FEFF 		bl	uart_putchar
 1687              	.LVL215:
 593:../Sources/main.c **** 	// 7 - Current of the right motor
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 1688              		.loc 1 594 0 is_stmt 1
 1689 051e 0020     		mov	r0, #0
 1690 0520 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1691              	.LVL216:
 1692 0524 4049     		ldr	r1, .L379+32
 1693 0526 FFF7FEFF 		bl	__aeabi_fmul
 1694              	.LVL217:
 1695 052a 3C49     		ldr	r1, .L379+20
 1696 052c FFF7FEFF 		bl	__aeabi_fcmple
 1697              	.LVL218:
 1698 0530 0028     		cmp	r0, #0
 1699 0532 00D1     		bne	.LCB1455
 1700 0534 85E0     		b	.L162	@long jump
 1701              	.LCB1455:
 1702              		.loc 1 594 0 is_stmt 0
 1703 0536 0020     		mov	r0, #0
 1704 0538 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1705              	.LVL219:
 1706 053c 3A49     		ldr	r1, .L379+32
 1707 053e FFF7FEFF 		bl	__aeabi_fmul
 1708              	.LVL220:
 1709 0542 0021     		mov	r1, #0
 1710 0544 FFF7FEFF 		bl	__aeabi_fcmpge
 1711              	.LVL221:
 1712 0548 0028     		cmp	r0, #0
 1713 054a 7AD0     		beq	.L162
 1714              		.loc 1 594 0
 1715 054c 0020     		mov	r0, #0
 1716 054e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1717              	.LVL222:
 1718 0552 3549     		ldr	r1, .L379+32
 1719 0554 FFF7FEFF 		bl	__aeabi_fmul
 1720              	.LVL223:
 1721 0558 2D49     		ldr	r1, .L379+8
 1722 055a FFF7FEFF 		bl	__aeabi_fcmpge
 1723              	.LVL224:
 1724 055e 0028     		cmp	r0, #0
 1725 0560 64D1     		bne	.L165
 1726              	.L168:
 1727              		.loc 1 594 0
 1728 0562 0020     		mov	r0, #0
 1729 0564 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1730              	.LVL225:
 1731 0568 2F49     		ldr	r1, .L379+32
 1732 056a FFF7FEFF 		bl	__aeabi_fmul
 1733              	.LVL226:
 1734 056e 0021     		mov	r1, #0
 1735 0570 FFF7FEFF 		bl	__aeabi_fcmpeq
 1736              	.LVL227:
 1737 0574 0028     		cmp	r0, #0
 1738 0576 70D0     		beq	.L166
 1739              		.loc 1 594 0
 1740 0578 0020     		mov	r0, #0
 1741 057a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1742              	.LVL228:
 1743 057e 2A49     		ldr	r1, .L379+32
 1744 0580 FFF7FEFF 		bl	__aeabi_fmul
 1745              	.LVL229:
 1746 0584 2549     		ldr	r1, .L379+20
 1747 0586 FFF7FEFF 		bl	__aeabi_fcmple
 1748              	.LVL230:
 1749 058a 0028     		cmp	r0, #0
 1750 058c 22D0     		beq	.L184
 1751              		.loc 1 594 0
 1752 058e 0020     		mov	r0, #0
 1753 0590 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1754              	.LVL231:
 1755 0594 2449     		ldr	r1, .L379+32
 1756 0596 FFF7FEFF 		bl	__aeabi_fmul
 1757              	.LVL232:
 1758 059a 0021     		mov	r1, #0
 1759 059c FFF7FEFF 		bl	__aeabi_fcmpge
 1760              	.LVL233:
 1761 05a0 0028     		cmp	r0, #0
 1762 05a2 17D0     		beq	.L184
 1763              		.loc 1 594 0
 1764 05a4 0020     		mov	r0, #0
 1765 05a6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1766              	.LVL234:
 1767 05aa 1F49     		ldr	r1, .L379+32
 1768 05ac FFF7FEFF 		bl	__aeabi_fmul
 1769              	.LVL235:
 1770 05b0 1749     		ldr	r1, .L379+8
 1771 05b2 FFF7FEFF 		bl	__aeabi_fcmpge
 1772              	.LVL236:
 1773 05b6 0028     		cmp	r0, #0
 1774 05b8 00D1     		bne	.LCB1522
 1775 05ba FFE2     		b	.L188	@long jump
 1776              	.LCB1522:
 1777              		.loc 1 594 0
 1778 05bc 0020     		mov	r0, #0
 1779 05be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1780              	.LVL237:
 1781 05c2 1949     		ldr	r1, .L379+32
 1782 05c4 FFF7FEFF 		bl	__aeabi_fmul
 1783              	.LVL238:
 1784 05c8 1249     		ldr	r1, .L379+12
 1785 05ca FFF7FEFF 		bl	__aeabi_fcmple
 1786              	.LVL239:
 1787 05ce 0028     		cmp	r0, #0
 1788 05d0 00D1     		bne	.LCB1533
 1789 05d2 F3E2     		b	.L188	@long jump
 1790              	.LCB1533:
 1791              	.L184:
 1792              		.loc 1 594 0
 1793 05d4 0020     		mov	r0, #0
 1794 05d6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1795              	.LVL240:
 1796 05da 1349     		ldr	r1, .L379+32
 1797 05dc FFF7FEFF 		bl	__aeabi_fmul
 1798              	.LVL241:
 1799 05e0 0D49     		ldr	r1, .L379+16
 1800 05e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 1801              	.LVL242:
 1802 05e6 0028     		cmp	r0, #0
 1803 05e8 71D1     		bne	.L183
 1804              		.loc 1 594 0
 1805 05ea FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1806              	.LVL243:
 1807 05ee 0E49     		ldr	r1, .L379+32
 1808 05f0 FFF7FEFF 		bl	__aeabi_fmul
 1809              	.LVL244:
 1810 05f4 0649     		ldr	r1, .L379+8
 1811 05f6 FFF7FEFF 		bl	__aeabi_fcmpge
 1812              	.LVL245:
 1813 05fa 0028     		cmp	r0, #0
 1814 05fc 00D0     		beq	.LCB1555
 1815 05fe 27E3     		b	.L372	@long jump
 1816              	.LCB1555:
 1817              	.L192:
 1818              		.loc 1 594 0
 1819 0600 0021     		mov	r1, #0
 1820 0602 65E0     		b	.L177
 1821              	.L380:
 1822 0604 C046C046 		.align	3
 1823              	.L379:
 1824 0608 00000000 		.word	0
 1825 060c 0000E03F 		.word	1071644672
 1826 0610 0000FF42 		.word	1124007936
 1827 0614 00800043 		.word	1124106240
 1828 0618 00007F43 		.word	1132396544
 1829 061c 00807E43 		.word	1132363776
 1830 0620 00C00640 		.word	1074184192
 1831 0624 0000FC42 		.word	1123811328
 1832 0628 00007042 		.word	1114636288
 1833              	.L165:
 1834              		.loc 1 594 0
 1835 062c 0020     		mov	r0, #0
 1836 062e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1837              	.LVL246:
 1838 0632 CF49     		ldr	r1, .L381+8
 1839 0634 FFF7FEFF 		bl	__aeabi_fmul
 1840              	.LVL247:
 1841 0638 CE49     		ldr	r1, .L381+12
 1842 063a FFF7FEFF 		bl	__aeabi_fcmple
 1843              	.LVL248:
 1844 063e 0028     		cmp	r0, #0
 1845 0640 8FD0     		beq	.L168
 1846              	.L162:
 1847              		.loc 1 594 0
 1848 0642 0020     		mov	r0, #0
 1849 0644 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1850              	.LVL249:
 1851 0648 C949     		ldr	r1, .L381+8
 1852 064a FFF7FEFF 		bl	__aeabi_fmul
 1853              	.LVL250:
 1854 064e CA49     		ldr	r1, .L381+16
 1855 0650 FFF7FEFF 		bl	__aeabi_fcmpgt
 1856              	.LVL251:
 1857 0654 0028     		cmp	r0, #0
 1858 0656 00D1     		bne	.LCB1597
 1859 0658 F9E1     		b	.L373	@long jump
 1860              	.LCB1597:
 1861              	.L166:
 1862              		.loc 1 594 0
 1863 065a 0020     		mov	r0, #0
 1864 065c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1865              	.LVL252:
 1866 0660 C349     		ldr	r1, .L381+8
 1867 0662 FFF7FEFF 		bl	__aeabi_fmul
 1868              	.LVL253:
 1869 0666 C549     		ldr	r1, .L381+20
 1870 0668 FFF7FEFF 		bl	__aeabi_fcmple
 1871              	.LVL254:
 1872 066c 0028     		cmp	r0, #0
 1873 066e 22D0     		beq	.L173
 1874              		.loc 1 594 0
 1875 0670 0020     		mov	r0, #0
 1876 0672 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1877              	.LVL255:
 1878 0676 BE49     		ldr	r1, .L381+8
 1879 0678 FFF7FEFF 		bl	__aeabi_fmul
 1880              	.LVL256:
 1881 067c 0021     		mov	r1, #0
 1882 067e FFF7FEFF 		bl	__aeabi_fcmpge
 1883              	.LVL257:
 1884 0682 0028     		cmp	r0, #0
 1885 0684 17D0     		beq	.L173
 1886              		.loc 1 594 0
 1887 0686 0020     		mov	r0, #0
 1888 0688 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1889              	.LVL258:
 1890 068c B849     		ldr	r1, .L381+8
 1891 068e FFF7FEFF 		bl	__aeabi_fmul
 1892              	.LVL259:
 1893 0692 BB49     		ldr	r1, .L381+24
 1894 0694 FFF7FEFF 		bl	__aeabi_fcmpge
 1895              	.LVL260:
 1896 0698 0028     		cmp	r0, #0
 1897 069a 00D1     		bne	.LCB1631
 1898 069c 8EE2     		b	.L188	@long jump
 1899              	.LCB1631:
 1900              		.loc 1 594 0
 1901 069e 0020     		mov	r0, #0
 1902 06a0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1903              	.LVL261:
 1904 06a4 B249     		ldr	r1, .L381+8
 1905 06a6 FFF7FEFF 		bl	__aeabi_fmul
 1906              	.LVL262:
 1907 06aa B249     		ldr	r1, .L381+12
 1908 06ac FFF7FEFF 		bl	__aeabi_fcmple
 1909              	.LVL263:
 1910 06b0 0028     		cmp	r0, #0
 1911 06b2 00D1     		bne	.LCB1642
 1912 06b4 82E2     		b	.L188	@long jump
 1913              	.LCB1642:
 1914              	.L173:
 1915              		.loc 1 594 0
 1916 06b6 0020     		mov	r0, #0
 1917 06b8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1918              	.LVL264:
 1919 06bc AC49     		ldr	r1, .L381+8
 1920 06be FFF7FEFF 		bl	__aeabi_fmul
 1921              	.LVL265:
 1922 06c2 AD49     		ldr	r1, .L381+16
 1923 06c4 FFF7FEFF 		bl	__aeabi_fcmpgt
 1924              	.LVL266:
 1925 06c8 0028     		cmp	r0, #0
 1926 06ca 00D1     		bne	.LCB1654
 1927 06cc 46E2     		b	.L352	@long jump
 1928              	.LCB1654:
 1929              	.L183:
 1930 06ce 7F21     		mov	r1, #127
 1931              	.L177:
 1932              		.loc 1 594 0
 1933 06d0 AC48     		ldr	r0, .L381+28
 1934 06d2 FFF7FEFF 		bl	uart_putchar
 1935              	.LVL267:
 595:../Sources/main.c **** 	// 8 - Current of the left motor
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 1936              		.loc 1 596 0 is_stmt 1
 1937 06d6 0120     		mov	r0, #1
 1938 06d8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1939              	.LVL268:
 1940 06dc A449     		ldr	r1, .L381+8
 1941 06de FFF7FEFF 		bl	__aeabi_fmul
 1942              	.LVL269:
 1943 06e2 A649     		ldr	r1, .L381+20
 1944 06e4 FFF7FEFF 		bl	__aeabi_fcmple
 1945              	.LVL270:
 1946 06e8 0028     		cmp	r0, #0
 1947 06ea 72D0     		beq	.L194
 1948              		.loc 1 596 0 is_stmt 0
 1949 06ec 0120     		mov	r0, #1
 1950 06ee FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1951              	.LVL271:
 1952 06f2 9F49     		ldr	r1, .L381+8
 1953 06f4 FFF7FEFF 		bl	__aeabi_fmul
 1954              	.LVL272:
 1955 06f8 0021     		mov	r1, #0
 1956 06fa FFF7FEFF 		bl	__aeabi_fcmpge
 1957              	.LVL273:
 1958 06fe 0028     		cmp	r0, #0
 1959 0700 67D0     		beq	.L194
 1960              		.loc 1 596 0
 1961 0702 0120     		mov	r0, #1
 1962 0704 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1963              	.LVL274:
 1964 0708 9949     		ldr	r1, .L381+8
 1965 070a FFF7FEFF 		bl	__aeabi_fmul
 1966              	.LVL275:
 1967 070e 9C49     		ldr	r1, .L381+24
 1968 0710 FFF7FEFF 		bl	__aeabi_fcmpge
 1969              	.LVL276:
 1970 0714 0028     		cmp	r0, #0
 1971 0716 51D1     		bne	.L197
 1972              	.L200:
 1973              		.loc 1 596 0
 1974 0718 0120     		mov	r0, #1
 1975 071a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1976              	.LVL277:
 1977 071e 9449     		ldr	r1, .L381+8
 1978 0720 FFF7FEFF 		bl	__aeabi_fmul
 1979              	.LVL278:
 1980 0724 0021     		mov	r1, #0
 1981 0726 FFF7FEFF 		bl	__aeabi_fcmpeq
 1982              	.LVL279:
 1983 072a 0028     		cmp	r0, #0
 1984 072c 5DD0     		beq	.L198
 1985              		.loc 1 596 0
 1986 072e 0120     		mov	r0, #1
 1987 0730 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1988              	.LVL280:
 1989 0734 8E49     		ldr	r1, .L381+8
 1990 0736 FFF7FEFF 		bl	__aeabi_fmul
 1991              	.LVL281:
 1992 073a 9049     		ldr	r1, .L381+20
 1993 073c FFF7FEFF 		bl	__aeabi_fcmple
 1994              	.LVL282:
 1995 0740 0028     		cmp	r0, #0
 1996 0742 22D0     		beq	.L216
 1997              		.loc 1 596 0
 1998 0744 0120     		mov	r0, #1
 1999 0746 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2000              	.LVL283:
 2001 074a 8949     		ldr	r1, .L381+8
 2002 074c FFF7FEFF 		bl	__aeabi_fmul
 2003              	.LVL284:
 2004 0750 0021     		mov	r1, #0
 2005 0752 FFF7FEFF 		bl	__aeabi_fcmpge
 2006              	.LVL285:
 2007 0756 0028     		cmp	r0, #0
 2008 0758 17D0     		beq	.L216
 2009              		.loc 1 596 0
 2010 075a 0120     		mov	r0, #1
 2011 075c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2012              	.LVL286:
 2013 0760 8349     		ldr	r1, .L381+8
 2014 0762 FFF7FEFF 		bl	__aeabi_fmul
 2015              	.LVL287:
 2016 0766 8649     		ldr	r1, .L381+24
 2017 0768 FFF7FEFF 		bl	__aeabi_fcmpge
 2018              	.LVL288:
 2019 076c 0028     		cmp	r0, #0
 2020 076e 00D1     		bne	.LCB1739
 2021 0770 1AE2     		b	.L220	@long jump
 2022              	.LCB1739:
 2023              		.loc 1 596 0
 2024 0772 0120     		mov	r0, #1
 2025 0774 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2026              	.LVL289:
 2027 0778 7D49     		ldr	r1, .L381+8
 2028 077a FFF7FEFF 		bl	__aeabi_fmul
 2029              	.LVL290:
 2030 077e 7D49     		ldr	r1, .L381+12
 2031 0780 FFF7FEFF 		bl	__aeabi_fcmple
 2032              	.LVL291:
 2033 0784 0028     		cmp	r0, #0
 2034 0786 00D1     		bne	.LCB1750
 2035 0788 0EE2     		b	.L220	@long jump
 2036              	.LCB1750:
 2037              	.L216:
 2038              		.loc 1 596 0
 2039 078a 0120     		mov	r0, #1
 2040 078c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2041              	.LVL292:
 2042 0790 7749     		ldr	r1, .L381+8
 2043 0792 FFF7FEFF 		bl	__aeabi_fmul
 2044              	.LVL293:
 2045 0796 7849     		ldr	r1, .L381+16
 2046 0798 FFF7FEFF 		bl	__aeabi_fcmpgt
 2047              	.LVL294:
 2048 079c 0028     		cmp	r0, #0
 2049 079e 5ED1     		bne	.L215
 2050              		.loc 1 596 0
 2051 07a0 0120     		mov	r0, #1
 2052 07a2 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2053              	.LVL295:
 2054 07a6 7249     		ldr	r1, .L381+8
 2055 07a8 FFF7FEFF 		bl	__aeabi_fmul
 2056              	.LVL296:
 2057 07ac 7449     		ldr	r1, .L381+24
 2058 07ae FFF7FEFF 		bl	__aeabi_fcmpge
 2059              	.LVL297:
 2060 07b2 0028     		cmp	r0, #0
 2061 07b4 00D0     		beq	.LCB1773
 2062 07b6 1AE2     		b	.L374	@long jump
 2063              	.LCB1773:
 2064              	.L224:
 2065              		.loc 1 596 0
 2066 07b8 0021     		mov	r1, #0
 2067 07ba 51E0     		b	.L209
 2068              	.L197:
 2069              		.loc 1 596 0
 2070 07bc 0120     		mov	r0, #1
 2071 07be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2072              	.LVL298:
 2073 07c2 6B49     		ldr	r1, .L381+8
 2074 07c4 FFF7FEFF 		bl	__aeabi_fmul
 2075              	.LVL299:
 2076 07c8 6A49     		ldr	r1, .L381+12
 2077 07ca FFF7FEFF 		bl	__aeabi_fcmple
 2078              	.LVL300:
 2079 07ce 0028     		cmp	r0, #0
 2080 07d0 A2D0     		beq	.L200
 2081              	.L194:
 2082              		.loc 1 596 0
 2083 07d2 0120     		mov	r0, #1
 2084 07d4 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2085              	.LVL301:
 2086 07d8 6549     		ldr	r1, .L381+8
 2087 07da FFF7FEFF 		bl	__aeabi_fmul
 2088              	.LVL302:
 2089 07de 6649     		ldr	r1, .L381+16
 2090 07e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 2091              	.LVL303:
 2092 07e4 0028     		cmp	r0, #0
 2093 07e6 00D1     		bne	.LCB1802
 2094 07e8 21E1     		b	.L375	@long jump
 2095              	.LCB1802:
 2096              	.L198:
 2097              		.loc 1 596 0
 2098 07ea 0120     		mov	r0, #1
 2099 07ec FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2100              	.LVL304:
 2101 07f0 5F49     		ldr	r1, .L381+8
 2102 07f2 FFF7FEFF 		bl	__aeabi_fmul
 2103              	.LVL305:
 2104 07f6 6149     		ldr	r1, .L381+20
 2105 07f8 FFF7FEFF 		bl	__aeabi_fcmple
 2106              	.LVL306:
 2107 07fc 0028     		cmp	r0, #0
 2108 07fe 22D0     		beq	.L205
 2109              		.loc 1 596 0
 2110 0800 0120     		mov	r0, #1
 2111 0802 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2112              	.LVL307:
 2113 0806 5A49     		ldr	r1, .L381+8
 2114 0808 FFF7FEFF 		bl	__aeabi_fmul
 2115              	.LVL308:
 2116 080c 0021     		mov	r1, #0
 2117 080e FFF7FEFF 		bl	__aeabi_fcmpge
 2118              	.LVL309:
 2119 0812 0028     		cmp	r0, #0
 2120 0814 17D0     		beq	.L205
 2121              		.loc 1 596 0
 2122 0816 0120     		mov	r0, #1
 2123 0818 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2124              	.LVL310:
 2125 081c 5449     		ldr	r1, .L381+8
 2126 081e FFF7FEFF 		bl	__aeabi_fmul
 2127              	.LVL311:
 2128 0822 5749     		ldr	r1, .L381+24
 2129 0824 FFF7FEFF 		bl	__aeabi_fcmpge
 2130              	.LVL312:
 2131 0828 0028     		cmp	r0, #0
 2132 082a 00D1     		bne	.LCB1836
 2133 082c BCE1     		b	.L220	@long jump
 2134              	.LCB1836:
 2135              		.loc 1 596 0
 2136 082e 0120     		mov	r0, #1
 2137 0830 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2138              	.LVL313:
 2139 0834 4E49     		ldr	r1, .L381+8
 2140 0836 FFF7FEFF 		bl	__aeabi_fmul
 2141              	.LVL314:
 2142 083a 4E49     		ldr	r1, .L381+12
 2143 083c FFF7FEFF 		bl	__aeabi_fcmple
 2144              	.LVL315:
 2145 0840 0028     		cmp	r0, #0
 2146 0842 00D1     		bne	.LCB1847
 2147 0844 B0E1     		b	.L220	@long jump
 2148              	.LCB1847:
 2149              	.L205:
 2150              		.loc 1 596 0
 2151 0846 0120     		mov	r0, #1
 2152 0848 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2153              	.LVL316:
 2154 084c 4849     		ldr	r1, .L381+8
 2155 084e FFF7FEFF 		bl	__aeabi_fmul
 2156              	.LVL317:
 2157 0852 4949     		ldr	r1, .L381+16
 2158 0854 FFF7FEFF 		bl	__aeabi_fcmpgt
 2159              	.LVL318:
 2160 0858 0028     		cmp	r0, #0
 2161 085a 00D1     		bne	.LCB1859
 2162 085c 64E1     		b	.L354	@long jump
 2163              	.LCB1859:
 2164              	.L215:
 2165 085e 7F21     		mov	r1, #127
 2166              	.L209:
 2167              		.loc 1 596 0
 2168 0860 4848     		ldr	r0, .L381+28
 2169 0862 FFF7FEFF 		bl	uart_putchar
 2170              	.LVL319:
 597:../Sources/main.c **** 	// 9 - Servo Value
 598:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2171              		.loc 1 598 0 is_stmt 1
 2172 0866 4848     		ldr	r0, .L381+32
 2173 0868 4849     		ldr	r1, .L381+36
 2174 086a 0068     		ldr	r0, [r0]
 2175 086c FFF7FEFF 		bl	__aeabi_fmul
 2176              	.LVL320:
 2177 0870 0021     		mov	r1, #0
 2178 0872 071C     		add	r7, r0, #0
 2179 0874 FFF7FEFF 		bl	__aeabi_fcmpge
 2180              	.LVL321:
 2181 0878 0028     		cmp	r0, #0
 2182 087a 00D1     		bne	.LCB1877
 2183 087c ACE0     		b	.L355	@long jump
 2184              	.LCB1877:
 2185              		.loc 1 598 0 is_stmt 0
 2186 087e 381C     		add	r0, r7, #0
 2187 0880 FFF7FEFF 		bl	__aeabi_f2d
 2188              	.LVL322:
 2189 0884 394B     		ldr	r3, .L381+4
 2190 0886 384A     		ldr	r2, .L381
 2191 0888 FFF7FEFF 		bl	__aeabi_dadd
 2192              	.LVL323:
 2193 088c FFF7FEFF 		bl	__aeabi_d2iz
 2194              	.LVL324:
 2195 0890 C1B2     		uxtb	r1, r0
 2196              	.L228:
 2197              		.loc 1 598 0
 2198 0892 3C48     		ldr	r0, .L381+28
 2199 0894 FFF7FEFF 		bl	uart_putchar
 2200              	.LVL325:
 599:../Sources/main.c **** 	// 10 - Detected edge type - Left:100, Right:-100, Track: 0, None:50
 600:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2201              		.loc 1 600 0 is_stmt 1
 2202 0898 6579     		ldrb	r5, [r4, #5]
 2203 089a 3221     		mov	r1, #50
 2204 089c 002D     		cmp	r5, #0
 2205 089e 06D0     		beq	.L229
 2206              		.loc 1 600 0 is_stmt 0
 2207 08a0 032D     		cmp	r5, #3
 2208 08a2 00D1     		bne	.LCB1898
 2209 08a4 9FE1     		b	.L259	@long jump
 2210              	.LCB1898:
 2211              		.loc 1 600 0
 2212 08a6 9C21     		mov	r1, #156
 2213 08a8 012D     		cmp	r5, #1
 2214 08aa 00D1     		bne	.LCB1901
 2215 08ac 9DE1     		b	.L376	@long jump
 2216              	.LCB1901:
 2217              	.L229:
 2218              		.loc 1 600 0
 2219 08ae 3548     		ldr	r0, .L381+28
 2220 08b0 FFF7FEFF 		bl	uart_putchar
 2221              	.LVL326:
 601:../Sources/main.c **** 	// 11 - Camera Exposure Time, 1 unit = 0.1 ms
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2222              		.loc 1 602 0 is_stmt 1
 2223 08b4 3649     		ldr	r1, .L381+40
 2224 08b6 0868     		ldr	r0, [r1]
 2225 08b8 FFF7FEFF 		bl	__aeabi_i2f
 2226              	.LVL327:
 2227 08bc 3549     		ldr	r1, .L381+44
 2228 08be FFF7FEFF 		bl	__aeabi_fmul
 2229              	.LVL328:
 2230 08c2 2E49     		ldr	r1, .L381+20
 2231 08c4 051C     		add	r5, r0, #0
 2232 08c6 FFF7FEFF 		bl	__aeabi_fcmple
 2233              	.LVL329:
 2234 08ca 0028     		cmp	r0, #0
 2235 08cc 36D0     		beq	.L238
 2236              		.loc 1 602 0 is_stmt 0
 2237 08ce 281C     		add	r0, r5, #0
 2238 08d0 0021     		mov	r1, #0
 2239 08d2 FFF7FEFF 		bl	__aeabi_fcmpge
 2240              	.LVL330:
 2241 08d6 0028     		cmp	r0, #0
 2242 08d8 66D0     		beq	.L232
 2243              		.loc 1 602 0
 2244 08da 281C     		add	r0, r5, #0
 2245 08dc 2849     		ldr	r1, .L381+24
 2246 08de FFF7FEFF 		bl	__aeabi_fcmpge
 2247              	.LVL331:
 2248 08e2 0028     		cmp	r0, #0
 2249 08e4 5AD0     		beq	.L357
 2250              		.loc 1 602 0
 2251 08e6 281C     		add	r0, r5, #0
 2252 08e8 2249     		ldr	r1, .L381+12
 2253 08ea FFF7FEFF 		bl	__aeabi_fcmple
 2254              	.LVL332:
 2255 08ee 7F26     		mov	r6, #127
 2256 08f0 071E     		sub	r7, r0, #0
 2257 08f2 15D1     		bne	.L236
 2258              		.loc 1 602 0
 2259 08f4 281C     		add	r0, r5, #0
 2260 08f6 0021     		mov	r1, #0
 2261 08f8 FFF7FEFF 		bl	__aeabi_fcmpeq
 2262              	.LVL333:
 2263 08fc 0028     		cmp	r0, #0
 2264 08fe 53D0     		beq	.L232
 2265              		.loc 1 602 0
 2266 0900 002F     		cmp	r7, #0
 2267 0902 64D0     		beq	.L245
 2268              		.loc 1 602 0
 2269 0904 281C     		add	r0, r5, #0
 2270 0906 1C49     		ldr	r1, .L381+16
 2271 0908 FFF7FEFF 		bl	__aeabi_fcmpgt
 2272              	.LVL334:
 2273 090c 0028     		cmp	r0, #0
 2274 090e 07D1     		bne	.L236
 2275              		.loc 1 602 0
 2276 0910 281C     		add	r0, r5, #0
 2277 0912 1B49     		ldr	r1, .L381+24
 2278 0914 FFF7FEFF 		bl	__aeabi_fcmpge
 2279              	.LVL335:
 2280 0918 7E26     		mov	r6, #126
 2281 091a 0028     		cmp	r0, #0
 2282 091c 00D1     		bne	.L236
 2283              	.L244:
 2284              		.loc 1 602 0
 2285 091e 0026     		mov	r6, #0
 2286              	.L236:
 2287              		.loc 1 602 0
 2288 0920 311C     		mov	r1, r6
 2289 0922 1848     		ldr	r0, .L381+28
 2290 0924 FFF7FEFF 		bl	uart_putchar
 2291              	.LVL336:
 603:../Sources/main.c **** 	// 12 - Loop time
 604:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)loop_time);
 2292              		.loc 1 604 0 is_stmt 1
 2293 0928 1B4A     		ldr	r2, .L381+48
 2294 092a 1648     		ldr	r0, .L381+28
 2295 092c 1178     		ldrb	r1, [r2]
 2296 092e FFF7FEFF 		bl	uart_putchar
 2297              	.LVL337:
 605:../Sources/main.c **** 	// 13 - Line Distance
 606:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineDistance);
 2298              		.loc 1 606 0
 2299 0932 217B     		ldrb	r1, [r4, #12]
 2300 0934 1348     		ldr	r0, .L381+28
 2301 0936 FFF7FEFF 		bl	uart_putchar
 2302              	.LVL338:
 607:../Sources/main.c **** }
 2303              		.loc 1 607 0
 2304              		@ sp needed for prologue
 2305 093a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2306              	.L238:
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2307              		.loc 1 602 0
 2308 093c 281C     		add	r0, r5, #0
 2309 093e 0E49     		ldr	r1, .L381+16
 2310 0940 FFF7FEFF 		bl	__aeabi_fcmpgt
 2311              	.LVL339:
 2312 0944 7F26     		mov	r6, #127
 2313 0946 0028     		cmp	r0, #0
 2314 0948 EAD1     		bne	.L236
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2315              		.loc 1 602 0 is_stmt 0
 2316 094a 281C     		add	r0, r5, #0
 2317 094c 0C49     		ldr	r1, .L381+24
 2318 094e FFF7FEFF 		bl	__aeabi_fcmpge
 2319              	.LVL340:
 2320 0952 0028     		cmp	r0, #0
 2321 0954 E3D0     		beq	.L244
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2322              		.loc 1 602 0
 2323 0956 281C     		add	r0, r5, #0
 2324 0958 0649     		ldr	r1, .L381+12
 2325 095a FFF7FEFF 		bl	__aeabi_fcmple
 2326              	.LVL341:
 2327 095e 0028     		cmp	r0, #0
 2328 0960 DED1     		bne	.L236
 2329 0962 DCE7     		b	.L244
 2330              	.L382:
 2331 0964 C046C046 		.align	3
 2332              	.L381:
 2333 0968 00000000 		.word	0
 2334 096c 0000E03F 		.word	1071644672
 2335 0970 00007042 		.word	1114636288
 2336 0974 00800043 		.word	1124106240
 2337 0978 00007F43 		.word	1132396544
 2338 097c 00807E43 		.word	1132363776
 2339 0980 0000FF42 		.word	1124007936
 2340 0984 00C00640 		.word	1074184192
 2341 0988 00000000 		.word	.LANCHOR5
 2342 098c 0000FC42 		.word	1123811328
 2343 0990 00000000 		.word	newExposure
 2344 0994 CDCCCC3C 		.word	1020054733
 2345 0998 00000000 		.word	.LANCHOR6
 2346              	.L357:
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2347              		.loc 1 602 0
 2348 099c 281C     		add	r0, r5, #0
 2349 099e 0021     		mov	r1, #0
 2350 09a0 FFF7FEFF 		bl	__aeabi_fcmpeq
 2351              	.LVL342:
 2352 09a4 0028     		cmp	r0, #0
 2353 09a6 12D1     		bne	.L245
 2354              	.L232:
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2355              		.loc 1 602 0
 2356 09a8 281C     		add	r0, r5, #0
 2357 09aa 0021     		mov	r1, #0
 2358 09ac FFF7FEFF 		bl	__aeabi_fcmpge
 2359              	.LVL343:
 2360 09b0 0028     		cmp	r0, #0
 2361 09b2 C3D0     		beq	.L238
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2362              		.loc 1 602 0
 2363 09b4 281C     		add	r0, r5, #0
 2364 09b6 B049     		ldr	r1, .L383+8
 2365 09b8 FFF7FEFF 		bl	__aeabi_fcmpge
 2366              	.LVL344:
 2367 09bc 0028     		cmp	r0, #0
 2368 09be 06D0     		beq	.L245
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2369              		.loc 1 602 0
 2370 09c0 281C     		add	r0, r5, #0
 2371 09c2 AE49     		ldr	r1, .L383+12
 2372 09c4 FFF7FEFF 		bl	__aeabi_fcmple
 2373              	.LVL345:
 2374 09c8 7F26     		mov	r6, #127
 2375 09ca 0028     		cmp	r0, #0
 2376 09cc A8D1     		bne	.L236
 2377              	.L245:
 602:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2378              		.loc 1 602 0
 2379 09ce 281C     		add	r0, r5, #0
 2380 09d0 FFF7FEFF 		bl	__aeabi_f2iz
 2381              	.LVL346:
 2382 09d4 C6B2     		uxtb	r6, r0
 2383 09d6 A3E7     		b	.L236
 2384              	.L355:
 598:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2385              		.loc 1 598 0 is_stmt 1
 2386 09d8 381C     		add	r0, r7, #0
 2387 09da FFF7FEFF 		bl	__aeabi_f2d
 2388              	.LVL347:
 2389 09de A54B     		ldr	r3, .L383+4
 2390 09e0 A34A     		ldr	r2, .L383
 2391 09e2 FFF7FEFF 		bl	__aeabi_dsub
 2392              	.LVL348:
 2393 09e6 FFF7FEFF 		bl	__aeabi_d2iz
 2394              	.LVL349:
 2395 09ea C1B2     		uxtb	r1, r0
 2396 09ec 51E7     		b	.L228
 2397              	.L350:
 592:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 2398              		.loc 1 592 0
 2399 09ee 0120     		mov	r0, #1
 2400 09f0 FFF7FEFF 		bl	TFC_GetMotorPWM
 2401              	.LVL350:
 2402 09f4 A249     		ldr	r1, .L383+16
 2403 09f6 FFF7FEFF 		bl	__aeabi_fmul
 2404              	.LVL351:
 2405 09fa FFF7FEFF 		bl	__aeabi_f2d
 2406              	.LVL352:
 2407 09fe 9D4B     		ldr	r3, .L383+4
 2408 0a00 9B4A     		ldr	r2, .L383
 2409 0a02 FFF7FEFF 		bl	__aeabi_dsub
 2410              	.LVL353:
 2411 0a06 FFF7FEFF 		bl	__aeabi_d2iz
 2412              	.LVL354:
 2413 0a0a C1B2     		uxtb	r1, r0
 2414 0a0c 84E5     		b	.L161
 2415              	.L349:
 590:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 2416              		.loc 1 590 0
 2417 0a0e 0020     		mov	r0, #0
 2418 0a10 FFF7FEFF 		bl	TFC_GetMotorPWM
 2419              	.LVL355:
 2420 0a14 9A49     		ldr	r1, .L383+16
 2421 0a16 FFF7FEFF 		bl	__aeabi_fmul
 2422              	.LVL356:
 2423 0a1a FFF7FEFF 		bl	__aeabi_f2d
 2424              	.LVL357:
 2425 0a1e 954B     		ldr	r3, .L383+4
 2426 0a20 934A     		ldr	r2, .L383
 2427 0a22 FFF7FEFF 		bl	__aeabi_dsub
 2428              	.LVL358:
 2429 0a26 FFF7FEFF 		bl	__aeabi_d2iz
 2430              	.LVL359:
 2431 0a2a C1B2     		uxtb	r1, r0
 2432 0a2c 56E5     		b	.L158
 2433              	.L375:
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2434              		.loc 1 596 0
 2435 0a2e 0120     		mov	r0, #1
 2436 0a30 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2437              	.LVL360:
 2438 0a34 9349     		ldr	r1, .L383+20
 2439 0a36 FFF7FEFF 		bl	__aeabi_fmul
 2440              	.LVL361:
 2441 0a3a 8F49     		ldr	r1, .L383+8
 2442 0a3c FFF7FEFF 		bl	__aeabi_fcmpge
 2443              	.LVL362:
 2444 0a40 0028     		cmp	r0, #0
 2445 0a42 00D1     		bne	.LCB2128
 2446 0a44 D1E6     		b	.L198	@long jump
 2447              	.LCB2128:
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2448              		.loc 1 596 0 is_stmt 0
 2449 0a46 0120     		mov	r0, #1
 2450 0a48 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2451              	.LVL363:
 2452 0a4c CDE6     		b	.L198
 2453              	.L373:
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2454              		.loc 1 594 0 is_stmt 1
 2455 0a4e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2456              	.LVL364:
 2457 0a52 8C49     		ldr	r1, .L383+20
 2458 0a54 FFF7FEFF 		bl	__aeabi_fmul
 2459              	.LVL365:
 2460 0a58 8749     		ldr	r1, .L383+8
 2461 0a5a FFF7FEFF 		bl	__aeabi_fcmpge
 2462              	.LVL366:
 2463 0a5e 0028     		cmp	r0, #0
 2464 0a60 00D1     		bne	.LCB2145
 2465 0a62 FAE5     		b	.L166	@long jump
 2466              	.LCB2145:
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2467              		.loc 1 594 0 is_stmt 0
 2468 0a64 0020     		mov	r0, #0
 2469 0a66 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2470              	.LVL367:
 2471 0a6a F6E5     		b	.L166
 2472              	.L371:
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2473              		.loc 1 588 0 is_stmt 1
 2474 0a6c 0120     		mov	r0, #1
 2475 0a6e 8227     		mov	r7, #130
 2476 0a70 FFF7FEFF 		bl	getSpeed
 2477              	.LVL368:
 2478 0a74 F905     		lsl	r1, r7, #23
 2479 0a76 FFF7FEFF 		bl	__aeabi_fmul
 2480              	.LVL369:
 2481 0a7a 7F49     		ldr	r1, .L383+8
 2482 0a7c FFF7FEFF 		bl	__aeabi_fcmpge
 2483              	.LVL370:
 2484 0a80 0028     		cmp	r0, #0
 2485 0a82 00D1     		bne	.LCB2164
 2486 0a84 CCE4     		b	.L128	@long jump
 2487              	.LCB2164:
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2488              		.loc 1 588 0 is_stmt 0
 2489 0a86 0120     		mov	r0, #1
 2490 0a88 FFF7FEFF 		bl	getSpeed
 2491              	.LVL371:
 2492 0a8c C8E4     		b	.L128
 2493              	.L369:
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2494              		.loc 1 586 0 is_stmt 1
 2495 0a8e 8226     		mov	r6, #130
 2496 0a90 FFF7FEFF 		bl	getSpeed
 2497              	.LVL372:
 2498 0a94 F105     		lsl	r1, r6, #23
 2499 0a96 FFF7FEFF 		bl	__aeabi_fmul
 2500              	.LVL373:
 2501 0a9a 7749     		ldr	r1, .L383+8
 2502 0a9c FFF7FEFF 		bl	__aeabi_fcmpge
 2503              	.LVL374:
 2504 0aa0 0028     		cmp	r0, #0
 2505 0aa2 01D1     		bne	.LCB2182
 2506 0aa4 FFF7A9FB 		bl	.L96	@far jump
 2507              	.LCB2182:
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2508              		.loc 1 586 0 is_stmt 0
 2509 0aa8 0020     		mov	r0, #0
 2510 0aaa FFF7FEFF 		bl	getSpeed
 2511              	.LVL375:
 2512 0aae FFF7A4FB 		bl	.L96	@ far jump
 2513              	.L346:
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2514              		.loc 1 586 0
 2515 0ab2 0020     		mov	r0, #0
 2516 0ab4 FFF7FEFF 		bl	getSpeed
 2517              	.LVL376:
 2518 0ab8 8223     		mov	r3, #130
 2519 0aba D905     		lsl	r1, r3, #23
 2520 0abc FFF7FEFF 		bl	__aeabi_fmul
 2521              	.LVL377:
 2522 0ac0 6D49     		ldr	r1, .L383+8
 2523 0ac2 FFF7FEFF 		bl	__aeabi_fcmpge
 2524              	.LVL378:
 2525 0ac6 0028     		cmp	r0, #0
 2526 0ac8 01D1     		bne	.LCB2201
 2527 0aca FFF762FB 		bl	.L122	@far jump
 2528              	.LCB2201:
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2529              		.loc 1 586 0
 2530 0ace 0020     		mov	r0, #0
 2531 0ad0 FFF7FEFF 		bl	getSpeed
 2532              	.LVL379:
 2533 0ad4 8221     		mov	r1, #130
 2534 0ad6 C905     		lsl	r1, r1, #23
 2535 0ad8 FFF7FEFF 		bl	__aeabi_fmul
 2536              	.LVL380:
 2537 0adc 6749     		ldr	r1, .L383+12
 2538 0ade FFF7FEFF 		bl	__aeabi_fcmple
 2539              	.LVL381:
 2540 0ae2 0028     		cmp	r0, #0
 2541 0ae4 01D0     		beq	.LCB2213
 2542 0ae6 FFF7CAFB 		bl	.L113	@far jump
 2543              	.LCB2213:
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2544              		.loc 1 586 0
 2545 0aea 0021     		mov	r1, #0
 2546 0aec FFF7C8FB 		bl	.L107	@ far jump
 2547              	.L348:
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2548              		.loc 1 588 0 is_stmt 1
 2549 0af0 0120     		mov	r0, #1
 2550 0af2 8226     		mov	r6, #130
 2551 0af4 FFF7FEFF 		bl	getSpeed
 2552              	.LVL382:
 2553 0af8 F105     		lsl	r1, r6, #23
 2554 0afa FFF7FEFF 		bl	__aeabi_fmul
 2555              	.LVL383:
 2556 0afe 5E49     		ldr	r1, .L383+8
 2557 0b00 FFF7FEFF 		bl	__aeabi_fcmpge
 2558              	.LVL384:
 2559 0b04 0028     		cmp	r0, #0
 2560 0b06 00D1     		bne	.LCB2230
 2561 0b08 40E4     		b	.L154	@long jump
 2562              	.LCB2230:
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2563              		.loc 1 588 0 is_stmt 0
 2564 0b0a 0120     		mov	r0, #1
 2565 0b0c FFF7FEFF 		bl	getSpeed
 2566              	.LVL385:
 2567 0b10 8222     		mov	r2, #130
 2568 0b12 D105     		lsl	r1, r2, #23
 2569 0b14 FFF7FEFF 		bl	__aeabi_fmul
 2570              	.LVL386:
 2571 0b18 5849     		ldr	r1, .L383+12
 2572 0b1a FFF7FEFF 		bl	__aeabi_fcmple
 2573              	.LVL387:
 2574 0b1e 0028     		cmp	r0, #0
 2575 0b20 00D0     		beq	.LCB2242
 2576 0b22 BCE4     		b	.L145	@long jump
 2577              	.LCB2242:
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2578              		.loc 1 588 0
 2579 0b24 0021     		mov	r1, #0
 2580 0b26 BBE4     		b	.L139
 2581              	.L354:
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2582              		.loc 1 596 0 is_stmt 1
 2583 0b28 0120     		mov	r0, #1
 2584 0b2a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2585              	.LVL388:
 2586 0b2e 5549     		ldr	r1, .L383+20
 2587 0b30 FFF7FEFF 		bl	__aeabi_fmul
 2588              	.LVL389:
 2589 0b34 5049     		ldr	r1, .L383+8
 2590 0b36 FFF7FEFF 		bl	__aeabi_fcmpge
 2591              	.LVL390:
 2592 0b3a 0028     		cmp	r0, #0
 2593 0b3c 00D1     		bne	.LCB2258
 2594 0b3e 3BE6     		b	.L224	@long jump
 2595              	.LCB2258:
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2596              		.loc 1 596 0 is_stmt 0
 2597 0b40 0120     		mov	r0, #1
 2598 0b42 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2599              	.LVL391:
 2600 0b46 4F49     		ldr	r1, .L383+20
 2601 0b48 FFF7FEFF 		bl	__aeabi_fmul
 2602              	.LVL392:
 2603 0b4c 4B49     		ldr	r1, .L383+12
 2604 0b4e FFF7FEFF 		bl	__aeabi_fcmple
 2605              	.LVL393:
 2606 0b52 0028     		cmp	r0, #0
 2607 0b54 00D0     		beq	.LCB2269
 2608 0b56 82E6     		b	.L215	@long jump
 2609              	.LCB2269:
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2610              		.loc 1 596 0
 2611 0b58 0021     		mov	r1, #0
 2612 0b5a 81E6     		b	.L209
 2613              	.L352:
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2614              		.loc 1 594 0 is_stmt 1
 2615 0b5c 0020     		mov	r0, #0
 2616 0b5e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2617              	.LVL394:
 2618 0b62 4849     		ldr	r1, .L383+20
 2619 0b64 FFF7FEFF 		bl	__aeabi_fmul
 2620              	.LVL395:
 2621 0b68 4349     		ldr	r1, .L383+8
 2622 0b6a FFF7FEFF 		bl	__aeabi_fcmpge
 2623              	.LVL396:
 2624 0b6e 0028     		cmp	r0, #0
 2625 0b70 00D1     		bne	.LCB2285
 2626 0b72 45E5     		b	.L192	@long jump
 2627              	.LCB2285:
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2628              		.loc 1 594 0 is_stmt 0
 2629 0b74 0020     		mov	r0, #0
 2630 0b76 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2631              	.LVL397:
 2632 0b7a 4249     		ldr	r1, .L383+20
 2633 0b7c FFF7FEFF 		bl	__aeabi_fmul
 2634              	.LVL398:
 2635 0b80 3E49     		ldr	r1, .L383+12
 2636 0b82 FFF7FEFF 		bl	__aeabi_fcmple
 2637              	.LVL399:
 2638 0b86 0028     		cmp	r0, #0
 2639 0b88 00D0     		beq	.LCB2296
 2640 0b8a A0E5     		b	.L183	@long jump
 2641              	.LCB2296:
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2642              		.loc 1 594 0
 2643 0b8c 0021     		mov	r1, #0
 2644 0b8e 9FE5     		b	.L177
 2645              	.L118:
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2646              		.loc 1 586 0 is_stmt 1
 2647 0b90 0020     		mov	r0, #0
 2648 0b92 8227     		mov	r7, #130
 2649 0b94 FFF7FEFF 		bl	getSpeed
 2650              	.LVL400:
 2651 0b98 F905     		lsl	r1, r7, #23
 2652 0b9a FFF7FEFF 		bl	__aeabi_fmul
 2653              	.LVL401:
 2654 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 2655              	.LVL402:
 2656 0ba2 C1B2     		uxtb	r1, r0
 2657 0ba4 FFF76CFB 		bl	.L107	@ far jump
 2658              	.L220:
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2659              		.loc 1 596 0
 2660 0ba8 0120     		mov	r0, #1
 2661 0baa FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2662              	.LVL403:
 2663 0bae 3549     		ldr	r1, .L383+20
 2664 0bb0 FFF7FEFF 		bl	__aeabi_fmul
 2665              	.LVL404:
 2666 0bb4 FFF7FEFF 		bl	__aeabi_f2iz
 2667              	.LVL405:
 2668 0bb8 C1B2     		uxtb	r1, r0
 2669 0bba 51E6     		b	.L209
 2670              	.L188:
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2671              		.loc 1 594 0
 2672 0bbc 0020     		mov	r0, #0
 2673 0bbe FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2674              	.LVL406:
 2675 0bc2 3049     		ldr	r1, .L383+20
 2676 0bc4 FFF7FEFF 		bl	__aeabi_fmul
 2677              	.LVL407:
 2678 0bc8 FFF7FEFF 		bl	__aeabi_f2iz
 2679              	.LVL408:
 2680 0bcc C1B2     		uxtb	r1, r0
 2681 0bce 7FE5     		b	.L177
 2682              	.L150:
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2683              		.loc 1 588 0
 2684 0bd0 0120     		mov	r0, #1
 2685 0bd2 FFF7FEFF 		bl	getSpeed
 2686              	.LVL409:
 2687 0bd6 8223     		mov	r3, #130
 2688 0bd8 D905     		lsl	r1, r3, #23
 2689 0bda FFF7FEFF 		bl	__aeabi_fmul
 2690              	.LVL410:
 2691 0bde FFF7FEFF 		bl	__aeabi_f2iz
 2692              	.LVL411:
 2693 0be2 C1B2     		uxtb	r1, r0
 2694 0be4 5CE4     		b	.L139
 2695              	.L259:
 600:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2696              		.loc 1 600 0
 2697 0be6 0021     		mov	r1, #0
 2698 0be8 61E6     		b	.L229
 2699              	.L376:
 2700 0bea 6421     		mov	r1, #100
 2701 0bec 5FE6     		b	.L229
 2702              	.L374:
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2703              		.loc 1 596 0
 2704 0bee 0120     		mov	r0, #1
 2705 0bf0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2706              	.LVL412:
 2707 0bf4 2349     		ldr	r1, .L383+20
 2708 0bf6 FFF7FEFF 		bl	__aeabi_fmul
 2709              	.LVL413:
 2710 0bfa 2049     		ldr	r1, .L383+12
 2711 0bfc FFF7FEFF 		bl	__aeabi_fcmple
 2712              	.LVL414:
 2713 0c00 7E21     		mov	r1, #126
 2714 0c02 0028     		cmp	r0, #0
 2715 0c04 00D0     		beq	.LCB2381
 2716 0c06 2BE6     		b	.L209	@long jump
 2717              	.LCB2381:
 596:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2718              		.loc 1 596 0 is_stmt 0
 2719 0c08 0021     		mov	r1, #0
 2720 0c0a 29E6     		b	.L209
 2721              	.L368:
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2722              		.loc 1 586 0 is_stmt 1
 2723 0c0c 0020     		mov	r0, #0
 2724 0c0e FFF7FEFF 		bl	getSpeed
 2725              	.LVL415:
 2726 0c12 8223     		mov	r3, #130
 2727 0c14 D905     		lsl	r1, r3, #23
 2728 0c16 FFF7FEFF 		bl	__aeabi_fmul
 2729              	.LVL416:
 2730 0c1a 1849     		ldr	r1, .L383+12
 2731 0c1c FFF7FEFF 		bl	__aeabi_fcmple
 2732              	.LVL417:
 2733 0c20 7E21     		mov	r1, #126
 2734 0c22 0028     		cmp	r0, #0
 2735 0c24 01D0     		beq	.LCB2399
 2736 0c26 FFF72BFB 		bl	.L107	@far jump
 2737              	.LCB2399:
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2738              		.loc 1 586 0 is_stmt 0
 2739 0c2a 0021     		mov	r1, #0
 2740 0c2c FFF728FB 		bl	.L107	@ far jump
 2741              	.L370:
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2742              		.loc 1 588 0 is_stmt 1
 2743 0c30 0120     		mov	r0, #1
 2744 0c32 8226     		mov	r6, #130
 2745 0c34 FFF7FEFF 		bl	getSpeed
 2746              	.LVL418:
 2747 0c38 F105     		lsl	r1, r6, #23
 2748 0c3a FFF7FEFF 		bl	__aeabi_fmul
 2749              	.LVL419:
 2750 0c3e 0F49     		ldr	r1, .L383+12
 2751 0c40 FFF7FEFF 		bl	__aeabi_fcmple
 2752              	.LVL420:
 2753 0c44 7E21     		mov	r1, #126
 2754 0c46 0028     		cmp	r0, #0
 2755 0c48 00D0     		beq	.LCB2417
 2756 0c4a 29E4     		b	.L139	@long jump
 2757              	.LCB2417:
 588:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2758              		.loc 1 588 0 is_stmt 0
 2759 0c4c 0021     		mov	r1, #0
 2760 0c4e 27E4     		b	.L139
 2761              	.L372:
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2762              		.loc 1 594 0 is_stmt 1
 2763 0c50 0020     		mov	r0, #0
 2764 0c52 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2765              	.LVL421:
 2766 0c56 0B49     		ldr	r1, .L383+20
 2767 0c58 FFF7FEFF 		bl	__aeabi_fmul
 2768              	.LVL422:
 2769 0c5c 0749     		ldr	r1, .L383+12
 2770 0c5e FFF7FEFF 		bl	__aeabi_fcmple
 2771              	.LVL423:
 2772 0c62 7E21     		mov	r1, #126
 2773 0c64 0028     		cmp	r0, #0
 2774 0c66 00D0     		beq	.LCB2434
 2775 0c68 32E5     		b	.L177	@long jump
 2776              	.LCB2434:
 594:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2777              		.loc 1 594 0 is_stmt 0
 2778 0c6a 0021     		mov	r1, #0
 2779 0c6c 30E5     		b	.L177
 2780              	.L384:
 2781 0c6e C046     		.align	3
 2782              	.L383:
 2783 0c70 00000000 		.word	0
 2784 0c74 0000E03F 		.word	1071644672
 2785 0c78 0000FF42 		.word	1124007936
 2786 0c7c 00800043 		.word	1124106240
 2787 0c80 0000FC42 		.word	1123811328
 2788 0c84 00007042 		.word	1114636288
 2789              		.cfi_endproc
 2790              	.LFE10:
 2792              		.global	__aeabi_ui2f
 2793              		.section	.text.BluetoothSetSpeed,"ax",%progbits
 2794              		.align	2
 2795              		.global	BluetoothSetSpeed
 2796              		.code	16
 2797              		.thumb_func
 2799              	BluetoothSetSpeed:
 2800              	.LFB12:
 608:../Sources/main.c **** 
 609:../Sources/main.c **** void telemetryReadData(){
 610:../Sources/main.c **** 	
 611:../Sources/main.c **** 	if(count==0){
 612:../Sources/main.c **** 		//if something is on the UART, get it and put it in received_byte
 613:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 614:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 615:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 616:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 618:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 619:../Sources/main.c **** 			count++;
 620:../Sources/main.c **** 		}
 621:../Sources/main.c **** 	}
 622:../Sources/main.c **** 	else if(count>0){
 623:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 624:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 625:../Sources/main.c **** 			count=0;
 626:../Sources/main.c **** 		}
 627:../Sources/main.c **** 	}
 628:../Sources/main.c **** 	
 629:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 630:../Sources/main.c **** 		switch(received_byte1){
 631:../Sources/main.c **** 		case 255: //SPEED
 632:../Sources/main.c **** 			BluetoothSetSpeed(received_byte2);
 633:../Sources/main.c **** 			break;
 634:../Sources/main.c **** 		case 251: //LED
 635:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 636:../Sources/main.c **** 			break;
 637:../Sources/main.c **** 		}
 638:../Sources/main.c **** 		//received_byte1=0;
 639:../Sources/main.c **** 		//received_byte2=0;
 640:../Sources/main.c **** 	}
 641:../Sources/main.c **** 	
 642:../Sources/main.c **** }
 643:../Sources/main.c **** 
 644:../Sources/main.c **** void BluetoothSetSpeed(uint8_t i){
 2801              		.loc 1 644 0 is_stmt 1
 2802              		.cfi_startproc
 2803              	.LVL424:
 2804 0000 38B5     		push	{r3, r4, r5, lr}
 2805              	.LCFI12:
 2806              		.cfi_def_cfa_offset 16
 2807              		.cfi_offset 3, -16
 2808              		.cfi_offset 4, -12
 2809              		.cfi_offset 5, -8
 2810              		.cfi_offset 14, -4
 645:../Sources/main.c **** 	max_speed_percent=i;
 2811              		.loc 1 645 0
 2812 0002 FFF7FEFF 		bl	__aeabi_ui2f
 2813              	.LVL425:
 646:../Sources/main.c **** 		if(max_speed_percent>100){
 2814              		.loc 1 646 0
 2815 0006 064C     		ldr	r4, .L389
 645:../Sources/main.c **** 	max_speed_percent=i;
 2816              		.loc 1 645 0
 2817 0008 051C     		add	r5, r0, #0
 2818              		.loc 1 646 0
 2819 000a 211C     		add	r1, r4, #0
 2820 000c FFF7FEFF 		bl	__aeabi_fcmpgt
 2821              	.LVL426:
 647:../Sources/main.c **** 			max_speed_percent=100;
 2822              		.loc 1 647 0
 2823 0010 044B     		ldr	r3, .L389+4
 646:../Sources/main.c **** 		if(max_speed_percent>100){
 2824              		.loc 1 646 0
 2825 0012 0028     		cmp	r0, #0
 2826 0014 01D0     		beq	.L388
 2827              		.loc 1 647 0
 2828 0016 1C60     		str	r4, [r3]
 2829              	.L385:
 648:../Sources/main.c **** 		}
 649:../Sources/main.c **** }
 2830              		.loc 1 649 0
 2831              		@ sp needed for prologue
 2832 0018 38BD     		pop	{r3, r4, r5, pc}
 2833              	.L388:
 645:../Sources/main.c **** 	max_speed_percent=i;
 2834              		.loc 1 645 0
 2835 001a 1D60     		str	r5, [r3]
 2836 001c FCE7     		b	.L385
 2837              	.L390:
 2838 001e C046     		.align	2
 2839              	.L389:
 2840 0020 0000C842 		.word	1120403456
 2841 0024 00000000 		.word	.LANCHOR7
 2842              		.cfi_endproc
 2843              	.LFE12:
 2845              		.section	.text.BluetoothSetLED,"ax",%progbits
 2846              		.align	2
 2847              		.global	BluetoothSetLED
 2848              		.code	16
 2849              		.thumb_func
 2851              	BluetoothSetLED:
 2852              	.LFB13:
 650:../Sources/main.c **** 
 651:../Sources/main.c **** void BluetoothSetLED(uint8_t i){	
 2853              		.loc 1 651 0
 2854              		.cfi_startproc
 2855              	.LVL427:
 2856 0000 00B5     		push	{lr}
 2857              	.LCFI13:
 2858              		.cfi_def_cfa_offset 4
 2859              		.cfi_offset 14, -4
 652:../Sources/main.c **** 		switch(i){
 2860              		.loc 1 652 0
 2861 0002 0228     		cmp	r0, #2
 2862 0004 43D0     		beq	.L394
 2863 0006 17D8     		bhi	.L397
 2864 0008 0128     		cmp	r0, #1
 2865 000a 4CD0     		beq	.L402
 2866              	.L392:
 653:../Sources/main.c **** 			case 1: 
 654:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 655:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 656:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 657:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 658:../Sources/main.c **** 				break;
 659:../Sources/main.c **** 			case 2:
 660:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 661:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 662:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 663:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 664:../Sources/main.c **** 				break;
 665:../Sources/main.c **** 			case 3:
 666:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 667:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 668:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 669:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);			
 670:../Sources/main.c **** 				break;
 671:../Sources/main.c **** 			case 4: 
 672:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 673:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 674:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 675:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 676:../Sources/main.c **** 				break;
 677:../Sources/main.c **** 			default:
 678:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2867              		.loc 1 678 0
 2868 000c 294B     		ldr	r3, .L403
 2869 000e 8022     		mov	r2, #128
 2870 0010 9968     		ldr	r1, [r3, #8]
 2871 0012 5000     		lsl	r0, r2, #1
 2872              	.LVL428:
 2873 0014 0843     		orr	r0, r1
 2874 0016 9860     		str	r0, [r3, #8]
 2875              	.L400:
 679:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2876              		.loc 1 679 0
 2877 0018 9968     		ldr	r1, [r3, #8]
 2878 001a 8022     		mov	r2, #128
 2879 001c 9000     		lsl	r0, r2, #2
 2880 001e 0843     		orr	r0, r1
 2881 0020 9860     		str	r0, [r3, #8]
 2882              	.L401:
 680:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2883              		.loc 1 680 0
 2884 0022 9968     		ldr	r1, [r3, #8]
 2885 0024 8022     		mov	r2, #128
 2886 0026 D000     		lsl	r0, r2, #3
 2887 0028 0843     		orr	r0, r1
 2888 002a 9860     		str	r0, [r3, #8]
 2889              	.L399:
 681:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 2890              		.loc 1 681 0
 2891 002c 9968     		ldr	r1, [r3, #8]
 2892 002e 8022     		mov	r2, #128
 2893 0030 1001     		lsl	r0, r2, #4
 2894 0032 0843     		orr	r0, r1
 2895 0034 9860     		str	r0, [r3, #8]
 2896              	.L391:
 682:../Sources/main.c **** 			}
 683:../Sources/main.c **** }
 2897              		.loc 1 683 0
 2898              		@ sp needed for prologue
 2899 0036 00BD     		pop	{pc}
 2900              	.LVL429:
 2901              	.L397:
 652:../Sources/main.c **** 		switch(i){
 2902              		.loc 1 652 0
 2903 0038 0328     		cmp	r0, #3
 2904 003a 17D0     		beq	.L395
 2905 003c 0428     		cmp	r0, #4
 2906 003e E5D1     		bne	.L392
 672:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2907              		.loc 1 672 0
 2908 0040 1C4B     		ldr	r3, .L403
 2909 0042 8022     		mov	r2, #128
 2910 0044 9968     		ldr	r1, [r3, #8]
 2911 0046 5000     		lsl	r0, r2, #1
 2912              	.LVL430:
 2913 0048 0843     		orr	r0, r1
 2914 004a 9860     		str	r0, [r3, #8]
 673:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2915              		.loc 1 673 0
 2916 004c 9968     		ldr	r1, [r3, #8]
 2917 004e 8022     		mov	r2, #128
 2918 0050 9000     		lsl	r0, r2, #2
 2919 0052 0843     		orr	r0, r1
 2920 0054 9860     		str	r0, [r3, #8]
 674:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2921              		.loc 1 674 0
 2922 0056 9968     		ldr	r1, [r3, #8]
 2923 0058 8022     		mov	r2, #128
 2924 005a D000     		lsl	r0, r2, #3
 2925 005c 0843     		orr	r0, r1
 2926 005e 9860     		str	r0, [r3, #8]
 675:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 2927              		.loc 1 675 0
 2928 0060 5968     		ldr	r1, [r3, #4]
 2929 0062 8022     		mov	r2, #128
 2930 0064 1001     		lsl	r0, r2, #4
 2931 0066 0843     		orr	r0, r1
 2932 0068 5860     		str	r0, [r3, #4]
 676:../Sources/main.c **** 				break;
 2933              		.loc 1 676 0
 2934 006a E4E7     		b	.L391
 2935              	.LVL431:
 2936              	.L395:
 666:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2937              		.loc 1 666 0
 2938 006c 114B     		ldr	r3, .L403
 2939 006e 8022     		mov	r2, #128
 2940 0070 9968     		ldr	r1, [r3, #8]
 2941 0072 5000     		lsl	r0, r2, #1
 2942              	.LVL432:
 2943 0074 0843     		orr	r0, r1
 2944 0076 9860     		str	r0, [r3, #8]
 667:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2945              		.loc 1 667 0
 2946 0078 9968     		ldr	r1, [r3, #8]
 2947 007a 8022     		mov	r2, #128
 2948 007c 9000     		lsl	r0, r2, #2
 2949 007e 0843     		orr	r0, r1
 2950 0080 9860     		str	r0, [r3, #8]
 668:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 2951              		.loc 1 668 0
 2952 0082 5968     		ldr	r1, [r3, #4]
 2953 0084 8022     		mov	r2, #128
 2954 0086 D000     		lsl	r0, r2, #3
 2955 0088 0843     		orr	r0, r1
 2956 008a 5860     		str	r0, [r3, #4]
 2957 008c CEE7     		b	.L399
 2958              	.LVL433:
 2959              	.L394:
 660:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2960              		.loc 1 660 0
 2961 008e 094B     		ldr	r3, .L403
 2962 0090 8022     		mov	r2, #128
 2963 0092 9968     		ldr	r1, [r3, #8]
 2964 0094 5000     		lsl	r0, r2, #1
 2965              	.LVL434:
 2966 0096 0843     		orr	r0, r1
 2967 0098 9860     		str	r0, [r3, #8]
 661:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 2968              		.loc 1 661 0
 2969 009a 5968     		ldr	r1, [r3, #4]
 2970 009c 8022     		mov	r2, #128
 2971 009e 9000     		lsl	r0, r2, #2
 2972 00a0 0843     		orr	r0, r1
 2973 00a2 5860     		str	r0, [r3, #4]
 2974 00a4 BDE7     		b	.L401
 2975              	.LVL435:
 2976              	.L402:
 654:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 2977              		.loc 1 654 0
 2978 00a6 034B     		ldr	r3, .L403
 2979 00a8 8022     		mov	r2, #128
 2980 00aa 5968     		ldr	r1, [r3, #4]
 2981 00ac 5000     		lsl	r0, r2, #1
 2982              	.LVL436:
 2983 00ae 0843     		orr	r0, r1
 2984 00b0 5860     		str	r0, [r3, #4]
 2985 00b2 B1E7     		b	.L400
 2986              	.L404:
 2987              		.align	2
 2988              	.L403:
 2989 00b4 40F00F40 		.word	1074786368
 2990              		.cfi_endproc
 2991              	.LFE13:
 2993              		.section	.text.telemetryReadData,"ax",%progbits
 2994              		.align	2
 2995              		.global	telemetryReadData
 2996              		.code	16
 2997              		.thumb_func
 2999              	telemetryReadData:
 3000              	.LFB11:
 609:../Sources/main.c **** void telemetryReadData(){
 3001              		.loc 1 609 0
 3002              		.cfi_startproc
 3003 0000 38B5     		push	{r3, r4, r5, lr}
 3004              	.LCFI14:
 3005              		.cfi_def_cfa_offset 16
 3006              		.cfi_offset 3, -16
 3007              		.cfi_offset 4, -12
 3008              		.cfi_offset 5, -8
 3009              		.cfi_offset 14, -4
 611:../Sources/main.c **** 	if(count==0){
 3010              		.loc 1 611 0
 3011 0002 284C     		ldr	r4, .L423
 613:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3012              		.loc 1 613 0
 3013 0004 2848     		ldr	r0, .L423+4
 611:../Sources/main.c **** 	if(count==0){
 3014              		.loc 1 611 0
 3015 0006 2378     		ldrb	r3, [r4]
 3016 0008 002B     		cmp	r3, #0
 3017 000a 10D0     		beq	.L421
 623:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3018              		.loc 1 623 0
 3019 000c FFF7FEFF 		bl	uart_getchar_present
 3020              	.LVL437:
 3021 0010 0028     		cmp	r0, #0
 3022 0012 3BD1     		bne	.L409
 3023              	.L420:
 3024 0014 254A     		ldr	r2, .L423+8
 3025 0016 1578     		ldrb	r5, [r2]
 3026              	.L408:
 629:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3027              		.loc 1 629 0
 3028 0018 002D     		cmp	r5, #0
 3029 001a 07D0     		beq	.L405
 629:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3030              		.loc 1 629 0 is_stmt 0
 3031 001c 244C     		ldr	r4, .L423+12
 3032 001e 2078     		ldrb	r0, [r4]
 3033 0020 0028     		cmp	r0, #0
 3034 0022 03D0     		beq	.L405
 630:../Sources/main.c **** 		switch(received_byte1){
 3035              		.loc 1 630 0 is_stmt 1
 3036 0024 FB2D     		cmp	r5, #251
 3037 0026 39D0     		beq	.L413
 3038 0028 FF2D     		cmp	r5, #255
 3039 002a 23D0     		beq	.L422
 3040              	.L405:
 642:../Sources/main.c **** }
 3041              		.loc 1 642 0
 3042              		@ sp needed for prologue
 3043 002c 38BD     		pop	{r3, r4, r5, pc}
 3044              	.L421:
 613:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3045              		.loc 1 613 0
 3046 002e FFF7FEFF 		bl	uart_getchar_present
 3047              	.LVL438:
 3048 0032 0028     		cmp	r0, #0
 3049 0034 EED0     		beq	.L420
 614:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3050              		.loc 1 614 0
 3051 0036 1C48     		ldr	r0, .L423+4
 3052 0038 FFF7FEFF 		bl	uart_getchar
 3053              	.LVL439:
 3054 003c 1B4B     		ldr	r3, .L423+8
 615:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3055              		.loc 1 615 0
 3056 003e 1D4A     		ldr	r2, .L423+16
 614:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3057              		.loc 1 614 0
 3058 0040 1870     		strb	r0, [r3]
 615:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3059              		.loc 1 615 0
 3060 0042 8021     		mov	r1, #128
 614:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3061              		.loc 1 614 0
 3062 0044 051C     		mov	r5, r0
 615:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3063              		.loc 1 615 0
 3064 0046 5068     		ldr	r0, [r2, #4]
 3065 0048 4B00     		lsl	r3, r1, #1
 3066 004a 0343     		orr	r3, r0
 3067 004c 5360     		str	r3, [r2, #4]
 616:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 3068              		.loc 1 616 0
 3069 004e 5068     		ldr	r0, [r2, #4]
 3070 0050 8021     		mov	r1, #128
 3071 0052 8B00     		lsl	r3, r1, #2
 3072 0054 0343     		orr	r3, r0
 3073 0056 5360     		str	r3, [r2, #4]
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 3074              		.loc 1 617 0
 3075 0058 5068     		ldr	r0, [r2, #4]
 3076 005a 8021     		mov	r1, #128
 3077 005c CB00     		lsl	r3, r1, #3
 3078 005e 0343     		orr	r3, r0
 3079 0060 5360     		str	r3, [r2, #4]
 618:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 3080              		.loc 1 618 0
 3081 0062 5068     		ldr	r0, [r2, #4]
 3082 0064 8021     		mov	r1, #128
 3083 0066 0B01     		lsl	r3, r1, #4
 3084 0068 0343     		orr	r3, r0
 3085 006a 5360     		str	r3, [r2, #4]
 619:../Sources/main.c **** 			count++;
 3086              		.loc 1 619 0
 3087 006c 2278     		ldrb	r2, [r4]
 3088 006e 0132     		add	r2, r2, #1
 3089 0070 2270     		strb	r2, [r4]
 3090 0072 D1E7     		b	.L408
 3091              	.L422:
 3092              	.LVL440:
 3093              	.LBB28:
 3094              	.LBB29:
 645:../Sources/main.c **** 	max_speed_percent=i;
 3095              		.loc 1 645 0
 3096 0074 FFF7FEFF 		bl	__aeabi_ui2f
 3097              	.LVL441:
 646:../Sources/main.c **** 		if(max_speed_percent>100){
 3098              		.loc 1 646 0
 3099 0078 0F4D     		ldr	r5, .L423+20
 645:../Sources/main.c **** 	max_speed_percent=i;
 3100              		.loc 1 645 0
 3101 007a 104C     		ldr	r4, .L423+24
 646:../Sources/main.c **** 		if(max_speed_percent>100){
 3102              		.loc 1 646 0
 3103 007c 291C     		add	r1, r5, #0
 645:../Sources/main.c **** 	max_speed_percent=i;
 3104              		.loc 1 645 0
 3105 007e 2060     		str	r0, [r4]
 646:../Sources/main.c **** 		if(max_speed_percent>100){
 3106              		.loc 1 646 0
 3107 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 3108              	.LVL442:
 3109 0084 0028     		cmp	r0, #0
 3110 0086 D1D0     		beq	.L405
 647:../Sources/main.c **** 			max_speed_percent=100;
 3111              		.loc 1 647 0
 3112 0088 2560     		str	r5, [r4]
 3113 008a CFE7     		b	.L405
 3114              	.L409:
 3115              	.LBE29:
 3116              	.LBE28:
 624:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 3117              		.loc 1 624 0
 3118 008c 0648     		ldr	r0, .L423+4
 3119 008e FFF7FEFF 		bl	uart_getchar
 3120              	.LVL443:
 3121 0092 0749     		ldr	r1, .L423+12
 3122 0094 0870     		strb	r0, [r1]
 625:../Sources/main.c **** 			count=0;
 3123              		.loc 1 625 0
 3124 0096 0020     		mov	r0, #0
 3125 0098 2070     		strb	r0, [r4]
 3126 009a BBE7     		b	.L420
 3127              	.L413:
 635:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 3128              		.loc 1 635 0
 3129 009c FFF7FEFF 		bl	BluetoothSetLED
 3130              	.LVL444:
 636:../Sources/main.c **** 			break;
 3131              		.loc 1 636 0
 3132 00a0 C4E7     		b	.L405
 3133              	.L424:
 3134 00a2 C046     		.align	2
 3135              	.L423:
 3136 00a4 00000000 		.word	.LANCHOR8
 3137 00a8 00C00640 		.word	1074184192
 3138 00ac 00000000 		.word	.LANCHOR9
 3139 00b0 00000000 		.word	.LANCHOR10
 3140 00b4 40F00F40 		.word	1074786368
 3141 00b8 0000C842 		.word	1120403456
 3142 00bc 00000000 		.word	.LANCHOR7
 3143              		.cfi_endproc
 3144              	.LFE11:
 3146              		.global	__aeabi_fadd
 3147              		.global	__aeabi_f2uiz
 3148              		.global	__aeabi_dmul
 3149              		.global	__aeabi_d2f
 3150              		.global	__aeabi_fdiv
 3151              		.global	__aeabi_fcmplt
 3152              		.section	.text.lineFollowingMode,"ax",%progbits
 3153              		.align	2
 3154              		.global	lineFollowingMode
 3155              		.code	16
 3156              		.thumb_func
 3158              	lineFollowingMode:
 3159              	.LFB1:
 201:../Sources/main.c **** {
 3160              		.loc 1 201 0
 3161              		.cfi_startproc
 3162              	.LVL445:
 3163 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3164              	.LCFI15:
 3165              		.cfi_def_cfa_offset 24
 3166              		.cfi_offset 3, -24
 3167              		.cfi_offset 4, -20
 3168              		.cfi_offset 5, -16
 3169              		.cfi_offset 6, -12
 3170              		.cfi_offset 7, -8
 3171              		.cfi_offset 14, -4
 3172 0002 5F46     		mov	r7, fp
 3173 0004 5646     		mov	r6, sl
 3174 0006 4D46     		mov	r5, r9
 3175 0008 4446     		mov	r4, r8
 3176 000a F0B4     		push	{r4, r5, r6, r7}
 3177              	.LCFI16:
 3178              		.cfi_def_cfa_offset 40
 3179              		.cfi_offset 8, -40
 3180              		.cfi_offset 9, -36
 3181              		.cfi_offset 10, -32
 3182              		.cfi_offset 11, -28
 201:../Sources/main.c **** {
 3183              		.loc 1 201 0
 3184 000c 071C     		mov	r7, r0
 205:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 3185              		.loc 1 205 0
 3186 000e 0120     		mov	r0, #1
 3187              	.LVL446:
 3188 0010 FFF7FEFF 		bl	TFC_GetPush_Button
 3189              	.LVL447:
 3190 0014 0128     		cmp	r0, #1
 3191 0016 00D1     		bne	.LCB2797
 3192 0018 D7E0     		b	.L455	@long jump
 3193              	.LCB2797:
 3194              	.L426:
 211:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 3195              		.loc 1 211 0
 3196 001a D54C     		ldr	r4, .L468+8
 3197 001c D54D     		ldr	r5, .L468+12
 3198 001e A169     		ldr	r1, [r4, #24]
 3199 0020 A942     		cmp	r1, r5
 3200 0022 00D9     		bls	.LCB2803
 3201 0024 CAE0     		b	.L456	@long jump
 3202              	.LCB2803:
 3203              	.L427:
 218:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 3204              		.loc 1 218 0
 3205 0026 2369     		ldr	r3, [r4, #16]
 3206 0028 312B     		cmp	r3, #49
 3207 002a 00D9     		bls	.LCB2807
 3208 002c BFE0     		b	.L457	@long jump
 3209              	.LCB2807:
 3210              	.L428:
 226:../Sources/main.c **** 	if(TFC_Ticker[5]>=50){ 
 3211              		.loc 1 226 0
 3212 002e 6169     		ldr	r1, [r4, #20]
 3213 0030 3129     		cmp	r1, #49
 3214 0032 00D9     		bls	.LCB2811
 3215 0034 B5E0     		b	.L458	@long jump
 3216              	.LCB2811:
 3217              	.L429:
 244:../Sources/main.c **** 		incline_speed=max_speed_percent;
 3218              		.loc 1 244 0
 3219 0036 D04A     		ldr	r2, .L468+16
 3220 0038 D04E     		ldr	r6, .L468+20
 3221 003a 1368     		ldr	r3, [r2]
 3222 003c B146     		mov	r9, r6
 3223 003e 3360     		str	r3, [r6]
 246:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 3224              		.loc 1 246 0
 3225 0040 F878     		ldrb	r0, [r7, #3]
 3226 0042 0028     		cmp	r0, #0
 3227 0044 00D1     		bne	.LCB2821
 3228 0046 93E0     		b	.L459	@long jump
 3229              	.LCB2821:
 3230              	.L430:
 255:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 3231              		.loc 1 255 0
 3232 0048 2268     		ldr	r2, [r4]
 3233 004a 632A     		cmp	r2, #99
 3234 004c 55D8     		bhi	.L460
 3235              	.L437:
 274:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 3236              		.loc 1 274 0
 3237 004e FA78     		ldrb	r2, [r7, #3]
 3238 0050 002A     		cmp	r2, #0
 3239 0052 11D1     		bne	.L441
 277:../Sources/main.c **** 		if(stopline_enable == 1)
 3240              		.loc 1 277 0
 3241 0054 CA48     		ldr	r0, .L468+24
 276:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3242              		.loc 1 276 0
 3243 0056 0121     		mov	r1, #1
 277:../Sources/main.c **** 		if(stopline_enable == 1)
 3244              		.loc 1 277 0
 3245 0058 0678     		ldrb	r6, [r0]
 276:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3246              		.loc 1 276 0
 3247 005a F970     		strb	r1, [r7, #3]
 277:../Sources/main.c **** 		if(stopline_enable == 1)
 3248              		.loc 1 277 0
 3249 005c 012E     		cmp	r6, #1
 3250 005e 00D1     		bne	.LCB2835
 3251 0060 CEE0     		b	.L461	@long jump
 3252              	.LCB2835:
 3253              	.L442:
 281:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3254              		.loc 1 281 0
 3255 0062 C84B     		ldr	r3, .L468+28
 3256 0064 1868     		ldr	r0, [r3]
 3257 0066 FFF7FEFF 		bl	getTotalIntensity
 3258              	.LVL448:
 3259 006a C74D     		ldr	r5, .L468+32
 282:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3260              		.loc 1 282 0
 3261 006c C749     		ldr	r1, .L468+36
 281:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3262              		.loc 1 281 0
 3263 006e 2860     		str	r0, [r5]
 282:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3264              		.loc 1 282 0
 3265 0070 FFF7FEFF 		bl	calculateNewExposure
 3266              	.LVL449:
 3267 0074 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 3268              	.LVL450:
 3269              	.L441:
 285:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 3270              		.loc 1 285 0
 3271 0078 BA78     		ldrb	r2, [r7, #2]
 3272 007a 012A     		cmp	r2, #1
 3273 007c 00D8     		bhi	.LCB2852
 3274 007e C8E0     		b	.L462	@long jump
 3275              	.LCB2852:
 318:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 3276              		.loc 1 318 0
 3277 0080 032A     		cmp	r2, #3
 3278 0082 00D1     		bne	.LCB2854
 3279 0084 3CE1     		b	.L463	@long jump
 3280              	.LCB2854:
 323:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 3281              		.loc 1 323 0
 3282 0086 022A     		cmp	r2, #2
 3283 0088 05D0     		beq	.L464
 3284              	.LVL451:
 3285              	.L425:
 360:../Sources/main.c **** }
 3286              		.loc 1 360 0
 3287              		@ sp needed for prologue
 3288 008a 3CBC     		pop	{r2, r3, r4, r5}
 3289 008c 9046     		mov	r8, r2
 3290 008e 9946     		mov	r9, r3
 3291 0090 A246     		mov	sl, r4
 3292 0092 AB46     		mov	fp, r5
 3293 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3294              	.LVL452:
 3295              	.L464:
 325:../Sources/main.c **** 		if(stopline_enable == 1)
 3296              		.loc 1 325 0
 3297 0096 BA4F     		ldr	r7, .L468+24
 3298              	.LVL453:
 3299 0098 3878     		ldrb	r0, [r7]
 3300 009a 0128     		cmp	r0, #1
 3301 009c F5D1     		bne	.L425
 3302              	.LBB40:
 330:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 3303              		.loc 1 330 0
 3304 009e BC4E     		ldr	r6, .L468+40
 3305 00a0 3178     		ldrb	r1, [r6]
 3306 00a2 0029     		cmp	r1, #0
 3307 00a4 00D0     		beq	.LCB2883
 3308 00a6 37E1     		b	.L448	@long jump
 3309              	.LCB2883:
 3310              	.LBB41:
 333:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3311              		.loc 1 333 0
 3312 00a8 6269     		ldr	r2, [r4, #20]
 332:../Sources/main.c **** 				stoplineJustDetected = 1;
 3313              		.loc 1 332 0
 3314 00aa 3070     		strb	r0, [r6]
 333:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3315              		.loc 1 333 0
 3316 00ac B94F     		ldr	r7, .L468+44
 336:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3317              		.loc 1 336 0
 3318 00ae BA48     		ldr	r0, .L468+48
 3319 00b0 BA4E     		ldr	r6, .L468+52
 333:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3320              		.loc 1 333 0
 3321 00b2 3A60     		str	r2, [r7]
 3322              	.LVL454:
 336:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3323              		.loc 1 336 0
 3324 00b4 3168     		ldr	r1, [r6]
 3325 00b6 0068     		ldr	r0, [r0]
 3326 00b8 FC24     		mov	r4, #252
 3327 00ba FFF7FEFF 		bl	__aeabi_fadd
 3328              	.LVL455:
 3329 00be A105     		lsl	r1, r4, #22
 3330 00c0 FFF7FEFF 		bl	__aeabi_fmul
 3331              	.LVL456:
 338:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3332              		.loc 1 338 0
 3333 00c4 B649     		ldr	r1, .L468+56
 336:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3334              		.loc 1 336 0
 3335 00c6 071C     		add	r7, r0, #0
 3336              	.LVL457:
 338:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3337              		.loc 1 338 0
 3338 00c8 FFF7FEFF 		bl	__aeabi_fcmplt
 3339              	.LVL458:
 3340 00cc 0028     		cmp	r0, #0
 3341 00ce 00D1     		bne	.LCB2907
 3342 00d0 47E1     		b	.L465	@long jump
 3343              	.LCB2907:
 340:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 3344              		.loc 1 340 0
 3345 00d2 B44D     		ldr	r5, .L468+60
 3346              	.L449:
 3347              	.LVL459:
 343:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 3348              		.loc 1 343 0
 3349 00d4 B449     		ldr	r1, .L468+64
 3350 00d6 381C     		add	r0, r7, #0
 3351 00d8 FFF7FEFF 		bl	__aeabi_fmul
 3352              	.LVL460:
 3353 00dc B349     		ldr	r1, .L468+68
 3354 00de FFF7FEFF 		bl	__aeabi_fdiv
 3355              	.LVL461:
 3356 00e2 011C     		add	r1, r0, #0
 3357 00e4 281C     		add	r0, r5, #0
 3358 00e6 FFF7FEFF 		bl	__aeabi_fdiv
 3359              	.LVL462:
 3360 00ea B149     		ldr	r1, .L468+72
 3361 00ec FFF7FEFF 		bl	__aeabi_fmul
 3362              	.LVL463:
 3363 00f0 FFF7FEFF 		bl	__aeabi_f2uiz
 3364              	.LVL464:
 3365 00f4 AF49     		ldr	r1, .L468+76
 3366 00f6 0860     		str	r0, [r1]
 3367 00f8 C7E7     		b	.L425
 3368              	.LVL465:
 3369              	.L460:
 3370              	.LBE41:
 3371              	.LBE40:
 257:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 3372              		.loc 1 257 0
 3373 00fa 0021     		mov	r1, #0
 3374 00fc 2160     		str	r1, [r4]
 258:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3375              		.loc 1 258 0
 3376 00fe 0B25     		mov	r5, #11
 3377 0100 7857     		ldrsb	r0, [r7, r5]
 3378 0102 0021     		mov	r1, #0
 3379 0104 AC4A     		ldr	r2, .L468+80
 3380 0106 FFF7FEFF 		bl	getDesiredServoValue
 3381              	.LVL466:
 261:../Sources/main.c **** 		if(servoValue>0){
 3382              		.loc 1 261 0
 3383 010a 0021     		mov	r1, #0
 258:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3384              		.loc 1 258 0
 3385 010c 051C     		add	r5, r0, #0
 261:../Sources/main.c **** 		if(servoValue>0){
 3386              		.loc 1 261 0
 3387 010e FFF7FEFF 		bl	__aeabi_fcmpgt
 3388              	.LVL467:
 3389 0112 0028     		cmp	r0, #0
 3390 0114 00D1     		bne	.LCB2952
 3391 0116 FCE0     		b	.L466	@long jump
 3392              	.LCB2952:
 262:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 3393              		.loc 1 262 0
 3394 0118 281C     		add	r0, r5, #0
 3395 011a A849     		ldr	r1, .L468+84
 3396 011c FFF7FEFF 		bl	__aeabi_fadd
 3397              	.LVL468:
 3398 0120 011C     		add	r1, r0, #0
 3399 0122 281C     		add	r0, r5, #0
 3400 0124 FFF7FEFF 		bl	__aeabi_fadd
 3401              	.LVL469:
 3402 0128 051C     		add	r5, r0, #0
 263:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 3403              		.loc 1 263 0
 3404 012a A548     		ldr	r0, .L468+88
 3405 012c 8246     		mov	sl, r0
 3406 012e 5146     		mov	r1, sl
 3407 0130 281C     		add	r0, r5, #0
 3408 0132 FFF7FEFF 		bl	__aeabi_fcmpgt
 3409              	.LVL470:
 265:../Sources/main.c **** 						servoValue=STEERING_LIMIT_UPPER;
 3410              		.loc 1 265 0
 3411 0136 A34E     		ldr	r6, .L468+92
 263:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 3412              		.loc 1 263 0
 3413 0138 0028     		cmp	r0, #0
 3414 013a 5DD1     		bne	.L440
 262:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 3415              		.loc 1 262 0
 3416 013c 3560     		str	r5, [r6]
 3417              	.L439:
 270:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 3418              		.loc 1 270 0
 3419 013e 281C     		add	r0, r5, #0
 3420 0140 A149     		ldr	r1, .L468+96
 3421 0142 FFF7FEFF 		bl	__aeabi_fadd
 3422              	.LVL471:
 3423 0146 011C     		add	r1, r0, #0
 3424 0148 0020     		mov	r0, #0
 3425 014a FFF7FEFF 		bl	TFC_SetServo
 3426              	.LVL472:
 3427              	.LBB45:
 3428              	.LBB46:
 684:../Sources/main.c **** 
 685:../Sources/main.c **** void processRaceLine(carState_s* carState)
 686:../Sources/main.c **** {
 687:../Sources/main.c **** 	if(s_mode_enable)
 688:../Sources/main.c **** 	{	
 689:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 690:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 691:../Sources/main.c **** 				&& carState->crossSection == NO)
 692:../Sources/main.c **** 		{
 693:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 694:../Sources/main.c **** 			{
 695:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 696:../Sources/main.c **** 			}
 697:../Sources/main.c **** 		}
 698:../Sources/main.c **** 		else
 699:../Sources/main.c **** 		{
 700:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 701:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 702:../Sources/main.c **** 		}
 703:../Sources/main.c **** 	}
 704:../Sources/main.c **** 	
 705:../Sources/main.c **** 	static float previousRaceLine = 0;
 706:../Sources/main.c **** 	
 707:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 708:../Sources/main.c **** 	{
 709:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 710:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 711:../Sources/main.c **** 	}
 712:../Sources/main.c **** 	else
 713:../Sources/main.c **** 	{
 714:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 715:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 716:../Sources/main.c **** 	}
 717:../Sources/main.c **** }
 718:../Sources/main.c **** 
 719:../Sources/main.c **** float targetSpeedAverage(float targetSpeed)
 720:../Sources/main.c **** {
 721:../Sources/main.c **** 	static float previousTargetSpeed = 0;
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 723:../Sources/main.c **** 	return previousTargetSpeed;
 724:../Sources/main.c **** }
 725:../Sources/main.c **** 
 726:../Sources/main.c **** float servoValueAverage(float servoValue)
 727:../Sources/main.c **** {
 728:../Sources/main.c **** 	static float previousServoValue = 0;
 729:../Sources/main.c **** 	previousServoValue = SERVO_LOWPASS_COEFF*previousServoValue + (1-SERVO_LOWPASS_COEFF)*servoValue;
 3429              		.loc 1 729 0
 3430 014e 9F4D     		ldr	r5, .L468+100
 3431 0150 9F49     		ldr	r1, .L468+104
 3432 0152 2868     		ldr	r0, [r5]
 3433 0154 FFF7FEFF 		bl	__aeabi_fmul
 3434              	.LVL473:
 3435 0158 9E49     		ldr	r1, .L468+108
 3436 015a 8346     		mov	fp, r0
 3437 015c 3068     		ldr	r0, [r6]
 3438              	.LVL474:
 3439 015e FFF7FEFF 		bl	__aeabi_fmul
 3440              	.LVL475:
 3441 0162 011C     		add	r1, r0, #0
 3442 0164 5846     		mov	r0, fp
 3443 0166 FFF7FEFF 		bl	__aeabi_fadd
 3444              	.LVL476:
 3445 016a 2860     		str	r0, [r5]
 3446              	.LBE46:
 3447              	.LBE45:
 271:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 3448              		.loc 1 271 0
 3449 016c 3060     		str	r0, [r6]
 3450 016e 6EE7     		b	.L437
 3451              	.L459:
 248:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3452              		.loc 1 248 0
 3453 0170 9149     		ldr	r1, .L468+80
 250:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3454              		.loc 1 250 0
 3455 0172 844D     		ldr	r5, .L468+28
 3456 0174 984E     		ldr	r6, .L468+112
 248:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3457              		.loc 1 248 0
 3458 0176 0870     		strb	r0, [r1]
 250:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3459              		.loc 1 250 0
 3460 0178 3A1C     		mov	r2, r7
 3461 017a 2868     		ldr	r0, [r5]
 3462 017c 3168     		ldr	r1, [r6]
 3463 017e FFF7FEFF 		bl	findLine
 3464              	.LVL477:
 3465              	.LBB47:
 3466              	.LBB48:
 687:../Sources/main.c **** 	if(s_mode_enable)
 3467              		.loc 1 687 0
 3468 0182 964A     		ldr	r2, .L468+116
 3469 0184 1378     		ldrb	r3, [r2]
 3470 0186 002B     		cmp	r3, #0
 3471 0188 25D1     		bne	.L431
 3472 018a 797A     		ldrb	r1, [r7, #9]
 3473 018c B87A     		ldrb	r0, [r7, #10]
 3474              	.L432:
 707:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 3475              		.loc 1 707 0
 3476 018e 0129     		cmp	r1, #1
 3477 0190 00D1     		bne	.LCB3034
 3478 0192 39E1     		b	.L467	@long jump
 3479              	.LCB3034:
 3480              	.L436:
 714:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 3481              		.loc 1 714 0
 3482 0194 F872     		strb	r0, [r7, #11]
 715:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 3483              		.loc 1 715 0
 3484 0196 40B2     		sxtb	r0, r0
 3485 0198 FFF7FEFF 		bl	__aeabi_i2f
 3486              	.LVL478:
 3487 019c 904E     		ldr	r6, .L468+120
 3488 019e 3060     		str	r0, [r6]
 3489 01a0 52E7     		b	.L430
 3490              	.LVL479:
 3491              	.L458:
 3492              	.LBE48:
 3493              	.LBE47:
 227:../Sources/main.c **** 			TFC_Ticker[5]=0;
 3494              		.loc 1 227 0
 3495 01a2 0025     		mov	r5, #0
 228:../Sources/main.c **** 			LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 3496              		.loc 1 228 0
 3497 01a4 381C     		mov	r0, r7
 227:../Sources/main.c **** 			TFC_Ticker[5]=0;
 3498              		.loc 1 227 0
 3499 01a6 6561     		str	r5, [r4, #20]
 228:../Sources/main.c **** 			LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 3500              		.loc 1 228 0
 3501 01a8 FFF7FEFF 		bl	LCDwriteState
 3502              	.LVL480:
 3503 01ac 43E7     		b	.L429
 3504              	.L457:
 220:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 3505              		.loc 1 220 0
 3506 01ae 0020     		mov	r0, #0
 3507 01b0 2061     		str	r0, [r4, #16]
 221:../Sources/main.c **** 		telemetrySendData();
 3508              		.loc 1 221 0
 3509 01b2 FFF7FEFF 		bl	telemetrySendData
 3510              	.LVL481:
 222:../Sources/main.c **** 		telemetryReadData();
 3511              		.loc 1 222 0
 3512 01b6 FFF7FEFF 		bl	telemetryReadData
 3513              	.LVL482:
 3514 01ba 38E7     		b	.L428
 3515              	.L456:
 213:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 3516              		.loc 1 213 0
 3517 01bc 0026     		mov	r6, #0
 3518 01be A661     		str	r6, [r4, #24]
 214:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 3519              		.loc 1 214 0
 3520 01c0 FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 3521              	.LVL483:
 3522 01c4 874A     		ldr	r2, .L468+124
 3523 01c6 1060     		str	r0, [r2]
 3524 01c8 2DE7     		b	.L427
 3525              	.L455:
 207:../Sources/main.c **** 		stoplineJustDetected = 0;
 3526              		.loc 1 207 0
 3527 01ca 714B     		ldr	r3, .L468+40
 3528 01cc 0022     		mov	r2, #0
 208:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3529              		.loc 1 208 0
 3530 01ce 0320     		mov	r0, #3
 207:../Sources/main.c **** 		stoplineJustDetected = 0;
 3531              		.loc 1 207 0
 3532 01d0 1A70     		strb	r2, [r3]
 208:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3533              		.loc 1 208 0
 3534 01d2 B870     		strb	r0, [r7, #2]
 3535 01d4 21E7     		b	.L426
 3536              	.LVL484:
 3537              	.L431:
 3538              	.LBB52:
 3539              	.LBB49:
 689:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 3540              		.loc 1 689 0
 3541 01d6 B87A     		ldrb	r0, [r7, #10]
 3542 01d8 45B2     		sxtb	r5, r0
 3543 01da 092D     		cmp	r5, #9
 3544 01dc 14DC     		bgt	.L433
 690:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 3545              		.loc 1 690 0
 3546 01de 397B     		ldrb	r1, [r7, #12]
 3547 01e0 4629     		cmp	r1, #70
 3548 01e2 11D9     		bls	.L433
 691:../Sources/main.c **** 				&& carState->crossSection == NO)
 3549              		.loc 1 691 0
 3550 01e4 BE79     		ldrb	r6, [r7, #6]
 3551 01e6 002E     		cmp	r6, #0
 3552 01e8 0ED1     		bne	.L433
 693:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 3553              		.loc 1 693 0
 3554 01ea E369     		ldr	r3, [r4, #28]
 3555 01ec 7E4A     		ldr	r2, .L468+128
 3556 01ee 9342     		cmp	r3, r2
 3557 01f0 00D9     		bls	.LCB3106
 3558 01f2 23E1     		b	.L434	@long jump
 3559              	.LCB3106:
 3560 01f4 797A     		ldrb	r1, [r7, #9]
 3561 01f6 CAE7     		b	.L432
 3562              	.LVL485:
 3563              	.L440:
 3564              	.LBE49:
 3565              	.LBE52:
 265:../Sources/main.c **** 						servoValue=STEERING_LIMIT_UPPER;
 3566              		.loc 1 265 0
 3567 01f8 5346     		mov	r3, sl
 3568 01fa 3360     		str	r3, [r6]
 3569 01fc 5546     		mov	r5, sl
 3570 01fe 9EE7     		b	.L439
 3571              	.L461:
 279:../Sources/main.c **** 			findStop(carState);
 3572              		.loc 1 279 0
 3573 0200 381C     		mov	r0, r7
 3574 0202 FFF7FEFF 		bl	findStop
 3575              	.LVL486:
 3576 0206 2CE7     		b	.L442
 3577              	.LVL487:
 3578              	.L433:
 3579              	.LBB53:
 3580              	.LBB50:
 700:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 3581              		.loc 1 700 0
 3582 0208 0025     		mov	r5, #0
 3583 020a 7D72     		strb	r5, [r7, #9]
 701:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 3584              		.loc 1 701 0
 3585 020c E561     		str	r5, [r4, #28]
 3586 020e B87A     		ldrb	r0, [r7, #10]
 3587 0210 C0E7     		b	.L436
 3588              	.LVL488:
 3589              	.L462:
 3590              	.LBE50:
 3591              	.LBE53:
 3592              	.LBB54:
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3593              		.loc 1 287 0
 3594 0212 6C4E     		ldr	r6, .L468+92
 3595 0214 3068     		ldr	r0, [r6]
 3596 0216 FFF7FEFF 		bl	getRadiusRoot
 3597              	.LVL489:
 3598 021a 7449     		ldr	r1, .L468+132
 3599 021c 021C     		add	r2, r0, #0
 3600 021e 381C     		mov	r0, r7
 3601 0220 FFF7FEFF 		bl	getDesiredSpeed
 3602              	.LVL490:
 3603              	.LBB55:
 3604              	.LBB56:
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3605              		.loc 1 722 0
 3606 0224 724C     		ldr	r4, .L468+136
 3607              	.LBE56:
 3608              	.LBE55:
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3609              		.loc 1 287 0
 3610 0226 8046     		mov	r8, r0
 3611              	.LVL491:
 3612              	.LBB59:
 3613              	.LBB57:
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3614              		.loc 1 722 0
 3615 0228 7249     		ldr	r1, .L468+140
 3616 022a 2068     		ldr	r0, [r4]
 3617              	.LVL492:
 3618 022c FFF7FEFF 		bl	__aeabi_fmul
 3619              	.LVL493:
 3620 0230 FFF7FEFF 		bl	__aeabi_f2d
 3621              	.LVL494:
 3622 0234 A246     		mov	sl, r4
 3623 0236 041C     		mov	r4, r0
 3624 0238 4046     		mov	r0, r8
 3625 023a 0D1C     		mov	r5, r1
 3626 023c FFF7FEFF 		bl	__aeabi_f2d
 3627              	.LVL495:
 3628 0240 4A4B     		ldr	r3, .L468+4
 3629 0242 494A     		ldr	r2, .L468
 3630 0244 FFF7FEFF 		bl	__aeabi_dmul
 3631              	.LVL496:
 3632 0248 021C     		mov	r2, r0
 3633 024a 0B1C     		mov	r3, r1
 3634 024c 201C     		mov	r0, r4
 3635 024e 291C     		mov	r1, r5
 3636 0250 FFF7FEFF 		bl	__aeabi_dadd
 3637              	.LVL497:
 3638 0254 FFF7FEFF 		bl	__aeabi_d2f
 3639              	.LVL498:
 3640              	.LBE57:
 3641              	.LBE59:
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3642              		.loc 1 287 0
 3643 0258 674C     		ldr	r4, .L468+144
 3644              	.LBB60:
 3645              	.LBB58:
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3646              		.loc 1 722 0
 3647 025a 5146     		mov	r1, sl
 3648 025c 0860     		str	r0, [r1]
 3649              	.LBE58:
 3650              	.LBE60:
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3651              		.loc 1 287 0
 3652 025e 2060     		str	r0, [r4]
 290:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 3653              		.loc 1 290 0
 3654 0260 0021     		mov	r1, #0
 3655 0262 3068     		ldr	r0, [r6]
 3656 0264 FFF7FEFF 		bl	getActiveDifferentialModifier
 3657              	.LVL499:
 3658 0268 0121     		mov	r1, #1
 3659 026a 8346     		mov	fp, r0
 3660              	.LVL500:
 3661 026c 3068     		ldr	r0, [r6]
 3662              	.LVL501:
 3663 026e FFF7FEFF 		bl	getActiveDifferentialModifier
 3664              	.LVL502:
 3665 0272 8246     		mov	sl, r0
 3666              	.LVL503:
 294:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 3667              		.loc 1 294 0
 3668 0274 0020     		mov	r0, #0
 3669              	.LVL504:
 3670 0276 FFF7FEFF 		bl	getSpeed
 3671              	.LVL505:
 3672 027a 484E     		ldr	r6, .L468+52
 3673 027c 3060     		str	r0, [r6]
 295:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 3674              		.loc 1 295 0
 3675 027e 0120     		mov	r0, #1
 3676 0280 FFF7FEFF 		bl	getSpeed
 3677              	.LVL506:
 3678 0284 444D     		ldr	r5, .L468+48
 3679 0286 2860     		str	r0, [r5]
 307:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 3680              		.loc 1 307 0
 3681 0288 7F78     		ldrb	r7, [r7, #1]
 3682              	.LVL507:
 3683 028a 012F     		cmp	r7, #1
 3684 028c 00D0     		beq	.LCB3229
 3685 028e FCE6     		b	.L425	@long jump
 3686              	.LCB3229:
 310:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 3687              		.loc 1 310 0
 3688 0290 4B46     		mov	r3, r9
 3689 0292 1868     		ldr	r0, [r3]
 3690 0294 5949     		ldr	r1, .L468+148
 3691 0296 FFF7FEFF 		bl	__aeabi_fdiv
 3692              	.LVL508:
 3693 029a 2168     		ldr	r1, [r4]
 3694 029c 8046     		mov	r8, r0
 3695              	.LVL509:
 3696 029e 5846     		mov	r0, fp
 3697 02a0 FFF7FEFF 		bl	__aeabi_fmul
 3698              	.LVL510:
 3699 02a4 071C     		add	r7, r0, #0
 3700 02a6 0020     		mov	r0, #0
 3701 02a8 3668     		ldr	r6, [r6]
 3702 02aa FFF7FEFF 		bl	isANewmeasurementAvailable
 3703              	.LVL511:
 3704 02ae 0023     		mov	r3, #0
 3705 02b0 021C     		mov	r2, r0
 3706 02b2 311C     		add	r1, r6, #0
 3707 02b4 381C     		add	r0, r7, #0
 3708 02b6 FFF7FEFF 		bl	getDesiredMotorPWM
 3709              	.LVL512:
 3710 02ba 011C     		add	r1, r0, #0
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3711              		.loc 1 309 0
 3712 02bc 4046     		mov	r0, r8
 3713 02be FFF7FEFF 		bl	__aeabi_fmul
 3714              	.LVL513:
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3715              		.loc 1 311 0
 3716 02c2 4A46     		mov	r2, r9
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3717              		.loc 1 309 0
 3718 02c4 061C     		add	r6, r0, #0
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3719              		.loc 1 311 0
 3720 02c6 4D49     		ldr	r1, .L468+148
 3721 02c8 1068     		ldr	r0, [r2]
 3722 02ca FFF7FEFF 		bl	__aeabi_fdiv
 3723              	.LVL514:
 3724 02ce 2168     		ldr	r1, [r4]
 3725 02d0 071C     		add	r7, r0, #0
 3726 02d2 5046     		mov	r0, sl
 3727 02d4 FFF7FEFF 		bl	__aeabi_fmul
 3728              	.LVL515:
 3729 02d8 8146     		mov	r9, r0
 3730 02da 0120     		mov	r0, #1
 3731 02dc 2C68     		ldr	r4, [r5]
 3732 02de FFF7FEFF 		bl	isANewmeasurementAvailable
 3733              	.LVL516:
 3734 02e2 211C     		add	r1, r4, #0
 3735 02e4 021C     		mov	r2, r0
 3736 02e6 0123     		mov	r3, #1
 3737 02e8 4846     		mov	r0, r9
 3738 02ea FFF7FEFF 		bl	getDesiredMotorPWM
 3739              	.LVL517:
 3740 02ee 011C     		add	r1, r0, #0
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3741              		.loc 1 309 0
 3742 02f0 381C     		add	r0, r7, #0
 3743 02f2 FFF7FEFF 		bl	__aeabi_fmul
 3744              	.LVL518:
 3745 02f6 011C     		add	r1, r0, #0
 3746 02f8 301C     		add	r0, r6, #0
 3747 02fa FFF7FEFF 		bl	TFC_SetMotorPWM
 3748              	.LVL519:
 3749 02fe C4E6     		b	.L425
 3750              	.LVL520:
 3751              	.L463:
 3752              	.LBE54:
 320:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 3753              		.loc 1 320 0
 3754 0300 8023     		mov	r3, #128
 3755 0302 3F48     		ldr	r0, .L468+152
 3756 0304 9A03     		lsl	r2, r3, #14
 3757 0306 8260     		str	r2, [r0, #8]
 321:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 3758              		.loc 1 321 0
 3759 0308 0020     		mov	r0, #0
 3760 030a 011C     		add	r1, r0, #0
 3761 030c FFF7FEFF 		bl	TFC_SetMotorPWM
 3762              	.LVL521:
 3763 0310 BBE6     		b	.L425
 3764              	.L466:
 258:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3765              		.loc 1 258 0
 3766 0312 2C4E     		ldr	r6, .L468+92
 3767 0314 3560     		str	r5, [r6]
 3768 0316 12E7     		b	.L439
 3769              	.LVL522:
 3770              	.L448:
 3771              	.LBB61:
 345:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 3772              		.loc 1 345 0
 3773 0318 1E4B     		ldr	r3, .L468+44
 3774 031a 264F     		ldr	r7, .L468+76
 3775 031c 6469     		ldr	r4, [r4, #20]
 3776 031e 1D68     		ldr	r5, [r3]
 3777 0320 3868     		ldr	r0, [r7]
 3778 0322 621B     		sub	r2, r4, r5
 3779 0324 8242     		cmp	r2, r0
 3780 0326 00D2     		bcs	.LCB3323
 3781 0328 AFE6     		b	.L425	@long jump
 3782              	.LCB3323:
 3783              	.LBB42:
 347:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3784              		.loc 1 347 0
 3785 032a 0020     		mov	r0, #0
 3786 032c FFF7FEFF 		bl	getSpeed
 3787              	.LVL523:
 3788 0330 061C     		add	r6, r0, #0
 3789              	.LVL524:
 3790 0332 0120     		mov	r0, #1
 3791              	.LVL525:
 3792 0334 FFF7FEFF 		bl	getSpeed
 3793              	.LVL526:
 349:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3794              		.loc 1 349 0
 3795 0338 8021     		mov	r1, #128
 347:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3796              		.loc 1 347 0
 3797 033a 041C     		add	r4, r0, #0
 3798              	.LVL527:
 349:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3799              		.loc 1 349 0
 3800 033c C905     		lsl	r1, r1, #23
 3801 033e 301C     		add	r0, r6, #0
 3802              	.LVL528:
 3803 0340 FFF7FEFF 		bl	__aeabi_fcmpgt
 3804              	.LVL529:
 3805 0344 0028     		cmp	r0, #0
 3806 0346 06D1     		bne	.L450
 349:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3807              		.loc 1 349 0 is_stmt 0
 3808 0348 8023     		mov	r3, #128
 3809 034a 201C     		add	r0, r4, #0
 3810 034c D905     		lsl	r1, r3, #23
 3811 034e FFF7FEFF 		bl	__aeabi_fcmpgt
 3812              	.LVL530:
 3813 0352 0028     		cmp	r0, #0
 3814 0354 75D0     		beq	.L454
 3815              	.L450:
 351:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 3816              		.loc 1 351 0 is_stmt 1
 3817 0356 BF25     		mov	r5, #191
 3818 0358 2806     		lsl	r0, r5, #24
 3819 035a 011C     		add	r1, r0, #0
 3820 035c FFF7FEFF 		bl	TFC_SetMotorPWM
 3821              	.LVL531:
 3822 0360 93E6     		b	.L425
 3823              	.LVL532:
 3824              	.L465:
 3825              	.LBE42:
 3826              	.LBB43:
 335:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 3827              		.loc 1 335 0
 3828 0362 284D     		ldr	r5, .L468+156
 3829 0364 B6E6     		b	.L449
 3830              	.L469:
 3831 0366 C046     		.align	3
 3832              	.L468:
 3833 0368 9A999999 		.word	-1717986918
 3834 036c 9999B93F 		.word	1069128089
 3835 0370 00000000 		.word	TFC_Ticker
 3836 0374 E7030000 		.word	999
 3837 0378 00000000 		.word	.LANCHOR7
 3838 037c 00000000 		.word	incline_speed
 3839 0380 00000000 		.word	.LANCHOR16
 3840 0384 00000000 		.word	LineScanImage0
 3841 0388 00000000 		.word	.LANCHOR17
 3842 038c E0930400 		.word	300000
 3843 0390 00000000 		.word	.LANCHOR11
 3844 0394 00000000 		.word	.LANCHOR21
 3845 0398 00000000 		.word	.LANCHOR20
 3846 039c 00000000 		.word	.LANCHOR19
 3847 03a0 00002041 		.word	1092616192
 3848 03a4 6666263F 		.word	1059481190
 3849 03a8 F90F4940 		.word	1078530041
 3850 03ac 0000A041 		.word	1101004800
 3851 03b0 00401C46 		.word	1176256512
 3852 03b4 00000000 		.word	.LANCHOR22
 3853 03b8 00000000 		.word	.LANCHOR12
 3854 03bc 8FC2753C 		.word	1014350479
 3855 03c0 F628DC3E 		.word	1054615798
 3856 03c4 00000000 		.word	.LANCHOR5
 3857 03c8 CDCC4C3D 		.word	1028443341
 3858 03cc 00000000 		.word	.LANCHOR15
 3859 03d0 CDCC4C3F 		.word	1061997773
 3860 03d4 CCCC4C3E 		.word	1045220556
 3861 03d8 00000000 		.word	LineScanImage1
 3862 03dc 00000000 		.word	.LANCHOR13
 3863 03e0 00000000 		.word	.LANCHOR14
 3864 03e4 00000000 		.word	.LANCHOR2
 3865 03e8 94110000 		.word	4500
 3866 03ec 00807A43 		.word	1132101632
 3867 03f0 00000000 		.word	.LANCHOR18
 3868 03f4 6666663F 		.word	1063675494
 3869 03f8 00000000 		.word	.LANCHOR4
 3870 03fc 0000C842 		.word	1120403456
 3871 0400 00F10F40 		.word	1074786560
 3872 0404 CDCCCC3E 		.word	1053609165
 3873              	.LVL533:
 3874              	.L467:
 3875 0408 45B2     		sxtb	r5, r0
 3876              	.L435:
 3877              	.LBE43:
 3878              	.LBE61:
 3879              	.LBB62:
 3880              	.LBB51:
 709:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3881              		.loc 1 709 0
 3882 040a 104E     		ldr	r6, .L470
 3883 040c 1049     		ldr	r1, .L470+4
 3884 040e 3068     		ldr	r0, [r6]
 3885 0410 FFF7FEFF 		bl	__aeabi_fmul
 3886              	.LVL534:
 3887 0414 8046     		mov	r8, r0
 3888 0416 281C     		mov	r0, r5
 3889 0418 FFF7FEFF 		bl	__aeabi_i2f
 3890              	.LVL535:
 3891 041c 0D49     		ldr	r1, .L470+8
 3892 041e FFF7FEFF 		bl	__aeabi_fmul
 3893              	.LVL536:
 3894 0422 011C     		add	r1, r0, #0
 3895 0424 4046     		mov	r0, r8
 3896 0426 FFF7FEFF 		bl	__aeabi_fadd
 3897              	.LVL537:
 710:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3898              		.loc 1 710 0
 3899 042a FC23     		mov	r3, #252
 3900 042c 9905     		lsl	r1, r3, #22
 709:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3901              		.loc 1 709 0
 3902 042e 3060     		str	r0, [r6]
 710:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3903              		.loc 1 710 0
 3904 0430 FFF7FEFF 		bl	__aeabi_fadd
 3905              	.LVL538:
 3906 0434 FFF7FEFF 		bl	__aeabi_f2uiz
 3907              	.LVL539:
 3908 0438 F872     		strb	r0, [r7, #11]
 3909 043a 05E6     		b	.L430
 3910              	.L434:
 695:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 3911              		.loc 1 695 0
 3912 043c 0120     		mov	r0, #1
 3913 043e 7872     		strb	r0, [r7, #9]
 3914 0440 E3E7     		b	.L435
 3915              	.LVL540:
 3916              	.L454:
 3917              	.LBE51:
 3918              	.LBE62:
 3919              	.LBB63:
 3920              	.LBB44:
 355:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 3921              		.loc 1 355 0
 3922 0442 0020     		mov	r0, #0
 3923 0444 011C     		add	r1, r0, #0
 3924 0446 FFF7FEFF 		bl	TFC_SetMotorPWM
 3925              	.LVL541:
 3926 044a 1EE6     		b	.L425
 3927              	.L471:
 3928              		.align	2
 3929              	.L470:
 3930 044c 00000000 		.word	.LANCHOR14
 3931 0450 6666663F 		.word	1063675494
 3932 0454 D0CCCC3D 		.word	1036831952
 3933              	.LBE44:
 3934              	.LBE63:
 3935              		.cfi_endproc
 3936              	.LFE1:
 3938              		.section	.text.startup.main,"ax",%progbits
 3939              		.align	2
 3940              		.global	main
 3941              		.code	16
 3942              		.thumb_func
 3944              	main:
 3945              	.LFB0:
 120:../Sources/main.c **** {
 3946              		.loc 1 120 0
 3947              		.cfi_startproc
 3948 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3949              	.LCFI17:
 3950              		.cfi_def_cfa_offset 20
 3951              		.cfi_offset 4, -20
 3952              		.cfi_offset 5, -16
 3953              		.cfi_offset 6, -12
 3954              		.cfi_offset 7, -8
 3955              		.cfi_offset 14, -4
 3956 0002 5F46     		mov	r7, fp
 3957 0004 4D46     		mov	r5, r9
 3958 0006 5646     		mov	r6, sl
 3959 0008 4446     		mov	r4, r8
 3960 000a F0B4     		push	{r4, r5, r6, r7}
 3961              	.LCFI18:
 3962              		.cfi_def_cfa_offset 36
 3963              		.cfi_offset 8, -36
 3964              		.cfi_offset 9, -32
 3965              		.cfi_offset 10, -28
 3966              		.cfi_offset 11, -24
 121:../Sources/main.c **** 	TFC_Init(&carState);
 3967              		.loc 1 121 0
 3968 000c DC49     		ldr	r1, .L569
 120:../Sources/main.c **** {
 3969              		.loc 1 120 0
 3970 000e CDB0     		sub	sp, sp, #308
 3971              	.LCFI19:
 3972              		.cfi_def_cfa_offset 344
 121:../Sources/main.c **** 	TFC_Init(&carState);
 3973              		.loc 1 121 0
 3974 0010 081C     		mov	r0, r1
 3975 0012 8B46     		mov	fp, r1
 3976 0014 FFF7FEFF 		bl	TFC_Init
 3977              	.LVL542:
 3978 0018 DA4A     		ldr	r2, .L569+4
 123:../Sources/main.c **** 	while(TFC_Ticker[5]<=10000){ //need 1 second wait for LCD display
 3979              		.loc 1 123 0
 3980 001a DB4B     		ldr	r3, .L569+8
 3981 001c 9146     		mov	r9, r2
 3982              	.L473:
 123:../Sources/main.c **** 	while(TFC_Ticker[5]<=10000){ //need 1 second wait for LCD display
 3983              		.loc 1 123 0 is_stmt 0
 3984 001e 4846     		mov	r0, r9
 3985 0020 4469     		ldr	r4, [r0, #20]
 3986 0022 9C42     		cmp	r4, r3
 3987 0024 FBD9     		bls	.L473
 3988 0026 D94D     		ldr	r5, .L569+12
 3989 0028 D94E     		ldr	r6, .L569+16
 3990 002a A846     		mov	r8, r5
 3991 002c D94F     		ldr	r7, .L569+20
 3992 002e DA4D     		ldr	r5, .L569+24
 3993 0030 71E0     		b	.L525
 3994              	.LVL543:
 3995              	.L555:
 3996              	.LBB94:
 3997              	.LBB95:
 478:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 3998              		.loc 1 478 0 is_stmt 1
 3999 0032 DA4A     		ldr	r2, .L569+28
 4000 0034 9068     		ldr	r0, [r2, #8]
 4001 0036 4405     		lsl	r4, r0, #21
 4002 0038 650F     		lsr	r5, r4, #29
 4003 003a 022D     		cmp	r5, #2
 4004 003c 76D0     		beq	.L474
 4005              	.L475:
 480:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4006              		.loc 1 480 0
 4007 003e D74D     		ldr	r5, .L569+28
 4008 0040 D74A     		ldr	r2, .L569+32
 4009 0042 A968     		ldr	r1, [r5, #8]
 481:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 4010              		.loc 1 481 0
 4011 0044 8020     		mov	r0, #128
 480:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4012              		.loc 1 480 0
 4013 0046 0A40     		and	r2, r1
 4014 0048 AA60     		str	r2, [r5, #8]
 481:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 4015              		.loc 1 481 0
 4016 004a AB68     		ldr	r3, [r5, #8]
 4017 004c 8400     		lsl	r4, r0, #2
 4018 004e 1C43     		orr	r4, r3
 4019 0050 AC60     		str	r4, [r5, #8]
 482:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 4020              		.loc 1 482 0
 4021 0052 0C20     		mov	r0, #12
 4022 0054 FFF7FEFF 		bl	enable_irq
 4023              	.LVL544:
 483:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 4024              		.loc 1 483 0
 4025 0058 0025     		mov	r5, #0
 4026 005a 5946     		mov	r1, fp
 4027 005c 4D70     		strb	r5, [r1, #1]
 4028              	.L477:
 4029              	.LVL545:
 4030              	.LBE95:
 4031              	.LBE94:
 4032              	.LBB98:
 4033              	.LBB99:
 464:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 4034              		.loc 1 464 0
 4035 005e FFF7FEFF 		bl	TFC_GetDIP_Switch
 4036              	.LVL546:
 4037              	.LBE99:
 4038 0062 0124     		mov	r4, #1
 4039              	.LBB100:
 4040 0064 0442     		tst	r4, r0
 4041 0066 00D1     		bne	.LCB3604
 4042 0068 84E0     		b	.L480	@long jump
 4043              	.LCB3604:
 4044              	.L556:
 466:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 4045              		.loc 1 466 0
 4046 006a 8025     		mov	r5, #128
 4047 006c CD4A     		ldr	r2, .L569+36
 4048 006e A903     		lsl	r1, r5, #14
 467:../Sources/main.c **** 		carState->motorState = RUNNING;
 4049              		.loc 1 467 0
 4050 0070 5846     		mov	r0, fp
 466:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 4051              		.loc 1 466 0
 4052 0072 5160     		str	r1, [r2, #4]
 467:../Sources/main.c **** 		carState->motorState = RUNNING;
 4053              		.loc 1 467 0
 4054 0074 0470     		strb	r4, [r0]
 4055              	.L481:
 4056              	.LVL547:
 4057              	.LBE100:
 4058              	.LBE98:
 4059              	.LBB103:
 4060              	.LBB104:
 497:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 4061              		.loc 1 497 0
 4062 0076 CC4C     		ldr	r4, .L569+40
 4063 0078 CC49     		ldr	r1, .L569+44
 4064 007a 2068     		ldr	r0, [r4]
 4065 007c FFF7FEFF 		bl	__aeabi_fcmpgt
 4066              	.LVL548:
 4067 0080 0028     		cmp	r0, #0
 4068 0082 00D1     		bne	.LCB3625
 4069 0084 8BE0     		b	.L536	@long jump
 4070              	.LCB3625:
 4071              	.L557:
 499:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 4072              		.loc 1 499 0
 4073 0086 5B46     		mov	r3, fp
 4074 0088 9878     		ldrb	r0, [r3, #2]
 4075 008a 0228     		cmp	r0, #2
 4076 008c 00D1     		bne	.LCB3630
 4077 008e BDE1     		b	.L546	@long jump
 4078              	.LCB3630:
 507:../Sources/main.c **** 		else if(carState->crossSection == YES)
 4079              		.loc 1 507 0
 4080 0090 9A79     		ldrb	r2, [r3, #6]
 4081 0092 5946     		mov	r1, fp
 4082 0094 012A     		cmp	r2, #1
 4083 0096 00D1     		bne	.LCB3634
 4084 0098 C4E1     		b	.L547	@long jump
 4085              	.LCB3634:
 515:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 4086              		.loc 1 515 0
 4087 009a 5D7A     		ldrb	r5, [r3, #9]
 4088 009c 5C46     		mov	r4, fp
 4089 009e 012D     		cmp	r5, #1
 4090 00a0 00D1     		bne	.LCB3638
 4091 00a2 47E2     		b	.L548	@long jump
 4092              	.LCB3638:
 522:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 4093              		.loc 1 522 0
 4094 00a4 0979     		ldrb	r1, [r1, #4]
 4095 00a6 0229     		cmp	r1, #2
 4096 00a8 00D1     		bne	.LCB3641
 4097 00aa 8DE2     		b	.L549	@long jump
 4098              	.LCB3641:
 529:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 4099              		.loc 1 529 0
 4100 00ac 6479     		ldrb	r4, [r4, #5]
 4101 00ae 012C     		cmp	r4, #1
 4102 00b0 00D1     		bne	.LCB3644
 4103 00b2 9AE2     		b	.L550	@long jump
 4104              	.LCB3644:
 536:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 4105              		.loc 1 536 0
 4106 00b4 022C     		cmp	r4, #2
 4107 00b6 00D1     		bne	.LCB3646
 4108 00b8 D7E2     		b	.L551	@long jump
 4109              	.LCB3646:
 543:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 4110              		.loc 1 543 0
 4111 00ba 0128     		cmp	r0, #1
 4112 00bc 00D1     		bne	.LCB3648
 4113 00be A9E3     		b	.L552	@long jump
 4114              	.LCB3648:
 550:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 4115              		.loc 1 550 0
 4116 00c0 0328     		cmp	r0, #3
 4117 00c2 00D1     		bne	.LCB3650
 4118 00c4 61E3     		b	.L553	@long jump
 4119              	.LCB3650:
 4120              	.L485:
 4121              	.LBE104:
 4122              	.LBE103:
 147:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 4123              		.loc 1 147 0
 4124 00c6 0120     		mov	r0, #1
 4125 00c8 FFF7FEFF 		bl	getSpeed
 4126              	.LVL549:
 4127 00cc FFF7FEFF 		bl	__aeabi_f2d
 4128              	.LVL550:
 4129 00d0 0B1C     		mov	r3, r1
 4130 00d2 021C     		mov	r2, r0
 4131 00d4 391C     		mov	r1, r7
 4132 00d6 301C     		mov	r0, r6
 4133 00d8 FFF7FEFF 		bl	Qprintf
 4134              	.LVL551:
 150:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03) //
 4135              		.loc 1 150 0
 4136 00dc FFF7FEFF 		bl	TFC_GetDIP_Switch
 4137              	.LVL552:
 4138 00e0 4307     		lsl	r3, r0, #29
 4139 00e2 9C0F     		lsr	r4, r3, #30
 4140 00e4 022C     		cmp	r4, #2
 4141 00e6 00D1     		bne	.LCB3672
 4142 00e8 FAE0     		b	.L494	@long jump
 4143              	.LCB3672:
 4144 00ea 032C     		cmp	r4, #3
 4145 00ec 73D0     		beq	.L495
 4146 00ee 012C     		cmp	r4, #1
 4147 00f0 00D1     		bne	.LCB3676
 4148 00f2 E9E0     		b	.L493	@long jump
 4149              	.LCB3676:
 4150              	.LVL553:
 4151              	.LBB112:
 4152              	.LBB113:
 364:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 4153              		.loc 1 364 0
 4154 00f4 4846     		mov	r0, r9
 4155 00f6 0168     		ldr	r1, [r0]
 4156 00f8 C729     		cmp	r1, #199
 4157 00fa 04D9     		bls	.L497
 4158 00fc 5A46     		mov	r2, fp
 4159 00fe D578     		ldrb	r5, [r2, #3]
 4160 0100 002D     		cmp	r5, #0
 4161 0102 00D1     		bne	.LCB3687
 4162 0104 2CE2     		b	.L554	@long jump
 4163              	.LCB3687:
 4164              	.LVL554:
 4165              	.L497:
 4166              	.LBE113:
 4167              	.LBE112:
 193:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 4168              		.loc 1 193 0
 4169 0106 A44C     		ldr	r4, .L569+24
 4170 0108 4D46     		mov	r5, r9
 4171 010a 6869     		ldr	r0, [r5, #20]
 4172 010c 2388     		ldrh	r3, [r4]
 4173 010e A84A     		ldr	r2, .L569+48
 4174 0110 C11A     		sub	r1, r0, r3
 4175 0112 1180     		strh	r1, [r2]
 4176 0114 251C     		mov	r5, r4
 4177              	.LVL555:
 4178              	.L525:
 134:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 4179              		.loc 1 134 0
 4180 0116 4946     		mov	r1, r9
 4181 0118 4B69     		ldr	r3, [r1, #20]
 4182 011a 2B80     		strh	r3, [r5]
 4183              	.LBB117:
 4184              	.LBB118:
 457:../Sources/main.c **** 	TFC_UART_Process();
 4185              		.loc 1 457 0
 4186 011c FFF7FEFF 		bl	TFC_UART_Process
 4187              	.LVL556:
 459:../Sources/main.c **** 	TFC_ProcessTerminal();
 4188              		.loc 1 459 0
 4189 0120 FFF7FEFF 		bl	TFC_ProcessTerminal
 4190              	.LVL557:
 4191              	.LBE118:
 4192              	.LBE117:
 4193              	.LBB119:
 4194              	.LBB96:
 478:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 4195              		.loc 1 478 0
 4196 0124 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4197              	.LVL558:
 4198 0128 0307     		lsl	r3, r0, #28
 4199 012a 82D5     		bpl	.L555
 4200              	.L474:
 4201 012c 5946     		mov	r1, fp
 4202 012e 4B78     		ldrb	r3, [r1, #1]
 4203 0130 022B     		cmp	r3, #2
 4204 0132 84D0     		beq	.L475
 486:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 4205              		.loc 1 486 0
 4206 0134 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4207              	.LVL559:
 4208 0138 0307     		lsl	r3, r0, #28
 4209 013a 46D5     		bpl	.L478
 4210 013c 974A     		ldr	r2, .L569+28
 4211 013e 9068     		ldr	r0, [r2, #8]
 4212 0140 4405     		lsl	r4, r0, #21
 4213 0142 650F     		lsr	r5, r4, #29
 4214 0144 032D     		cmp	r5, #3
 4215 0146 40D0     		beq	.L478
 4216              	.L479:
 488:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4217              		.loc 1 488 0
 4218 0148 9448     		ldr	r0, .L569+28
 4219 014a 954A     		ldr	r2, .L569+32
 4220 014c 8468     		ldr	r4, [r0, #8]
 489:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 4221              		.loc 1 489 0
 4222 014e C021     		mov	r1, #192
 488:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4223              		.loc 1 488 0
 4224 0150 2240     		and	r2, r4
 4225 0152 8260     		str	r2, [r0, #8]
 489:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 4226              		.loc 1 489 0
 4227 0154 8568     		ldr	r5, [r0, #8]
 4228 0156 8B00     		lsl	r3, r1, #2
 4229 0158 2B43     		orr	r3, r5
 4230 015a 8360     		str	r3, [r0, #8]
 490:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 4231              		.loc 1 490 0
 4232 015c 0C20     		mov	r0, #12
 4233 015e FFF7FEFF 		bl	disable_irq
 4234              	.LVL560:
 491:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 4235              		.loc 1 491 0
 4236 0162 5C46     		mov	r4, fp
 4237 0164 0120     		mov	r0, #1
 4238 0166 6070     		strb	r0, [r4, #1]
 4239              	.LVL561:
 4240              	.LBE96:
 4241              	.LBE119:
 4242              	.LBB120:
 4243              	.LBB101:
 464:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 4244              		.loc 1 464 0
 4245 0168 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4246              	.LVL562:
 4247              	.LBE101:
 4248 016c 0124     		mov	r4, #1
 4249              	.LBB102:
 4250 016e 0442     		tst	r4, r0
 4251 0170 00D0     		beq	.LCB3775
 4252 0172 7AE7     		b	.L556	@long jump
 4253              	.LCB3775:
 4254              	.L480:
 469:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 4255              		.loc 1 469 0
 4256 0174 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4257              	.LVL563:
 4258 0178 0442     		tst	r4, r0
 4259 017a 00D0     		beq	.LCB3783
 4260 017c 7BE7     		b	.L481	@long jump
 4261              	.LCB3783:
 471:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4262              		.loc 1 471 0
 4263 017e 8022     		mov	r2, #128
 4264 0180 884B     		ldr	r3, .L569+36
 4265 0182 9003     		lsl	r0, r2, #14
 4266 0184 9860     		str	r0, [r3, #8]
 472:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4267              		.loc 1 472 0
 4268 0186 0020     		mov	r0, #0
 4269 0188 011C     		add	r1, r0, #0
 4270 018a FFF7FEFF 		bl	TFC_SetMotorPWM
 4271              	.LVL564:
 4272              	.LBE102:
 4273              	.LBE120:
 4274              	.LBB121:
 4275              	.LBB105:
 497:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 4276              		.loc 1 497 0
 4277 018e 864C     		ldr	r4, .L569+40
 4278 0190 8649     		ldr	r1, .L569+44
 4279 0192 2068     		ldr	r0, [r4]
 4280 0194 FFF7FEFF 		bl	__aeabi_fcmpgt
 4281              	.LVL565:
 4282 0198 0028     		cmp	r0, #0
 4283 019a 00D0     		beq	.LCB3803
 4284 019c 73E7     		b	.L557	@long jump
 4285              	.LCB3803:
 4286              	.L536:
 560:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 4287              		.loc 1 560 0
 4288 019e 854B     		ldr	r3, .L569+52
 4289 01a0 8021     		mov	r1, #128
 4290 01a2 5D68     		ldr	r5, [r3, #4]
 4291 01a4 4A00     		lsl	r2, r1, #1
 4292 01a6 2A43     		orr	r2, r5
 4293 01a8 5A60     		str	r2, [r3, #4]
 561:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 4294              		.loc 1 561 0
 4295 01aa 5868     		ldr	r0, [r3, #4]
 4296 01ac 8024     		mov	r4, #128
 4297 01ae A500     		lsl	r5, r4, #2
 4298 01b0 0543     		orr	r5, r0
 4299 01b2 5D60     		str	r5, [r3, #4]
 4300              	.L538:
 562:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 4301              		.loc 1 562 0
 4302 01b4 5D68     		ldr	r5, [r3, #4]
 4303 01b6 8021     		mov	r1, #128
 4304 01b8 CC00     		lsl	r4, r1, #3
 4305 01ba 2C43     		orr	r4, r5
 4306 01bc 5C60     		str	r4, [r3, #4]
 4307              	.L539:
 563:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 4308              		.loc 1 563 0
 4309 01be 5868     		ldr	r0, [r3, #4]
 4310 01c0 8022     		mov	r2, #128
 4311 01c2 1501     		lsl	r5, r2, #4
 4312 01c4 0543     		orr	r5, r0
 4313 01c6 5D60     		str	r5, [r3, #4]
 4314 01c8 7DE7     		b	.L485
 4315              	.LVL566:
 4316              	.L478:
 4317              	.LBE105:
 4318              	.LBE121:
 4319              	.LBB122:
 4320              	.LBB97:
 486:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 4321              		.loc 1 486 0
 4322 01ca 5946     		mov	r1, fp
 4323 01cc 4B78     		ldrb	r3, [r1, #1]
 4324 01ce 022B     		cmp	r3, #2
 4325 01d0 00D0     		beq	.LCB3843
 4326 01d2 44E7     		b	.L477	@long jump
 4327              	.LCB3843:
 4328 01d4 B8E7     		b	.L479
 4329              	.LVL567:
 4330              	.L495:
 4331              	.LBE97:
 4332              	.LBE122:
 4333              	.LBB123:
 4334              	.LBB124:
 205:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 4335              		.loc 1 205 0
 4336 01d6 0120     		mov	r0, #1
 4337 01d8 FFF7FEFF 		bl	TFC_GetPush_Button
 4338              	.LVL568:
 4339 01dc 0128     		cmp	r0, #1
 4340 01de 00D1     		bne	.LCB3859
 4341 01e0 A2E1     		b	.L558	@long jump
 4342              	.LCB3859:
 4343              	.L501:
 211:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 4344              		.loc 1 211 0
 4345 01e2 4C46     		mov	r4, r9
 4346 01e4 A569     		ldr	r5, [r4, #24]
 4347 01e6 7449     		ldr	r1, .L569+56
 4348 01e8 8D42     		cmp	r5, r1
 4349 01ea 00D9     		bls	.LCB3865
 4350 01ec 95E1     		b	.L559	@long jump
 4351              	.LCB3865:
 4352              	.L502:
 218:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 4353              		.loc 1 218 0
 4354 01ee 4846     		mov	r0, r9
 4355 01f0 0469     		ldr	r4, [r0, #16]
 4356 01f2 312C     		cmp	r4, #49
 4357 01f4 00D9     		bls	.LCB3870
 4358 01f6 89E1     		b	.L560	@long jump
 4359              	.LCB3870:
 4360              	.L503:
 226:../Sources/main.c **** 	if(TFC_Ticker[5]>=50){ 
 4361              		.loc 1 226 0
 4362 01f8 4946     		mov	r1, r9
 4363 01fa 4B69     		ldr	r3, [r1, #20]
 4364 01fc 312B     		cmp	r3, #49
 4365 01fe 00D9     		bls	.LCB3875
 4366 0200 7EE1     		b	.L561	@long jump
 4367              	.LCB3875:
 4368              	.L504:
 244:../Sources/main.c **** 		incline_speed=max_speed_percent;
 4369              		.loc 1 244 0
 4370 0202 6E48     		ldr	r0, .L569+60
 4371 0204 6E4D     		ldr	r5, .L569+64
 4372 0206 0468     		ldr	r4, [r0]
 246:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 4373              		.loc 1 246 0
 4374 0208 5946     		mov	r1, fp
 244:../Sources/main.c **** 		incline_speed=max_speed_percent;
 4375              		.loc 1 244 0
 4376 020a 2C60     		str	r4, [r5]
 246:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 4377              		.loc 1 246 0
 4378 020c CB78     		ldrb	r3, [r1, #3]
 4379 020e 002B     		cmp	r3, #0
 4380 0210 00D1     		bne	.LCB3884
 4381 0212 56E1     		b	.L562	@long jump
 4382              	.LCB3884:
 4383              	.L505:
 255:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 4384              		.loc 1 255 0
 4385 0214 4846     		mov	r0, r9
 4386 0216 0168     		ldr	r1, [r0]
 4387 0218 6329     		cmp	r1, #99
 4388 021a 00D9     		bls	.LCB3889
 4389 021c 13E1     		b	.L563	@long jump
 4390              	.LCB3889:
 4391              	.L512:
 274:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 4392              		.loc 1 274 0
 4393 021e 5846     		mov	r0, fp
 4394 0220 C378     		ldrb	r3, [r0, #3]
 4395 0222 002B     		cmp	r3, #0
 4396 0224 11D1     		bne	.L516
 277:../Sources/main.c **** 		if(stopline_enable == 1)
 4397              		.loc 1 277 0
 4398 0226 674A     		ldr	r2, .L569+68
 276:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4399              		.loc 1 276 0
 4400 0228 0125     		mov	r5, #1
 277:../Sources/main.c **** 		if(stopline_enable == 1)
 4401              		.loc 1 277 0
 4402 022a 1178     		ldrb	r1, [r2]
 276:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4403              		.loc 1 276 0
 4404 022c C570     		strb	r5, [r0, #3]
 277:../Sources/main.c **** 		if(stopline_enable == 1)
 4405              		.loc 1 277 0
 4406 022e 0129     		cmp	r1, #1
 4407 0230 00D1     		bne	.LCB3900
 4408 0232 07E3     		b	.L564	@long jump
 4409              	.LCB3900:
 4410              	.L517:
 281:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 4411              		.loc 1 281 0
 4412 0234 4446     		mov	r4, r8
 4413 0236 2068     		ldr	r0, [r4]
 4414 0238 FFF7FEFF 		bl	getTotalIntensity
 4415              	.LVL569:
 4416 023c 624B     		ldr	r3, .L569+72
 282:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 4417              		.loc 1 282 0
 4418 023e 6349     		ldr	r1, .L569+76
 281:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 4419              		.loc 1 281 0
 4420 0240 1860     		str	r0, [r3]
 282:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 4421              		.loc 1 282 0
 4422 0242 FFF7FEFF 		bl	calculateNewExposure
 4423              	.LVL570:
 4424 0246 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4425              	.LVL571:
 4426              	.L516:
 285:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 4427              		.loc 1 285 0
 4428 024a 5846     		mov	r0, fp
 4429 024c 8578     		ldrb	r5, [r0, #2]
 4430 024e 012D     		cmp	r5, #1
 4431 0250 00D8     		bhi	.LCB3919
 4432 0252 11E2     		b	.L565	@long jump
 4433              	.LCB3919:
 318:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 4434              		.loc 1 318 0
 4435 0254 032D     		cmp	r5, #3
 4436 0256 00D1     		bne	.LCB3921
 4437 0258 E8E2     		b	.L566	@long jump
 4438              	.LCB3921:
 323:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 4439              		.loc 1 323 0
 4440 025a 022D     		cmp	r5, #2
 4441 025c 00D0     		beq	.LCB3923
 4442 025e 52E7     		b	.L497	@long jump
 4443              	.LCB3923:
 325:../Sources/main.c **** 		if(stopline_enable == 1)
 4444              		.loc 1 325 0
 4445 0260 584A     		ldr	r2, .L569+68
 4446 0262 1478     		ldrb	r4, [r2]
 4447 0264 012C     		cmp	r4, #1
 4448 0266 00D0     		beq	.LCB3927
 4449 0268 4DE7     		b	.L497	@long jump
 4450              	.LCB3927:
 4451              	.LBB125:
 330:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 4452              		.loc 1 330 0
 4453 026a 5949     		ldr	r1, .L569+80
 4454 026c 0B78     		ldrb	r3, [r1]
 4455 026e 002B     		cmp	r3, #0
 4456 0270 00D0     		beq	.LCB3932
 4457 0272 EBE2     		b	.L520	@long jump
 4458              	.LCB3932:
 4459              	.LBB126:
 333:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4460              		.loc 1 333 0
 4461 0274 4846     		mov	r0, r9
 332:../Sources/main.c **** 				stoplineJustDetected = 1;
 4462              		.loc 1 332 0
 4463 0276 0C70     		strb	r4, [r1]
 333:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4464              		.loc 1 333 0
 4465 0278 4569     		ldr	r5, [r0, #20]
 336:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4466              		.loc 1 336 0
 4467 027a 564A     		ldr	r2, .L569+84
 4468 027c 564B     		ldr	r3, .L569+88
 333:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4469              		.loc 1 333 0
 4470 027e 574C     		ldr	r4, .L569+92
 336:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4471              		.loc 1 336 0
 4472 0280 1968     		ldr	r1, [r3]
 333:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4473              		.loc 1 333 0
 4474 0282 2560     		str	r5, [r4]
 4475              	.LVL572:
 336:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4476              		.loc 1 336 0
 4477 0284 1068     		ldr	r0, [r2]
 4478 0286 FFF7FEFF 		bl	__aeabi_fadd
 4479              	.LVL573:
 4480 028a FC21     		mov	r1, #252
 4481 028c 8905     		lsl	r1, r1, #22
 4482 028e FFF7FEFF 		bl	__aeabi_fmul
 4483              	.LVL574:
 338:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 4484              		.loc 1 338 0
 4485 0292 5349     		ldr	r1, .L569+96
 336:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4486              		.loc 1 336 0
 4487 0294 041C     		add	r4, r0, #0
 4488              	.LVL575:
 338:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 4489              		.loc 1 338 0
 4490 0296 FFF7FEFF 		bl	__aeabi_fcmplt
 4491              	.LVL576:
 4492 029a 0028     		cmp	r0, #0
 4493 029c 00D1     		bne	.LCB3957
 4494 029e FBE2     		b	.L567	@long jump
 4495              	.LCB3957:
 340:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 4496              		.loc 1 340 0
 4497 02a0 504D     		ldr	r5, .L569+100
 4498              	.L521:
 4499              	.LVL577:
 343:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 4500              		.loc 1 343 0
 4501 02a2 5149     		ldr	r1, .L569+104
 4502 02a4 201C     		add	r0, r4, #0
 4503 02a6 FFF7FEFF 		bl	__aeabi_fmul
 4504              	.LVL578:
 4505 02aa 5049     		ldr	r1, .L569+108
 4506 02ac FFF7FEFF 		bl	__aeabi_fdiv
 4507              	.LVL579:
 4508 02b0 011C     		add	r1, r0, #0
 4509 02b2 281C     		add	r0, r5, #0
 4510 02b4 FFF7FEFF 		bl	__aeabi_fdiv
 4511              	.LVL580:
 4512 02b8 4D49     		ldr	r1, .L569+112
 4513 02ba FFF7FEFF 		bl	__aeabi_fmul
 4514              	.LVL581:
 4515 02be FFF7FEFF 		bl	__aeabi_f2uiz
 4516              	.LVL582:
 4517 02c2 4C4A     		ldr	r2, .L569+116
 4518 02c4 1060     		str	r0, [r2]
 4519 02c6 1EE7     		b	.L497
 4520              	.LVL583:
 4521              	.L493:
 4522              	.LBE126:
 4523              	.LBE125:
 4524              	.LBE124:
 4525              	.LBE123:
 4526              	.LBB158:
 4527              	.LBB159:
 569:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 4528              		.loc 1 569 0
 4529 02c8 4C46     		mov	r4, r9
 4530 02ca 2568     		ldr	r5, [r4]
 4531 02cc C72D     		cmp	r5, #199
 4532 02ce 00D8     		bhi	.LCB3996
 4533 02d0 19E7     		b	.L497	@long jump
 4534              	.LCB3996:
 4535              	.LBB160:
 571:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4536              		.loc 1 571 0
 4537 02d2 0021     		mov	r1, #0
 4538 02d4 2160     		str	r1, [r4]
 4539              	.LVL584:
 573:../Sources/main.c **** 		TFC_SetServo(0, offset);
 4540              		.loc 1 573 0
 4541 02d6 0020     		mov	r0, #0
 4542 02d8 4749     		ldr	r1, .L569+120
 4543 02da FFF7FEFF 		bl	TFC_SetServo
 4544              	.LVL585:
 4545 02de 12E7     		b	.L497
 4546              	.LVL586:
 4547              	.L494:
 4548              	.LBE160:
 4549              	.LBE159:
 4550              	.LBE158:
 4551              	.LBB161:
 4552              	.LBB162:
 387:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 4553              		.loc 1 387 0
 4554 02e0 4A46     		mov	r2, r9
 4555 02e2 1368     		ldr	r3, [r2]
 4556 02e4 C72B     		cmp	r3, #199
 4557 02e6 00D8     		bhi	.LCB4019
 4558 02e8 0DE7     		b	.L497	@long jump
 4559              	.LCB4019:
 4560 02ea 5846     		mov	r0, fp
 4561 02ec C578     		ldrb	r5, [r0, #3]
 4562 02ee 002D     		cmp	r5, #0
 4563 02f0 00D0     		beq	.LCB4023
 4564 02f2 08E7     		b	.L497	@long jump
 4565              	.LCB4023:
 4566              	.LBB163:
 390:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4567              		.loc 1 390 0
 4568 02f4 0121     		mov	r1, #1
 4569 02f6 C170     		strb	r1, [r0, #3]
 392:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4570              		.loc 1 392 0
 4571 02f8 0020     		mov	r0, #0
 4572 02fa 4049     		ldr	r1, .L569+124
 389:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4573              		.loc 1 389 0
 4574 02fc 1560     		str	r5, [r2]
 393:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4575              		.loc 1 393 0
 4576 02fe 8024     		mov	r4, #128
 392:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4577              		.loc 1 392 0
 4578 0300 FFF7FEFF 		bl	TFC_SetServo
 4579              	.LVL587:
 393:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4580              		.loc 1 393 0
 4581 0304 274B     		ldr	r3, .L569+36
 4582 0306 A203     		lsl	r2, r4, #14
 394:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4583              		.loc 1 394 0
 4584 0308 0020     		mov	r0, #0
 393:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4585              		.loc 1 393 0
 4586 030a 9A60     		str	r2, [r3, #8]
 394:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4587              		.loc 1 394 0
 4588 030c 011C     		add	r1, r0, #0
 4589 030e FFF7FEFF 		bl	TFC_SetMotorPWM
 4590              	.LVL588:
 396:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4591              		.loc 1 396 0
 4592 0312 4046     		mov	r0, r8
 4593 0314 0068     		ldr	r0, [r0]
 4594 0316 FFF7FEFF 		bl	getTotalIntensity
 4595              	.LVL589:
 4596 031a 2C49     		ldr	r1, .L569+76
 4597 031c FFF7FEFF 		bl	calculateNewExposure
 4598              	.LVL590:
 399:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4599              		.loc 1 399 0
 4600 0320 4D46     		mov	r5, r9
 396:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4601              		.loc 1 396 0
 4602 0322 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4603              	.LVL591:
 399:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4604              		.loc 1 399 0
 4605 0326 6C69     		ldr	r4, [r5, #20]
 4606 0328 3549     		ldr	r1, .L569+128
 400:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 4607              		.loc 1 400 0
 4608 032a 4246     		mov	r2, r8
 399:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4609              		.loc 1 399 0
 4610 032c 0C60     		str	r4, [r1]
 400:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 4611              		.loc 1 400 0
 4612 032e 1068     		ldr	r0, [r2]
 4613 0330 0CA9     		add	r1, sp, #48
 4614 0332 8022     		mov	r2, #128
 4615 0334 FFF7FEFF 		bl	edgeDetection
 4616              	.LVL592:
 401:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 4617              		.loc 1 401 0
 4618 0338 6869     		ldr	r0, [r5, #20]
 4619 033a 314D     		ldr	r5, .L569+128
 4620 033c 3149     		ldr	r1, .L569+132
 4621 033e 2C68     		ldr	r4, [r5]
 119:../Sources/main.c **** int main(void)
 4622              		.loc 1 119 0
 4623 0340 4CAB     		add	r3, sp, #304
 401:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 4624              		.loc 1 401 0
 4625 0342 021B     		sub	r2, r0, r4
 4626 0344 0A60     		str	r2, [r1]
 4627              	.LVL593:
 4628 0346 0CAD     		add	r5, sp, #48
 119:../Sources/main.c **** int main(void)
 4629              		.loc 1 119 0
 4630 0348 9A46     		mov	sl, r3
 4631              	.LVL594:
 4632              	.L500:
 4633              	.LBB164:
 406:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 4634              		.loc 1 406 0
 4635 034a 0023     		mov	r3, #0
 4636 034c E85E     		ldrsh	r0, [r5, r3]
 4637 034e 391C     		mov	r1, r7
 4638 0350 C417     		asr	r4, r0, #31
 4639 0352 0219     		add	r2, r0, r4
 4640 0354 6240     		eor	r2, r4
 4641 0356 301C     		mov	r0, r6
 4642 0358 FFF7FEFF 		bl	Qprintf
 4643              	.LVL595:
 4644 035c 0223     		mov	r3, #2
 4645 035e EA5E     		ldrsh	r2, [r5, r3]
 4646 0360 301C     		mov	r0, r6
 4647 0362 D117     		asr	r1, r2, #31
 4648 0364 5218     		add	r2, r2, r1
 4649 0366 4A40     		eor	r2, r1
 4650 0368 0435     		add	r5, r5, #4
 4651 036a 391C     		mov	r1, r7
 4652 036c FFF7FEFF 		bl	Qprintf
 4653              	.LVL596:
 404:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4654              		.loc 1 404 0
 4655 0370 5545     		cmp	r5, sl
 4656 0372 EAD1     		bne	.L500
 4657              	.LBE164:
 408:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 4658              		.loc 1 408 0
 4659 0374 301C     		mov	r0, r6
 4660 0376 2449     		ldr	r1, .L569+136
 4661 0378 FFF7FEFF 		bl	Qprintf
 4662              	.LVL597:
 4663 037c C3E6     		b	.L497
 4664              	.L570:
 4665 037e C046     		.align	2
 4666              	.L569:
 4667 0380 00000000 		.word	.LANCHOR3
 4668 0384 00000000 		.word	TFC_Ticker
 4669 0388 10270000 		.word	10000
 4670 038c 00000000 		.word	LineScanImage0
 4671 0390 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 4672 0394 00000000 		.word	.LC3
 4673 0398 00000000 		.word	.LANCHOR23
 4674 039c 00900440 		.word	1074040832
 4675 03a0 FFF8FFFF 		.word	-1793
 4676 03a4 00F10F40 		.word	1074786560
 4677 03a8 00000000 		.word	.LANCHOR2
 4678 03ac 0000F040 		.word	1089470464
 4679 03b0 00000000 		.word	.LANCHOR6
 4680 03b4 40F00F40 		.word	1074786368
 4681 03b8 E7030000 		.word	999
 4682 03bc 00000000 		.word	.LANCHOR7
 4683 03c0 00000000 		.word	incline_speed
 4684 03c4 00000000 		.word	.LANCHOR16
 4685 03c8 00000000 		.word	.LANCHOR17
 4686 03cc E0930400 		.word	300000
 4687 03d0 00000000 		.word	.LANCHOR11
 4688 03d4 00000000 		.word	.LANCHOR20
 4689 03d8 00000000 		.word	.LANCHOR19
 4690 03dc 00000000 		.word	.LANCHOR21
 4691 03e0 00002041 		.word	1092616192
 4692 03e4 6666263F 		.word	1059481190
 4693 03e8 F90F4940 		.word	1078530041
 4694 03ec 0000A041 		.word	1101004800
 4695 03f0 00401C46 		.word	1176256512
 4696 03f4 00000000 		.word	.LANCHOR22
 4697 03f8 00A08C45 		.word	1166843904
 4698 03fc CDCC4C3D 		.word	1028443341
 4699 0400 00000000 		.word	.LANCHOR0
 4700 0404 00000000 		.word	.LANCHOR1
 4701 0408 04000000 		.word	.LC5
 4702              	.LVL598:
 4703              	.L546:
 4704              	.LBE163:
 4705              	.LBE162:
 4706              	.LBE161:
 4707              	.LBB167:
 4708              	.LBB106:
 501:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 4709              		.loc 1 501 0
 4710 040c E64B     		ldr	r3, .L571+8
 4711 040e 8025     		mov	r5, #128
 4712 0410 9868     		ldr	r0, [r3, #8]
 4713 0412 6900     		lsl	r1, r5, #1
 4714 0414 0143     		orr	r1, r0
 4715 0416 9960     		str	r1, [r3, #8]
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 4716              		.loc 1 502 0
 4717 0418 9C68     		ldr	r4, [r3, #8]
 4718 041a 8022     		mov	r2, #128
 4719 041c 9000     		lsl	r0, r2, #2
 4720 041e 2043     		orr	r0, r4
 4721 0420 9860     		str	r0, [r3, #8]
 4722 0422 C7E6     		b	.L538
 4723              	.L547:
 509:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 4724              		.loc 1 509 0
 4725 0424 E04B     		ldr	r3, .L571+8
 4726 0426 8022     		mov	r2, #128
 4727 0428 5D68     		ldr	r5, [r3, #4]
 4728 042a 5100     		lsl	r1, r2, #1
 4729 042c 2943     		orr	r1, r5
 4730 042e 5960     		str	r1, [r3, #4]
 4731              	.L544:
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 4732              		.loc 1 553 0
 4733 0430 9C68     		ldr	r4, [r3, #8]
 4734 0432 8020     		mov	r0, #128
 4735 0434 8500     		lsl	r5, r0, #2
 4736 0436 2543     		orr	r5, r4
 4737 0438 9D60     		str	r5, [r3, #8]
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 4738              		.loc 1 554 0
 4739 043a 9968     		ldr	r1, [r3, #8]
 4740 043c 8022     		mov	r2, #128
 4741 043e D400     		lsl	r4, r2, #3
 4742 0440 0C43     		orr	r4, r1
 4743 0442 9C60     		str	r4, [r3, #8]
 4744 0444 BBE6     		b	.L539
 4745              	.LVL599:
 4746              	.L563:
 4747              	.LBE106:
 4748              	.LBE167:
 4749              	.LBB168:
 4750              	.LBB153:
 257:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4751              		.loc 1 257 0
 4752 0446 0025     		mov	r5, #0
 4753 0448 0560     		str	r5, [r0]
 258:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 4754              		.loc 1 258 0
 4755 044a 5C46     		mov	r4, fp
 4756 044c 0B23     		mov	r3, #11
 4757 044e E056     		ldrsb	r0, [r4, r3]
 4758 0450 0021     		mov	r1, #0
 4759 0452 D64A     		ldr	r2, .L571+12
 4760 0454 FFF7FEFF 		bl	getDesiredServoValue
 4761              	.LVL600:
 261:../Sources/main.c **** 		if(servoValue>0){
 4762              		.loc 1 261 0
 4763 0458 0021     		mov	r1, #0
 258:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 4764              		.loc 1 258 0
 4765 045a 041C     		add	r4, r0, #0
 261:../Sources/main.c **** 		if(servoValue>0){
 4766              		.loc 1 261 0
 4767 045c FFF7FEFF 		bl	__aeabi_fcmpgt
 4768              	.LVL601:
 4769 0460 0028     		cmp	r0, #0
 4770 0462 00D1     		bne	.LCB4208
 4771 0464 EBE1     		b	.L568	@long jump
 4772              	.LCB4208:
 262:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 4773              		.loc 1 262 0
 4774 0466 201C     		add	r0, r4, #0
 4775 0468 D149     		ldr	r1, .L571+16
 4776 046a FFF7FEFF 		bl	__aeabi_fadd
 4777              	.LVL602:
 4778 046e 011C     		add	r1, r0, #0
 4779 0470 201C     		add	r0, r4, #0
 4780 0472 FFF7FEFF 		bl	__aeabi_fadd
 4781              	.LVL603:
 263:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 4782              		.loc 1 263 0
 4783 0476 CF4D     		ldr	r5, .L571+20
 262:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 4784              		.loc 1 262 0
 4785 0478 041C     		add	r4, r0, #0
 263:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 4786              		.loc 1 263 0
 4787 047a 291C     		add	r1, r5, #0
 4788 047c FFF7FEFF 		bl	__aeabi_fcmpgt
 4789              	.LVL604:
 4790 0480 0028     		cmp	r0, #0
 4791 0482 00D0     		beq	.LCB4223
 4792 0484 88E1     		b	.L515	@long jump
 4793              	.LCB4223:
 262:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 4794              		.loc 1 262 0
 4795 0486 CC48     		ldr	r0, .L571+24
 4796 0488 0460     		str	r4, [r0]
 4797              	.L514:
 270:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4798              		.loc 1 270 0
 4799 048a 201C     		add	r0, r4, #0
 4800 048c CB49     		ldr	r1, .L571+28
 4801 048e FFF7FEFF 		bl	__aeabi_fadd
 4802              	.LVL605:
 4803 0492 011C     		add	r1, r0, #0
 4804 0494 0020     		mov	r0, #0
 4805 0496 FFF7FEFF 		bl	TFC_SetServo
 4806              	.LVL606:
 4807              	.LBB130:
 4808              	.LBB131:
 4809              		.loc 1 729 0
 4810 049a C94B     		ldr	r3, .L571+32
 4811 049c C949     		ldr	r1, .L571+36
 4812 049e 1868     		ldr	r0, [r3]
 4813 04a0 FFF7FEFF 		bl	__aeabi_fmul
 4814              	.LVL607:
 4815 04a4 C44A     		ldr	r2, .L571+24
 4816 04a6 051C     		add	r5, r0, #0
 4817 04a8 C749     		ldr	r1, .L571+40
 4818 04aa 1068     		ldr	r0, [r2]
 4819              	.LVL608:
 4820 04ac FFF7FEFF 		bl	__aeabi_fmul
 4821              	.LVL609:
 4822 04b0 011C     		add	r1, r0, #0
 4823 04b2 281C     		add	r0, r5, #0
 4824 04b4 FFF7FEFF 		bl	__aeabi_fadd
 4825              	.LVL610:
 4826 04b8 C149     		ldr	r1, .L571+32
 4827              	.LBE131:
 4828              	.LBE130:
 271:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 4829              		.loc 1 271 0
 4830 04ba BF4C     		ldr	r4, .L571+24
 4831              	.LBB133:
 4832              	.LBB132:
 4833              		.loc 1 729 0
 4834 04bc 0860     		str	r0, [r1]
 4835              	.LBE132:
 4836              	.LBE133:
 271:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 4837              		.loc 1 271 0
 4838 04be 2060     		str	r0, [r4]
 4839 04c0 ADE6     		b	.L512
 4840              	.L562:
 250:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4841              		.loc 1 250 0
 4842 04c2 C248     		ldr	r0, .L571+44
 248:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 4843              		.loc 1 248 0
 4844 04c4 B94A     		ldr	r2, .L571+12
 250:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4845              		.loc 1 250 0
 4846 04c6 0468     		ldr	r4, [r0]
 4847 04c8 4546     		mov	r5, r8
 248:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 4848              		.loc 1 248 0
 4849 04ca 1370     		strb	r3, [r2]
 250:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4850              		.loc 1 250 0
 4851 04cc 211C     		mov	r1, r4
 4852 04ce 2868     		ldr	r0, [r5]
 4853 04d0 5A46     		mov	r2, fp
 4854 04d2 0694     		str	r4, [sp, #24]
 4855 04d4 FFF7FEFF 		bl	findLine
 4856              	.LVL611:
 4857              	.LBB134:
 4858              	.LBB135:
 687:../Sources/main.c **** 	if(s_mode_enable)
 4859              		.loc 1 687 0
 4860 04d8 BD49     		ldr	r1, .L571+48
 4861 04da 0B78     		ldrb	r3, [r1]
 4862 04dc 002B     		cmp	r3, #0
 4863 04de 00D0     		beq	.LCB4290
 4864 04e0 8FE0     		b	.L506	@long jump
 4865              	.LCB4290:
 4866 04e2 5846     		mov	r0, fp
 4867 04e4 837A     		ldrb	r3, [r0, #10]
 4868 04e6 417A     		ldrb	r1, [r0, #9]
 4869 04e8 5CB2     		sxtb	r4, r3
 707:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 4870              		.loc 1 707 0
 4871 04ea 0129     		cmp	r1, #1
 4872 04ec 00D1     		bne	.LCB4296
 4873 04ee A1E0     		b	.L510	@long jump
 4874              	.LCB4296:
 4875              	.L511:
 714:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 4876              		.loc 1 714 0
 4877 04f0 5846     		mov	r0, fp
 4878 04f2 C372     		strb	r3, [r0, #11]
 715:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 4879              		.loc 1 715 0
 4880 04f4 201C     		mov	r0, r4
 4881 04f6 FFF7FEFF 		bl	__aeabi_i2f
 4882              	.LVL612:
 4883 04fa B64B     		ldr	r3, .L571+52
 4884 04fc 1860     		str	r0, [r3]
 4885 04fe 89E6     		b	.L505
 4886              	.LVL613:
 4887              	.L561:
 4888              	.LBE135:
 4889              	.LBE134:
 227:../Sources/main.c **** 			TFC_Ticker[5]=0;
 4890              		.loc 1 227 0
 4891 0500 0022     		mov	r2, #0
 228:../Sources/main.c **** 			LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 4892              		.loc 1 228 0
 4893 0502 5846     		mov	r0, fp
 227:../Sources/main.c **** 			TFC_Ticker[5]=0;
 4894              		.loc 1 227 0
 4895 0504 4A61     		str	r2, [r1, #20]
 228:../Sources/main.c **** 			LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 4896              		.loc 1 228 0
 4897 0506 FFF7FEFF 		bl	LCDwriteState
 4898              	.LVL614:
 4899 050a 7AE6     		b	.L504
 4900              	.L560:
 220:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 4901              		.loc 1 220 0
 4902 050c 0025     		mov	r5, #0
 4903 050e 0561     		str	r5, [r0, #16]
 221:../Sources/main.c **** 		telemetrySendData();
 4904              		.loc 1 221 0
 4905 0510 FFF7FEFF 		bl	telemetrySendData
 4906              	.LVL615:
 222:../Sources/main.c **** 		telemetryReadData();
 4907              		.loc 1 222 0
 4908 0514 FFF7FEFF 		bl	telemetryReadData
 4909              	.LVL616:
 4910 0518 6EE6     		b	.L503
 4911              	.L559:
 213:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 4912              		.loc 1 213 0
 4913 051a 0023     		mov	r3, #0
 4914 051c A361     		str	r3, [r4, #24]
 214:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 4915              		.loc 1 214 0
 4916 051e FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 4917              	.LVL617:
 4918 0522 AD4A     		ldr	r2, .L571+56
 4919 0524 1060     		str	r0, [r2]
 4920 0526 62E6     		b	.L502
 4921              	.L558:
 207:../Sources/main.c **** 		stoplineJustDetected = 0;
 4922              		.loc 1 207 0
 4923 0528 AC4A     		ldr	r2, .L571+60
 4924 052a 0023     		mov	r3, #0
 208:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 4925              		.loc 1 208 0
 4926 052c 5846     		mov	r0, fp
 207:../Sources/main.c **** 		stoplineJustDetected = 0;
 4927              		.loc 1 207 0
 4928 052e 1370     		strb	r3, [r2]
 208:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 4929              		.loc 1 208 0
 4930 0530 8470     		strb	r4, [r0, #2]
 4931 0532 56E6     		b	.L501
 4932              	.LVL618:
 4933              	.L548:
 4934              	.LBE153:
 4935              	.LBE168:
 4936              	.LBB169:
 4937              	.LBB107:
 517:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 4938              		.loc 1 517 0
 4939 0534 9C4B     		ldr	r3, .L571+8
 4940 0536 8022     		mov	r2, #128
 4941 0538 9C68     		ldr	r4, [r3, #8]
 4942 053a 5000     		lsl	r0, r2, #1
 4943 053c 2043     		orr	r0, r4
 4944 053e 9860     		str	r0, [r3, #8]
 518:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 4945              		.loc 1 518 0
 4946 0540 5D68     		ldr	r5, [r3, #4]
 4947 0542 8021     		mov	r1, #128
 4948 0544 8C00     		lsl	r4, r1, #2
 4949 0546 2C43     		orr	r4, r5
 4950 0548 5C60     		str	r4, [r3, #4]
 4951              	.L540:
 547:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 4952              		.loc 1 547 0
 4953 054a 5868     		ldr	r0, [r3, #4]
 4954 054c 8022     		mov	r2, #128
 4955 054e D500     		lsl	r5, r2, #3
 4956 0550 0543     		orr	r5, r0
 4957 0552 5D60     		str	r5, [r3, #4]
 4958              	.L541:
 548:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 4959              		.loc 1 548 0
 4960 0554 9968     		ldr	r1, [r3, #8]
 4961 0556 8024     		mov	r4, #128
 4962 0558 2001     		lsl	r0, r4, #4
 4963 055a 0843     		orr	r0, r1
 4964 055c 9860     		str	r0, [r3, #8]
 4965 055e B2E5     		b	.L485
 4966              	.LVL619:
 4967              	.L554:
 4968              	.LBE107:
 4969              	.LBE169:
 4970              	.LBB170:
 4971              	.LBB116:
 367:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4972              		.loc 1 367 0
 4973 0560 0123     		mov	r3, #1
 366:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4974              		.loc 1 366 0
 4975 0562 0560     		str	r5, [r0]
 369:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4976              		.loc 1 369 0
 4977 0564 9549     		ldr	r1, .L571+28
 4978 0566 0020     		mov	r0, #0
 367:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4979              		.loc 1 367 0
 4980 0568 D370     		strb	r3, [r2, #3]
 370:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4981              		.loc 1 370 0
 4982 056a 8024     		mov	r4, #128
 369:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4983              		.loc 1 369 0
 4984 056c FFF7FEFF 		bl	TFC_SetServo
 4985              	.LVL620:
 370:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4986              		.loc 1 370 0
 4987 0570 9B49     		ldr	r1, .L571+64
 4988 0572 A003     		lsl	r0, r4, #14
 4989 0574 8860     		str	r0, [r1, #8]
 371:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4990              		.loc 1 371 0
 4991 0576 0020     		mov	r0, #0
 4992 0578 011C     		add	r1, r0, #0
 4993 057a FFF7FEFF 		bl	TFC_SetMotorPWM
 4994              	.LVL621:
 373:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4995              		.loc 1 373 0
 4996 057e 4246     		mov	r2, r8
 4997 0580 1068     		ldr	r0, [r2]
 4998 0582 FFF7FEFF 		bl	getTotalIntensity
 4999              	.LVL622:
 5000 0586 9749     		ldr	r1, .L571+68
 5001 0588 FFF7FEFF 		bl	calculateNewExposure
 5002              	.LVL623:
 5003 058c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 5004              	.LVL624:
 5005              	.LBB114:
 376:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 5006              		.loc 1 376 0
 5007 0590 8025     		mov	r5, #128
 5008              	.LBE114:
 373:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 5009              		.loc 1 373 0
 5010 0592 0024     		mov	r4, #0
 5011              	.LBB115:
 376:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 5012              		.loc 1 376 0
 5013 0594 6D00     		lsl	r5, r5, #1
 5014              	.LVL625:
 5015              	.L499:
 378:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 5016              		.loc 1 378 0
 5017 0596 4346     		mov	r3, r8
 5018 0598 1868     		ldr	r0, [r3]
 5019 059a 0119     		add	r1, r0, r4
 5020 059c 0A88     		ldrh	r2, [r1]
 5021 059e 301C     		mov	r0, r6
 5022 05a0 391C     		mov	r1, r7
 5023 05a2 FFF7FEFF 		bl	Qprintf
 5024              	.LVL626:
 5025 05a6 4246     		mov	r2, r8
 5026 05a8 1368     		ldr	r3, [r2]
 5027 05aa 0234     		add	r4, r4, #2
 5028 05ac 1819     		add	r0, r3, r4
 5029 05ae 0288     		ldrh	r2, [r0]
 5030 05b0 391C     		mov	r1, r7
 5031 05b2 301C     		mov	r0, r6
 5032 05b4 0234     		add	r4, r4, #2
 5033 05b6 FFF7FEFF 		bl	Qprintf
 5034              	.LVL627:
 376:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 5035              		.loc 1 376 0
 5036 05ba AC42     		cmp	r4, r5
 5037 05bc EBD1     		bne	.L499
 5038              	.LBE115:
 5039              	.LBE116:
 5040              	.LBE170:
 5041              	.LBB171:
 5042              	.LBB166:
 5043              	.LBB165:
 408:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 5044              		.loc 1 408 0
 5045 05be 301C     		mov	r0, r6
 5046 05c0 8949     		ldr	r1, .L571+72
 5047 05c2 FFF7FEFF 		bl	Qprintf
 5048              	.LVL628:
 5049 05c6 9EE5     		b	.L497
 5050              	.LVL629:
 5051              	.L549:
 5052              	.LBE165:
 5053              	.LBE166:
 5054              	.LBE171:
 5055              	.LBB172:
 5056              	.LBB108:
 524:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 5057              		.loc 1 524 0
 5058 05c8 774B     		ldr	r3, .L571+8
 5059 05ca 8020     		mov	r0, #128
 5060 05cc 5C68     		ldr	r4, [r3, #4]
 5061 05ce 4500     		lsl	r5, r0, #1
 5062 05d0 2543     		orr	r5, r4
 5063 05d2 5D60     		str	r5, [r3, #4]
 5064              	.L545:
 539:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 5065              		.loc 1 539 0
 5066 05d4 5968     		ldr	r1, [r3, #4]
 5067 05d6 8022     		mov	r2, #128
 5068 05d8 9400     		lsl	r4, r2, #2
 5069 05da 0C43     		orr	r4, r1
 5070 05dc 5C60     		str	r4, [r3, #4]
 5071              	.L543:
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 5072              		.loc 1 533 0
 5073 05de 9868     		ldr	r0, [r3, #8]
 5074 05e0 8025     		mov	r5, #128
 5075 05e2 E900     		lsl	r1, r5, #3
 5076 05e4 0143     		orr	r1, r0
 5077 05e6 9960     		str	r1, [r3, #8]
 5078 05e8 B4E7     		b	.L541
 5079              	.L550:
 531:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 5080              		.loc 1 531 0
 5081 05ea 6F4B     		ldr	r3, .L571+8
 5082 05ec 8024     		mov	r4, #128
 5083 05ee 5968     		ldr	r1, [r3, #4]
 5084 05f0 6000     		lsl	r0, r4, #1
 5085 05f2 0843     		orr	r0, r1
 5086 05f4 5860     		str	r0, [r3, #4]
 532:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 5087              		.loc 1 532 0
 5088 05f6 9D68     		ldr	r5, [r3, #8]
 5089 05f8 8022     		mov	r2, #128
 5090 05fa 9100     		lsl	r1, r2, #2
 5091 05fc 2943     		orr	r1, r5
 5092 05fe 9960     		str	r1, [r3, #8]
 5093 0600 EDE7     		b	.L543
 5094              	.LVL630:
 5095              	.L506:
 5096              	.LBE108:
 5097              	.LBE172:
 5098              	.LBB173:
 5099              	.LBB154:
 5100              	.LBB139:
 5101              	.LBB136:
 689:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 5102              		.loc 1 689 0
 5103 0602 5D46     		mov	r5, fp
 5104 0604 AB7A     		ldrb	r3, [r5, #10]
 5105 0606 5CB2     		sxtb	r4, r3
 5106 0608 092C     		cmp	r4, #9
 5107 060a 00DD     		ble	.LCB4522
 5108 060c B7E0     		b	.L508	@long jump
 5109              	.LCB4522:
 690:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 5110              		.loc 1 690 0
 5111 060e 2A7B     		ldrb	r2, [r5, #12]
 5112 0610 462A     		cmp	r2, #70
 5113 0612 00D8     		bhi	.LCB4525
 5114 0614 B3E0     		b	.L508	@long jump
 5115              	.LCB4525:
 691:../Sources/main.c **** 				&& carState->crossSection == NO)
 5116              		.loc 1 691 0
 5117 0616 A979     		ldrb	r1, [r5, #6]
 5118 0618 0029     		cmp	r1, #0
 5119 061a 00D0     		beq	.LCB4528
 5120 061c AFE0     		b	.L508	@long jump
 5121              	.LCB4528:
 693:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 5122              		.loc 1 693 0
 5123 061e 4946     		mov	r1, r9
 5124 0620 C869     		ldr	r0, [r1, #28]
 5125 0622 724D     		ldr	r5, .L571+76
 5126 0624 A842     		cmp	r0, r5
 5127 0626 00D9     		bls	.LCB4533
 5128 0628 38E1     		b	.L509	@long jump
 5129              	.LCB4533:
 5130 062a 5A46     		mov	r2, fp
 5131 062c 517A     		ldrb	r1, [r2, #9]
 707:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 5132              		.loc 1 707 0
 5133 062e 0129     		cmp	r1, #1
 5134 0630 00D0     		beq	.LCB4537
 5135 0632 5DE7     		b	.L511	@long jump
 5136              	.LCB4537:
 5137              	.L510:
 709:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5138              		.loc 1 709 0
 5139 0634 6749     		ldr	r1, .L571+52
 5140 0636 0868     		ldr	r0, [r1]
 5141 0638 6D49     		ldr	r1, .L571+80
 5142 063a FFF7FEFF 		bl	__aeabi_fmul
 5143              	.LVL631:
 5144 063e 051C     		add	r5, r0, #0
 5145 0640 201C     		mov	r0, r4
 5146 0642 FFF7FEFF 		bl	__aeabi_i2f
 5147              	.LVL632:
 5148 0646 6B49     		ldr	r1, .L571+84
 5149 0648 FFF7FEFF 		bl	__aeabi_fmul
 5150              	.LVL633:
 5151 064c 011C     		add	r1, r0, #0
 5152 064e 281C     		add	r0, r5, #0
 5153 0650 FFF7FEFF 		bl	__aeabi_fadd
 5154              	.LVL634:
 5155 0654 5F4C     		ldr	r4, .L571+52
 710:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5156              		.loc 1 710 0
 5157 0656 FC23     		mov	r3, #252
 5158 0658 9905     		lsl	r1, r3, #22
 709:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5159              		.loc 1 709 0
 5160 065a 2060     		str	r0, [r4]
 710:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5161              		.loc 1 710 0
 5162 065c FFF7FEFF 		bl	__aeabi_fadd
 5163              	.LVL635:
 5164 0660 FFF7FEFF 		bl	__aeabi_f2uiz
 5165              	.LVL636:
 5166 0664 5A46     		mov	r2, fp
 5167 0666 D072     		strb	r0, [r2, #11]
 5168 0668 D4E5     		b	.L505
 5169              	.LVL637:
 5170              	.L551:
 5171              	.LBE136:
 5172              	.LBE139:
 5173              	.LBE154:
 5174              	.LBE173:
 5175              	.LBB174:
 5176              	.LBB109:
 538:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5177              		.loc 1 538 0
 5178 066a 4F4B     		ldr	r3, .L571+8
 5179 066c 8022     		mov	r2, #128
 5180 066e 9868     		ldr	r0, [r3, #8]
 5181 0670 5500     		lsl	r5, r2, #1
 5182 0672 0543     		orr	r5, r0
 5183 0674 9D60     		str	r5, [r3, #8]
 5184 0676 ADE7     		b	.L545
 5185              	.LVL638:
 5186              	.L565:
 5187              	.LBE109:
 5188              	.LBE174:
 5189              	.LBB175:
 5190              	.LBB155:
 5191              	.LBB140:
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5192              		.loc 1 287 0
 5193 0678 4F4C     		ldr	r4, .L571+24
 5194 067a 2568     		ldr	r5, [r4]
 5195 067c 281C     		add	r0, r5, #0
 5196 067e 0595     		str	r5, [sp, #20]
 5197 0680 FFF7FEFF 		bl	getRadiusRoot
 5198              	.LVL639:
 5199 0684 5C49     		ldr	r1, .L571+88
 5200 0686 021C     		add	r2, r0, #0
 5201 0688 5846     		mov	r0, fp
 5202 068a FFF7FEFF 		bl	getDesiredSpeed
 5203              	.LVL640:
 5204              	.LBB141:
 5205              	.LBB142:
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5206              		.loc 1 722 0
 5207 068e 5B4A     		ldr	r2, .L571+92
 5208              	.LBE142:
 5209              	.LBE141:
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5210              		.loc 1 287 0
 5211 0690 8246     		mov	sl, r0
 5212              	.LVL641:
 5213              	.LBB146:
 5214              	.LBB143:
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5215              		.loc 1 722 0
 5216 0692 5749     		ldr	r1, .L571+80
 5217 0694 1068     		ldr	r0, [r2]
 5218              	.LVL642:
 5219 0696 FFF7FEFF 		bl	__aeabi_fmul
 5220              	.LVL643:
 5221 069a FFF7FEFF 		bl	__aeabi_f2d
 5222              	.LVL644:
 5223 069e 041C     		mov	r4, r0
 5224 06a0 5046     		mov	r0, sl
 5225 06a2 0D1C     		mov	r5, r1
 5226 06a4 FFF7FEFF 		bl	__aeabi_f2d
 5227              	.LVL645:
 5228 06a8 3E4B     		ldr	r3, .L571+4
 5229 06aa 3D4A     		ldr	r2, .L571
 5230 06ac FFF7FEFF 		bl	__aeabi_dmul
 5231              	.LVL646:
 5232 06b0 021C     		mov	r2, r0
 5233 06b2 0B1C     		mov	r3, r1
 5234 06b4 201C     		mov	r0, r4
 5235 06b6 291C     		mov	r1, r5
 5236 06b8 FFF7FEFF 		bl	__aeabi_dadd
 5237              	.LVL647:
 5238 06bc FFF7FEFF 		bl	__aeabi_d2f
 5239              	.LVL648:
 5240              	.LBE143:
 5241              	.LBE146:
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5242              		.loc 1 287 0
 5243 06c0 4F4B     		ldr	r3, .L571+96
 5244              	.LBB147:
 5245              	.LBB144:
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5246              		.loc 1 722 0
 5247 06c2 4E49     		ldr	r1, .L571+92
 5248              	.LBE144:
 5249              	.LBE147:
 287:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5250              		.loc 1 287 0
 5251 06c4 1860     		str	r0, [r3]
 5252              	.LBB148:
 5253              	.LBB145:
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5254              		.loc 1 722 0
 5255 06c6 0860     		str	r0, [r1]
 5256              	.LBE145:
 5257              	.LBE148:
 290:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 5258              		.loc 1 290 0
 5259 06c8 3B48     		ldr	r0, .L571+24
 5260 06ca 0021     		mov	r1, #0
 5261 06cc 0268     		ldr	r2, [r0]
 5262 06ce 101C     		add	r0, r2, #0
 5263 06d0 0492     		str	r2, [sp, #16]
 5264 06d2 FFF7FEFF 		bl	getActiveDifferentialModifier
 5265              	.LVL649:
 5266 06d6 384C     		ldr	r4, .L571+24
 5267 06d8 051C     		add	r5, r0, #0
 5268              	.LVL650:
 5269 06da 2168     		ldr	r1, [r4]
 5270 06dc 0391     		str	r1, [sp, #12]
 5271 06de 081C     		add	r0, r1, #0
 5272              	.LVL651:
 5273 06e0 0121     		mov	r1, #1
 5274 06e2 FFF7FEFF 		bl	getActiveDifferentialModifier
 5275              	.LVL652:
 5276 06e6 041C     		add	r4, r0, #0
 5277              	.LVL653:
 294:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 5278              		.loc 1 294 0
 5279 06e8 0020     		mov	r0, #0
 5280              	.LVL654:
 5281 06ea FFF7FEFF 		bl	getSpeed
 5282              	.LVL655:
 5283 06ee 454B     		ldr	r3, .L571+100
 5284 06f0 1860     		str	r0, [r3]
 295:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 5285              		.loc 1 295 0
 5286 06f2 0120     		mov	r0, #1
 5287 06f4 FFF7FEFF 		bl	getSpeed
 5288              	.LVL656:
 5289 06f8 434A     		ldr	r2, .L571+104
 5290 06fa 1060     		str	r0, [r2]
 307:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 5291              		.loc 1 307 0
 5292 06fc 5846     		mov	r0, fp
 5293 06fe 4178     		ldrb	r1, [r0, #1]
 5294 0700 0129     		cmp	r1, #1
 5295 0702 00D0     		beq	.LCB4683
 5296 0704 FFE4     		b	.L497	@long jump
 5297              	.LCB4683:
 310:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 5298              		.loc 1 310 0
 5299 0706 414B     		ldr	r3, .L571+108
 5300 0708 4149     		ldr	r1, .L571+112
 5301 070a 1868     		ldr	r0, [r3]
 5302 070c FFF7FEFF 		bl	__aeabi_fdiv
 5303              	.LVL657:
 5304 0710 0B90     		str	r0, [sp, #44]
 5305 0712 281C     		add	r0, r5, #0
 5306 0714 3A4D     		ldr	r5, .L571+96
 5307              	.LVL658:
 5308 0716 2968     		ldr	r1, [r5]
 5309 0718 FFF7FEFF 		bl	__aeabi_fmul
 5310              	.LVL659:
 5311 071c 394A     		ldr	r2, .L571+100
 5312 071e 8246     		mov	sl, r0
 5313              	.LVL660:
 5314 0720 0020     		mov	r0, #0
 5315 0722 1568     		ldr	r5, [r2]
 5316 0724 FFF7FEFF 		bl	isANewmeasurementAvailable
 5317              	.LVL661:
 5318 0728 0023     		mov	r3, #0
 5319 072a 021C     		mov	r2, r0
 5320 072c 291C     		add	r1, r5, #0
 5321 072e 5046     		mov	r0, sl
 5322 0730 FFF7FEFF 		bl	getDesiredMotorPWM
 5323              	.LVL662:
 5324 0734 011C     		add	r1, r0, #0
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 5325              		.loc 1 309 0
 5326 0736 0B98     		ldr	r0, [sp, #44]
 5327 0738 FFF7FEFF 		bl	__aeabi_fmul
 5328              	.LVL663:
 5329 073c 0B90     		str	r0, [sp, #44]
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 5330              		.loc 1 311 0
 5331 073e 3348     		ldr	r0, .L571+108
 5332 0740 3349     		ldr	r1, .L571+112
 5333 0742 0068     		ldr	r0, [r0]
 5334 0744 FFF7FEFF 		bl	__aeabi_fdiv
 5335              	.LVL664:
 5336 0748 051C     		add	r5, r0, #0
 5337 074a 201C     		add	r0, r4, #0
 5338 074c 2C4C     		ldr	r4, .L571+96
 5339              	.LVL665:
 5340 074e 2168     		ldr	r1, [r4]
 5341 0750 FFF7FEFF 		bl	__aeabi_fmul
 5342              	.LVL666:
 5343 0754 2C49     		ldr	r1, .L571+104
 5344 0756 8246     		mov	sl, r0
 5345 0758 0120     		mov	r0, #1
 5346 075a 0C68     		ldr	r4, [r1]
 5347 075c FFF7FEFF 		bl	isANewmeasurementAvailable
 5348              	.LVL667:
 5349 0760 211C     		add	r1, r4, #0
 5350 0762 021C     		mov	r2, r0
 5351 0764 0123     		mov	r3, #1
 5352 0766 5046     		mov	r0, sl
 5353 0768 FFF7FEFF 		bl	getDesiredMotorPWM
 5354              	.LVL668:
 5355 076c 011C     		add	r1, r0, #0
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 5356              		.loc 1 309 0
 5357 076e 281C     		add	r0, r5, #0
 5358 0770 FFF7FEFF 		bl	__aeabi_fmul
 5359              	.LVL669:
 5360 0774 011C     		add	r1, r0, #0
 5361 0776 0B98     		ldr	r0, [sp, #44]
 5362 0778 FFF7FEFF 		bl	TFC_SetMotorPWM
 5363              	.LVL670:
 5364 077c C3E4     		b	.L497
 5365              	.LVL671:
 5366              	.L508:
 5367              	.LBE140:
 5368              	.LBB149:
 5369              	.LBB137:
 700:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5370              		.loc 1 700 0
 5371 077e 0020     		mov	r0, #0
 5372 0780 5D46     		mov	r5, fp
 701:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5373              		.loc 1 701 0
 5374 0782 4A46     		mov	r2, r9
 700:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5375              		.loc 1 700 0
 5376 0784 6872     		strb	r0, [r5, #9]
 701:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5377              		.loc 1 701 0
 5378 0786 D061     		str	r0, [r2, #28]
 5379 0788 B2E6     		b	.L511
 5380              	.LVL672:
 5381              	.L553:
 5382              	.LBE137:
 5383              	.LBE149:
 5384              	.LBE155:
 5385              	.LBE175:
 5386              	.LBB176:
 5387              	.LBB110:
 552:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5388              		.loc 1 552 0
 5389 078a 074B     		ldr	r3, .L571+8
 5390 078c 8025     		mov	r5, #128
 5391 078e 9868     		ldr	r0, [r3, #8]
 5392 0790 6900     		lsl	r1, r5, #1
 5393 0792 0143     		orr	r1, r0
 5394 0794 9960     		str	r1, [r3, #8]
 5395 0796 4BE6     		b	.L544
 5396              	.LVL673:
 5397              	.L515:
 5398              	.LBE110:
 5399              	.LBE176:
 5400              	.LBB177:
 5401              	.LBB156:
 265:../Sources/main.c **** 						servoValue=STEERING_LIMIT_UPPER;
 5402              		.loc 1 265 0
 5403 0798 0749     		ldr	r1, .L571+24
 5404 079a 2C1C     		add	r4, r5, #0
 5405 079c 0D60     		str	r5, [r1]
 5406 079e 74E6     		b	.L514
 5407              	.L572:
 5408              		.align	3
 5409              	.L571:
 5410 07a0 9A999999 		.word	-1717986918
 5411 07a4 9999B93F 		.word	1069128089
 5412 07a8 40F00F40 		.word	1074786368
 5413 07ac 00000000 		.word	.LANCHOR12
 5414 07b0 8FC2753C 		.word	1014350479
 5415 07b4 F628DC3E 		.word	1054615798
 5416 07b8 00000000 		.word	.LANCHOR5
 5417 07bc CDCC4C3D 		.word	1028443341
 5418 07c0 00000000 		.word	.LANCHOR15
 5419 07c4 CDCC4C3F 		.word	1061997773
 5420 07c8 CCCC4C3E 		.word	1045220556
 5421 07cc 00000000 		.word	LineScanImage1
 5422 07d0 00000000 		.word	.LANCHOR13
 5423 07d4 00000000 		.word	.LANCHOR14
 5424 07d8 00000000 		.word	.LANCHOR2
 5425 07dc 00000000 		.word	.LANCHOR11
 5426 07e0 00F10F40 		.word	1074786560
 5427 07e4 E0930400 		.word	300000
 5428 07e8 04000000 		.word	.LC5
 5429 07ec 94110000 		.word	4500
 5430 07f0 6666663F 		.word	1063675494
 5431 07f4 D0CCCC3D 		.word	1036831952
 5432 07f8 00807A43 		.word	1132101632
 5433 07fc 00000000 		.word	.LANCHOR18
 5434 0800 00000000 		.word	.LANCHOR4
 5435 0804 00000000 		.word	.LANCHOR19
 5436 0808 00000000 		.word	.LANCHOR20
 5437 080c 00000000 		.word	incline_speed
 5438 0810 0000C842 		.word	1120403456
 5439              	.LVL674:
 5440              	.L552:
 5441              	.LBE156:
 5442              	.LBE177:
 5443              	.LBB178:
 5444              	.LBB111:
 545:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5445              		.loc 1 545 0
 5446 0814 264B     		ldr	r3, .L573
 5447 0816 8022     		mov	r2, #128
 5448 0818 9C68     		ldr	r4, [r3, #8]
 5449 081a 5000     		lsl	r0, r2, #1
 5450 081c 2043     		orr	r0, r4
 5451 081e 9860     		str	r0, [r3, #8]
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 5452              		.loc 1 546 0
 5453 0820 9D68     		ldr	r5, [r3, #8]
 5454 0822 8021     		mov	r1, #128
 5455 0824 8C00     		lsl	r4, r1, #2
 5456 0826 2C43     		orr	r4, r5
 5457 0828 9C60     		str	r4, [r3, #8]
 5458 082a 8EE6     		b	.L540
 5459              	.LVL675:
 5460              	.L566:
 5461              	.LBE111:
 5462              	.LBE178:
 5463              	.LBB179:
 5464              	.LBB157:
 320:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 5465              		.loc 1 320 0
 5466 082c 8020     		mov	r0, #128
 5467 082e 214B     		ldr	r3, .L573+4
 5468 0830 8103     		lsl	r1, r0, #14
 321:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 5469              		.loc 1 321 0
 5470 0832 0020     		mov	r0, #0
 320:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 5471              		.loc 1 320 0
 5472 0834 9960     		str	r1, [r3, #8]
 321:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 5473              		.loc 1 321 0
 5474 0836 011C     		add	r1, r0, #0
 5475 0838 FFF7FEFF 		bl	TFC_SetMotorPWM
 5476              	.LVL676:
 5477 083c 63E4     		b	.L497
 5478              	.L568:
 258:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 5479              		.loc 1 258 0
 5480 083e 1E4A     		ldr	r2, .L573+8
 5481 0840 1460     		str	r4, [r2]
 5482 0842 22E6     		b	.L514
 5483              	.L564:
 279:../Sources/main.c **** 			findStop(carState);
 5484              		.loc 1 279 0
 5485 0844 5846     		mov	r0, fp
 5486 0846 FFF7FEFF 		bl	findStop
 5487              	.LVL677:
 5488 084a F3E4     		b	.L517
 5489              	.L520:
 5490              	.LBB150:
 345:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 5491              		.loc 1 345 0
 5492 084c 1B4A     		ldr	r2, .L573+12
 5493 084e 1C49     		ldr	r1, .L573+16
 5494 0850 4846     		mov	r0, r9
 5495 0852 4569     		ldr	r5, [r0, #20]
 5496 0854 1468     		ldr	r4, [r2]
 5497 0856 0868     		ldr	r0, [r1]
 5498 0858 2B1B     		sub	r3, r5, r4
 5499 085a 8342     		cmp	r3, r0
 5500 085c 00D2     		bcs	.LCB4890
 5501 085e 52E4     		b	.L497	@long jump
 5502              	.LCB4890:
 5503              	.LBB127:
 347:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 5504              		.loc 1 347 0
 5505 0860 0020     		mov	r0, #0
 5506 0862 FFF7FEFF 		bl	getSpeed
 5507              	.LVL678:
 5508 0866 051C     		add	r5, r0, #0
 5509              	.LVL679:
 5510 0868 0120     		mov	r0, #1
 5511              	.LVL680:
 5512 086a FFF7FEFF 		bl	getSpeed
 5513              	.LVL681:
 349:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 5514              		.loc 1 349 0
 5515 086e 8022     		mov	r2, #128
 347:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 5516              		.loc 1 347 0
 5517 0870 041C     		add	r4, r0, #0
 5518              	.LVL682:
 349:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 5519              		.loc 1 349 0
 5520 0872 D105     		lsl	r1, r2, #23
 5521 0874 281C     		add	r0, r5, #0
 5522              	.LVL683:
 5523 0876 FFF7FEFF 		bl	__aeabi_fcmpgt
 5524              	.LVL684:
 5525 087a 0028     		cmp	r0, #0
 5526 087c 06D1     		bne	.L522
 5527 087e 8023     		mov	r3, #128
 5528 0880 201C     		add	r0, r4, #0
 5529 0882 D905     		lsl	r1, r3, #23
 5530 0884 FFF7FEFF 		bl	__aeabi_fcmpgt
 5531              	.LVL685:
 5532 0888 0028     		cmp	r0, #0
 5533 088a 0BD0     		beq	.L537
 5534              	.L522:
 351:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 5535              		.loc 1 351 0
 5536 088c BF21     		mov	r1, #191
 5537 088e 0806     		lsl	r0, r1, #24
 5538 0890 011C     		add	r1, r0, #0
 5539 0892 FFF7FEFF 		bl	TFC_SetMotorPWM
 5540              	.LVL686:
 5541 0896 36E4     		b	.L497
 5542              	.LVL687:
 5543              	.L567:
 5544              	.LBE127:
 5545              	.LBB128:
 335:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 5546              		.loc 1 335 0
 5547 0898 0A4D     		ldr	r5, .L573+20
 5548 089a 02E5     		b	.L521
 5549              	.LVL688:
 5550              	.L509:
 5551              	.LBE128:
 5552              	.LBE150:
 5553              	.LBB151:
 5554              	.LBB138:
 695:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 5555              		.loc 1 695 0
 5556 089c 0125     		mov	r5, #1
 5557 089e 5A46     		mov	r2, fp
 5558 08a0 5572     		strb	r5, [r2, #9]
 5559 08a2 C7E6     		b	.L510
 5560              	.LVL689:
 5561              	.L537:
 5562              	.LBE138:
 5563              	.LBE151:
 5564              	.LBB152:
 5565              	.LBB129:
 355:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 5566              		.loc 1 355 0
 5567 08a4 0020     		mov	r0, #0
 5568 08a6 011C     		add	r1, r0, #0
 5569 08a8 FFF7FEFF 		bl	TFC_SetMotorPWM
 5570              	.LVL690:
 5571 08ac 2BE4     		b	.L497
 5572              	.L574:
 5573 08ae C046     		.align	2
 5574              	.L573:
 5575 08b0 40F00F40 		.word	1074786368
 5576 08b4 00F10F40 		.word	1074786560
 5577 08b8 00000000 		.word	.LANCHOR5
 5578 08bc 00000000 		.word	.LANCHOR21
 5579 08c0 00000000 		.word	.LANCHOR22
 5580 08c4 CDCCCC3E 		.word	1053609165
 5581              	.LBE129:
 5582              	.LBE152:
 5583              	.LBE157:
 5584              	.LBE179:
 5585              		.cfi_endproc
 5586              	.LFE0:
 5588              		.section	.text.processRaceLine,"ax",%progbits
 5589              		.align	2
 5590              		.global	processRaceLine
 5591              		.code	16
 5592              		.thumb_func
 5594              	processRaceLine:
 5595              	.LFB14:
 686:../Sources/main.c **** {
 5596              		.loc 1 686 0
 5597              		.cfi_startproc
 5598              	.LVL691:
 5599 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5600              	.LCFI20:
 5601              		.cfi_def_cfa_offset 24
 5602              		.cfi_offset 3, -24
 5603              		.cfi_offset 4, -20
 5604              		.cfi_offset 5, -16
 5605              		.cfi_offset 6, -12
 5606              		.cfi_offset 7, -8
 5607              		.cfi_offset 14, -4
 687:../Sources/main.c **** 	if(s_mode_enable)
 5608              		.loc 1 687 0
 5609 0002 234B     		ldr	r3, .L585
 686:../Sources/main.c **** {
 5610              		.loc 1 686 0
 5611 0004 041C     		mov	r4, r0
 687:../Sources/main.c **** 	if(s_mode_enable)
 5612              		.loc 1 687 0
 5613 0006 1878     		ldrb	r0, [r3]
 5614              	.LVL692:
 5615 0008 0028     		cmp	r0, #0
 5616 000a 0CD1     		bne	.L576
 5617 000c 617A     		ldrb	r1, [r4, #9]
 5618 000e A67A     		ldrb	r6, [r4, #10]
 5619              	.L577:
 707:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 5620              		.loc 1 707 0
 5621 0010 0129     		cmp	r1, #1
 5622 0012 20D0     		beq	.L583
 5623              	.L581:
 715:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 5624              		.loc 1 715 0
 5625 0014 70B2     		sxtb	r0, r6
 5626 0016 FFF7FEFF 		bl	__aeabi_i2f
 5627              	.LVL693:
 714:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 5628              		.loc 1 714 0
 5629 001a 351C     		mov	r5, r6
 5630 001c 1D4E     		ldr	r6, .L585+4
 715:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 5631              		.loc 1 715 0
 5632 001e 071C     		add	r7, r0, #0
 5633              	.L582:
 5634 0020 3760     		str	r7, [r6]
 5635 0022 E572     		strb	r5, [r4, #11]
 717:../Sources/main.c **** }
 5636              		.loc 1 717 0
 5637              		@ sp needed for prologue
 5638              	.LVL694:
 5639 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5640              	.LVL695:
 5641              	.L576:
 689:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 5642              		.loc 1 689 0
 5643 0026 A67A     		ldrb	r6, [r4, #10]
 5644 0028 75B2     		sxtb	r5, r6
 5645 002a 092D     		cmp	r5, #9
 5646 002c 0DDC     		bgt	.L578
 690:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 5647              		.loc 1 690 0
 5648 002e 227B     		ldrb	r2, [r4, #12]
 5649 0030 462A     		cmp	r2, #70
 5650 0032 0AD9     		bls	.L578
 691:../Sources/main.c **** 				&& carState->crossSection == NO)
 5651              		.loc 1 691 0
 5652 0034 A179     		ldrb	r1, [r4, #6]
 5653 0036 0029     		cmp	r1, #0
 5654 0038 07D1     		bne	.L578
 693:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 5655              		.loc 1 693 0
 5656 003a 174B     		ldr	r3, .L585+8
 5657 003c 174A     		ldr	r2, .L585+12
 5658 003e D869     		ldr	r0, [r3, #28]
 5659 0040 9042     		cmp	r0, r2
 5660 0042 22D9     		bls	.L584
 695:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 5661              		.loc 1 695 0
 5662 0044 0123     		mov	r3, #1
 5663 0046 6372     		strb	r3, [r4, #9]
 5664 0048 06E0     		b	.L580
 5665              	.L578:
 701:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5666              		.loc 1 701 0
 5667 004a 134F     		ldr	r7, .L585+8
 700:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5668              		.loc 1 700 0
 5669 004c 0025     		mov	r5, #0
 5670 004e 6572     		strb	r5, [r4, #9]
 701:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5671              		.loc 1 701 0
 5672 0050 FD61     		str	r5, [r7, #28]
 5673 0052 A67A     		ldrb	r6, [r4, #10]
 5674 0054 DEE7     		b	.L581
 5675              	.L583:
 5676 0056 75B2     		sxtb	r5, r6
 5677              	.L580:
 709:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5678              		.loc 1 709 0
 5679 0058 0E4E     		ldr	r6, .L585+4
 5680 005a 1149     		ldr	r1, .L585+16
 5681 005c 3068     		ldr	r0, [r6]
 5682 005e FFF7FEFF 		bl	__aeabi_fmul
 5683              	.LVL696:
 5684 0062 071C     		add	r7, r0, #0
 5685 0064 281C     		mov	r0, r5
 5686 0066 FFF7FEFF 		bl	__aeabi_i2f
 5687              	.LVL697:
 5688 006a 0E49     		ldr	r1, .L585+20
 5689 006c FFF7FEFF 		bl	__aeabi_fmul
 5690              	.LVL698:
 5691 0070 011C     		add	r1, r0, #0
 5692 0072 381C     		add	r0, r7, #0
 5693 0074 FFF7FEFF 		bl	__aeabi_fadd
 5694              	.LVL699:
 710:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5695              		.loc 1 710 0
 5696 0078 FC22     		mov	r2, #252
 5697 007a 9105     		lsl	r1, r2, #22
 709:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5698              		.loc 1 709 0
 5699 007c 071C     		add	r7, r0, #0
 710:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5700              		.loc 1 710 0
 5701 007e FFF7FEFF 		bl	__aeabi_fadd
 5702              	.LVL700:
 5703 0082 FFF7FEFF 		bl	__aeabi_f2uiz
 5704              	.LVL701:
 5705 0086 C5B2     		uxtb	r5, r0
 5706 0088 CAE7     		b	.L582
 5707              	.L584:
 5708 008a 617A     		ldrb	r1, [r4, #9]
 5709 008c C0E7     		b	.L577
 5710              	.L586:
 5711 008e C046     		.align	2
 5712              	.L585:
 5713 0090 00000000 		.word	.LANCHOR13
 5714 0094 00000000 		.word	.LANCHOR14
 5715 0098 00000000 		.word	TFC_Ticker
 5716 009c 94110000 		.word	4500
 5717 00a0 6666663F 		.word	1063675494
 5718 00a4 D0CCCC3D 		.word	1036831952
 5719              		.cfi_endproc
 5720              	.LFE14:
 5722              		.section	.text.targetSpeedAverage,"ax",%progbits
 5723              		.align	2
 5724              		.global	targetSpeedAverage
 5725              		.code	16
 5726              		.thumb_func
 5728              	targetSpeedAverage:
 5729              	.LFB15:
 720:../Sources/main.c **** {
 5730              		.loc 1 720 0
 5731              		.cfi_startproc
 5732              	.LVL702:
 5733 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5734              	.LCFI21:
 5735              		.cfi_def_cfa_offset 24
 5736              		.cfi_offset 3, -24
 5737              		.cfi_offset 4, -20
 5738              		.cfi_offset 5, -16
 5739              		.cfi_offset 6, -12
 5740              		.cfi_offset 7, -8
 5741              		.cfi_offset 14, -4
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5742              		.loc 1 722 0
 5743 0002 0F4E     		ldr	r6, .L588+8
 720:../Sources/main.c **** {
 5744              		.loc 1 720 0
 5745 0004 071C     		add	r7, r0, #0
 722:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5746              		.loc 1 722 0
 5747 0006 0F49     		ldr	r1, .L588+12
 5748 0008 3068     		ldr	r0, [r6]
 5749              	.LVL703:
 5750 000a FFF7FEFF 		bl	__aeabi_fmul
 5751              	.LVL704:
 5752 000e FFF7FEFF 		bl	__aeabi_f2d
 5753              	.LVL705:
 5754 0012 041C     		mov	r4, r0
 5755 0014 381C     		add	r0, r7, #0
 5756 0016 0D1C     		mov	r5, r1
 5757 0018 FFF7FEFF 		bl	__aeabi_f2d
 5758              	.LVL706:
 5759 001c 074B     		ldr	r3, .L588+4
 5760 001e 064A     		ldr	r2, .L588
 5761 0020 FFF7FEFF 		bl	__aeabi_dmul
 5762              	.LVL707:
 5763 0024 021C     		mov	r2, r0
 5764 0026 0B1C     		mov	r3, r1
 5765 0028 201C     		mov	r0, r4
 5766 002a 291C     		mov	r1, r5
 5767 002c FFF7FEFF 		bl	__aeabi_dadd
 5768              	.LVL708:
 5769 0030 FFF7FEFF 		bl	__aeabi_d2f
 5770              	.LVL709:
 5771 0034 3060     		str	r0, [r6]
 724:../Sources/main.c **** }
 5772              		.loc 1 724 0
 5773              		@ sp needed for prologue
 5774              	.LVL710:
 5775 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5776              	.L589:
 5777              		.align	3
 5778              	.L588:
 5779 0038 9A999999 		.word	-1717986918
 5780 003c 9999B93F 		.word	1069128089
 5781 0040 00000000 		.word	.LANCHOR18
 5782 0044 6666663F 		.word	1063675494
 5783              		.cfi_endproc
 5784              	.LFE15:
 5786              		.section	.text.servoValueAverage,"ax",%progbits
 5787              		.align	2
 5788              		.global	servoValueAverage
 5789              		.code	16
 5790              		.thumb_func
 5792              	servoValueAverage:
 5793              	.LFB16:
 727:../Sources/main.c **** {
 5794              		.loc 1 727 0
 5795              		.cfi_startproc
 5796              	.LVL711:
 5797 0000 70B5     		push	{r4, r5, r6, lr}
 5798              	.LCFI22:
 5799              		.cfi_def_cfa_offset 16
 5800              		.cfi_offset 4, -16
 5801              		.cfi_offset 5, -12
 5802              		.cfi_offset 6, -8
 5803              		.cfi_offset 14, -4
 5804              		.loc 1 729 0
 5805 0002 084C     		ldr	r4, .L591
 727:../Sources/main.c **** {
 5806              		.loc 1 727 0
 5807 0004 061C     		add	r6, r0, #0
 5808              		.loc 1 729 0
 5809 0006 0849     		ldr	r1, .L591+4
 5810 0008 2068     		ldr	r0, [r4]
 5811              	.LVL712:
 5812 000a FFF7FEFF 		bl	__aeabi_fmul
 5813              	.LVL713:
 5814 000e 0749     		ldr	r1, .L591+8
 5815 0010 051C     		add	r5, r0, #0
 5816 0012 301C     		add	r0, r6, #0
 5817 0014 FFF7FEFF 		bl	__aeabi_fmul
 5818              	.LVL714:
 5819 0018 011C     		add	r1, r0, #0
 5820 001a 281C     		add	r0, r5, #0
 5821 001c FFF7FEFF 		bl	__aeabi_fadd
 5822              	.LVL715:
 5823 0020 2060     		str	r0, [r4]
 730:../Sources/main.c **** 	return previousServoValue;
 731:../Sources/main.c **** }
 5824              		.loc 1 731 0
 5825              		@ sp needed for prologue
 5826              	.LVL716:
 5827 0022 70BD     		pop	{r4, r5, r6, pc}
 5828              	.L592:
 5829              		.align	2
 5830              	.L591:
 5831 0024 00000000 		.word	.LANCHOR15
 5832 0028 CDCC4C3F 		.word	1061997773
 5833 002c CCCC4C3E 		.word	1045220556
 5834              		.cfi_endproc
 5835              	.LFE16:
 5837              		.global	test_time
 5838              		.global	test_begin
 5839              		.global	stopline_enable
 5840              		.global	cross_section_enable
 5841              		.global	s_mode_enable
 5842              		.global	friction_correct
 5843              		.global	count
 5844              		.global	received_byte2
 5845              		.global	received_byte1
 5846              		.global	max_speed_percent
 5847              		.global	speedR
 5848              		.global	speedL
 5849              		.comm	incline_speed,4,4
 5850              		.global	batteryLevel
 5851              		.global	loop_begin
 5852              		.global	loop_time
 5853              		.section	.bss.previousServoValue.6228,"aw",%nobits
 5854              		.align	2
 5855              		.set	.LANCHOR15,. + 0
 5858              	previousServoValue.6228:
 5859 0000 00000000 		.space	4
 5860              		.section	.bss.count,"aw",%nobits
 5861              		.set	.LANCHOR8,. + 0
 5864              	count:
 5865 0000 00       		.space	1
 5866              		.section	.bss.steeringControlUpdate.6158,"aw",%nobits
 5867              		.set	.LANCHOR12,. + 0
 5870              	steeringControlUpdate.6158:
 5871 0000 00       		.space	1
 5872              		.section	.bss.s_mode_enable,"aw",%nobits
 5873              		.set	.LANCHOR13,. + 0
 5876              	s_mode_enable:
 5877 0000 00       		.space	1
 5878              		.section	.bss.stopDelayTime.6162,"aw",%nobits
 5879              		.align	2
 5880              		.set	.LANCHOR22,. + 0
 5883              	stopDelayTime.6162:
 5884 0000 00000000 		.space	4
 5885              		.section	.bss.loop_time,"aw",%nobits
 5886              		.align	1
 5887              		.set	.LANCHOR6,. + 0
 5890              	loop_time:
 5891 0000 0000     		.space	2
 5892              		.section	.bss.totalIntensity.6159,"aw",%nobits
 5893              		.align	2
 5894              		.set	.LANCHOR17,. + 0
 5897              	totalIntensity.6159:
 5898 0000 00000000 		.space	4
 5899              		.section	.bss.loop_begin,"aw",%nobits
 5900              		.align	1
 5901              		.set	.LANCHOR23,. + 0
 5904              	loop_begin:
 5905 0000 0000     		.space	2
 5906              		.section	.bss.previousTargetSpeed.6224,"aw",%nobits
 5907              		.align	2
 5908              		.set	.LANCHOR18,. + 0
 5911              	previousTargetSpeed.6224:
 5912 0000 00000000 		.space	4
 5913              		.section	.bss.speedL,"aw",%nobits
 5914              		.align	2
 5915              		.set	.LANCHOR20,. + 0
 5918              	speedL:
 5919 0000 00000000 		.space	4
 5920              		.section	.bss.stopline_enable,"aw",%nobits
 5921              		.set	.LANCHOR16,. + 0
 5924              	stopline_enable:
 5925 0000 00       		.space	1
 5926              		.section	.bss.batteryLevel,"aw",%nobits
 5927              		.align	2
 5928              		.set	.LANCHOR2,. + 0
 5931              	batteryLevel:
 5932 0000 00000000 		.space	4
 5933              		.section	.bss.test_begin,"aw",%nobits
 5934              		.align	2
 5935              		.set	.LANCHOR0,. + 0
 5938              	test_begin:
 5939 0000 00000000 		.space	4
 5940              		.section	.bss.speedR,"aw",%nobits
 5941              		.align	2
 5942              		.set	.LANCHOR19,. + 0
 5945              	speedR:
 5946 0000 00000000 		.space	4
 5947              		.section	.bss.received_byte1,"aw",%nobits
 5948              		.set	.LANCHOR9,. + 0
 5951              	received_byte1:
 5952 0000 00       		.space	1
 5953              		.section	.bss.received_byte2,"aw",%nobits
 5954              		.set	.LANCHOR10,. + 0
 5957              	received_byte2:
 5958 0000 00       		.space	1
 5959              		.section	.rodata.str1.4,"aMS",%progbits,1
 5960              		.align	2
 5961              	.LC3:
 5962 0000 25582C00 		.ascii	"%X,\000"
 5963              	.LC5:
 5964 0004 0D0A00   		.ascii	"\015\012\000"
 5965 0007 00       		.section	.bss.test_time,"aw",%nobits
 5966              		.align	2
 5967              		.set	.LANCHOR1,. + 0
 5970              	test_time:
 5971 0000 00000000 		.space	4
 5972              		.section	.data.max_speed_percent,"aw",%progbits
 5973              		.align	2
 5974              		.set	.LANCHOR7,. + 0
 5977              	max_speed_percent:
 5978 0000 00004842 		.word	1112014848
 5979              		.section	.bss.stoplineJustDetected,"aw",%nobits
 5980              		.set	.LANCHOR11,. + 0
 5983              	stoplineJustDetected:
 5984 0000 00       		.space	1
 5985              		.section	.bss.friction_correct,"aw",%nobits
 5986              		.align	2
 5989              	friction_correct:
 5990 0000 00000000 		.space	4
 5991              		.section	.bss.previousRaceLine.6220,"aw",%nobits
 5992              		.align	2
 5993              		.set	.LANCHOR14,. + 0
 5996              	previousRaceLine.6220:
 5997 0000 00000000 		.space	4
 5998              		.section	.data.cross_section_enable,"aw",%progbits
 6001              	cross_section_enable:
 6002 0000 01       		.byte	1
 6003              		.section	.bss.stoplineDetectedMoment.6161,"aw",%nobits
 6004              		.align	2
 6005              		.set	.LANCHOR21,. + 0
 6008              	stoplineDetectedMoment.6161:
 6009 0000 00000000 		.space	4
 6010              		.section	.bss.servoValue,"aw",%nobits
 6011              		.align	2
 6012              		.set	.LANCHOR5,. + 0
 6015              	servoValue:
 6016 0000 00000000 		.space	4
 6017              		.section	.bss.targetSpeed,"aw",%nobits
 6018              		.align	2
 6019              		.set	.LANCHOR4,. + 0
 6022              	targetSpeed:
 6023 0000 00000000 		.space	4
 6024              		.section	.data.carState,"aw",%progbits
 6025              		.align	2
 6026              		.set	.LANCHOR3,. + 0
 6029              	carState:
 6030 0000 00       		.byte	0
 6031 0001 02       		.byte	2
 6032 0002 03       		.byte	3
 6033 0003 01       		.byte	1
 6034 0004 00       		.byte	0
 6035 0005 00       		.byte	0
 6036 0006 00       		.byte	0
 6037 0007 00       		.byte	0
 6038 0008 00       		.byte	0
 6039 0009 00       		.byte	0
 6040 000a 0000     		.space	2
 6041 000c 78       		.byte	120
 6042 000d 000000   		.text
 6043              	.Letext0:
 6044              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 6045              		.file 3 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/MKL25Z4.h"
 6046              		.file 4 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/typedefs_structs\\carSt
 6047              		.file 5 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_Queue.h"
 6048              		.file 6 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 6049              		.file 7 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_LineScanCamera
 6050              		.file 8 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:18     .text.rawFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:23     .text.rawFocussingMode:00000000 rawFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:138    .text.rawFocussingMode:00000084 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:150    .text.derivativeFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:155    .text.derivativeFocussingMode:00000000 derivativeFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:296    .text.derivativeFocussingMode:000000a8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:311    .text.TFC_Init:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:316    .text.TFC_Init:00000000 TFC_Init
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:393    .text.TFC_Init:00000058 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:399    .text.TFC_Task:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:404    .text.TFC_Task:00000000 TFC_Task
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:427    .text.evaluateMotorState:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:432    .text.evaluateMotorState:00000000 evaluateMotorState
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:485    .text.evaluateMotorState:00000034 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:490    .text.evaluateUARTorSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:495    .text.evaluateUARTorSpeed:00000000 evaluateUARTorSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:592    .text.evaluateUARTorSpeed:0000007c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:599    .text.LEDfeedback:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:604    .text.LEDfeedback:00000000 LEDfeedback
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:843    .text.LEDfeedback:00000140 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:850    .text.servoAlignment:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:855    .text.servoAlignment:00000000 servoAlignment
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:887    .text.servoAlignment:00000018 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:903    .text.telemetrySendData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:908    .text.telemetrySendData:00000000 telemetrySendData
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:1457   .text.telemetrySendData:00000390 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:1466   .text.telemetrySendData:000003ac $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:1824   .text.telemetrySendData:00000608 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:1835   .text.telemetrySendData:0000062c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2333   .text.telemetrySendData:00000968 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2348   .text.telemetrySendData:0000099c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2783   .text.telemetrySendData:00000c70 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2794   .text.BluetoothSetSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2799   .text.BluetoothSetSpeed:00000000 BluetoothSetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2840   .text.BluetoothSetSpeed:00000020 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2846   .text.BluetoothSetLED:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2851   .text.BluetoothSetLED:00000000 BluetoothSetLED
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2989   .text.BluetoothSetLED:000000b4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2994   .text.telemetryReadData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:2999   .text.telemetryReadData:00000000 telemetryReadData
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:3136   .text.telemetryReadData:000000a4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:3153   .text.lineFollowingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:3158   .text.lineFollowingMode:00000000 lineFollowingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:3833   .text.lineFollowingMode:00000368 $d
                            *COM*:00000004 incline_speed
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:3875   .text.lineFollowingMode:00000408 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:3930   .text.lineFollowingMode:0000044c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:3939   .text.startup.main:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:3944   .text.startup.main:00000000 main
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:4667   .text.startup.main:00000380 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:4710   .text.startup.main:0000040c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5410   .text.startup.main:000007a0 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5446   .text.startup.main:00000814 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5575   .text.startup.main:000008b0 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5589   .text.processRaceLine:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5594   .text.processRaceLine:00000000 processRaceLine
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5713   .text.processRaceLine:00000090 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5723   .text.targetSpeedAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5728   .text.targetSpeedAverage:00000000 targetSpeedAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5779   .text.targetSpeedAverage:00000038 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5787   .text.servoValueAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5792   .text.servoValueAverage:00000000 servoValueAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5831   .text.servoValueAverage:00000024 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5970   .bss.test_time:00000000 test_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5938   .bss.test_begin:00000000 test_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5924   .bss.stopline_enable:00000000 stopline_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6001   .data.cross_section_enable:00000000 cross_section_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5876   .bss.s_mode_enable:00000000 s_mode_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5989   .bss.friction_correct:00000000 friction_correct
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5864   .bss.count:00000000 count
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5957   .bss.received_byte2:00000000 received_byte2
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5951   .bss.received_byte1:00000000 received_byte1
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5977   .data.max_speed_percent:00000000 max_speed_percent
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5945   .bss.speedR:00000000 speedR
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5918   .bss.speedL:00000000 speedL
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5931   .bss.batteryLevel:00000000 batteryLevel
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5904   .bss.loop_begin:00000000 loop_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5890   .bss.loop_time:00000000 loop_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5854   .bss.previousServoValue.6228:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5858   .bss.previousServoValue.6228:00000000 previousServoValue.6228
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5865   .bss.count:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5870   .bss.steeringControlUpdate.6158:00000000 steeringControlUpdate.6158
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5871   .bss.steeringControlUpdate.6158:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5877   .bss.s_mode_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5879   .bss.stopDelayTime.6162:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5883   .bss.stopDelayTime.6162:00000000 stopDelayTime.6162
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5886   .bss.loop_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5893   .bss.totalIntensity.6159:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5897   .bss.totalIntensity.6159:00000000 totalIntensity.6159
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5900   .bss.loop_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5907   .bss.previousTargetSpeed.6224:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5911   .bss.previousTargetSpeed.6224:00000000 previousTargetSpeed.6224
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5914   .bss.speedL:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5925   .bss.stopline_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5927   .bss.batteryLevel:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5934   .bss.test_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5941   .bss.speedR:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5952   .bss.received_byte1:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5958   .bss.received_byte2:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5960   .rodata.str1.4:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5966   .bss.test_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5973   .data.max_speed_percent:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5983   .bss.stoplineJustDetected:00000000 stoplineJustDetected
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5984   .bss.stoplineJustDetected:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5986   .bss.friction_correct:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5992   .bss.previousRaceLine.6220:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:5996   .bss.previousRaceLine.6220:00000000 previousRaceLine.6220
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6004   .bss.stoplineDetectedMoment.6161:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6008   .bss.stoplineDetectedMoment.6161:00000000 stoplineDetectedMoment.6161
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6011   .bss.servoValue:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6015   .bss.servoValue:00000000 servoValue
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6018   .bss.targetSpeed:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6022   .bss.targetSpeed:00000000 targetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6025   .data.carState:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccBOvOtH.s:6029   .data.carState:00000000 carState
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_SetServo
TFC_SetMotorPWM
getTotalIntensity
calculateNewExposure
TFC_SetLineScanExposureTime
Qprintf
TFC_Ticker
LineScanImage0
SDA_SERIAL_OUTGOING_QUEUE
edgeDetection
TFC_InitClock
TFC_InitSysTick
TFC_InitGPIO
TFC_InitServos
TFC_InitMotorPWM
TFC_InitADCs
TFC_InitLineScanCamera
TFC_InitUARTs
TFC_InitTerminal
TFC_InitSpeedSensor
preloadProbabilityTables
generateKernel
TFC_UART_Process
TFC_ProcessTerminal
TFC_GetDIP_Switch
enable_irq
disable_irq
__aeabi_fcmpgt
__aeabi_fmul
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_f2iz
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dadd
__aeabi_d2iz
__aeabi_dsub
__aeabi_i2f
uart_putchar
getSpeed
TFC_GetMotorPWM
TFC_ReadMotorCurrent
newExposure
__aeabi_ui2f
uart_getchar_present
uart_getchar
__aeabi_fadd
__aeabi_f2uiz
__aeabi_dmul
__aeabi_d2f
__aeabi_fdiv
__aeabi_fcmplt
TFC_GetPush_Button
getDesiredServoValue
findLine
LCDwriteState
TFC_ReadBatteryVoltage
findStop
getRadiusRoot
getDesiredSpeed
getActiveDifferentialModifier
isANewmeasurementAvailable
getDesiredMotorPWM
LineScanImage1
