   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TFC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	TFC_Init
  20              		.code	16
  21              		.thumb_func
  23              	TFC_Init:
  24              	.LFB1:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** 
   2:../Sources/main.c **** /*************************************
   3:../Sources/main.c **** //// Shield Interfaces Description /////////////////
   4:../Sources/main.c **** 
   5:../Sources/main.c **** //// DIP /////////////////
   6:../Sources/main.c **** 
   7:../Sources/main.c **** Standard Mode:
   8:../Sources/main.c **** 
   9:../Sources/main.c **** 1	2	3	4
  10:../Sources/main.c **** X	0  	0	X	Raw Focusing Mode
  11:../Sources/main.c **** X	1	0	X	Servo Alignment
  12:../Sources/main.c **** X	0	1	X	Derivative Focusing Mode
  13:../Sources/main.c **** X	1	1	X	Line Following Mode
  14:../Sources/main.c **** Pin 1:	1 HBRIDGE enabled, RunningState;	0 HBRIDGE DISSABLED;
  15:../Sources/main.c **** Pin 4:	0 SingleSpeed_SingleUart;	1 DualSpeed_NoUart
  16:../Sources/main.c **** 
  17:../Sources/main.c **** Race Mode:
  18:../Sources/main.c **** 
  19:../Sources/main.c **** Pin 1: HBRIDGE enabled
  20:../Sources/main.c **** Pin 2: S-Mode enabled
  21:../Sources/main.c **** Pin 3: Cross Detection enabled
  22:../Sources/main.c **** Pin 4: Stopline Detection enabled
  23:../Sources/main.c **** 
  24:../Sources/main.c **** 
  25:../Sources/main.c **** //// LEDs /////////////////		0 LED_ON	x LED_OFF
  26:../Sources/main.c **** 
  27:../Sources/main.c **** 0xxx	Line lost
  28:../Sources/main.c **** x0xx	Line temporarily lost
  29:../Sources/main.c **** xx0x	Right edge following
  30:../Sources/main.c **** xxx0	Left edge following
  31:../Sources/main.c **** xx00	Double line following
  32:../Sources/main.c **** 0xx0	Cross Section detected
  33:../Sources/main.c **** 00xx	Stop Line detected
  34:../Sources/main.c **** x00x	S-Mode active
  35:../Sources/main.c **** 0000	Low battery
  36:../Sources/main.c **** 
  37:../Sources/main.c **** 
  38:../Sources/main.c **** //// Pots ///////////
  39:../Sources/main.c **** 
  40:../Sources/main.c **** Standard mode:
  41:../Sources/main.c **** Pot_1	Max Speed percent
  42:../Sources/main.c **** Pot_2	No Function
  43:../Sources/main.c **** 
  44:../Sources/main.c **** Race mode:
  45:../Sources/main.c **** Pot_1	Max Speed percent
  46:../Sources/main.c **** Pot_2	Friction Coefficient Correction - rotate clockwise to decrease friction coefficient
  47:../Sources/main.c **** 
  48:../Sources/main.c **** 
  49:../Sources/main.c **** //// Push Buttons ///////////
  50:../Sources/main.c **** 
  51:../Sources/main.c **** Switch_1	Stop Line reset
  52:../Sources/main.c **** 
  53:../Sources/main.c **** **************************************/
  54:../Sources/main.c **** 
  55:../Sources/main.c **** #include "main.h"
  56:../Sources/main.c **** 
  57:../Sources/main.c **** // carState struct initialization - keeps the main parameters of the car state
  58:../Sources/main.c **** static carState_s carState =
  59:../Sources/main.c **** {   .motorState = FORCED_DISABLED, .UARTSpeedState = UNDEFINED, 
  60:../Sources/main.c ****     .lineDetectionState = LINE_LOST, .lineScanState = NO_NEW_LINESCAN_IMAGE, 
  61:../Sources/main.c **** 	.detectedType = NONE, .edge = NO_EDGE, .crossSection = NO, .crossSectionPosition = NO_CROSS,
  62:../Sources/main.c **** 	.lineDistance = STRAIGHT_DISTANCE_DEFAULT, .carMode = NORMAL_MODE, .sMode = S_MODE_OFF};
  63:../Sources/main.c **** 
  64:../Sources/main.c **** uint16_t loop_time = 0, loop_begin = 0;
  65:../Sources/main.c **** float batteryLevel = 0;
  66:../Sources/main.c **** float targetSpeed = 0;
  67:../Sources/main.c **** float speedL = 0;
  68:../Sources/main.c **** float speedR = 0;
  69:../Sources/main.c **** static float servoValue = 0;
  70:../Sources/main.c **** static uint8_t stoplineJustDetected = 0;
  71:../Sources/main.c **** float friction_correct = 0;
  72:../Sources/main.c **** float maxSpeedPercent = 50;
  73:../Sources/main.c **** float accel=0;
  74:../Sources/main.c **** 
  75:../Sources/main.c **** #ifdef S_MODE_ENABLE
  76:../Sources/main.c **** uint8_t s_mode_enable = 1;
  77:../Sources/main.c **** #else
  78:../Sources/main.c **** uint8_t s_mode_enable = 0;
  79:../Sources/main.c **** #endif
  80:../Sources/main.c **** 
  81:../Sources/main.c **** #ifdef CROSS_DETECTION_ENABLE
  82:../Sources/main.c **** uint8_t cross_section_enable = 1;
  83:../Sources/main.c **** #else
  84:../Sources/main.c **** uint8_t cross_section_enable = 0;
  85:../Sources/main.c **** #endif
  86:../Sources/main.c **** 
  87:../Sources/main.c **** #ifdef STOPLINE_ENABLE
  88:../Sources/main.c **** uint8_t stopline_enable = 1;
  89:../Sources/main.c **** #else
  90:../Sources/main.c **** uint8_t stopline_enable = 0;
  91:../Sources/main.c **** #endif
  92:../Sources/main.c **** 
  93:../Sources/main.c **** // Test timer ////////////////////
  94:../Sources/main.c **** uint32_t test_begin = 0;
  95:../Sources/main.c **** uint32_t test_time  = 0;
  96:../Sources/main.c **** //////////////////////////////////
  97:../Sources/main.c **** 
  98:../Sources/main.c **** 
  99:../Sources/main.c **** int main(void)
 100:../Sources/main.c **** {
 101:../Sources/main.c **** 	
 102:../Sources/main.c **** 	TFC_Init(&carState);
 103:../Sources/main.c **** 	
 104:../Sources/main.c **** 	while (1)
 105:../Sources/main.c **** 	{
 106:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 107:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 108:../Sources/main.c **** 			TFC_Task();
 109:../Sources/main.c **** 		#endif
 110:../Sources/main.c **** 		
 111:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS	
 112:../Sources/main.c **** 			evaluateUARTorSpeed(&carState);		// Checks DIP switch
 113:../Sources/main.c **** 		#endif
 114:../Sources/main.c **** 		
 115:../Sources/main.c **** 		evaluateMotorState(&carState);		// Checks DIP switch
 116:../Sources/main.c **** 		
 117:../Sources/main.c **** 		//LEDfeedback(&carState);				// Gives feedback for car state by the 4 LEDs
 118:../Sources/main.c **** 		
 119:../Sources/main.c **** 		
 120:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS
 121:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 122:../Sources/main.c **** 			{
 123:../Sources/main.c **** 			default:
 124:../Sources/main.c **** 			case 0:
 125:../Sources/main.c **** 				rawFocussingMode(&carState);
 126:../Sources/main.c **** 				break;
 127:../Sources/main.c **** 	
 128:../Sources/main.c **** 			case 1:
 129:../Sources/main.c **** 				servoAlignment();
 130:../Sources/main.c **** 				break;
 131:../Sources/main.c **** 	
 132:../Sources/main.c **** 			case 2:
 133:../Sources/main.c **** 				derivativeFocussingMode(&carState);
 134:../Sources/main.c **** 				break;
 135:../Sources/main.c **** 	
 136:../Sources/main.c **** 			case 3:
 137:../Sources/main.c **** 				lineFollowingMode(&carState);
 138:../Sources/main.c **** 				break;
 139:../Sources/main.c **** 			}
 140:../Sources/main.c **** 		#else
 141:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 1) & 0x01) == 1)
 142:../Sources/main.c **** 				s_mode_enable = 1;
 143:../Sources/main.c **** 			else
 144:../Sources/main.c **** 				s_mode_enable = 0;
 145:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 2) & 0x01) == 1)
 146:../Sources/main.c **** 				cross_section_enable = 1;
 147:../Sources/main.c **** 			else
 148:../Sources/main.c **** 				cross_section_enable = 0;
 149:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 3) & 0x01) == 1)
 150:../Sources/main.c **** 			{
 151:../Sources/main.c **** 				stopline_enable = 1;
 152:../Sources/main.c **** 			}
 153:../Sources/main.c **** 			else
 154:../Sources/main.c **** 			{
 155:../Sources/main.c **** 				stopline_enable = 0;
 156:../Sources/main.c **** 			}
 157:../Sources/main.c **** 			
 158:../Sources/main.c **** 			friction_correct = ((0 + 1.0f)/2)*MAX_FRICTION_CORRECT;
 159:../Sources/main.c **** 			
 160:../Sources/main.c **** 			lineFollowingMode(&carState);
 161:../Sources/main.c **** 		#endif
 162:../Sources/main.c **** 		
 163:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 164:../Sources/main.c **** 	}
 165:../Sources/main.c **** 	
 166:../Sources/main.c **** 	return 0;
 167:../Sources/main.c **** }
 168:../Sources/main.c **** 
 169:../Sources/main.c **** void TFC_Init(carState_s* carState)
 170:../Sources/main.c **** {
  26              		.loc 1 170 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 10B5     		push	{r4, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
  34              		.loc 1 170 0
  35 0002 041C     		mov	r4, r0
 171:../Sources/main.c **** 	TFC_InitClock();
  36              		.loc 1 171 0
  37 0004 FFF7FEFF 		bl	TFC_InitClock
  38              	.LVL1:
 172:../Sources/main.c **** 	TFC_InitSysTick();
  39              		.loc 1 172 0
  40 0008 FFF7FEFF 		bl	TFC_InitSysTick
  41              	.LVL2:
 173:../Sources/main.c **** 	TFC_InitGPIO();
  42              		.loc 1 173 0
  43 000c FFF7FEFF 		bl	TFC_InitGPIO
  44              	.LVL3:
 174:../Sources/main.c **** 	TFC_InitServos();
  45              		.loc 1 174 0
  46 0010 FFF7FEFF 		bl	TFC_InitServos
  47              	.LVL4:
 175:../Sources/main.c **** 	TFC_InitMotorPWM();
  48              		.loc 1 175 0
  49 0014 FFF7FEFF 		bl	TFC_InitMotorPWM
  50              	.LVL5:
 176:../Sources/main.c **** 	TFC_InitADCs(carState);
  51              		.loc 1 176 0
  52 0018 201C     		mov	r0, r4
  53 001a FFF7FEFF 		bl	TFC_InitADCs
  54              	.LVL6:
 177:../Sources/main.c **** 	TFC_InitLineScanCamera();
  55              		.loc 1 177 0
  56 001e FFF7FEFF 		bl	TFC_InitLineScanCamera
  57              	.LVL7:
 178:../Sources/main.c **** 
 179:../Sources/main.c **** #ifdef ACCELEROMETER_ENABLE
 180:../Sources/main.c **** 	Init_I2C();
  58              		.loc 1 180 0
  59 0022 FFF7FEFF 		bl	Init_I2C
  60              	.LVL8:
 181:../Sources/main.c **** 	Init_Accelerometer();
  61              		.loc 1 181 0
  62 0026 FFF7FEFF 		bl	Init_Accelerometer
  63              	.LVL9:
 182:../Sources/main.c **** #endif
 183:../Sources/main.c **** 	
 184:../Sources/main.c **** 	#ifdef CHANGE_BLUETOOTH_BAUD_RATE
 185:../Sources/main.c **** 		TFC_InitUARTs(SDA_SERIAL_BAUD, 38400);	// 38400 is default for the BL module in AT mode 2
 186:../Sources/main.c **** 		int dummy_timee = TFC_Ticker[0];
 187:../Sources/main.c **** 		while(TFC_Ticker[0] - dummy_timee < 30000)
 188:../Sources/main.c **** 		{}
 189:../Sources/main.c **** 		TFC_BluetoothModuleSetBaud(BLUETOOTH_BAUD);		// Need to manually power the AT pin on the module
 190:../Sources/main.c **** 	#endif
 191:../Sources/main.c **** 
 192:../Sources/main.c **** 	TFC_InitUARTs(SDA_SERIAL_BAUD, 9600);
  64              		.loc 1 192 0
  65 002a E120     		mov	r0, #225
  66 002c 4402     		lsl	r4, r0, #9
  67              	.LVL10:
  68 002e 9621     		mov	r1, #150
  69 0030 201C     		mov	r0, r4
  70 0032 8901     		lsl	r1, r1, #6
  71 0034 FFF7FEFF 		bl	TFC_InitUARTs
  72              	.LVL11:
 193:../Sources/main.c **** 	
 194:../Sources/main.c **** #ifdef LCD_ENABLE
 195:../Sources/main.c **** 	LCDinit();
  73              		.loc 1 195 0
  74 0038 FFF7FEFF 		bl	LCDinit
  75              	.LVL12:
 196:../Sources/main.c **** 	LCDwriteString("hello");
  76              		.loc 1 196 0
  77 003c 0D48     		ldr	r0, .L2
  78 003e FFF7FEFF 		bl	LCDwriteString
  79              	.LVL13:
 197:../Sources/main.c **** #endif
 198:../Sources/main.c **** 	
 199:../Sources/main.c **** 	
 200:../Sources/main.c **** 	TFC_InitUARTs(SDA_SERIAL_BAUD, 115200);
  80              		.loc 1 200 0
  81 0042 201C     		mov	r0, r4
  82 0044 211C     		mov	r1, r4
  83 0046 FFF7FEFF 		bl	TFC_InitUARTs
  84              	.LVL14:
 201:../Sources/main.c **** 	#ifdef TERMINAL_ENABLED
 202:../Sources/main.c **** 		TFC_InitTerminal();
  85              		.loc 1 202 0
  86 004a FFF7FEFF 		bl	TFC_InitTerminal
  87              	.LVL15:
 203:../Sources/main.c **** 	#endif
 204:../Sources/main.c **** 		
 205:../Sources/main.c **** 	TFC_HBRIDGE_ENABLE;
  88              		.loc 1 205 0
  89 004e 8022     		mov	r2, #128
  90 0050 094B     		ldr	r3, .L2+4
  91 0052 9003     		lsl	r0, r2, #14
 206:../Sources/main.c **** 	TFC_SetMotorPWM(0, 0);
  92              		.loc 1 206 0
  93 0054 0021     		mov	r1, #0
 205:../Sources/main.c **** 	TFC_HBRIDGE_ENABLE;
  94              		.loc 1 205 0
  95 0056 5860     		str	r0, [r3, #4]
  96              		.loc 1 206 0
  97 0058 081C     		add	r0, r1, #0
  98 005a FFF7FEFF 		bl	TFC_SetMotorPWM
  99              	.LVL16:
 207:../Sources/main.c **** 	TFC_InitSpeedSensor();
 100              		.loc 1 207 0
 101 005e FFF7FEFF 		bl	TFC_InitSpeedSensor
 102              	.LVL17:
 208:../Sources/main.c **** 	preloadProbabilityTables(); //Prevents probability tables for stop line evaluation from being crea
 103              		.loc 1 208 0
 104 0062 FFF7FEFF 		bl	preloadProbabilityTables
 105              	.LVL18:
 209:../Sources/main.c **** 	generateKernel();
 106              		.loc 1 209 0
 107 0066 FFF7FEFF 		bl	generateKernel
 108              	.LVL19:
 210:../Sources/main.c **** 	
 211:../Sources/main.c **** 	#ifdef RACE_MODE_CONTROLS
 212:../Sources/main.c **** 	PORTA_PCR2 &= 0xFFFFF8FF;
 213:../Sources/main.c **** 	PORTA_PCR2 |= 0x00000300;
 214:../Sources/main.c **** 	disable_irq(INT_UART0-16);
 215:../Sources/main.c **** 	carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 216:../Sources/main.c **** 	#endif
 217:../Sources/main.c **** 	
 218:../Sources/main.c **** 	TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 109              		.loc 1 218 0
 110 006a 0020     		mov	r0, #0
 111 006c 0349     		ldr	r1, .L2+8
 112 006e FFF7FEFF 		bl	TFC_SetServo
 113              	.LVL20:
 219:../Sources/main.c **** }
 114              		.loc 1 219 0
 115              		@ sp needed for prologue
 116 0072 10BD     		pop	{r4, pc}
 117              	.L3:
 118              		.align	2
 119              	.L2:
 120 0074 00000000 		.word	.LC0
 121 0078 00F10F40 		.word	1074786560
 122 007c CDCC4C3D 		.word	1028443341
 123              		.cfi_endproc
 124              	.LFE1:
 126              		.global	__aeabi_fcmpgt
 127              		.global	__aeabi_fmul
 128              		.global	__aeabi_i2f
 129              		.global	__aeabi_fadd
 130              		.global	__aeabi_f2uiz
 131              		.global	__aeabi_f2d
 132              		.global	__aeabi_dmul
 133              		.global	__aeabi_dadd
 134              		.global	__aeabi_d2f
 135              		.section	.text.startup.main,"ax",%progbits
 136              		.align	2
 137              		.global	main
 138              		.code	16
 139              		.thumb_func
 141              	main:
 142              	.LFB0:
 100:../Sources/main.c **** {
 143              		.loc 1 100 0
 144              		.cfi_startproc
 145 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 146              	.LCFI1:
 147              		.cfi_def_cfa_offset 20
 148              		.cfi_offset 4, -20
 149              		.cfi_offset 5, -16
 150              		.cfi_offset 6, -12
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 5646     		mov	r6, sl
 154 0004 4D46     		mov	r5, r9
 155 0006 5F46     		mov	r7, fp
 156 0008 4446     		mov	r4, r8
 157 000a F0B4     		push	{r4, r5, r6, r7}
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 36
 160              		.cfi_offset 8, -36
 161              		.cfi_offset 9, -32
 162              		.cfi_offset 10, -28
 163              		.cfi_offset 11, -24
 102:../Sources/main.c **** 	TFC_Init(&carState);
 164              		.loc 1 102 0
 165 000c CC49     		ldr	r1, .L64
 100:../Sources/main.c **** {
 166              		.loc 1 100 0
 167 000e C7B0     		sub	sp, sp, #284
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 320
 102:../Sources/main.c **** 	TFC_Init(&carState);
 170              		.loc 1 102 0
 171 0010 081C     		mov	r0, r1
 172 0012 8846     		mov	r8, r1
 173 0014 FFF7FEFF 		bl	TFC_Init
 174              	.LVL21:
 175 0018 CA4A     		ldr	r2, .L64+4
 176 001a CB4B     		ldr	r3, .L64+8
 177 001c 9246     		mov	sl, r2
 178 001e 9946     		mov	r9, r3
 179 0020 CA4E     		ldr	r6, .L64+12
 180 0022 CB4F     		ldr	r7, .L64+16
 181 0024 CB4D     		ldr	r5, .L64+20
 182 0026 3DE0     		b	.L40
 183              	.LVL22:
 184              	.L54:
 185              	.LBB43:
 186              	.LBB44:
 220:../Sources/main.c **** 
 221:../Sources/main.c **** void lineFollowingMode(carState_s* carState)
 222:../Sources/main.c **** {
 223:../Sources/main.c **** 	static lineScanState_t steeringControlUpdate;
 224:../Sources/main.c **** 	static uint32_t totalIntensity = 0;
 225:../Sources/main.c **** 	
 226:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 227:../Sources/main.c **** 	{
 228:../Sources/main.c **** 		stoplineJustDetected = 0;
 229:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 230:../Sources/main.c **** 	}
 231:../Sources/main.c **** 
 232:../Sources/main.c **** 
 233:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 234:../Sources/main.c **** 	{
 235:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 236:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 237:../Sources/main.c **** 	}
 238:../Sources/main.c **** 	
 239:../Sources/main.c **** 	#ifdef TELEMETRY_ENABLE
 240:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 241:../Sources/main.c **** 	{
 242:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 243:../Sources/main.c **** 		//telemetrySendData();
 244:../Sources/main.c **** 		//telemetryReadData();
 245:../Sources/main.c **** 		cameraFeed(0);
 246:../Sources/main.c **** 	}
 247:../Sources/main.c **** 	#endif
 248:../Sources/main.c **** 	
 249:../Sources/main.c **** 	#ifdef LCD_ENABLE
 250:../Sources/main.c **** 	if(TFC_Ticker[5]>=5){
 251:../Sources/main.c **** 		TFC_Ticker[5]=0;
 252:../Sources/main.c **** 		LCDfeedback(carState);
 253:../Sources/main.c **** 	}
 254:../Sources/main.c **** 	#endif
 255:../Sources/main.c **** 	
 256:../Sources/main.c **** 	
 257:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 258:../Sources/main.c **** 		if(TFC_Ticker[8]>=1000){
 259:../Sources/main.c **** 			TFC_Ticker[8]=0;
 260:../Sources/main.c **** 			accel=getXAcc();
 261:../Sources/main.c **** 			if(accel>2){
 262:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 263:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 264:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 265:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 266:../Sources/main.c **** 			}
 267:../Sources/main.c **** 			else{
 268:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 269:../Sources/main.c **** 							GPIOB_PCOR |= (1<<9);
 270:../Sources/main.c **** 							GPIOB_PCOR |= (1<<10);
 271:../Sources/main.c **** 							GPIOB_PCOR |= (1<<11);
 272:../Sources/main.c **** 			}
 273:../Sources/main.c **** 		}
 274:../Sources/main.c **** 	#endif
 275:../Sources/main.c **** 	#ifndef ACCELEROMETER_ENABLE
 276:../Sources/main.c **** 	#endif
 277:../Sources/main.c **** 	
 278:../Sources/main.c **** 		if (carState->lineScanState == LINESCAN_IMAGE_READY)
 279:../Sources/main.c **** 	{
 280:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 281:../Sources/main.c **** 
 282:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 283:../Sources/main.c **** 
 284:../Sources/main.c **** 		processRaceLine(carState);
 285:../Sources/main.c **** 	}
 286:../Sources/main.c **** 		
 287:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 288:../Sources/main.c **** 	{
 289:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 290:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 291:../Sources/main.c **** 		
 292:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 293:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 294:../Sources/main.c **** 	}
 295:../Sources/main.c **** 
 296:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 297:../Sources/main.c **** 	{
 298:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 299:../Sources/main.c **** 		if(stopline_enable == 1)
 300:../Sources/main.c **** 		{
 301:../Sources/main.c **** 			findStop(carState);
 302:../Sources/main.c **** 		}
 303:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 304:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 305:../Sources/main.c **** 	}
 306:../Sources/main.c **** 
 307:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 308:../Sources/main.c **** 	{
 309:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 310:../Sources/main.c **** 		
 311:../Sources/main.c **** 		float activeDifferentialModifier[] =
 312:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 313:../Sources/main.c **** 
 314:../Sources/main.c **** 		// Speed measurement depending on the particular mode which is used
 315:../Sources/main.c **** 		#if (SPEED_DETECTION_MODE == 0)
 316:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 317:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 318:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 1)
 319:../Sources/main.c **** 			speedR = (getSpeed(CHANNEL_0) + getSpeed(CHANNEL_1))/2;
 320:../Sources/main.c **** 			speedL = speedR;
 321:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 2)
 322:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 323:../Sources/main.c **** 			speedL = speedR;
 324:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 3)
 325:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 326:../Sources/main.c **** 			speedR = speedL;
 327:../Sources/main.c **** 		#endif
 328:../Sources/main.c **** 
 329:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 330:../Sources/main.c **** 		{
 331:../Sources/main.c **** 			TFC_SetMotorPWM(0.3f,0.3f);
 332:../Sources/main.c **** 			//TFC_SetMotorPWM( //(maxSpeedPercent/100) (inclineSpeed/100)
 333:../Sources/main.c **** 			//	getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, isANewmeasurementAvai
 334:../Sources/main.c **** 				//	getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, isANewmeasurementAva
 335:../Sources/main.c **** 		}
 336:../Sources/main.c **** 		else if (carState->UARTSpeedState == SINGLE_SPEED_SINGLE_UART)
 337:../Sources/main.c **** 		{
 338:../Sources/main.c **** 			// Missing setup - Normally this mode is not used
 339:../Sources/main.c **** 		}
 340:../Sources/main.c **** 	}
 341:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 342:../Sources/main.c **** 	{
 343:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 344:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 345:../Sources/main.c **** 	}
 346:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 347:../Sources/main.c **** 	{
 348:../Sources/main.c **** 		if(stopline_enable == 1)
 349:../Sources/main.c **** 		{
 350:../Sources/main.c **** 			//added this while bit
 351:../Sources/main.c **** 			while(1){
 352:../Sources/main.c **** 				TFC_SetServo(0,0);
 353:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 354:../Sources/main.c **** 				TFC_SetMotorPWM(0, 0);
 355:../Sources/main.c **** 			}
 356:../Sources/main.c **** 			
 357:../Sources/main.c **** 			static uint32_t stoplineDetectedMoment = 0;
 358:../Sources/main.c **** 			static uint32_t stopDelayTime = 0;
 359:../Sources/main.c **** 			
 360:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 361:../Sources/main.c **** 			{
 362:../Sources/main.c **** 				stoplineJustDetected = 1;
 363:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 364:../Sources/main.c **** 				
 365:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 366:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 367:../Sources/main.c **** 				
 368:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 369:../Sources/main.c **** 				{
 370:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 371:../Sources/main.c **** 				}
 372:../Sources/main.c **** 				
 373:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 374:../Sources/main.c **** 			}
 375:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 376:../Sources/main.c **** 			{
 377:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 378:../Sources/main.c **** 				
 379:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 380:../Sources/main.c **** 				{
 381:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 382:../Sources/main.c **** 				}
 383:../Sources/main.c **** 				else
 384:../Sources/main.c **** 				{
 385:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 386:../Sources/main.c **** 				}
 387:../Sources/main.c **** 			}
 388:../Sources/main.c **** 		}	
 389:../Sources/main.c **** 	}
 390:../Sources/main.c **** }
 391:../Sources/main.c **** 
 392:../Sources/main.c **** void rawFocussingMode(carState_s* carState)
 393:../Sources/main.c **** {
 394:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 395:../Sources/main.c **** 	{
 396:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 397:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 398:../Sources/main.c **** 
 399:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 400:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 401:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 402:../Sources/main.c **** 
 403:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 404:../Sources/main.c **** 		
 405:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 406:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 407:../Sources/main.c **** 			{
 408:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 409:../Sources/main.c **** 			}
 410:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 411:../Sources/main.c **** 		#endif		
 412:../Sources/main.c **** 	}
 413:../Sources/main.c **** }
 414:../Sources/main.c **** 
 415:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 416:../Sources/main.c **** {
 417:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 418:../Sources/main.c **** 	{
 419:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 420:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 421:../Sources/main.c **** 
 422:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 423:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 424:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 425:../Sources/main.c **** 
 426:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 427:../Sources/main.c **** 		int16_t temp[128];
 428:../Sources/main.c **** 		
 429:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 430:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 431:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 432:../Sources/main.c **** 		
 433:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 434:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 435:../Sources/main.c **** 			{
 436:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 437:../Sources/main.c **** 			}
 438:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 439:../Sources/main.c **** 		#endif	
 440:../Sources/main.c **** 	}
 441:../Sources/main.c **** }
 442:../Sources/main.c **** 
 443:../Sources/main.c **** void TFC_Task()
 444:../Sources/main.c **** {
 445:../Sources/main.c **** #if defined(TERMINAL_USE_SDA_SERIAL)
 446:../Sources/main.c **** 	TFC_UART_Process();
 447:../Sources/main.c **** #endif
 448:../Sources/main.c **** 	TFC_ProcessTerminal();
 449:../Sources/main.c **** }
 450:../Sources/main.c **** 
 451:../Sources/main.c **** void evaluateMotorState(carState_s* carState)
 452:../Sources/main.c **** {
 453:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 454:../Sources/main.c **** 	{
 455:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 456:../Sources/main.c **** 		carState->motorState = RUNNING;
 457:../Sources/main.c **** 	}
 458:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 459:../Sources/main.c **** 	{
 460:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 461:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 462:../Sources/main.c **** 	}
 463:../Sources/main.c **** }
 464:../Sources/main.c **** 
 465:../Sources/main.c **** void evaluateUARTorSpeed(carState_s* carState)
 466:../Sources/main.c **** {
 467:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 187              		.loc 1 467 0
 188 0028 CB4D     		ldr	r5, .L64+24
 189 002a A968     		ldr	r1, [r5, #8]
 190 002c 4A05     		lsl	r2, r1, #21
 191 002e 530F     		lsr	r3, r2, #29
 192 0030 022B     		cmp	r3, #2
 193 0032 42D0     		beq	.L5
 194              	.L6:
 468:../Sources/main.c **** 	{
 469:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 195              		.loc 1 469 0
 196 0034 C84B     		ldr	r3, .L64+24
 197 0036 C94A     		ldr	r2, .L64+28
 198 0038 9868     		ldr	r0, [r3, #8]
 470:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 199              		.loc 1 470 0
 200 003a 8025     		mov	r5, #128
 469:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 201              		.loc 1 469 0
 202 003c 0240     		and	r2, r0
 203 003e 9A60     		str	r2, [r3, #8]
 204              		.loc 1 470 0
 205 0040 9C68     		ldr	r4, [r3, #8]
 206 0042 A900     		lsl	r1, r5, #2
 207 0044 2143     		orr	r1, r4
 208 0046 9960     		str	r1, [r3, #8]
 471:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 209              		.loc 1 471 0
 210 0048 0C20     		mov	r0, #12
 211 004a FFF7FEFF 		bl	enable_irq
 212              	.LVL23:
 472:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 213              		.loc 1 472 0
 214 004e 0023     		mov	r3, #0
 215 0050 4046     		mov	r0, r8
 216 0052 4370     		strb	r3, [r0, #1]
 217              	.L8:
 218              	.LVL24:
 219              	.LBE44:
 220              	.LBE43:
 221              	.LBB47:
 222              	.LBB48:
 453:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 223              		.loc 1 453 0
 224 0054 FFF7FEFF 		bl	TFC_GetDIP_Switch
 225              	.LVL25:
 226              	.LBE48:
 227 0058 0124     		mov	r4, #1
 228              	.LBB49:
 229 005a 0442     		tst	r4, r0
 230 005c 50D0     		beq	.L11
 231              	.L55:
 455:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 232              		.loc 1 455 0
 233 005e 8023     		mov	r3, #128
 234 0060 BF4A     		ldr	r2, .L64+32
 235 0062 9803     		lsl	r0, r3, #14
 456:../Sources/main.c **** 		carState->motorState = RUNNING;
 236              		.loc 1 456 0
 237 0064 4546     		mov	r5, r8
 455:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 238              		.loc 1 455 0
 239 0066 5060     		str	r0, [r2, #4]
 456:../Sources/main.c **** 		carState->motorState = RUNNING;
 240              		.loc 1 456 0
 241 0068 2C70     		strb	r4, [r5]
 242              	.L12:
 243              	.LBE49:
 244              	.LBE47:
 121:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 245              		.loc 1 121 0
 246 006a FFF7FEFF 		bl	TFC_GetDIP_Switch
 247              	.LVL26:
 248 006e 4407     		lsl	r4, r0, #29
 249 0070 A50F     		lsr	r5, r4, #30
 250 0072 022D     		cmp	r5, #2
 251 0074 56D0     		beq	.L15
 252              	.L56:
 253 0076 032D     		cmp	r5, #3
 254 0078 00D1     		bne	.LCB210
 255 007a B1E0     		b	.L16	@long jump
 256              	.LCB210:
 257              	.LBB52:
 258              	.LBB53:
 473:../Sources/main.c **** 	}
 474:../Sources/main.c **** 
 475:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 476:../Sources/main.c **** 	{
 477:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 478:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 479:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 480:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 481:../Sources/main.c **** 	}
 482:../Sources/main.c **** }
 483:../Sources/main.c **** 
 484:../Sources/main.c **** void servoAlignment()		// Helps setting the servo offset value by debugging
 485:../Sources/main.c **** {
 486:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 259              		.loc 1 486 0
 260 007c 5146     		mov	r1, sl
 261 007e 0B68     		ldr	r3, [r1]
 262              	.LBE53:
 263              	.LBE52:
 121:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 264              		.loc 1 121 0
 265 0080 012D     		cmp	r5, #1
 266 0082 00D1     		bne	.LCB218
 267 0084 A2E0     		b	.L14	@long jump
 268              	.LCB218:
 269              	.LVL27:
 270              	.LBB56:
 271              	.LBB57:
 394:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 272              		.loc 1 394 0
 273 0086 C72B     		cmp	r3, #199
 274 0088 04D9     		bls	.L19
 275 008a 4046     		mov	r0, r8
 276 008c C278     		ldrb	r2, [r0, #3]
 277 008e 002A     		cmp	r2, #0
 278 0090 00D1     		bne	.LCB227
 279 0092 D8E1     		b	.L53	@long jump
 280              	.LCB227:
 281              	.LVL28:
 282              	.L19:
 283              	.LBE57:
 284              	.LBE56:
 163:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 285              		.loc 1 163 0
 286 0094 AF49     		ldr	r1, .L64+20
 287 0096 5546     		mov	r5, sl
 288 0098 6A69     		ldr	r2, [r5, #20]
 289 009a 0B88     		ldrh	r3, [r1]
 290 009c B14C     		ldr	r4, .L64+36
 291 009e D01A     		sub	r0, r2, r3
 292 00a0 2080     		strh	r0, [r4]
 293 00a2 0D1C     		mov	r5, r1
 294              	.LVL29:
 295              	.L40:
 106:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 296              		.loc 1 106 0
 297 00a4 5046     		mov	r0, sl
 298 00a6 4469     		ldr	r4, [r0, #20]
 299 00a8 2C80     		strh	r4, [r5]
 300              	.LBB61:
 301              	.LBB62:
 446:../Sources/main.c **** 	TFC_UART_Process();
 302              		.loc 1 446 0
 303 00aa FFF7FEFF 		bl	TFC_UART_Process
 304              	.LVL30:
 448:../Sources/main.c **** 	TFC_ProcessTerminal();
 305              		.loc 1 448 0
 306 00ae FFF7FEFF 		bl	TFC_ProcessTerminal
 307              	.LVL31:
 308              	.LBE62:
 309              	.LBE61:
 310              	.LBB63:
 311              	.LBB45:
 467:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 312              		.loc 1 467 0
 313 00b2 FFF7FEFF 		bl	TFC_GetDIP_Switch
 314              	.LVL32:
 315 00b6 0307     		lsl	r3, r0, #28
 316 00b8 B6D5     		bpl	.L54
 317              	.L5:
 318 00ba 4046     		mov	r0, r8
 319 00bc 4478     		ldrb	r4, [r0, #1]
 320 00be 022C     		cmp	r4, #2
 321 00c0 B8D0     		beq	.L6
 475:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 322              		.loc 1 475 0
 323 00c2 FFF7FEFF 		bl	TFC_GetDIP_Switch
 324              	.LVL33:
 325 00c6 0307     		lsl	r3, r0, #28
 326 00c8 7AD5     		bpl	.L9
 327 00ca A34D     		ldr	r5, .L64+24
 328 00cc A968     		ldr	r1, [r5, #8]
 329 00ce 4A05     		lsl	r2, r1, #21
 330 00d0 530F     		lsr	r3, r2, #29
 331 00d2 032B     		cmp	r3, #3
 332 00d4 74D0     		beq	.L9
 333              	.L10:
 477:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 334              		.loc 1 477 0
 335 00d6 A04D     		ldr	r5, .L64+24
 336 00d8 A04A     		ldr	r2, .L64+28
 337 00da A968     		ldr	r1, [r5, #8]
 478:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 338              		.loc 1 478 0
 339 00dc C020     		mov	r0, #192
 477:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 340              		.loc 1 477 0
 341 00de 0A40     		and	r2, r1
 342 00e0 AA60     		str	r2, [r5, #8]
 478:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 343              		.loc 1 478 0
 344 00e2 AB68     		ldr	r3, [r5, #8]
 345 00e4 8400     		lsl	r4, r0, #2
 346 00e6 1C43     		orr	r4, r3
 347 00e8 AC60     		str	r4, [r5, #8]
 479:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 348              		.loc 1 479 0
 349 00ea 0C20     		mov	r0, #12
 350 00ec FFF7FEFF 		bl	disable_irq
 351              	.LVL34:
 480:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 352              		.loc 1 480 0
 353 00f0 0125     		mov	r5, #1
 354 00f2 4146     		mov	r1, r8
 355 00f4 4D70     		strb	r5, [r1, #1]
 356              	.LVL35:
 357              	.LBE45:
 358              	.LBE63:
 359              	.LBB64:
 360              	.LBB50:
 453:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 361              		.loc 1 453 0
 362 00f6 FFF7FEFF 		bl	TFC_GetDIP_Switch
 363              	.LVL36:
 364              	.LBE50:
 365 00fa 0124     		mov	r4, #1
 366              	.LBB51:
 367 00fc 0442     		tst	r4, r0
 368 00fe AED1     		bne	.L55
 369              	.L11:
 458:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 370              		.loc 1 458 0
 371 0100 FFF7FEFF 		bl	TFC_GetDIP_Switch
 372              	.LVL37:
 373 0104 0442     		tst	r4, r0
 374 0106 B0D1     		bne	.L12
 460:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 375              		.loc 1 460 0
 376 0108 8022     		mov	r2, #128
 377 010a 9549     		ldr	r1, .L64+32
 378 010c 9503     		lsl	r5, r2, #14
 461:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 379              		.loc 1 461 0
 380 010e 0020     		mov	r0, #0
 460:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 381              		.loc 1 460 0
 382 0110 8D60     		str	r5, [r1, #8]
 461:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 383              		.loc 1 461 0
 384 0112 011C     		add	r1, r0, #0
 385 0114 FFF7FEFF 		bl	TFC_SetMotorPWM
 386              	.LVL38:
 387              	.LBE51:
 388              	.LBE64:
 121:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 389              		.loc 1 121 0
 390 0118 FFF7FEFF 		bl	TFC_GetDIP_Switch
 391              	.LVL39:
 392 011c 4407     		lsl	r4, r0, #29
 393 011e A50F     		lsr	r5, r4, #30
 394 0120 022D     		cmp	r5, #2
 395 0122 A8D1     		bne	.L56
 396              	.L15:
 397              	.LVL40:
 398              	.LBB65:
 399              	.LBB66:
 417:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 400              		.loc 1 417 0
 401 0124 5446     		mov	r4, sl
 402 0126 2568     		ldr	r5, [r4]
 403 0128 C72D     		cmp	r5, #199
 404 012a B3D9     		bls	.L19
 405 012c 4146     		mov	r1, r8
 406 012e CB78     		ldrb	r3, [r1, #3]
 407 0130 002B     		cmp	r3, #0
 408 0132 AFD1     		bne	.L19
 409              	.LBB67:
 420:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 410              		.loc 1 420 0
 411 0134 0122     		mov	r2, #1
 412 0136 CA70     		strb	r2, [r1, #3]
 422:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 413              		.loc 1 422 0
 414 0138 0020     		mov	r0, #0
 415 013a 8B49     		ldr	r1, .L64+40
 419:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 416              		.loc 1 419 0
 417 013c 2360     		str	r3, [r4]
 423:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 418              		.loc 1 423 0
 419 013e 884D     		ldr	r5, .L64+32
 422:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 420              		.loc 1 422 0
 421 0140 FFF7FEFF 		bl	TFC_SetServo
 422              	.LVL41:
 423:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 423              		.loc 1 423 0
 424 0144 8020     		mov	r0, #128
 425 0146 8403     		lsl	r4, r0, #14
 424:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 426              		.loc 1 424 0
 427 0148 0020     		mov	r0, #0
 423:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 428              		.loc 1 423 0
 429 014a AC60     		str	r4, [r5, #8]
 424:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 430              		.loc 1 424 0
 431 014c 011C     		add	r1, r0, #0
 432 014e FFF7FEFF 		bl	TFC_SetMotorPWM
 433              	.LVL42:
 426:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 434              		.loc 1 426 0
 435 0152 4946     		mov	r1, r9
 436 0154 0868     		ldr	r0, [r1]
 437 0156 FFF7FEFF 		bl	getTotalIntensity
 438              	.LVL43:
 439 015a 8449     		ldr	r1, .L64+44
 440 015c FFF7FEFF 		bl	calculateNewExposure
 441              	.LVL44:
 442 0160 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 443              	.LVL45:
 429:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 444              		.loc 1 429 0
 445 0164 5346     		mov	r3, sl
 446 0166 5A69     		ldr	r2, [r3, #20]
 447 0168 8148     		ldr	r0, .L64+48
 430:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 448              		.loc 1 430 0
 449 016a 4C46     		mov	r4, r9
 429:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 450              		.loc 1 429 0
 451 016c 0260     		str	r2, [r0]
 430:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 452              		.loc 1 430 0
 453 016e 06A9     		add	r1, sp, #24
 454 0170 2068     		ldr	r0, [r4]
 455 0172 8022     		mov	r2, #128
 456 0174 FFF7FEFF 		bl	edgeDetection
 457              	.LVL46:
 431:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 458              		.loc 1 431 0
 459 0178 7D4B     		ldr	r3, .L64+48
 460 017a 5546     		mov	r5, sl
 461 017c 6969     		ldr	r1, [r5, #20]
 462 017e 1A68     		ldr	r2, [r3]
 463 0180 7C4C     		ldr	r4, .L64+52
 464 0182 881A     		sub	r0, r1, r2
  99:../Sources/main.c **** int main(void)
 465              		.loc 1 99 0
 466 0184 46A9     		add	r1, sp, #280
 431:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 467              		.loc 1 431 0
 468 0186 2060     		str	r0, [r4]
 469              	.LVL47:
 470 0188 06AD     		add	r5, sp, #24
  99:../Sources/main.c **** int main(void)
 471              		.loc 1 99 0
 472 018a 8B46     		mov	fp, r1
 473              	.LVL48:
 474              	.L20:
 475              	.LBB68:
 436:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 476              		.loc 1 436 0
 477 018c 0023     		mov	r3, #0
 478 018e EA5E     		ldrsh	r2, [r5, r3]
 479 0190 391C     		mov	r1, r7
 480 0192 D317     		asr	r3, r2, #31
 481 0194 D218     		add	r2, r2, r3
 482 0196 5A40     		eor	r2, r3
 483 0198 301C     		mov	r0, r6
 484 019a FFF7FEFF 		bl	Qprintf
 485              	.LVL49:
 486 019e 0223     		mov	r3, #2
 487 01a0 E85E     		ldrsh	r0, [r5, r3]
 488 01a2 391C     		mov	r1, r7
 489 01a4 C417     		asr	r4, r0, #31
 490 01a6 0219     		add	r2, r0, r4
 491 01a8 6240     		eor	r2, r4
 492 01aa 301C     		mov	r0, r6
 493 01ac 0435     		add	r5, r5, #4
 494 01ae FFF7FEFF 		bl	Qprintf
 495              	.LVL50:
 434:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 496              		.loc 1 434 0
 497 01b2 5D45     		cmp	r5, fp
 498 01b4 EAD1     		bne	.L20
 499              	.LBE68:
 438:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 500              		.loc 1 438 0
 501 01b6 301C     		mov	r0, r6
 502 01b8 6F49     		ldr	r1, .L64+56
 503 01ba FFF7FEFF 		bl	Qprintf
 504              	.LVL51:
 505 01be 69E7     		b	.L19
 506              	.LVL52:
 507              	.L9:
 508              	.LBE67:
 509              	.LBE66:
 510              	.LBE65:
 511              	.LBB71:
 512              	.LBB46:
 475:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 513              		.loc 1 475 0
 514 01c0 4046     		mov	r0, r8
 515 01c2 4478     		ldrb	r4, [r0, #1]
 516 01c4 022C     		cmp	r4, #2
 517 01c6 00D0     		beq	.LCB444
 518 01c8 44E7     		b	.L8	@long jump
 519              	.LCB444:
 520 01ca 84E7     		b	.L10
 521              	.LVL53:
 522              	.L14:
 523              	.LBE46:
 524              	.LBE71:
 525              	.LBB72:
 526              	.LBB55:
 527              		.loc 1 486 0
 528 01cc C72B     		cmp	r3, #199
 529 01ce 00D8     		bhi	.LCB455
 530 01d0 60E7     		b	.L19	@long jump
 531              	.LCB455:
 532              	.LBB54:
 487:../Sources/main.c **** 	{
 488:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 533              		.loc 1 488 0
 534 01d2 0024     		mov	r4, #0
 535 01d4 0C60     		str	r4, [r1]
 536              	.LVL54:
 489:../Sources/main.c **** 		float offset = 30000 * 0.15f;
 490:../Sources/main.c **** 		TFC_SetServo(0, offset);
 537              		.loc 1 490 0
 538 01d6 0020     		mov	r0, #0
 539 01d8 6849     		ldr	r1, .L64+60
 540 01da FFF7FEFF 		bl	TFC_SetServo
 541              	.LVL55:
 542 01de 59E7     		b	.L19
 543              	.LVL56:
 544              	.L16:
 545              	.LBE54:
 546              	.LBE55:
 547              	.LBE72:
 548              	.LBB73:
 549              	.LBB74:
 226:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 550              		.loc 1 226 0
 551 01e0 0120     		mov	r0, #1
 552 01e2 FFF7FEFF 		bl	TFC_GetPush_Button
 553              	.LVL57:
 554 01e6 0128     		cmp	r0, #1
 555 01e8 00D1     		bne	.LCB479
 556 01ea 05E1     		b	.L57	@long jump
 557              	.LCB479:
 558              	.L21:
 233:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 559              		.loc 1 233 0
 560 01ec 5546     		mov	r5, sl
 561 01ee AC69     		ldr	r4, [r5, #24]
 562 01f0 634B     		ldr	r3, .L64+64
 563 01f2 9C42     		cmp	r4, r3
 564 01f4 05D9     		bls	.L22
 235:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 565              		.loc 1 235 0
 566 01f6 0020     		mov	r0, #0
 567 01f8 A861     		str	r0, [r5, #24]
 236:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 568              		.loc 1 236 0
 569 01fa FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 570              	.LVL58:
 571 01fe 614A     		ldr	r2, .L64+68
 572 0200 1060     		str	r0, [r2]
 573              	.L22:
 250:../Sources/main.c **** 	if(TFC_Ticker[5]>=5){
 574              		.loc 1 250 0
 575 0202 5146     		mov	r1, sl
 576 0204 4D69     		ldr	r5, [r1, #20]
 577 0206 042D     		cmp	r5, #4
 578 0208 04D9     		bls	.L23
 251:../Sources/main.c **** 		TFC_Ticker[5]=0;
 579              		.loc 1 251 0
 580 020a 0024     		mov	r4, #0
 252:../Sources/main.c **** 		LCDfeedback(carState);
 581              		.loc 1 252 0
 582 020c 4046     		mov	r0, r8
 251:../Sources/main.c **** 		TFC_Ticker[5]=0;
 583              		.loc 1 251 0
 584 020e 4C61     		str	r4, [r1, #20]
 252:../Sources/main.c **** 		LCDfeedback(carState);
 585              		.loc 1 252 0
 586 0210 FFF7FEFF 		bl	LCDfeedback
 587              	.LVL59:
 588              	.L23:
 258:../Sources/main.c **** 		if(TFC_Ticker[8]>=1000){
 589              		.loc 1 258 0
 590 0214 5346     		mov	r3, sl
 591 0216 186A     		ldr	r0, [r3, #32]
 592 0218 594A     		ldr	r2, .L64+64
 593 021a 9042     		cmp	r0, r2
 594 021c 00D9     		bls	.LCB509
 595 021e C9E0     		b	.L58	@long jump
 596              	.LCB509:
 597              	.L24:
 278:../Sources/main.c **** 		if (carState->lineScanState == LINESCAN_IMAGE_READY)
 598              		.loc 1 278 0
 599 0220 4546     		mov	r5, r8
 600 0222 E878     		ldrb	r0, [r5, #3]
 601 0224 0028     		cmp	r0, #0
 602 0226 5BD0     		beq	.L59
 603              	.L27:
 287:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 604              		.loc 1 287 0
 605 0228 5246     		mov	r2, sl
 606 022a 1068     		ldr	r0, [r2]
 607 022c 6328     		cmp	r0, #99
 608 022e 24D9     		bls	.L34
 289:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 609              		.loc 1 289 0
 610 0230 0025     		mov	r5, #0
 290:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 611              		.loc 1 290 0
 612 0232 0B23     		mov	r3, #11
 289:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 613              		.loc 1 289 0
 614 0234 1560     		str	r5, [r2]
 290:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 615              		.loc 1 290 0
 616 0236 4446     		mov	r4, r8
 617 0238 E056     		ldrsb	r0, [r4, r3]
 618 023a 534A     		ldr	r2, .L64+72
 619 023c 0021     		mov	r1, #0
 620 023e FFF7FEFF 		bl	getDesiredServoValue
 621              	.LVL60:
 622 0242 5249     		ldr	r1, .L64+76
 623 0244 0860     		str	r0, [r1]
 292:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 624              		.loc 1 292 0
 625 0246 4849     		ldr	r1, .L64+40
 626 0248 FFF7FEFF 		bl	__aeabi_fadd
 627              	.LVL61:
 628 024c 011C     		add	r1, r0, #0
 629 024e 0020     		mov	r0, #0
 630 0250 FFF7FEFF 		bl	TFC_SetServo
 631              	.LVL62:
 632              	.LBB75:
 633              	.LBB76:
 491:../Sources/main.c **** 	}
 492:../Sources/main.c **** }
 493:../Sources/main.c **** 
 494:../Sources/main.c **** void processRaceLine(carState_s* carState)
 495:../Sources/main.c **** {
 496:../Sources/main.c **** 	if(s_mode_enable)
 497:../Sources/main.c **** 	{	
 498:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 499:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 500:../Sources/main.c **** 				&& carState->crossSection == NO)
 501:../Sources/main.c **** 		{
 502:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 503:../Sources/main.c **** 			{
 504:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 505:../Sources/main.c **** 			}
 506:../Sources/main.c **** 		}
 507:../Sources/main.c **** 		else
 508:../Sources/main.c **** 		{
 509:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 510:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 511:../Sources/main.c **** 		}
 512:../Sources/main.c **** 	}
 513:../Sources/main.c **** 	
 514:../Sources/main.c **** 	static float previousRaceLine = 0;
 515:../Sources/main.c **** 	
 516:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 517:../Sources/main.c **** 	{
 518:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 519:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 520:../Sources/main.c **** 	}
 521:../Sources/main.c **** 	else
 522:../Sources/main.c **** 	{
 523:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 524:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 525:../Sources/main.c **** 	}
 526:../Sources/main.c **** }
 527:../Sources/main.c **** 
 528:../Sources/main.c **** float targetSpeedAverage(float targetSpeed)
 529:../Sources/main.c **** {
 530:../Sources/main.c **** 	static float previousTargetSpeed = 0;
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 532:../Sources/main.c **** 	return previousTargetSpeed;
 533:../Sources/main.c **** }
 534:../Sources/main.c **** 
 535:../Sources/main.c **** float servoValueAverage(float servoValue)
 536:../Sources/main.c **** {
 537:../Sources/main.c **** 	static float previousServoValue = 0;
 538:../Sources/main.c **** 	previousServoValue = SERVO_LOWPASS_COEFF*previousServoValue + (1-SERVO_LOWPASS_COEFF)*servoValue;
 634              		.loc 1 538 0
 635 0254 4E4A     		ldr	r2, .L64+80
 636 0256 4F49     		ldr	r1, .L64+84
 637 0258 1068     		ldr	r0, [r2]
 638 025a FFF7FEFF 		bl	__aeabi_fmul
 639              	.LVL63:
 640 025e 051C     		add	r5, r0, #0
 641 0260 4A48     		ldr	r0, .L64+76
 642 0262 4D49     		ldr	r1, .L64+88
 643 0264 0068     		ldr	r0, [r0]
 644              	.LVL64:
 645 0266 FFF7FEFF 		bl	__aeabi_fmul
 646              	.LVL65:
 647 026a 011C     		add	r1, r0, #0
 648 026c 281C     		add	r0, r5, #0
 649 026e FFF7FEFF 		bl	__aeabi_fadd
 650              	.LVL66:
 651 0272 474C     		ldr	r4, .L64+80
 652              	.LBE76:
 653              	.LBE75:
 293:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 654              		.loc 1 293 0
 655 0274 454B     		ldr	r3, .L64+76
 656              	.LBB78:
 657              	.LBB77:
 658              		.loc 1 538 0
 659 0276 2060     		str	r0, [r4]
 660              	.LBE77:
 661              	.LBE78:
 293:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 662              		.loc 1 293 0
 663 0278 1860     		str	r0, [r3]
 664              	.L34:
 296:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 665              		.loc 1 296 0
 666 027a 4146     		mov	r1, r8
 667 027c CA78     		ldrb	r2, [r1, #3]
 668 027e 002A     		cmp	r2, #0
 669 0280 11D1     		bne	.L35
 299:../Sources/main.c **** 		if(stopline_enable == 1)
 670              		.loc 1 299 0
 671 0282 4648     		ldr	r0, .L64+92
 298:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 672              		.loc 1 298 0
 673 0284 0125     		mov	r5, #1
 299:../Sources/main.c **** 		if(stopline_enable == 1)
 674              		.loc 1 299 0
 675 0286 0478     		ldrb	r4, [r0]
 298:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 676              		.loc 1 298 0
 677 0288 CD70     		strb	r5, [r1, #3]
 299:../Sources/main.c **** 		if(stopline_enable == 1)
 678              		.loc 1 299 0
 679 028a 012C     		cmp	r4, #1
 680 028c 00D1     		bne	.LCB581
 681 028e 6CE1     		b	.L60	@long jump
 682              	.LCB581:
 683              	.L36:
 303:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 684              		.loc 1 303 0
 685 0290 4B46     		mov	r3, r9
 686 0292 1868     		ldr	r0, [r3]
 687 0294 FFF7FEFF 		bl	getTotalIntensity
 688              	.LVL67:
 689 0298 4149     		ldr	r1, .L64+96
 690 029a 0860     		str	r0, [r1]
 304:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 691              		.loc 1 304 0
 692 029c 3349     		ldr	r1, .L64+44
 693 029e FFF7FEFF 		bl	calculateNewExposure
 694              	.LVL68:
 695 02a2 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 696              	.LVL69:
 697              	.L35:
 307:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 698              		.loc 1 307 0
 699 02a6 4246     		mov	r2, r8
 700 02a8 9578     		ldrb	r5, [r2, #2]
 701 02aa 012D     		cmp	r5, #1
 702 02ac 00D8     		bhi	.LCB600
 703 02ae 13E1     		b	.L61	@long jump
 704              	.LCB600:
 341:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 705              		.loc 1 341 0
 706 02b0 032D     		cmp	r5, #3
 707 02b2 00D1     		bne	.LCB602
 708 02b4 5DE1     		b	.L62	@long jump
 709              	.LCB602:
 346:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 710              		.loc 1 346 0
 711 02b6 022D     		cmp	r5, #2
 712 02b8 00D0     		beq	.LCB604
 713 02ba EBE6     		b	.L19	@long jump
 714              	.LCB604:
 348:../Sources/main.c **** 		if(stopline_enable == 1)
 715              		.loc 1 348 0
 716 02bc 3748     		ldr	r0, .L64+92
 717 02be 0478     		ldrb	r4, [r0]
 718 02c0 012C     		cmp	r4, #1
 719 02c2 00D0     		beq	.LCB608
 720 02c4 E6E6     		b	.L19	@long jump
 721              	.LCB608:
 722              	.LBB79:
 353:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 723              		.loc 1 353 0
 724 02c6 8027     		mov	r7, #128
 725 02c8 254E     		ldr	r6, .L64+32
 726 02ca BD03     		lsl	r5, r7, #14
 727              	.L50:
 352:../Sources/main.c **** 				TFC_SetServo(0,0);
 728              		.loc 1 352 0
 729 02cc 0020     		mov	r0, #0
 730 02ce 0021     		mov	r1, #0
 731 02d0 FFF7FEFF 		bl	TFC_SetServo
 732              	.LVL70:
 354:../Sources/main.c **** 				TFC_SetMotorPWM(0, 0);
 733              		.loc 1 354 0
 734 02d4 0020     		mov	r0, #0
 353:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 735              		.loc 1 353 0
 736 02d6 B560     		str	r5, [r6, #8]
 354:../Sources/main.c **** 				TFC_SetMotorPWM(0, 0);
 737              		.loc 1 354 0
 738 02d8 011C     		add	r1, r0, #0
 739 02da FFF7FEFF 		bl	TFC_SetMotorPWM
 740              	.LVL71:
 741 02de F5E7     		b	.L50
 742              	.L59:
 743              	.LBE79:
 282:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 744              		.loc 1 282 0
 745 02e0 3049     		ldr	r1, .L64+100
 280:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 746              		.loc 1 280 0
 747 02e2 294A     		ldr	r2, .L64+72
 282:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 748              		.loc 1 282 0
 749 02e4 0C68     		ldr	r4, [r1]
 750 02e6 4B46     		mov	r3, r9
 280:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 751              		.loc 1 280 0
 752 02e8 1070     		strb	r0, [r2]
 282:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 753              		.loc 1 282 0
 754 02ea 211C     		mov	r1, r4
 755 02ec 1868     		ldr	r0, [r3]
 756 02ee 4246     		mov	r2, r8
 757 02f0 0394     		str	r4, [sp, #12]
 758 02f2 FFF7FEFF 		bl	findLine
 759              	.LVL72:
 760              	.LBB80:
 761              	.LBB81:
 496:../Sources/main.c **** 	if(s_mode_enable)
 762              		.loc 1 496 0
 763 02f6 2C4D     		ldr	r5, .L64+104
 764 02f8 2878     		ldrb	r0, [r5]
 765 02fa 0028     		cmp	r0, #0
 766 02fc 00D1     		bne	.LCB647
 767 02fe 81E0     		b	.L63	@long jump
 768              	.LCB647:
 498:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 769              		.loc 1 498 0
 770 0300 4546     		mov	r5, r8
 771 0302 AB7A     		ldrb	r3, [r5, #10]
 772 0304 5CB2     		sxtb	r4, r3
 773 0306 092C     		cmp	r4, #9
 774 0308 00DD     		ble	.LCB652
 775 030a 3BE1     		b	.L30	@long jump
 776              	.LCB652:
 499:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 777              		.loc 1 499 0
 778 030c 2A7B     		ldrb	r2, [r5, #12]
 779 030e 462A     		cmp	r2, #70
 780 0310 00D8     		bhi	.LCB655
 781 0312 37E1     		b	.L30	@long jump
 782              	.LCB655:
 500:../Sources/main.c **** 				&& carState->crossSection == NO)
 783              		.loc 1 500 0
 784 0314 A879     		ldrb	r0, [r5, #6]
 785 0316 0028     		cmp	r0, #0
 786 0318 00D0     		beq	.LCB658
 787 031a 33E1     		b	.L30	@long jump
 788              	.LCB658:
 502:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 789              		.loc 1 502 0
 790 031c 5046     		mov	r0, sl
 791 031e C569     		ldr	r5, [r0, #28]
 792 0320 2249     		ldr	r1, .L64+108
 793 0322 8D42     		cmp	r5, r1
 794 0324 00D9     		bls	.LCB663
 795 0326 33E1     		b	.L31	@long jump
 796              	.LCB663:
 797 0328 4246     		mov	r2, r8
 798 032a 507A     		ldrb	r0, [r2, #9]
 516:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 799              		.loc 1 516 0
 800 032c 0128     		cmp	r0, #1
 801 032e 6FD0     		beq	.L32
 802              	.L33:
 523:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 803              		.loc 1 523 0
 804 0330 4546     		mov	r5, r8
 805 0332 EB72     		strb	r3, [r5, #11]
 524:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 806              		.loc 1 524 0
 807 0334 201C     		mov	r0, r4
 808 0336 FFF7FEFF 		bl	__aeabi_i2f
 809              	.LVL73:
 810 033a 1D4B     		ldr	r3, .L64+112
 811 033c 1860     		str	r0, [r3]
 812 033e 73E7     		b	.L27
 813              	.L65:
 814              		.align	2
 815              	.L64:
 816 0340 00000000 		.word	.LANCHOR0
 817 0344 00000000 		.word	TFC_Ticker
 818 0348 00000000 		.word	LineScanImage0
 819 034c 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 820 0350 08000000 		.word	.LC9
 821 0354 00000000 		.word	.LANCHOR1
 822 0358 00900440 		.word	1074040832
 823 035c FFF8FFFF 		.word	-1793
 824 0360 00F10F40 		.word	1074786560
 825 0364 00000000 		.word	.LANCHOR18
 826 0368 CDCC4C3D 		.word	1028443341
 827 036c E0930400 		.word	300000
 828 0370 00000000 		.word	.LANCHOR2
 829 0374 00000000 		.word	.LANCHOR3
 830 0378 0C000000 		.word	.LC11
 831 037c 00A08C45 		.word	1166843904
 832 0380 E7030000 		.word	999
 833 0384 00000000 		.word	.LANCHOR5
 834 0388 00000000 		.word	.LANCHOR7
 835 038c 00000000 		.word	.LANCHOR10
 836 0390 00000000 		.word	.LANCHOR11
 837 0394 CDCC4C3F 		.word	1061997773
 838 0398 CCCC4C3E 		.word	1045220556
 839 039c 00000000 		.word	.LANCHOR12
 840 03a0 00000000 		.word	.LANCHOR13
 841 03a4 00000000 		.word	LineScanImage1
 842 03a8 00000000 		.word	.LANCHOR8
 843 03ac 94110000 		.word	4500
 844 03b0 00000000 		.word	.LANCHOR9
 845              	.LVL74:
 846              	.L58:
 847              	.LBE81:
 848              	.LBE80:
 259:../Sources/main.c **** 			TFC_Ticker[8]=0;
 849              		.loc 1 259 0
 850 03b4 0025     		mov	r5, #0
 851 03b6 1D62     		str	r5, [r3, #32]
 260:../Sources/main.c **** 			accel=getXAcc();
 852              		.loc 1 260 0
 853 03b8 FFF7FEFF 		bl	getXAcc
 854              	.LVL75:
 855 03bc 784C     		ldr	r4, .L66+8
 261:../Sources/main.c **** 			if(accel>2){
 856              		.loc 1 261 0
 857 03be 8023     		mov	r3, #128
 260:../Sources/main.c **** 			accel=getXAcc();
 858              		.loc 1 260 0
 859 03c0 2060     		str	r0, [r4]
 261:../Sources/main.c **** 			if(accel>2){
 860              		.loc 1 261 0
 861 03c2 D905     		lsl	r1, r3, #23
 862 03c4 FFF7FEFF 		bl	__aeabi_fcmpgt
 863              	.LVL76:
 262:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 864              		.loc 1 262 0
 865 03c8 764D     		ldr	r5, .L66+12
 261:../Sources/main.c **** 			if(accel>2){
 866              		.loc 1 261 0
 867 03ca 0028     		cmp	r0, #0
 868 03cc 6FD0     		beq	.L49
 262:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 869              		.loc 1 262 0
 870 03ce 6C68     		ldr	r4, [r5, #4]
 871 03d0 8022     		mov	r2, #128
 872 03d2 5300     		lsl	r3, r2, #1
 873 03d4 2343     		orr	r3, r4
 874 03d6 6B60     		str	r3, [r5, #4]
 263:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 875              		.loc 1 263 0
 876 03d8 6868     		ldr	r0, [r5, #4]
 877 03da 8021     		mov	r1, #128
 878 03dc 8C00     		lsl	r4, r1, #2
 879 03de 0443     		orr	r4, r0
 880 03e0 6C60     		str	r4, [r5, #4]
 264:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 881              		.loc 1 264 0
 882 03e2 6B68     		ldr	r3, [r5, #4]
 883 03e4 8022     		mov	r2, #128
 884 03e6 D000     		lsl	r0, r2, #3
 885 03e8 1843     		orr	r0, r3
 886 03ea 6860     		str	r0, [r5, #4]
 265:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 887              		.loc 1 265 0
 888 03ec 6968     		ldr	r1, [r5, #4]
 889 03ee 8024     		mov	r4, #128
 890 03f0 2301     		lsl	r3, r4, #4
 891 03f2 0B43     		orr	r3, r1
 892 03f4 6B60     		str	r3, [r5, #4]
 893 03f6 13E7     		b	.L24
 894              	.L57:
 228:../Sources/main.c **** 		stoplineJustDetected = 0;
 895              		.loc 1 228 0
 896 03f8 6B4A     		ldr	r2, .L66+16
 897 03fa 0020     		mov	r0, #0
 229:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 898              		.loc 1 229 0
 899 03fc 4146     		mov	r1, r8
 228:../Sources/main.c **** 		stoplineJustDetected = 0;
 900              		.loc 1 228 0
 901 03fe 1070     		strb	r0, [r2]
 229:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 902              		.loc 1 229 0
 903 0400 8D70     		strb	r5, [r1, #2]
 904 0402 F3E6     		b	.L21
 905              	.LVL77:
 906              	.L63:
 907 0404 4146     		mov	r1, r8
 908 0406 8B7A     		ldrb	r3, [r1, #10]
 909 0408 487A     		ldrb	r0, [r1, #9]
 910 040a 5CB2     		sxtb	r4, r3
 911              	.LBB84:
 912              	.LBB82:
 516:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 913              		.loc 1 516 0
 914 040c 0128     		cmp	r0, #1
 915 040e 8FD1     		bne	.L33
 916              	.L32:
 518:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 917              		.loc 1 518 0
 918 0410 6648     		ldr	r0, .L66+20
 919 0412 6749     		ldr	r1, .L66+24
 920 0414 0068     		ldr	r0, [r0]
 921 0416 FFF7FEFF 		bl	__aeabi_fmul
 922              	.LVL78:
 923 041a 051C     		add	r5, r0, #0
 924 041c 201C     		mov	r0, r4
 925 041e FFF7FEFF 		bl	__aeabi_i2f
 926              	.LVL79:
 927 0422 6449     		ldr	r1, .L66+28
 928 0424 FFF7FEFF 		bl	__aeabi_fmul
 929              	.LVL80:
 930 0428 011C     		add	r1, r0, #0
 931 042a 281C     		add	r0, r5, #0
 932 042c FFF7FEFF 		bl	__aeabi_fadd
 933              	.LVL81:
 934 0430 5E4C     		ldr	r4, .L66+20
 519:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 935              		.loc 1 519 0
 936 0432 FC23     		mov	r3, #252
 937 0434 9905     		lsl	r1, r3, #22
 518:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 938              		.loc 1 518 0
 939 0436 2060     		str	r0, [r4]
 519:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 940              		.loc 1 519 0
 941 0438 FFF7FEFF 		bl	__aeabi_fadd
 942              	.LVL82:
 943 043c FFF7FEFF 		bl	__aeabi_f2uiz
 944              	.LVL83:
 945 0440 4146     		mov	r1, r8
 946 0442 C872     		strb	r0, [r1, #11]
 947 0444 F0E6     		b	.L27
 948              	.LVL84:
 949              	.L53:
 950              	.LBE82:
 951              	.LBE84:
 952              	.LBE74:
 953              	.LBE73:
 954              	.LBB96:
 955              	.LBB60:
 397:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 956              		.loc 1 397 0
 957 0446 0124     		mov	r4, #1
 396:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 958              		.loc 1 396 0
 959 0448 0A60     		str	r2, [r1]
 397:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 960              		.loc 1 397 0
 961 044a C470     		strb	r4, [r0, #3]
 399:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 962              		.loc 1 399 0
 963 044c 5A49     		ldr	r1, .L66+32
 964 044e 0020     		mov	r0, #0
 965 0450 FFF7FEFF 		bl	TFC_SetServo
 966              	.LVL85:
 400:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 967              		.loc 1 400 0
 968 0454 8025     		mov	r5, #128
 969 0456 594B     		ldr	r3, .L66+36
 970 0458 A903     		lsl	r1, r5, #14
 401:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 971              		.loc 1 401 0
 972 045a 0020     		mov	r0, #0
 400:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 973              		.loc 1 400 0
 974 045c 9960     		str	r1, [r3, #8]
 401:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 975              		.loc 1 401 0
 976 045e 011C     		add	r1, r0, #0
 977 0460 FFF7FEFF 		bl	TFC_SetMotorPWM
 978              	.LVL86:
 403:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 979              		.loc 1 403 0
 980 0464 4846     		mov	r0, r9
 981 0466 0068     		ldr	r0, [r0]
 982 0468 FFF7FEFF 		bl	getTotalIntensity
 983              	.LVL87:
 984 046c 5449     		ldr	r1, .L66+40
 985 046e FFF7FEFF 		bl	calculateNewExposure
 986              	.LVL88:
 987 0472 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 988              	.LVL89:
 989              	.LBB58:
 406:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 990              		.loc 1 406 0
 991 0476 8022     		mov	r2, #128
 992              	.LBE58:
 403:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 993              		.loc 1 403 0
 994 0478 0024     		mov	r4, #0
 995              	.LBB59:
 406:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 996              		.loc 1 406 0
 997 047a 5500     		lsl	r5, r2, #1
 998              	.LVL90:
 999              	.L18:
 408:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 1000              		.loc 1 408 0
 1001 047c 4946     		mov	r1, r9
 1002 047e 0B68     		ldr	r3, [r1]
 1003 0480 391C     		mov	r1, r7
 1004 0482 1819     		add	r0, r3, r4
 1005 0484 0288     		ldrh	r2, [r0]
 1006 0486 301C     		mov	r0, r6
 1007 0488 FFF7FEFF 		bl	Qprintf
 1008              	.LVL91:
 1009 048c 4A46     		mov	r2, r9
 1010 048e 1168     		ldr	r1, [r2]
 1011 0490 0234     		add	r4, r4, #2
 1012 0492 0B19     		add	r3, r1, r4
 1013 0494 1A88     		ldrh	r2, [r3]
 1014 0496 301C     		mov	r0, r6
 1015 0498 391C     		mov	r1, r7
 1016 049a 0234     		add	r4, r4, #2
 1017 049c FFF7FEFF 		bl	Qprintf
 1018              	.LVL92:
 406:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 1019              		.loc 1 406 0
 1020 04a0 AC42     		cmp	r4, r5
 1021 04a2 EBD1     		bne	.L18
 1022              	.LBE59:
 1023              	.LBE60:
 1024              	.LBE96:
 1025              	.LBB97:
 1026              	.LBB70:
 1027              	.LBB69:
 438:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 1028              		.loc 1 438 0
 1029 04a4 301C     		mov	r0, r6
 1030 04a6 4749     		ldr	r1, .L66+44
 1031 04a8 FFF7FEFF 		bl	Qprintf
 1032              	.LVL93:
 1033 04ac F2E5     		b	.L19
 1034              	.LVL94:
 1035              	.L49:
 1036              	.LBE69:
 1037              	.LBE70:
 1038              	.LBE97:
 1039              	.LBB98:
 1040              	.LBB95:
 268:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 1041              		.loc 1 268 0
 1042 04ae A868     		ldr	r0, [r5, #8]
 1043 04b0 8022     		mov	r2, #128
 1044 04b2 5100     		lsl	r1, r2, #1
 1045 04b4 0143     		orr	r1, r0
 1046 04b6 A960     		str	r1, [r5, #8]
 269:../Sources/main.c **** 							GPIOB_PCOR |= (1<<9);
 1047              		.loc 1 269 0
 1048 04b8 AC68     		ldr	r4, [r5, #8]
 1049 04ba 8023     		mov	r3, #128
 1050 04bc 9800     		lsl	r0, r3, #2
 1051 04be 2043     		orr	r0, r4
 1052 04c0 A860     		str	r0, [r5, #8]
 270:../Sources/main.c **** 							GPIOB_PCOR |= (1<<10);
 1053              		.loc 1 270 0
 1054 04c2 A968     		ldr	r1, [r5, #8]
 1055 04c4 8022     		mov	r2, #128
 1056 04c6 D400     		lsl	r4, r2, #3
 1057 04c8 0C43     		orr	r4, r1
 1058 04ca AC60     		str	r4, [r5, #8]
 271:../Sources/main.c **** 							GPIOB_PCOR |= (1<<11);
 1059              		.loc 1 271 0
 1060 04cc AB68     		ldr	r3, [r5, #8]
 1061 04ce 8020     		mov	r0, #128
 1062 04d0 0101     		lsl	r1, r0, #4
 1063 04d2 1943     		orr	r1, r3
 1064 04d4 A960     		str	r1, [r5, #8]
 1065 04d6 A3E6     		b	.L24
 1066              	.L61:
 1067              	.LBB85:
 309:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 1068              		.loc 1 309 0
 1069 04d8 3B48     		ldr	r0, .L66+48
 1070 04da 0468     		ldr	r4, [r0]
 1071 04dc 201C     		add	r0, r4, #0
 1072 04de 0294     		str	r4, [sp, #8]
 1073 04e0 FFF7FEFF 		bl	getRadiusRoot
 1074              	.LVL95:
 1075 04e4 3949     		ldr	r1, .L66+52
 1076 04e6 021C     		add	r2, r0, #0
 1077 04e8 4046     		mov	r0, r8
 1078 04ea FFF7FEFF 		bl	getDesiredSpeed
 1079              	.LVL96:
 1080              	.LBB86:
 1081              	.LBB87:
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 1082              		.loc 1 531 0
 1083 04ee 384D     		ldr	r5, .L66+56
 1084              	.LBE87:
 1085              	.LBE86:
 309:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 1086              		.loc 1 309 0
 1087 04f0 8346     		mov	fp, r0
 1088              	.LVL97:
 1089              	.LBB91:
 1090              	.LBB88:
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 1091              		.loc 1 531 0
 1092 04f2 2F49     		ldr	r1, .L66+24
 1093 04f4 2868     		ldr	r0, [r5]
 1094              	.LVL98:
 1095 04f6 FFF7FEFF 		bl	__aeabi_fmul
 1096              	.LVL99:
 1097 04fa FFF7FEFF 		bl	__aeabi_f2d
 1098              	.LVL100:
 1099 04fe 041C     		mov	r4, r0
 1100 0500 5846     		mov	r0, fp
 1101 0502 0D1C     		mov	r5, r1
 1102 0504 FFF7FEFF 		bl	__aeabi_f2d
 1103              	.LVL101:
 1104 0508 244B     		ldr	r3, .L66+4
 1105 050a 234A     		ldr	r2, .L66
 1106 050c FFF7FEFF 		bl	__aeabi_dmul
 1107              	.LVL102:
 1108 0510 021C     		mov	r2, r0
 1109 0512 0B1C     		mov	r3, r1
 1110 0514 201C     		mov	r0, r4
 1111 0516 291C     		mov	r1, r5
 1112 0518 FFF7FEFF 		bl	__aeabi_dadd
 1113              	.LVL103:
 1114 051c FFF7FEFF 		bl	__aeabi_d2f
 1115              	.LVL104:
 1116              	.LBE88:
 1117              	.LBE91:
 312:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 1118              		.loc 1 312 0
 1119 0520 294A     		ldr	r2, .L66+48
 1120              	.LBB92:
 1121              	.LBB89:
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 1122              		.loc 1 531 0
 1123 0522 2B4B     		ldr	r3, .L66+56
 1124              	.LBE89:
 1125              	.LBE92:
 309:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 1126              		.loc 1 309 0
 1127 0524 2B49     		ldr	r1, .L66+60
 1128              	.LBB93:
 1129              	.LBB90:
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 1130              		.loc 1 531 0
 1131 0526 1860     		str	r0, [r3]
 1132              	.LBE90:
 1133              	.LBE93:
 309:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 1134              		.loc 1 309 0
 1135 0528 0860     		str	r0, [r1]
 312:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 1136              		.loc 1 312 0
 1137 052a 1068     		ldr	r0, [r2]
 1138 052c 0021     		mov	r1, #0
 1139 052e 0190     		str	r0, [sp, #4]
 1140 0530 FFF7FEFF 		bl	getActiveDifferentialModifier
 1141              	.LVL105:
 1142 0534 244C     		ldr	r4, .L66+48
 1143 0536 0121     		mov	r1, #1
 1144 0538 2568     		ldr	r5, [r4]
 1145 053a 281C     		add	r0, r5, #0
 1146 053c 0095     		str	r5, [sp]
 1147 053e FFF7FEFF 		bl	getActiveDifferentialModifier
 1148              	.LVL106:
 316:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 1149              		.loc 1 316 0
 1150 0542 0020     		mov	r0, #0
 1151 0544 FFF7FEFF 		bl	getSpeed
 1152              	.LVL107:
 1153 0548 234B     		ldr	r3, .L66+64
 1154 054a 1860     		str	r0, [r3]
 317:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 1155              		.loc 1 317 0
 1156 054c 0120     		mov	r0, #1
 1157 054e FFF7FEFF 		bl	getSpeed
 1158              	.LVL108:
 1159 0552 2249     		ldr	r1, .L66+68
 329:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 1160              		.loc 1 329 0
 1161 0554 4246     		mov	r2, r8
 317:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 1162              		.loc 1 317 0
 1163 0556 0860     		str	r0, [r1]
 329:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 1164              		.loc 1 329 0
 1165 0558 5078     		ldrb	r0, [r2, #1]
 1166 055a 0128     		cmp	r0, #1
 1167 055c 00D0     		beq	.LCB1003
 1168 055e 99E5     		b	.L19	@long jump
 1169              	.LCB1003:
 331:../Sources/main.c **** 			TFC_SetMotorPWM(0.3f,0.3f);
 1170              		.loc 1 331 0
 1171 0560 1F48     		ldr	r0, .L66+72
 1172 0562 011C     		add	r1, r0, #0
 1173 0564 FFF7FEFF 		bl	TFC_SetMotorPWM
 1174              	.LVL109:
 1175 0568 94E5     		b	.L19
 1176              	.LVL110:
 1177              	.L60:
 1178              	.LBE85:
 301:../Sources/main.c **** 			findStop(carState);
 1179              		.loc 1 301 0
 1180 056a 4046     		mov	r0, r8
 1181 056c FFF7FEFF 		bl	findStop
 1182              	.LVL111:
 1183 0570 8EE6     		b	.L36
 1184              	.L62:
 343:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 1185              		.loc 1 343 0
 1186 0572 8023     		mov	r3, #128
 1187 0574 114A     		ldr	r2, .L66+36
 1188 0576 9903     		lsl	r1, r3, #14
 344:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 1189              		.loc 1 344 0
 1190 0578 0020     		mov	r0, #0
 343:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 1191              		.loc 1 343 0
 1192 057a 9160     		str	r1, [r2, #8]
 344:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 1193              		.loc 1 344 0
 1194 057c 011C     		add	r1, r0, #0
 1195 057e FFF7FEFF 		bl	TFC_SetMotorPWM
 1196              	.LVL112:
 1197 0582 87E5     		b	.L19
 1198              	.LVL113:
 1199              	.L30:
 1200              	.LBB94:
 1201              	.LBB83:
 509:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 1202              		.loc 1 509 0
 1203 0584 0025     		mov	r5, #0
 1204 0586 4146     		mov	r1, r8
 510:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 1205              		.loc 1 510 0
 1206 0588 5246     		mov	r2, sl
 509:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 1207              		.loc 1 509 0
 1208 058a 4D72     		strb	r5, [r1, #9]
 510:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 1209              		.loc 1 510 0
 1210 058c D561     		str	r5, [r2, #28]
 1211 058e CFE6     		b	.L33
 1212              	.L31:
 504:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 1213              		.loc 1 504 0
 1214 0590 0121     		mov	r1, #1
 1215 0592 4246     		mov	r2, r8
 1216 0594 5172     		strb	r1, [r2, #9]
 1217 0596 3BE7     		b	.L32
 1218              	.L67:
 1219              		.align	3
 1220              	.L66:
 1221 0598 9A999999 		.word	-1717986918
 1222 059c 9999B93F 		.word	1069128089
 1223 05a0 00000000 		.word	.LANCHOR6
 1224 05a4 40F00F40 		.word	1074786368
 1225 05a8 00000000 		.word	.LANCHOR4
 1226 05ac 00000000 		.word	.LANCHOR9
 1227 05b0 6666663F 		.word	1063675494
 1228 05b4 D0CCCC3D 		.word	1036831952
 1229 05b8 CDCC4C3D 		.word	1028443341
 1230 05bc 00F10F40 		.word	1074786560
 1231 05c0 E0930400 		.word	300000
 1232 05c4 0C000000 		.word	.LC11
 1233 05c8 00000000 		.word	.LANCHOR10
 1234 05cc 00807A43 		.word	1132101632
 1235 05d0 00000000 		.word	.LANCHOR14
 1236 05d4 00000000 		.word	.LANCHOR15
 1237 05d8 00000000 		.word	.LANCHOR16
 1238 05dc 00000000 		.word	.LANCHOR17
 1239 05e0 9A99993E 		.word	1050253722
 1240              	.LBE83:
 1241              	.LBE94:
 1242              	.LBE95:
 1243              	.LBE98:
 1244              		.cfi_endproc
 1245              	.LFE0:
 1247 05e4 C046C046 		.section	.text.lineFollowingMode,"ax",%progbits
 1248              		.align	2
 1249              		.global	lineFollowingMode
 1250              		.code	16
 1251              		.thumb_func
 1253              	lineFollowingMode:
 1254              	.LFB2:
 222:../Sources/main.c **** {
 1255              		.loc 1 222 0
 1256              		.cfi_startproc
 1257              	.LVL114:
 1258 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1259              	.LCFI4:
 1260              		.cfi_def_cfa_offset 24
 1261              		.cfi_offset 3, -24
 1262              		.cfi_offset 4, -20
 1263              		.cfi_offset 5, -16
 1264              		.cfi_offset 6, -12
 1265              		.cfi_offset 7, -8
 1266              		.cfi_offset 14, -4
 1267 0002 4646     		mov	r6, r8
 1268 0004 4F46     		mov	r7, r9
 1269 0006 C0B4     		push	{r6, r7}
 1270              	.LCFI5:
 1271              		.cfi_def_cfa_offset 32
 1272              		.cfi_offset 8, -32
 1273              		.cfi_offset 9, -28
 222:../Sources/main.c **** {
 1274              		.loc 1 222 0
 1275 0008 061C     		mov	r6, r0
 226:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 1276              		.loc 1 226 0
 1277 000a 0120     		mov	r0, #1
 1278              	.LVL115:
 1279 000c FFF7FEFF 		bl	TFC_GetPush_Button
 1280              	.LVL116:
 1281 0010 0128     		cmp	r0, #1
 1282 0012 00D1     		bne	.LCB1105
 1283 0014 D5E0     		b	.L93	@long jump
 1284              	.LCB1105:
 1285              	.L69:
 233:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 1286              		.loc 1 233 0
 1287 0016 AA4C     		ldr	r4, .L102+8
 1288 0018 AA4D     		ldr	r5, .L102+12
 1289 001a A169     		ldr	r1, [r4, #24]
 1290 001c A942     		cmp	r1, r5
 1291 001e 05D9     		bls	.L70
 235:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 1292              		.loc 1 235 0
 1293 0020 0027     		mov	r7, #0
 1294 0022 A761     		str	r7, [r4, #24]
 236:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 1295              		.loc 1 236 0
 1296 0024 FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 1297              	.LVL117:
 1298 0028 A74A     		ldr	r2, .L102+16
 1299 002a 1060     		str	r0, [r2]
 1300              	.L70:
 250:../Sources/main.c **** 	if(TFC_Ticker[5]>=5){
 1301              		.loc 1 250 0
 1302 002c 6369     		ldr	r3, [r4, #20]
 1303 002e 042B     		cmp	r3, #4
 1304 0030 04D9     		bls	.L71
 251:../Sources/main.c **** 		TFC_Ticker[5]=0;
 1305              		.loc 1 251 0
 1306 0032 0020     		mov	r0, #0
 1307 0034 6061     		str	r0, [r4, #20]
 252:../Sources/main.c **** 		LCDfeedback(carState);
 1308              		.loc 1 252 0
 1309 0036 301C     		mov	r0, r6
 1310 0038 FFF7FEFF 		bl	LCDfeedback
 1311              	.LVL118:
 1312              	.L71:
 258:../Sources/main.c **** 		if(TFC_Ticker[8]>=1000){
 1313              		.loc 1 258 0
 1314 003c 216A     		ldr	r1, [r4, #32]
 1315 003e A14D     		ldr	r5, .L102+12
 1316 0040 A942     		cmp	r1, r5
 1317 0042 4CD8     		bhi	.L94
 1318              	.L72:
 278:../Sources/main.c **** 		if (carState->lineScanState == LINESCAN_IMAGE_READY)
 1319              		.loc 1 278 0
 1320 0044 F578     		ldrb	r5, [r6, #3]
 1321 0046 002D     		cmp	r5, #0
 1322 0048 00D1     		bne	.LCB1138
 1323 004a 6DE0     		b	.L95	@long jump
 1324              	.LCB1138:
 1325              	.L75:
 287:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 1326              		.loc 1 287 0
 1327 004c 2268     		ldr	r2, [r4]
 1328 004e 632A     		cmp	r2, #99
 1329 0050 20D9     		bls	.L82
 289:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 1330              		.loc 1 289 0
 1331 0052 0021     		mov	r1, #0
 1332 0054 2160     		str	r1, [r4]
 290:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 1333              		.loc 1 290 0
 1334 0056 0B24     		mov	r4, #11
 1335 0058 9C4A     		ldr	r2, .L102+20
 1336 005a 3057     		ldrsb	r0, [r6, r4]
 1337 005c 0021     		mov	r1, #0
 1338 005e FFF7FEFF 		bl	getDesiredServoValue
 1339              	.LVL119:
 1340 0062 9B4C     		ldr	r4, .L102+24
 292:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 1341              		.loc 1 292 0
 1342 0064 9B49     		ldr	r1, .L102+28
 290:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 1343              		.loc 1 290 0
 1344 0066 2060     		str	r0, [r4]
 292:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 1345              		.loc 1 292 0
 1346 0068 FFF7FEFF 		bl	__aeabi_fadd
 1347              	.LVL120:
 1348 006c 011C     		add	r1, r0, #0
 1349 006e 0020     		mov	r0, #0
 1350 0070 FFF7FEFF 		bl	TFC_SetServo
 1351              	.LVL121:
 1352              	.LBB107:
 1353              	.LBB108:
 1354              		.loc 1 538 0
 1355 0074 984D     		ldr	r5, .L102+32
 1356 0076 9949     		ldr	r1, .L102+36
 1357 0078 2868     		ldr	r0, [r5]
 1358 007a FFF7FEFF 		bl	__aeabi_fmul
 1359              	.LVL122:
 1360 007e 9849     		ldr	r1, .L102+40
 1361 0080 071C     		add	r7, r0, #0
 1362 0082 2068     		ldr	r0, [r4]
 1363              	.LVL123:
 1364 0084 FFF7FEFF 		bl	__aeabi_fmul
 1365              	.LVL124:
 1366 0088 011C     		add	r1, r0, #0
 1367 008a 381C     		add	r0, r7, #0
 1368 008c FFF7FEFF 		bl	__aeabi_fadd
 1369              	.LVL125:
 1370 0090 2860     		str	r0, [r5]
 1371              	.LBE108:
 1372              	.LBE107:
 293:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 1373              		.loc 1 293 0
 1374 0092 2060     		str	r0, [r4]
 1375              	.L82:
 296:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 1376              		.loc 1 296 0
 1377 0094 F078     		ldrb	r0, [r6, #3]
 1378 0096 0028     		cmp	r0, #0
 1379 0098 10D1     		bne	.L83
 299:../Sources/main.c **** 		if(stopline_enable == 1)
 1380              		.loc 1 299 0
 1381 009a 924A     		ldr	r2, .L102+44
 298:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 1382              		.loc 1 298 0
 1383 009c 0123     		mov	r3, #1
 299:../Sources/main.c **** 		if(stopline_enable == 1)
 1384              		.loc 1 299 0
 1385 009e 1178     		ldrb	r1, [r2]
 298:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 1386              		.loc 1 298 0
 1387 00a0 F370     		strb	r3, [r6, #3]
 299:../Sources/main.c **** 		if(stopline_enable == 1)
 1388              		.loc 1 299 0
 1389 00a2 0129     		cmp	r1, #1
 1390 00a4 17D0     		beq	.L96
 1391              	.L84:
 303:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 1392              		.loc 1 303 0
 1393 00a6 904C     		ldr	r4, .L102+48
 1394 00a8 2068     		ldr	r0, [r4]
 1395 00aa FFF7FEFF 		bl	getTotalIntensity
 1396              	.LVL126:
 1397 00ae 8F4D     		ldr	r5, .L102+52
 304:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 1398              		.loc 1 304 0
 1399 00b0 8F49     		ldr	r1, .L102+56
 303:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 1400              		.loc 1 303 0
 1401 00b2 2860     		str	r0, [r5]
 304:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 1402              		.loc 1 304 0
 1403 00b4 FFF7FEFF 		bl	calculateNewExposure
 1404              	.LVL127:
 1405 00b8 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 1406              	.LVL128:
 1407              	.L83:
 307:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 1408              		.loc 1 307 0
 1409 00bc B778     		ldrb	r7, [r6, #2]
 1410 00be 012F     		cmp	r7, #1
 1411 00c0 00D8     		bhi	.LCB1214
 1412 00c2 ADE0     		b	.L97	@long jump
 1413              	.LCB1214:
 341:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 1414              		.loc 1 341 0
 1415 00c4 032F     		cmp	r7, #3
 1416 00c6 00D1     		bne	.LCB1216
 1417 00c8 A1E0     		b	.L98	@long jump
 1418              	.LCB1216:
 346:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 1419              		.loc 1 346 0
 1420 00ca 022F     		cmp	r7, #2
 1421 00cc 68D0     		beq	.L99
 1422              	.LVL129:
 1423              	.L68:
 390:../Sources/main.c **** }
 1424              		.loc 1 390 0
 1425              		@ sp needed for prologue
 1426 00ce 0CBC     		pop	{r2, r3}
 1427 00d0 9046     		mov	r8, r2
 1428 00d2 9946     		mov	r9, r3
 1429 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1430              	.LVL130:
 1431              	.L96:
 301:../Sources/main.c **** 			findStop(carState);
 1432              		.loc 1 301 0
 1433 00d6 301C     		mov	r0, r6
 1434 00d8 FFF7FEFF 		bl	findStop
 1435              	.LVL131:
 1436 00dc E3E7     		b	.L84
 1437              	.L94:
 259:../Sources/main.c **** 			TFC_Ticker[8]=0;
 1438              		.loc 1 259 0
 1439 00de 0027     		mov	r7, #0
 1440 00e0 2762     		str	r7, [r4, #32]
 260:../Sources/main.c **** 			accel=getXAcc();
 1441              		.loc 1 260 0
 1442 00e2 FFF7FEFF 		bl	getXAcc
 1443              	.LVL132:
 1444 00e6 834A     		ldr	r2, .L102+60
 261:../Sources/main.c **** 			if(accel>2){
 1445              		.loc 1 261 0
 1446 00e8 8023     		mov	r3, #128
 260:../Sources/main.c **** 			accel=getXAcc();
 1447              		.loc 1 260 0
 1448 00ea 1060     		str	r0, [r2]
 261:../Sources/main.c **** 			if(accel>2){
 1449              		.loc 1 261 0
 1450 00ec D905     		lsl	r1, r3, #23
 1451 00ee FFF7FEFF 		bl	__aeabi_fcmpgt
 1452              	.LVL133:
 262:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 1453              		.loc 1 262 0
 1454 00f2 814D     		ldr	r5, .L102+64
 261:../Sources/main.c **** 			if(accel>2){
 1455              		.loc 1 261 0
 1456 00f4 0028     		cmp	r0, #0
 1457 00f6 75D0     		beq	.L91
 262:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 1458              		.loc 1 262 0
 1459 00f8 6F68     		ldr	r7, [r5, #4]
 1460 00fa 8023     		mov	r3, #128
 1461 00fc 5800     		lsl	r0, r3, #1
 1462 00fe 3843     		orr	r0, r7
 1463 0100 6860     		str	r0, [r5, #4]
 263:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 1464              		.loc 1 263 0
 1465 0102 6968     		ldr	r1, [r5, #4]
 1466 0104 8022     		mov	r2, #128
 1467 0106 9700     		lsl	r7, r2, #2
 1468 0108 0F43     		orr	r7, r1
 1469 010a 6F60     		str	r7, [r5, #4]
 264:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 1470              		.loc 1 264 0
 1471 010c 6B68     		ldr	r3, [r5, #4]
 1472 010e 8020     		mov	r0, #128
 1473 0110 C100     		lsl	r1, r0, #3
 1474 0112 1943     		orr	r1, r3
 1475 0114 6960     		str	r1, [r5, #4]
 265:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 1476              		.loc 1 265 0
 1477 0116 6F68     		ldr	r7, [r5, #4]
 1478 0118 8022     		mov	r2, #128
 1479 011a 1301     		lsl	r3, r2, #4
 1480 011c 3B43     		orr	r3, r7
 1481 011e 6B60     		str	r3, [r5, #4]
 278:../Sources/main.c **** 		if (carState->lineScanState == LINESCAN_IMAGE_READY)
 1482              		.loc 1 278 0
 1483 0120 F578     		ldrb	r5, [r6, #3]
 1484 0122 002D     		cmp	r5, #0
 1485 0124 00D0     		beq	.LCB1277
 1486 0126 91E7     		b	.L75	@long jump
 1487              	.LCB1277:
 1488              	.L95:
 280:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 1489              		.loc 1 280 0
 1490 0128 6848     		ldr	r0, .L102+20
 282:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 1491              		.loc 1 282 0
 1492 012a 6F49     		ldr	r1, .L102+48
 1493 012c 734F     		ldr	r7, .L102+68
 280:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 1494              		.loc 1 280 0
 1495 012e 0570     		strb	r5, [r0]
 282:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 1496              		.loc 1 282 0
 1497 0130 321C     		mov	r2, r6
 1498 0132 0868     		ldr	r0, [r1]
 1499 0134 3968     		ldr	r1, [r7]
 1500 0136 FFF7FEFF 		bl	findLine
 1501              	.LVL134:
 1502              	.LBB109:
 1503              	.LBB110:
 496:../Sources/main.c **** 	if(s_mode_enable)
 1504              		.loc 1 496 0
 1505 013a 714A     		ldr	r2, .L102+72
 1506 013c 1378     		ldrb	r3, [r2]
 1507 013e 002B     		cmp	r3, #0
 1508 0140 45D0     		beq	.L100
 498:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 1509              		.loc 1 498 0
 1510 0142 B07A     		ldrb	r0, [r6, #10]
 1511 0144 45B2     		sxtb	r5, r0
 1512 0146 092D     		cmp	r5, #9
 1513 0148 00DD     		ble	.LCB1299
 1514 014a ABE0     		b	.L78	@long jump
 1515              	.LCB1299:
 499:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 1516              		.loc 1 499 0
 1517 014c 317B     		ldrb	r1, [r6, #12]
 1518 014e 4629     		cmp	r1, #70
 1519 0150 00D8     		bhi	.LCB1302
 1520 0152 A7E0     		b	.L78	@long jump
 1521              	.LCB1302:
 500:../Sources/main.c **** 				&& carState->crossSection == NO)
 1522              		.loc 1 500 0
 1523 0154 B779     		ldrb	r7, [r6, #6]
 1524 0156 002F     		cmp	r7, #0
 1525 0158 00D0     		beq	.LCB1305
 1526 015a A3E0     		b	.L78	@long jump
 1527              	.LCB1305:
 502:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 1528              		.loc 1 502 0
 1529 015c E369     		ldr	r3, [r4, #28]
 1530 015e 694A     		ldr	r2, .L102+76
 1531 0160 9342     		cmp	r3, r2
 1532 0162 00D9     		bls	.LCB1309
 1533 0164 A3E0     		b	.L79	@long jump
 1534              	.LCB1309:
 1535 0166 717A     		ldrb	r1, [r6, #9]
 516:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 1536              		.loc 1 516 0
 1537 0168 0129     		cmp	r1, #1
 1538 016a 34D1     		bne	.L81
 1539              	.L101:
 1540 016c 45B2     		sxtb	r5, r0
 1541              	.L80:
 518:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 1542              		.loc 1 518 0
 1543 016e 664F     		ldr	r7, .L102+80
 1544 0170 6649     		ldr	r1, .L102+84
 1545 0172 3868     		ldr	r0, [r7]
 1546 0174 FFF7FEFF 		bl	__aeabi_fmul
 1547              	.LVL135:
 1548 0178 8046     		mov	r8, r0
 1549 017a 281C     		mov	r0, r5
 1550 017c FFF7FEFF 		bl	__aeabi_i2f
 1551              	.LVL136:
 1552 0180 6349     		ldr	r1, .L102+88
 1553 0182 FFF7FEFF 		bl	__aeabi_fmul
 1554              	.LVL137:
 1555 0186 011C     		add	r1, r0, #0
 1556 0188 4046     		mov	r0, r8
 1557 018a FFF7FEFF 		bl	__aeabi_fadd
 1558              	.LVL138:
 519:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 1559              		.loc 1 519 0
 1560 018e FC23     		mov	r3, #252
 1561 0190 9905     		lsl	r1, r3, #22
 518:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 1562              		.loc 1 518 0
 1563 0192 3860     		str	r0, [r7]
 519:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 1564              		.loc 1 519 0
 1565 0194 FFF7FEFF 		bl	__aeabi_fadd
 1566              	.LVL139:
 1567 0198 FFF7FEFF 		bl	__aeabi_f2uiz
 1568              	.LVL140:
 1569 019c F072     		strb	r0, [r6, #11]
 1570 019e 55E7     		b	.L75
 1571              	.LVL141:
 1572              	.L99:
 1573              	.LBE110:
 1574              	.LBE109:
 348:../Sources/main.c **** 		if(stopline_enable == 1)
 1575              		.loc 1 348 0
 1576 01a0 504E     		ldr	r6, .L102+44
 1577              	.LVL142:
 1578 01a2 3078     		ldrb	r0, [r6]
 1579 01a4 0128     		cmp	r0, #1
 1580 01a6 92D1     		bne	.L68
 1581              	.LBB113:
 353:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 1582              		.loc 1 353 0
 1583 01a8 8023     		mov	r3, #128
 1584 01aa 5A4D     		ldr	r5, .L102+92
 1585 01ac 9C03     		lsl	r4, r3, #14
 1586              	.L92:
 352:../Sources/main.c **** 				TFC_SetServo(0,0);
 1587              		.loc 1 352 0
 1588 01ae 0020     		mov	r0, #0
 1589 01b0 0021     		mov	r1, #0
 1590 01b2 FFF7FEFF 		bl	TFC_SetServo
 1591              	.LVL143:
 354:../Sources/main.c **** 				TFC_SetMotorPWM(0, 0);
 1592              		.loc 1 354 0
 1593 01b6 0020     		mov	r0, #0
 353:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 1594              		.loc 1 353 0
 1595 01b8 AC60     		str	r4, [r5, #8]
 354:../Sources/main.c **** 				TFC_SetMotorPWM(0, 0);
 1596              		.loc 1 354 0
 1597 01ba 011C     		add	r1, r0, #0
 1598 01bc FFF7FEFF 		bl	TFC_SetMotorPWM
 1599              	.LVL144:
 1600 01c0 F5E7     		b	.L92
 1601              	.LVL145:
 1602              	.L93:
 1603              	.LBE113:
 228:../Sources/main.c **** 		stoplineJustDetected = 0;
 1604              		.loc 1 228 0
 1605 01c2 554B     		ldr	r3, .L102+96
 1606 01c4 0022     		mov	r2, #0
 229:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 1607              		.loc 1 229 0
 1608 01c6 0320     		mov	r0, #3
 228:../Sources/main.c **** 		stoplineJustDetected = 0;
 1609              		.loc 1 228 0
 1610 01c8 1A70     		strb	r2, [r3]
 229:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 1611              		.loc 1 229 0
 1612 01ca B070     		strb	r0, [r6, #2]
 1613 01cc 23E7     		b	.L69
 1614              	.LVL146:
 1615              	.L100:
 1616 01ce 717A     		ldrb	r1, [r6, #9]
 1617 01d0 B07A     		ldrb	r0, [r6, #10]
 1618              	.LBB114:
 1619              	.LBB111:
 516:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 1620              		.loc 1 516 0
 1621 01d2 0129     		cmp	r1, #1
 1622 01d4 CAD0     		beq	.L101
 1623              	.L81:
 523:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 1624              		.loc 1 523 0
 1625 01d6 F072     		strb	r0, [r6, #11]
 524:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 1626              		.loc 1 524 0
 1627 01d8 40B2     		sxtb	r0, r0
 1628 01da FFF7FEFF 		bl	__aeabi_i2f
 1629              	.LVL147:
 1630 01de 4A4F     		ldr	r7, .L102+80
 1631 01e0 3860     		str	r0, [r7]
 1632 01e2 33E7     		b	.L75
 1633              	.LVL148:
 1634              	.L91:
 1635              	.LBE111:
 1636              	.LBE114:
 268:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 1637              		.loc 1 268 0
 1638 01e4 A868     		ldr	r0, [r5, #8]
 1639 01e6 8021     		mov	r1, #128
 1640 01e8 4F00     		lsl	r7, r1, #1
 1641 01ea 0743     		orr	r7, r0
 1642 01ec AF60     		str	r7, [r5, #8]
 269:../Sources/main.c **** 							GPIOB_PCOR |= (1<<9);
 1643              		.loc 1 269 0
 1644 01ee AB68     		ldr	r3, [r5, #8]
 1645 01f0 8022     		mov	r2, #128
 1646 01f2 9000     		lsl	r0, r2, #2
 1647 01f4 1843     		orr	r0, r3
 1648 01f6 A860     		str	r0, [r5, #8]
 270:../Sources/main.c **** 							GPIOB_PCOR |= (1<<10);
 1649              		.loc 1 270 0
 1650 01f8 A968     		ldr	r1, [r5, #8]
 1651 01fa 8027     		mov	r7, #128
 1652 01fc FB00     		lsl	r3, r7, #3
 1653 01fe 0B43     		orr	r3, r1
 1654 0200 AB60     		str	r3, [r5, #8]
 271:../Sources/main.c **** 							GPIOB_PCOR |= (1<<11);
 1655              		.loc 1 271 0
 1656 0202 A868     		ldr	r0, [r5, #8]
 1657 0204 8022     		mov	r2, #128
 1658 0206 1101     		lsl	r1, r2, #4
 1659 0208 0143     		orr	r1, r0
 1660 020a A960     		str	r1, [r5, #8]
 1661 020c 1AE7     		b	.L72
 1662              	.L98:
 343:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 1663              		.loc 1 343 0
 1664 020e 8022     		mov	r2, #128
 1665 0210 404F     		ldr	r7, .L102+92
 1666 0212 9103     		lsl	r1, r2, #14
 344:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 1667              		.loc 1 344 0
 1668 0214 0020     		mov	r0, #0
 343:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 1669              		.loc 1 343 0
 1670 0216 B960     		str	r1, [r7, #8]
 344:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 1671              		.loc 1 344 0
 1672 0218 011C     		add	r1, r0, #0
 1673 021a FFF7FEFF 		bl	TFC_SetMotorPWM
 1674              	.LVL149:
 1675 021e 56E7     		b	.L68
 1676              	.L97:
 1677              	.LBB115:
 309:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 1678              		.loc 1 309 0
 1679 0220 2B4F     		ldr	r7, .L102+24
 1680 0222 3868     		ldr	r0, [r7]
 1681 0224 FFF7FEFF 		bl	getRadiusRoot
 1682              	.LVL150:
 1683 0228 3C49     		ldr	r1, .L102+100
 1684 022a 021C     		add	r2, r0, #0
 1685 022c 301C     		mov	r0, r6
 1686 022e FFF7FEFF 		bl	getDesiredSpeed
 1687              	.LVL151:
 1688 0232 8146     		mov	r9, r0
 1689              	.LVL152:
 1690              	.LBB116:
 1691              	.LBB117:
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 1692              		.loc 1 531 0
 1693 0234 3A48     		ldr	r0, .L102+104
 1694              	.LVL153:
 1695 0236 3549     		ldr	r1, .L102+84
 1696 0238 8046     		mov	r8, r0
 1697 023a 0068     		ldr	r0, [r0]
 1698 023c FFF7FEFF 		bl	__aeabi_fmul
 1699              	.LVL154:
 1700 0240 FFF7FEFF 		bl	__aeabi_f2d
 1701              	.LVL155:
 1702 0244 041C     		mov	r4, r0
 1703 0246 4846     		mov	r0, r9
 1704 0248 0D1C     		mov	r5, r1
 1705 024a FFF7FEFF 		bl	__aeabi_f2d
 1706              	.LVL156:
 1707 024e 1B4B     		ldr	r3, .L102+4
 1708 0250 194A     		ldr	r2, .L102
 1709 0252 FFF7FEFF 		bl	__aeabi_dmul
 1710              	.LVL157:
 1711 0256 021C     		mov	r2, r0
 1712 0258 0B1C     		mov	r3, r1
 1713 025a 201C     		mov	r0, r4
 1714 025c 291C     		mov	r1, r5
 1715 025e FFF7FEFF 		bl	__aeabi_dadd
 1716              	.LVL158:
 1717 0262 FFF7FEFF 		bl	__aeabi_d2f
 1718              	.LVL159:
 1719              	.LBE117:
 1720              	.LBE116:
 309:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 1721              		.loc 1 309 0
 1722 0266 2F4A     		ldr	r2, .L102+108
 1723              	.LBB119:
 1724              	.LBB118:
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 1725              		.loc 1 531 0
 1726 0268 4346     		mov	r3, r8
 1727 026a 1860     		str	r0, [r3]
 1728              	.LBE118:
 1729              	.LBE119:
 309:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 1730              		.loc 1 309 0
 1731 026c 1060     		str	r0, [r2]
 312:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 1732              		.loc 1 312 0
 1733 026e 0021     		mov	r1, #0
 1734 0270 3868     		ldr	r0, [r7]
 1735 0272 FFF7FEFF 		bl	getActiveDifferentialModifier
 1736              	.LVL160:
 1737 0276 0121     		mov	r1, #1
 1738 0278 3868     		ldr	r0, [r7]
 1739 027a FFF7FEFF 		bl	getActiveDifferentialModifier
 1740              	.LVL161:
 316:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 1741              		.loc 1 316 0
 1742 027e 0020     		mov	r0, #0
 1743 0280 FFF7FEFF 		bl	getSpeed
 1744              	.LVL162:
 1745 0284 2849     		ldr	r1, .L102+112
 1746 0286 0860     		str	r0, [r1]
 317:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 1747              		.loc 1 317 0
 1748 0288 0120     		mov	r0, #1
 1749 028a FFF7FEFF 		bl	getSpeed
 1750              	.LVL163:
 1751 028e 274F     		ldr	r7, .L102+116
 1752 0290 3860     		str	r0, [r7]
 329:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 1753              		.loc 1 329 0
 1754 0292 7678     		ldrb	r6, [r6, #1]
 1755              	.LVL164:
 1756 0294 012E     		cmp	r6, #1
 1757 0296 00D0     		beq	.LCB1519
 1758 0298 19E7     		b	.L68	@long jump
 1759              	.LCB1519:
 331:../Sources/main.c **** 			TFC_SetMotorPWM(0.3f,0.3f);
 1760              		.loc 1 331 0
 1761 029a 2548     		ldr	r0, .L102+120
 1762 029c 011C     		add	r1, r0, #0
 1763 029e FFF7FEFF 		bl	TFC_SetMotorPWM
 1764              	.LVL165:
 1765 02a2 14E7     		b	.L68
 1766              	.LVL166:
 1767              	.L78:
 1768              	.LBE115:
 1769              	.LBB120:
 1770              	.LBB112:
 509:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 1771              		.loc 1 509 0
 1772 02a4 0025     		mov	r5, #0
 1773 02a6 7572     		strb	r5, [r6, #9]
 510:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 1774              		.loc 1 510 0
 1775 02a8 E561     		str	r5, [r4, #28]
 1776 02aa B07A     		ldrb	r0, [r6, #10]
 1777 02ac 93E7     		b	.L81
 1778              	.L79:
 504:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 1779              		.loc 1 504 0
 1780 02ae 0120     		mov	r0, #1
 1781 02b0 7072     		strb	r0, [r6, #9]
 1782 02b2 5CE7     		b	.L80
 1783              	.L103:
 1784 02b4 C046C046 		.align	3
 1785              	.L102:
 1786 02b8 9A999999 		.word	-1717986918
 1787 02bc 9999B93F 		.word	1069128089
 1788 02c0 00000000 		.word	TFC_Ticker
 1789 02c4 E7030000 		.word	999
 1790 02c8 00000000 		.word	.LANCHOR5
 1791 02cc 00000000 		.word	.LANCHOR7
 1792 02d0 00000000 		.word	.LANCHOR10
 1793 02d4 CDCC4C3D 		.word	1028443341
 1794 02d8 00000000 		.word	.LANCHOR11
 1795 02dc CDCC4C3F 		.word	1061997773
 1796 02e0 CCCC4C3E 		.word	1045220556
 1797 02e4 00000000 		.word	.LANCHOR12
 1798 02e8 00000000 		.word	LineScanImage0
 1799 02ec 00000000 		.word	.LANCHOR13
 1800 02f0 E0930400 		.word	300000
 1801 02f4 00000000 		.word	.LANCHOR6
 1802 02f8 40F00F40 		.word	1074786368
 1803 02fc 00000000 		.word	LineScanImage1
 1804 0300 00000000 		.word	.LANCHOR8
 1805 0304 94110000 		.word	4500
 1806 0308 00000000 		.word	.LANCHOR9
 1807 030c 6666663F 		.word	1063675494
 1808 0310 D0CCCC3D 		.word	1036831952
 1809 0314 00F10F40 		.word	1074786560
 1810 0318 00000000 		.word	.LANCHOR4
 1811 031c 00807A43 		.word	1132101632
 1812 0320 00000000 		.word	.LANCHOR14
 1813 0324 00000000 		.word	.LANCHOR15
 1814 0328 00000000 		.word	.LANCHOR16
 1815 032c 00000000 		.word	.LANCHOR17
 1816 0330 9A99993E 		.word	1050253722
 1817              	.LBE112:
 1818              	.LBE120:
 1819              		.cfi_endproc
 1820              	.LFE2:
 1822 0334 C046C046 		.section	.text.rawFocussingMode,"ax",%progbits
 1823              		.align	2
 1824              		.global	rawFocussingMode
 1825              		.code	16
 1826              		.thumb_func
 1828              	rawFocussingMode:
 1829              	.LFB3:
 393:../Sources/main.c **** {
 1830              		.loc 1 393 0
 1831              		.cfi_startproc
 1832              	.LVL167:
 1833 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1834              	.LCFI6:
 1835              		.cfi_def_cfa_offset 20
 1836              		.cfi_offset 4, -20
 1837              		.cfi_offset 5, -16
 1838              		.cfi_offset 6, -12
 1839              		.cfi_offset 7, -8
 1840              		.cfi_offset 14, -4
 394:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 1841              		.loc 1 394 0
 1842 0002 204B     		ldr	r3, .L110
 393:../Sources/main.c **** {
 1843              		.loc 1 393 0
 1844 0004 4746     		mov	r7, r8
 394:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 1845              		.loc 1 394 0
 1846 0006 1A68     		ldr	r2, [r3]
 393:../Sources/main.c **** {
 1847              		.loc 1 393 0
 1848 0008 80B4     		push	{r7}
 1849              	.LCFI7:
 1850              		.cfi_def_cfa_offset 24
 1851              		.cfi_offset 8, -24
 394:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 1852              		.loc 1 394 0
 1853 000a C72A     		cmp	r2, #199
 1854 000c 02D9     		bls	.L104
 394:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 1855              		.loc 1 394 0 is_stmt 0
 1856 000e C178     		ldrb	r1, [r0, #3]
 1857 0010 0029     		cmp	r1, #0
 1858 0012 02D0     		beq	.L109
 1859              	.LVL168:
 1860              	.L104:
 413:../Sources/main.c **** }
 1861              		.loc 1 413 0 is_stmt 1
 1862              		@ sp needed for prologue
 1863 0014 04BC     		pop	{r2}
 1864 0016 9046     		mov	r8, r2
 1865 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
 1866              	.LVL169:
 1867              	.L109:
 397:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 1868              		.loc 1 397 0
 1869 001a 0124     		mov	r4, #1
 396:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 1870              		.loc 1 396 0
 1871 001c 1960     		str	r1, [r3]
 397:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 1872              		.loc 1 397 0
 1873 001e C470     		strb	r4, [r0, #3]
 399:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 1874              		.loc 1 399 0
 1875 0020 1949     		ldr	r1, .L110+4
 1876 0022 0020     		mov	r0, #0
 1877              	.LVL170:
 1878 0024 FFF7FEFF 		bl	TFC_SetServo
 1879              	.LVL171:
 400:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 1880              		.loc 1 400 0
 1881 0028 184E     		ldr	r6, .L110+8
 1882 002a 8020     		mov	r0, #128
 1883 002c 8503     		lsl	r5, r0, #14
 401:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 1884              		.loc 1 401 0
 1885 002e 0020     		mov	r0, #0
 1886 0030 011C     		add	r1, r0, #0
 400:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 1887              		.loc 1 400 0
 1888 0032 B560     		str	r5, [r6, #8]
 401:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 1889              		.loc 1 401 0
 1890 0034 FFF7FEFF 		bl	TFC_SetMotorPWM
 1891              	.LVL172:
 403:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 1892              		.loc 1 403 0
 1893 0038 154E     		ldr	r6, .L110+12
 1894 003a 0024     		mov	r4, #0
 1895 003c 3068     		ldr	r0, [r6]
 1896 003e FFF7FEFF 		bl	getTotalIntensity
 1897              	.LVL173:
 1898 0042 1449     		ldr	r1, .L110+16
 1899 0044 FFF7FEFF 		bl	calculateNewExposure
 1900              	.LVL174:
 1901 0048 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 1902              	.LVL175:
 1903              	.LBB121:
 406:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 1904              		.loc 1 406 0
 1905 004c 8023     		mov	r3, #128
 1906 004e 5A00     		lsl	r2, r3, #1
 1907 0050 114D     		ldr	r5, .L110+20
 1908 0052 124F     		ldr	r7, .L110+24
 1909 0054 9046     		mov	r8, r2
 1910              	.LVL176:
 1911              	.L106:
 408:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 1912              		.loc 1 408 0
 1913 0056 3168     		ldr	r1, [r6]
 1914 0058 0819     		add	r0, r1, r4
 1915 005a 0288     		ldrh	r2, [r0]
 1916 005c 391C     		mov	r1, r7
 1917 005e 281C     		mov	r0, r5
 1918 0060 FFF7FEFF 		bl	Qprintf
 1919              	.LVL177:
 1920 0064 3368     		ldr	r3, [r6]
 1921 0066 0234     		add	r4, r4, #2
 1922 0068 1A19     		add	r2, r3, r4
 1923 006a 1288     		ldrh	r2, [r2]
 1924 006c 281C     		mov	r0, r5
 1925 006e 391C     		mov	r1, r7
 1926 0070 0234     		add	r4, r4, #2
 1927 0072 FFF7FEFF 		bl	Qprintf
 1928              	.LVL178:
 406:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 1929              		.loc 1 406 0
 1930 0076 4445     		cmp	r4, r8
 1931 0078 EDD1     		bne	.L106
 1932              	.LBE121:
 410:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 1933              		.loc 1 410 0
 1934 007a 281C     		mov	r0, r5
 1935 007c 0849     		ldr	r1, .L110+28
 1936 007e FFF7FEFF 		bl	Qprintf
 1937              	.LVL179:
 1938 0082 C7E7     		b	.L104
 1939              	.L111:
 1940              		.align	2
 1941              	.L110:
 1942 0084 00000000 		.word	TFC_Ticker
 1943 0088 CDCC4C3D 		.word	1028443341
 1944 008c 00F10F40 		.word	1074786560
 1945 0090 00000000 		.word	LineScanImage0
 1946 0094 E0930400 		.word	300000
 1947 0098 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 1948 009c 08000000 		.word	.LC9
 1949 00a0 0C000000 		.word	.LC11
 1950              		.cfi_endproc
 1951              	.LFE3:
 1953              		.section	.text.derivativeFocussingMode,"ax",%progbits
 1954              		.align	2
 1955              		.global	derivativeFocussingMode
 1956              		.code	16
 1957              		.thumb_func
 1959              	derivativeFocussingMode:
 1960              	.LFB4:
 416:../Sources/main.c **** {
 1961              		.loc 1 416 0
 1962              		.cfi_startproc
 1963              	.LVL180:
 1964 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1965              	.LCFI8:
 1966              		.cfi_def_cfa_offset 20
 1967              		.cfi_offset 4, -20
 1968              		.cfi_offset 5, -16
 1969              		.cfi_offset 6, -12
 1970              		.cfi_offset 7, -8
 1971              		.cfi_offset 14, -4
 1972 0002 4746     		mov	r7, r8
 1973 0004 80B4     		push	{r7}
 1974              	.LCFI9:
 1975              		.cfi_def_cfa_offset 24
 1976              		.cfi_offset 8, -24
 417:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 1977              		.loc 1 417 0
 1978 0006 284C     		ldr	r4, .L118
 416:../Sources/main.c **** {
 1979              		.loc 1 416 0
 1980 0008 C0B0     		sub	sp, sp, #256
 1981              	.LCFI10:
 1982              		.cfi_def_cfa_offset 280
 417:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 1983              		.loc 1 417 0
 1984 000a 2368     		ldr	r3, [r4]
 1985 000c C72B     		cmp	r3, #199
 1986 000e 02D9     		bls	.L112
 417:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 1987              		.loc 1 417 0 is_stmt 0
 1988 0010 C178     		ldrb	r1, [r0, #3]
 1989 0012 0029     		cmp	r1, #0
 1990 0014 03D0     		beq	.L117
 1991              	.LVL181:
 1992              	.L112:
 441:../Sources/main.c **** }
 1993              		.loc 1 441 0 is_stmt 1
 1994 0016 40B0     		add	sp, sp, #256
 1995              		@ sp needed for prologue
 1996 0018 04BC     		pop	{r2}
 1997 001a 9046     		mov	r8, r2
 1998 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 1999              	.LVL182:
 2000              	.L117:
 2001              	.LBB122:
 420:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 2002              		.loc 1 420 0
 2003 001e 0122     		mov	r2, #1
 419:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 2004              		.loc 1 419 0
 2005 0020 2160     		str	r1, [r4]
 420:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 2006              		.loc 1 420 0
 2007 0022 C270     		strb	r2, [r0, #3]
 422:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 2008              		.loc 1 422 0
 2009 0024 2149     		ldr	r1, .L118+4
 2010 0026 0020     		mov	r0, #0
 2011              	.LVL183:
 2012 0028 FFF7FEFF 		bl	TFC_SetServo
 2013              	.LVL184:
 423:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 2014              		.loc 1 423 0
 2015 002c 204E     		ldr	r6, .L118+8
 2016 002e 8020     		mov	r0, #128
 2017 0030 8503     		lsl	r5, r0, #14
 424:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 2018              		.loc 1 424 0
 2019 0032 0020     		mov	r0, #0
 2020 0034 011C     		add	r1, r0, #0
 423:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 2021              		.loc 1 423 0
 2022 0036 B560     		str	r5, [r6, #8]
 424:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 2023              		.loc 1 424 0
 2024 0038 FFF7FEFF 		bl	TFC_SetMotorPWM
 2025              	.LVL185:
 426:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 2026              		.loc 1 426 0
 2027 003c 1D4F     		ldr	r7, .L118+12
 415:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 2028              		.loc 1 415 0
 2029 003e 40AE     		add	r6, sp, #256
 426:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 2030              		.loc 1 426 0
 2031 0040 3868     		ldr	r0, [r7]
 2032 0042 FFF7FEFF 		bl	getTotalIntensity
 2033              	.LVL186:
 2034 0046 1C49     		ldr	r1, .L118+16
 2035 0048 FFF7FEFF 		bl	calculateNewExposure
 2036              	.LVL187:
 2037 004c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 2038              	.LVL188:
 429:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 2039              		.loc 1 429 0
 2040 0050 1A4D     		ldr	r5, .L118+20
 2041 0052 6369     		ldr	r3, [r4, #20]
 430:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 2042              		.loc 1 430 0
 2043 0054 3868     		ldr	r0, [r7]
 2044 0056 6946     		mov	r1, sp
 2045 0058 8022     		mov	r2, #128
 429:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 2046              		.loc 1 429 0
 2047 005a 2B60     		str	r3, [r5]
 430:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 2048              		.loc 1 430 0
 2049 005c FFF7FEFF 		bl	edgeDetection
 2050              	.LVL189:
 431:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 2051              		.loc 1 431 0
 2052 0060 6469     		ldr	r4, [r4, #20]
 2053 0062 2968     		ldr	r1, [r5]
 2054 0064 1648     		ldr	r0, .L118+24
 2055 0066 621A     		sub	r2, r4, r1
 415:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 2056              		.loc 1 415 0
 2057 0068 B046     		mov	r8, r6
 2058 006a 164D     		ldr	r5, .L118+28
 2059 006c 164E     		ldr	r6, .L118+32
 431:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 2060              		.loc 1 431 0
 2061 006e 0260     		str	r2, [r0]
 2062              	.LVL190:
 2063 0070 6C46     		mov	r4, sp
 2064              	.LVL191:
 2065              	.L114:
 2066              	.LBB123:
 436:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 2067              		.loc 1 436 0
 2068 0072 0023     		mov	r3, #0
 2069 0074 E75E     		ldrsh	r7, [r4, r3]
 2070 0076 311C     		mov	r1, r6
 2071 0078 FB17     		asr	r3, r7, #31
 2072 007a FA18     		add	r2, r7, r3
 2073 007c 5A40     		eor	r2, r3
 2074 007e 281C     		mov	r0, r5
 2075 0080 FFF7FEFF 		bl	Qprintf
 2076              	.LVL192:
 2077 0084 0223     		mov	r3, #2
 2078 0086 E15E     		ldrsh	r1, [r4, r3]
 2079 0088 0434     		add	r4, r4, #4
 2080 008a C817     		asr	r0, r1, #31
 2081 008c 0A18     		add	r2, r1, r0
 2082 008e 4240     		eor	r2, r0
 2083 0090 311C     		mov	r1, r6
 2084 0092 281C     		mov	r0, r5
 2085 0094 FFF7FEFF 		bl	Qprintf
 2086              	.LVL193:
 434:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 2087              		.loc 1 434 0
 2088 0098 4445     		cmp	r4, r8
 2089 009a EAD1     		bne	.L114
 2090              	.LBE123:
 438:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 2091              		.loc 1 438 0
 2092 009c 281C     		mov	r0, r5
 2093 009e 0B49     		ldr	r1, .L118+36
 2094 00a0 FFF7FEFF 		bl	Qprintf
 2095              	.LVL194:
 2096 00a4 B7E7     		b	.L112
 2097              	.L119:
 2098 00a6 C046     		.align	2
 2099              	.L118:
 2100 00a8 00000000 		.word	TFC_Ticker
 2101 00ac CDCC4C3D 		.word	1028443341
 2102 00b0 00F10F40 		.word	1074786560
 2103 00b4 00000000 		.word	LineScanImage0
 2104 00b8 E0930400 		.word	300000
 2105 00bc 00000000 		.word	.LANCHOR2
 2106 00c0 00000000 		.word	.LANCHOR3
 2107 00c4 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 2108 00c8 08000000 		.word	.LC9
 2109 00cc 0C000000 		.word	.LC11
 2110              	.LBE122:
 2111              		.cfi_endproc
 2112              	.LFE4:
 2114              		.section	.text.TFC_Task,"ax",%progbits
 2115              		.align	2
 2116              		.global	TFC_Task
 2117              		.code	16
 2118              		.thumb_func
 2120              	TFC_Task:
 2121              	.LFB5:
 444:../Sources/main.c **** {
 2122              		.loc 1 444 0
 2123              		.cfi_startproc
 2124 0000 08B5     		push	{r3, lr}
 2125              	.LCFI11:
 2126              		.cfi_def_cfa_offset 8
 2127              		.cfi_offset 3, -8
 2128              		.cfi_offset 14, -4
 446:../Sources/main.c **** 	TFC_UART_Process();
 2129              		.loc 1 446 0
 2130 0002 FFF7FEFF 		bl	TFC_UART_Process
 2131              	.LVL195:
 449:../Sources/main.c **** }
 2132              		.loc 1 449 0
 2133              		@ sp needed for prologue
 448:../Sources/main.c **** 	TFC_ProcessTerminal();
 2134              		.loc 1 448 0
 2135 0006 FFF7FEFF 		bl	TFC_ProcessTerminal
 2136              	.LVL196:
 449:../Sources/main.c **** }
 2137              		.loc 1 449 0
 2138 000a 08BD     		pop	{r3, pc}
 2139              		.cfi_endproc
 2140              	.LFE5:
 2142              		.section	.text.evaluateMotorState,"ax",%progbits
 2143              		.align	2
 2144              		.global	evaluateMotorState
 2145              		.code	16
 2146              		.thumb_func
 2148              	evaluateMotorState:
 2149              	.LFB6:
 452:../Sources/main.c **** {
 2150              		.loc 1 452 0
 2151              		.cfi_startproc
 2152              	.LVL197:
 2153 0000 38B5     		push	{r3, r4, r5, lr}
 2154              	.LCFI12:
 2155              		.cfi_def_cfa_offset 16
 2156              		.cfi_offset 3, -16
 2157              		.cfi_offset 4, -12
 2158              		.cfi_offset 5, -8
 2159              		.cfi_offset 14, -4
 452:../Sources/main.c **** {
 2160              		.loc 1 452 0
 2161 0002 051C     		mov	r5, r0
 453:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 2162              		.loc 1 453 0
 2163 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 2164              	.LVL198:
 2165 0008 0124     		mov	r4, #1
 2166 000a 0442     		tst	r4, r0
 2167 000c 05D0     		beq	.L122
 455:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 2168              		.loc 1 455 0
 2169 000e 8021     		mov	r1, #128
 2170 0010 0848     		ldr	r0, .L124
 2171 0012 8A03     		lsl	r2, r1, #14
 2172 0014 4260     		str	r2, [r0, #4]
 456:../Sources/main.c **** 		carState->motorState = RUNNING;
 2173              		.loc 1 456 0
 2174 0016 2C70     		strb	r4, [r5]
 2175              	.L121:
 463:../Sources/main.c **** }
 2176              		.loc 1 463 0
 2177              		@ sp needed for prologue
 2178              	.LVL199:
 2179 0018 38BD     		pop	{r3, r4, r5, pc}
 2180              	.LVL200:
 2181              	.L122:
 458:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 2182              		.loc 1 458 0
 2183 001a FFF7FEFF 		bl	TFC_GetDIP_Switch
 2184              	.LVL201:
 2185 001e 0442     		tst	r4, r0
 2186 0020 FAD1     		bne	.L121
 460:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 2187              		.loc 1 460 0
 2188 0022 8022     		mov	r2, #128
 2189 0024 034B     		ldr	r3, .L124
 2190 0026 9003     		lsl	r0, r2, #14
 2191 0028 9860     		str	r0, [r3, #8]
 461:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 2192              		.loc 1 461 0
 2193 002a 0020     		mov	r0, #0
 2194 002c 011C     		add	r1, r0, #0
 2195 002e FFF7FEFF 		bl	TFC_SetMotorPWM
 2196              	.LVL202:
 2197 0032 F1E7     		b	.L121
 2198              	.L125:
 2199              		.align	2
 2200              	.L124:
 2201 0034 00F10F40 		.word	1074786560
 2202              		.cfi_endproc
 2203              	.LFE6:
 2205              		.section	.text.evaluateUARTorSpeed,"ax",%progbits
 2206              		.align	2
 2207              		.global	evaluateUARTorSpeed
 2208              		.code	16
 2209              		.thumb_func
 2211              	evaluateUARTorSpeed:
 2212              	.LFB7:
 466:../Sources/main.c **** {
 2213              		.loc 1 466 0
 2214              		.cfi_startproc
 2215              	.LVL203:
 2216 0000 10B5     		push	{r4, lr}
 2217              	.LCFI13:
 2218              		.cfi_def_cfa_offset 8
 2219              		.cfi_offset 4, -8
 2220              		.cfi_offset 14, -4
 466:../Sources/main.c **** {
 2221              		.loc 1 466 0
 2222 0002 041C     		mov	r4, r0
 467:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 2223              		.loc 1 467 0
 2224 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 2225              	.LVL204:
 2226 0008 0307     		lsl	r3, r0, #28
 2227 000a 15D4     		bmi	.L127
 467:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 2228              		.loc 1 467 0 is_stmt 0
 2229 000c 1B4B     		ldr	r3, .L136
 2230 000e 9868     		ldr	r0, [r3, #8]
 2231 0010 4105     		lsl	r1, r0, #21
 2232 0012 4A0F     		lsr	r2, r1, #29
 2233 0014 022A     		cmp	r2, #2
 2234 0016 0FD0     		beq	.L127
 2235              	.L128:
 469:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 2236              		.loc 1 469 0 is_stmt 1
 2237 0018 1848     		ldr	r0, .L136
 2238 001a 194A     		ldr	r2, .L136+4
 2239 001c 8168     		ldr	r1, [r0, #8]
 2240 001e 0A40     		and	r2, r1
 2241 0020 8260     		str	r2, [r0, #8]
 470:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 2242              		.loc 1 470 0
 2243 0022 8368     		ldr	r3, [r0, #8]
 2244 0024 8021     		mov	r1, #128
 2245 0026 8A00     		lsl	r2, r1, #2
 2246 0028 1A43     		orr	r2, r3
 2247 002a 8260     		str	r2, [r0, #8]
 471:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 2248              		.loc 1 471 0
 2249 002c 0C20     		mov	r0, #12
 2250 002e FFF7FEFF 		bl	enable_irq
 2251              	.LVL205:
 472:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 2252              		.loc 1 472 0
 2253 0032 0020     		mov	r0, #0
 2254 0034 6070     		strb	r0, [r4, #1]
 2255              	.L126:
 482:../Sources/main.c **** }
 2256              		.loc 1 482 0
 2257              		@ sp needed for prologue
 2258              	.LVL206:
 2259 0036 10BD     		pop	{r4, pc}
 2260              	.LVL207:
 2261              	.L127:
 467:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 2262              		.loc 1 467 0
 2263 0038 6378     		ldrb	r3, [r4, #1]
 2264 003a 022B     		cmp	r3, #2
 2265 003c ECD0     		beq	.L128
 475:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 2266              		.loc 1 475 0
 2267 003e FFF7FEFF 		bl	TFC_GetDIP_Switch
 2268              	.LVL208:
 2269 0042 0307     		lsl	r3, r0, #28
 2270 0044 15D5     		bpl	.L131
 475:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 2271              		.loc 1 475 0 is_stmt 0
 2272 0046 0D48     		ldr	r0, .L136
 2273 0048 8168     		ldr	r1, [r0, #8]
 2274 004a 4A05     		lsl	r2, r1, #21
 2275 004c 530F     		lsr	r3, r2, #29
 2276 004e 032B     		cmp	r3, #3
 2277 0050 0FD0     		beq	.L131
 2278              	.L132:
 477:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 2279              		.loc 1 477 0 is_stmt 1
 2280 0052 0A4B     		ldr	r3, .L136
 2281 0054 0A4A     		ldr	r2, .L136+4
 2282 0056 9968     		ldr	r1, [r3, #8]
 2283 0058 0A40     		and	r2, r1
 2284 005a 9A60     		str	r2, [r3, #8]
 478:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 2285              		.loc 1 478 0
 2286 005c 9868     		ldr	r0, [r3, #8]
 2287 005e C021     		mov	r1, #192
 2288 0060 8A00     		lsl	r2, r1, #2
 2289 0062 0243     		orr	r2, r0
 2290 0064 9A60     		str	r2, [r3, #8]
 479:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 2291              		.loc 1 479 0
 2292 0066 0C20     		mov	r0, #12
 2293 0068 FFF7FEFF 		bl	disable_irq
 2294              	.LVL209:
 480:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 2295              		.loc 1 480 0
 2296 006c 0123     		mov	r3, #1
 2297 006e 6370     		strb	r3, [r4, #1]
 2298 0070 E1E7     		b	.L126
 2299              	.L131:
 475:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 2300              		.loc 1 475 0
 2301 0072 6078     		ldrb	r0, [r4, #1]
 2302 0074 0228     		cmp	r0, #2
 2303 0076 DED1     		bne	.L126
 2304 0078 EBE7     		b	.L132
 2305              	.L137:
 2306 007a C046     		.align	2
 2307              	.L136:
 2308 007c 00900440 		.word	1074040832
 2309 0080 FFF8FFFF 		.word	-1793
 2310              		.cfi_endproc
 2311              	.LFE7:
 2313              		.section	.text.servoAlignment,"ax",%progbits
 2314              		.align	2
 2315              		.global	servoAlignment
 2316              		.code	16
 2317              		.thumb_func
 2319              	servoAlignment:
 2320              	.LFB8:
 485:../Sources/main.c **** {
 2321              		.loc 1 485 0
 2322              		.cfi_startproc
 2323 0000 08B5     		push	{r3, lr}
 2324              	.LCFI14:
 2325              		.cfi_def_cfa_offset 8
 2326              		.cfi_offset 3, -8
 2327              		.cfi_offset 14, -4
 486:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 2328              		.loc 1 486 0
 2329 0002 054B     		ldr	r3, .L140
 2330 0004 1A68     		ldr	r2, [r3]
 2331 0006 C72A     		cmp	r2, #199
 2332 0008 05D9     		bls	.L138
 2333              	.LBB124:
 488:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 2334              		.loc 1 488 0
 2335 000a 0020     		mov	r0, #0
 2336 000c 1860     		str	r0, [r3]
 2337              	.LVL210:
 490:../Sources/main.c **** 		TFC_SetServo(0, offset);
 2338              		.loc 1 490 0
 2339 000e 0349     		ldr	r1, .L140+4
 2340 0010 0020     		mov	r0, #0
 2341 0012 FFF7FEFF 		bl	TFC_SetServo
 2342              	.LVL211:
 2343              	.L138:
 2344              	.LBE124:
 492:../Sources/main.c **** }
 2345              		.loc 1 492 0
 2346              		@ sp needed for prologue
 2347 0016 08BD     		pop	{r3, pc}
 2348              	.L141:
 2349              		.align	2
 2350              	.L140:
 2351 0018 00000000 		.word	TFC_Ticker
 2352 001c 00A08C45 		.word	1166843904
 2353              		.cfi_endproc
 2354              	.LFE8:
 2356              		.section	.text.processRaceLine,"ax",%progbits
 2357              		.align	2
 2358              		.global	processRaceLine
 2359              		.code	16
 2360              		.thumb_func
 2362              	processRaceLine:
 2363              	.LFB9:
 495:../Sources/main.c **** {
 2364              		.loc 1 495 0
 2365              		.cfi_startproc
 2366              	.LVL212:
 2367 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2368              	.LCFI15:
 2369              		.cfi_def_cfa_offset 24
 2370              		.cfi_offset 3, -24
 2371              		.cfi_offset 4, -20
 2372              		.cfi_offset 5, -16
 2373              		.cfi_offset 6, -12
 2374              		.cfi_offset 7, -8
 2375              		.cfi_offset 14, -4
 496:../Sources/main.c **** 	if(s_mode_enable)
 2376              		.loc 1 496 0
 2377 0002 234B     		ldr	r3, .L152
 495:../Sources/main.c **** {
 2378              		.loc 1 495 0
 2379 0004 041C     		mov	r4, r0
 496:../Sources/main.c **** 	if(s_mode_enable)
 2380              		.loc 1 496 0
 2381 0006 1878     		ldrb	r0, [r3]
 2382              	.LVL213:
 2383 0008 0028     		cmp	r0, #0
 2384 000a 0CD1     		bne	.L143
 2385 000c 617A     		ldrb	r1, [r4, #9]
 2386 000e A67A     		ldrb	r6, [r4, #10]
 2387              	.L144:
 516:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 2388              		.loc 1 516 0
 2389 0010 0129     		cmp	r1, #1
 2390 0012 20D0     		beq	.L150
 2391              	.L148:
 524:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 2392              		.loc 1 524 0
 2393 0014 70B2     		sxtb	r0, r6
 2394 0016 FFF7FEFF 		bl	__aeabi_i2f
 2395              	.LVL214:
 523:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 2396              		.loc 1 523 0
 2397 001a 351C     		mov	r5, r6
 2398 001c 1D4E     		ldr	r6, .L152+4
 524:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 2399              		.loc 1 524 0
 2400 001e 071C     		add	r7, r0, #0
 2401              	.L149:
 2402 0020 3760     		str	r7, [r6]
 2403 0022 E572     		strb	r5, [r4, #11]
 526:../Sources/main.c **** }
 2404              		.loc 1 526 0
 2405              		@ sp needed for prologue
 2406              	.LVL215:
 2407 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2408              	.LVL216:
 2409              	.L143:
 498:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 2410              		.loc 1 498 0
 2411 0026 A67A     		ldrb	r6, [r4, #10]
 2412 0028 75B2     		sxtb	r5, r6
 2413 002a 092D     		cmp	r5, #9
 2414 002c 0DDC     		bgt	.L145
 499:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 2415              		.loc 1 499 0
 2416 002e 227B     		ldrb	r2, [r4, #12]
 2417 0030 462A     		cmp	r2, #70
 2418 0032 0AD9     		bls	.L145
 500:../Sources/main.c **** 				&& carState->crossSection == NO)
 2419              		.loc 1 500 0
 2420 0034 A179     		ldrb	r1, [r4, #6]
 2421 0036 0029     		cmp	r1, #0
 2422 0038 07D1     		bne	.L145
 502:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 2423              		.loc 1 502 0
 2424 003a 174B     		ldr	r3, .L152+8
 2425 003c 174A     		ldr	r2, .L152+12
 2426 003e D869     		ldr	r0, [r3, #28]
 2427 0040 9042     		cmp	r0, r2
 2428 0042 22D9     		bls	.L151
 504:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 2429              		.loc 1 504 0
 2430 0044 0123     		mov	r3, #1
 2431 0046 6372     		strb	r3, [r4, #9]
 2432 0048 06E0     		b	.L147
 2433              	.L145:
 510:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 2434              		.loc 1 510 0
 2435 004a 134F     		ldr	r7, .L152+8
 509:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 2436              		.loc 1 509 0
 2437 004c 0025     		mov	r5, #0
 2438 004e 6572     		strb	r5, [r4, #9]
 510:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 2439              		.loc 1 510 0
 2440 0050 FD61     		str	r5, [r7, #28]
 2441 0052 A67A     		ldrb	r6, [r4, #10]
 2442 0054 DEE7     		b	.L148
 2443              	.L150:
 2444 0056 75B2     		sxtb	r5, r6
 2445              	.L147:
 518:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 2446              		.loc 1 518 0
 2447 0058 0E4E     		ldr	r6, .L152+4
 2448 005a 1149     		ldr	r1, .L152+16
 2449 005c 3068     		ldr	r0, [r6]
 2450 005e FFF7FEFF 		bl	__aeabi_fmul
 2451              	.LVL217:
 2452 0062 071C     		add	r7, r0, #0
 2453 0064 281C     		mov	r0, r5
 2454 0066 FFF7FEFF 		bl	__aeabi_i2f
 2455              	.LVL218:
 2456 006a 0E49     		ldr	r1, .L152+20
 2457 006c FFF7FEFF 		bl	__aeabi_fmul
 2458              	.LVL219:
 2459 0070 011C     		add	r1, r0, #0
 2460 0072 381C     		add	r0, r7, #0
 2461 0074 FFF7FEFF 		bl	__aeabi_fadd
 2462              	.LVL220:
 519:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 2463              		.loc 1 519 0
 2464 0078 FC22     		mov	r2, #252
 2465 007a 9105     		lsl	r1, r2, #22
 518:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 2466              		.loc 1 518 0
 2467 007c 071C     		add	r7, r0, #0
 519:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 2468              		.loc 1 519 0
 2469 007e FFF7FEFF 		bl	__aeabi_fadd
 2470              	.LVL221:
 2471 0082 FFF7FEFF 		bl	__aeabi_f2uiz
 2472              	.LVL222:
 2473 0086 C5B2     		uxtb	r5, r0
 2474 0088 CAE7     		b	.L149
 2475              	.L151:
 2476 008a 617A     		ldrb	r1, [r4, #9]
 2477 008c C0E7     		b	.L144
 2478              	.L153:
 2479 008e C046     		.align	2
 2480              	.L152:
 2481 0090 00000000 		.word	.LANCHOR8
 2482 0094 00000000 		.word	.LANCHOR9
 2483 0098 00000000 		.word	TFC_Ticker
 2484 009c 94110000 		.word	4500
 2485 00a0 6666663F 		.word	1063675494
 2486 00a4 D0CCCC3D 		.word	1036831952
 2487              		.cfi_endproc
 2488              	.LFE9:
 2490              		.section	.text.targetSpeedAverage,"ax",%progbits
 2491              		.align	2
 2492              		.global	targetSpeedAverage
 2493              		.code	16
 2494              		.thumb_func
 2496              	targetSpeedAverage:
 2497              	.LFB10:
 529:../Sources/main.c **** {
 2498              		.loc 1 529 0
 2499              		.cfi_startproc
 2500              	.LVL223:
 2501 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2502              	.LCFI16:
 2503              		.cfi_def_cfa_offset 24
 2504              		.cfi_offset 3, -24
 2505              		.cfi_offset 4, -20
 2506              		.cfi_offset 5, -16
 2507              		.cfi_offset 6, -12
 2508              		.cfi_offset 7, -8
 2509              		.cfi_offset 14, -4
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 2510              		.loc 1 531 0
 2511 0002 0F4E     		ldr	r6, .L155+8
 529:../Sources/main.c **** {
 2512              		.loc 1 529 0
 2513 0004 071C     		add	r7, r0, #0
 531:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 2514              		.loc 1 531 0
 2515 0006 0F49     		ldr	r1, .L155+12
 2516 0008 3068     		ldr	r0, [r6]
 2517              	.LVL224:
 2518 000a FFF7FEFF 		bl	__aeabi_fmul
 2519              	.LVL225:
 2520 000e FFF7FEFF 		bl	__aeabi_f2d
 2521              	.LVL226:
 2522 0012 041C     		mov	r4, r0
 2523 0014 381C     		add	r0, r7, #0
 2524 0016 0D1C     		mov	r5, r1
 2525 0018 FFF7FEFF 		bl	__aeabi_f2d
 2526              	.LVL227:
 2527 001c 074B     		ldr	r3, .L155+4
 2528 001e 064A     		ldr	r2, .L155
 2529 0020 FFF7FEFF 		bl	__aeabi_dmul
 2530              	.LVL228:
 2531 0024 021C     		mov	r2, r0
 2532 0026 0B1C     		mov	r3, r1
 2533 0028 201C     		mov	r0, r4
 2534 002a 291C     		mov	r1, r5
 2535 002c FFF7FEFF 		bl	__aeabi_dadd
 2536              	.LVL229:
 2537 0030 FFF7FEFF 		bl	__aeabi_d2f
 2538              	.LVL230:
 2539 0034 3060     		str	r0, [r6]
 533:../Sources/main.c **** }
 2540              		.loc 1 533 0
 2541              		@ sp needed for prologue
 2542              	.LVL231:
 2543 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2544              	.L156:
 2545              		.align	3
 2546              	.L155:
 2547 0038 9A999999 		.word	-1717986918
 2548 003c 9999B93F 		.word	1069128089
 2549 0040 00000000 		.word	.LANCHOR14
 2550 0044 6666663F 		.word	1063675494
 2551              		.cfi_endproc
 2552              	.LFE10:
 2554              		.section	.text.servoValueAverage,"ax",%progbits
 2555              		.align	2
 2556              		.global	servoValueAverage
 2557              		.code	16
 2558              		.thumb_func
 2560              	servoValueAverage:
 2561              	.LFB11:
 536:../Sources/main.c **** {
 2562              		.loc 1 536 0
 2563              		.cfi_startproc
 2564              	.LVL232:
 2565 0000 70B5     		push	{r4, r5, r6, lr}
 2566              	.LCFI17:
 2567              		.cfi_def_cfa_offset 16
 2568              		.cfi_offset 4, -16
 2569              		.cfi_offset 5, -12
 2570              		.cfi_offset 6, -8
 2571              		.cfi_offset 14, -4
 2572              		.loc 1 538 0
 2573 0002 084C     		ldr	r4, .L158
 536:../Sources/main.c **** {
 2574              		.loc 1 536 0
 2575 0004 061C     		add	r6, r0, #0
 2576              		.loc 1 538 0
 2577 0006 0849     		ldr	r1, .L158+4
 2578 0008 2068     		ldr	r0, [r4]
 2579              	.LVL233:
 2580 000a FFF7FEFF 		bl	__aeabi_fmul
 2581              	.LVL234:
 2582 000e 0749     		ldr	r1, .L158+8
 2583 0010 051C     		add	r5, r0, #0
 2584 0012 301C     		add	r0, r6, #0
 2585 0014 FFF7FEFF 		bl	__aeabi_fmul
 2586              	.LVL235:
 2587 0018 011C     		add	r1, r0, #0
 2588 001a 281C     		add	r0, r5, #0
 2589 001c FFF7FEFF 		bl	__aeabi_fadd
 2590              	.LVL236:
 2591 0020 2060     		str	r0, [r4]
 539:../Sources/main.c **** 	return previousServoValue;
 540:../Sources/main.c **** }
 2592              		.loc 1 540 0
 2593              		@ sp needed for prologue
 2594              	.LVL237:
 2595 0022 70BD     		pop	{r4, r5, r6, pc}
 2596              	.L159:
 2597              		.align	2
 2598              	.L158:
 2599 0024 00000000 		.word	.LANCHOR11
 2600 0028 CDCC4C3F 		.word	1061997773
 2601 002c CCCC4C3E 		.word	1045220556
 2602              		.cfi_endproc
 2603              	.LFE11:
 2605              		.global	test_time
 2606              		.global	test_begin
 2607              		.global	stopline_enable
 2608              		.global	cross_section_enable
 2609              		.global	s_mode_enable
 2610              		.global	accel
 2611              		.global	maxSpeedPercent
 2612              		.global	friction_correct
 2613              		.global	speedR
 2614              		.global	speedL
 2615              		.global	targetSpeed
 2616              		.global	batteryLevel
 2617              		.global	loop_begin
 2618              		.global	loop_time
 2619              		.section	.bss.test_time,"aw",%nobits
 2620              		.align	2
 2621              		.set	.LANCHOR3,. + 0
 2624              	test_time:
 2625 0000 00000000 		.space	4
 2626              		.section	.bss.totalIntensity.6164,"aw",%nobits
 2627              		.align	2
 2628              		.set	.LANCHOR13,. + 0
 2631              	totalIntensity.6164:
 2632 0000 00000000 		.space	4
 2633              		.section	.bss.stoplineJustDetected,"aw",%nobits
 2634              		.set	.LANCHOR4,. + 0
 2637              	stoplineJustDetected:
 2638 0000 00       		.space	1
 2639              		.section	.bss.speedL,"aw",%nobits
 2640              		.align	2
 2641              		.set	.LANCHOR17,. + 0
 2644              	speedL:
 2645 0000 00000000 		.space	4
 2646              		.section	.bss.previousRaceLine.6201,"aw",%nobits
 2647              		.align	2
 2648              		.set	.LANCHOR9,. + 0
 2651              	previousRaceLine.6201:
 2652 0000 00000000 		.space	4
 2653              		.section	.bss.batteryLevel,"aw",%nobits
 2654              		.align	2
 2655              		.set	.LANCHOR5,. + 0
 2658              	batteryLevel:
 2659 0000 00000000 		.space	4
 2660              		.section	.bss.stopline_enable,"aw",%nobits
 2661              		.set	.LANCHOR12,. + 0
 2664              	stopline_enable:
 2665 0000 00       		.space	1
 2666              		.section	.data.maxSpeedPercent,"aw",%progbits
 2667              		.align	2
 2670              	maxSpeedPercent:
 2671 0000 00004842 		.word	1112014848
 2672              		.section	.bss.cross_section_enable,"aw",%nobits
 2675              	cross_section_enable:
 2676 0000 00       		.space	1
 2677              		.section	.bss.speedR,"aw",%nobits
 2678              		.align	2
 2679              		.set	.LANCHOR16,. + 0
 2682              	speedR:
 2683 0000 00000000 		.space	4
 2684              		.section	.bss.loop_begin,"aw",%nobits
 2685              		.align	1
 2686              		.set	.LANCHOR1,. + 0
 2689              	loop_begin:
 2690 0000 0000     		.space	2
 2691              		.section	.bss.accel,"aw",%nobits
 2692              		.align	2
 2693              		.set	.LANCHOR6,. + 0
 2696              	accel:
 2697 0000 00000000 		.space	4
 2698              		.section	.bss.s_mode_enable,"aw",%nobits
 2699              		.set	.LANCHOR8,. + 0
 2702              	s_mode_enable:
 2703 0000 00       		.space	1
 2704              		.section	.rodata.str1.4,"aMS",%progbits,1
 2705              		.align	2
 2706              	.LC0:
 2707 0000 68656C6C 		.ascii	"hello\000"
 2707      6F00
 2708 0006 0000     		.space	2
 2709              	.LC9:
 2710 0008 25582C00 		.ascii	"%X,\000"
 2711              	.LC11:
 2712 000c 0D0A00   		.ascii	"\015\012\000"
 2713 000f 00       		.section	.data.carState,"aw",%progbits
 2714              		.align	2
 2715              		.set	.LANCHOR0,. + 0
 2718              	carState:
 2719 0000 00       		.byte	0
 2720 0001 02       		.byte	2
 2721 0002 03       		.byte	3
 2722 0003 01       		.byte	1
 2723 0004 00       		.byte	0
 2724 0005 00       		.byte	0
 2725 0006 00       		.byte	0
 2726 0007 00       		.byte	0
 2727 0008 00       		.byte	0
 2728 0009 00       		.byte	0
 2729 000a 0000     		.space	2
 2730 000c 78       		.byte	120
 2731 000d 000000   		.section	.bss.test_begin,"aw",%nobits
 2732              		.align	2
 2733              		.set	.LANCHOR2,. + 0
 2736              	test_begin:
 2737 0000 00000000 		.space	4
 2738              		.section	.bss.previousServoValue.6209,"aw",%nobits
 2739              		.align	2
 2740              		.set	.LANCHOR11,. + 0
 2743              	previousServoValue.6209:
 2744 0000 00000000 		.space	4
 2745              		.section	.bss.steeringControlUpdate.6163,"aw",%nobits
 2746              		.set	.LANCHOR7,. + 0
 2749              	steeringControlUpdate.6163:
 2750 0000 00       		.space	1
 2751              		.section	.bss.servoValue,"aw",%nobits
 2752              		.align	2
 2753              		.set	.LANCHOR10,. + 0
 2756              	servoValue:
 2757 0000 00000000 		.space	4
 2758              		.section	.bss.loop_time,"aw",%nobits
 2759              		.align	1
 2760              		.set	.LANCHOR18,. + 0
 2763              	loop_time:
 2764 0000 0000     		.space	2
 2765              		.section	.bss.previousTargetSpeed.6205,"aw",%nobits
 2766              		.align	2
 2767              		.set	.LANCHOR14,. + 0
 2770              	previousTargetSpeed.6205:
 2771 0000 00000000 		.space	4
 2772              		.section	.bss.targetSpeed,"aw",%nobits
 2773              		.align	2
 2774              		.set	.LANCHOR15,. + 0
 2777              	targetSpeed:
 2778 0000 00000000 		.space	4
 2779              		.section	.bss.friction_correct,"aw",%nobits
 2780              		.align	2
 2783              	friction_correct:
 2784 0000 00000000 		.space	4
 2785              		.text
 2786              	.Letext0:
 2787              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 2788              		.file 3 "C:/Users/bentr_000/Desktop/New folder/FreescaleCup2016Group2/Project_Headers/MKL25Z4.h"
 2789              		.file 4 "C:/Users/bentr_000/Desktop/New folder/FreescaleCup2016Group2/Project_Headers/typedefs_str
 2790              		.file 5 "C:/Users/bentr_000/Desktop/New folder/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_Que
 2791              		.file 6 "C:/Users/bentr_000/Desktop/New folder/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_ARM
 2792              		.file 7 "C:/Users/bentr_000/Desktop/New folder/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_Lin
 2793              		.file 8 "C:/Users/bentr_000/Desktop/New folder/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_UAR
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:18     .text.TFC_Init:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:23     .text.TFC_Init:00000000 TFC_Init
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:120    .text.TFC_Init:00000074 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:136    .text.startup.main:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:141    .text.startup.main:00000000 main
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:816    .text.startup.main:00000340 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:850    .text.startup.main:000003b4 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1221   .text.startup.main:00000598 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1248   .text.lineFollowingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1253   .text.lineFollowingMode:00000000 lineFollowingMode
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1786   .text.lineFollowingMode:000002b8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1823   .text.rawFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1828   .text.rawFocussingMode:00000000 rawFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1942   .text.rawFocussingMode:00000084 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1954   .text.derivativeFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1959   .text.derivativeFocussingMode:00000000 derivativeFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2100   .text.derivativeFocussingMode:000000a8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2115   .text.TFC_Task:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2120   .text.TFC_Task:00000000 TFC_Task
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2143   .text.evaluateMotorState:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2148   .text.evaluateMotorState:00000000 evaluateMotorState
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2201   .text.evaluateMotorState:00000034 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2206   .text.evaluateUARTorSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2211   .text.evaluateUARTorSpeed:00000000 evaluateUARTorSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2308   .text.evaluateUARTorSpeed:0000007c $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2314   .text.servoAlignment:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2319   .text.servoAlignment:00000000 servoAlignment
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2351   .text.servoAlignment:00000018 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2357   .text.processRaceLine:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2362   .text.processRaceLine:00000000 processRaceLine
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2481   .text.processRaceLine:00000090 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2491   .text.targetSpeedAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2496   .text.targetSpeedAverage:00000000 targetSpeedAverage
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2547   .text.targetSpeedAverage:00000038 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2555   .text.servoValueAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2560   .text.servoValueAverage:00000000 servoValueAverage
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2599   .text.servoValueAverage:00000024 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2624   .bss.test_time:00000000 test_time
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2736   .bss.test_begin:00000000 test_begin
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2664   .bss.stopline_enable:00000000 stopline_enable
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2675   .bss.cross_section_enable:00000000 cross_section_enable
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2702   .bss.s_mode_enable:00000000 s_mode_enable
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2696   .bss.accel:00000000 accel
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2670   .data.maxSpeedPercent:00000000 maxSpeedPercent
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2783   .bss.friction_correct:00000000 friction_correct
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2682   .bss.speedR:00000000 speedR
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2644   .bss.speedL:00000000 speedL
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2777   .bss.targetSpeed:00000000 targetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2658   .bss.batteryLevel:00000000 batteryLevel
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2689   .bss.loop_begin:00000000 loop_begin
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2763   .bss.loop_time:00000000 loop_time
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2620   .bss.test_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2627   .bss.totalIntensity.6164:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2631   .bss.totalIntensity.6164:00000000 totalIntensity.6164
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2637   .bss.stoplineJustDetected:00000000 stoplineJustDetected
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2638   .bss.stoplineJustDetected:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2640   .bss.speedL:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2647   .bss.previousRaceLine.6201:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2651   .bss.previousRaceLine.6201:00000000 previousRaceLine.6201
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2654   .bss.batteryLevel:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2665   .bss.stopline_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2667   .data.maxSpeedPercent:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2676   .bss.cross_section_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2678   .bss.speedR:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2685   .bss.loop_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2692   .bss.accel:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2703   .bss.s_mode_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2705   .rodata.str1.4:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2714   .data.carState:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2718   .data.carState:00000000 carState
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2732   .bss.test_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2739   .bss.previousServoValue.6209:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2743   .bss.previousServoValue.6209:00000000 previousServoValue.6209
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2749   .bss.steeringControlUpdate.6163:00000000 steeringControlUpdate.6163
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2750   .bss.steeringControlUpdate.6163:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2752   .bss.servoValue:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2756   .bss.servoValue:00000000 servoValue
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2759   .bss.loop_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2766   .bss.previousTargetSpeed.6205:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2770   .bss.previousTargetSpeed.6205:00000000 previousTargetSpeed.6205
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2773   .bss.targetSpeed:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:2780   .bss.friction_correct:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1247   .text.startup.main:000005e4 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc0sVW9R.s:1822   .text.lineFollowingMode:00000334 $t

UNDEFINED SYMBOLS
TFC_InitClock
TFC_InitSysTick
TFC_InitGPIO
TFC_InitServos
TFC_InitMotorPWM
TFC_InitADCs
TFC_InitLineScanCamera
Init_I2C
Init_Accelerometer
TFC_InitUARTs
LCDinit
LCDwriteString
TFC_InitTerminal
TFC_SetMotorPWM
TFC_InitSpeedSensor
preloadProbabilityTables
generateKernel
TFC_SetServo
__aeabi_fcmpgt
__aeabi_fmul
__aeabi_i2f
__aeabi_fadd
__aeabi_f2uiz
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
enable_irq
TFC_GetDIP_Switch
TFC_UART_Process
TFC_ProcessTerminal
disable_irq
getTotalIntensity
calculateNewExposure
TFC_SetLineScanExposureTime
edgeDetection
Qprintf
TFC_GetPush_Button
TFC_ReadBatteryVoltage
LCDfeedback
getDesiredServoValue
findLine
TFC_Ticker
LineScanImage0
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage1
getXAcc
getRadiusRoot
getDesiredSpeed
getActiveDifferentialModifier
getSpeed
findStop
