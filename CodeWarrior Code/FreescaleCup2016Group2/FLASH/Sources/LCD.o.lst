   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LCD.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LCDinit,"ax",%progbits
  18              		.align	2
  19              		.global	LCDinit
  20              		.code	16
  21              		.thumb_func
  23              	LCDinit:
  24              	.LFB0:
  25              		.file 1 "../Sources/LCD.c"
   1:../Sources/LCD.c **** /*
   2:../Sources/LCD.c ****  * LCD.c
   3:../Sources/LCD.c ****  *
   4:../Sources/LCD.c ****  *  Created on: Dec 8, 2015
   5:../Sources/LCD.c ****  *      Author: bentr_000
   6:../Sources/LCD.c ****  */
   7:../Sources/LCD.c **** 
   8:../Sources/LCD.c **** #include "LCD.h"
   9:../Sources/LCD.c **** 
  10:../Sources/LCD.c **** extern carState_s carState;
  11:../Sources/LCD.c **** extern float targetSpeed;
  12:../Sources/LCD.c **** extern float accel;
  13:../Sources/LCD.c **** 
  14:../Sources/LCD.c **** void LCDinit(){
  26              		.loc 1 14 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  15:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'S');
  33              		.loc 1 15 0
  34 0002 114C     		ldr	r4, .L2
  35 0004 5321     		mov	r1, #83
  36 0006 201C     		mov	r0, r4
  37 0008 FFF7FEFF 		bl	uart_putchar
  38              	.LVL0:
  16:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'B');
  39              		.loc 1 16 0
  40 000c 201C     		mov	r0, r4
  41 000e 4221     		mov	r1, #66
  42 0010 FFF7FEFF 		bl	uart_putchar
  43              	.LVL1:
  17:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, '1');
  44              		.loc 1 17 0
  45 0014 201C     		mov	r0, r4
  46 0016 3121     		mov	r1, #49
  47 0018 FFF7FEFF 		bl	uart_putchar
  48              	.LVL2:
  18:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, '1');
  49              		.loc 1 18 0
  50 001c 201C     		mov	r0, r4
  51 001e 3121     		mov	r1, #49
  52 0020 FFF7FEFF 		bl	uart_putchar
  53              	.LVL3:
  19:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, '5');
  54              		.loc 1 19 0
  55 0024 201C     		mov	r0, r4
  56 0026 3521     		mov	r1, #53
  57 0028 FFF7FEFF 		bl	uart_putchar
  58              	.LVL4:
  20:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, '2');
  59              		.loc 1 20 0
  60 002c 201C     		mov	r0, r4
  61 002e 3221     		mov	r1, #50
  62 0030 FFF7FEFF 		bl	uart_putchar
  63              	.LVL5:
  21:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, '0');
  64              		.loc 1 21 0
  65 0034 201C     		mov	r0, r4
  66 0036 3021     		mov	r1, #48
  67 0038 FFF7FEFF 		bl	uart_putchar
  68              	.LVL6:
  22:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, '0');
  69              		.loc 1 22 0
  70 003c 201C     		mov	r0, r4
  71 003e 3021     		mov	r1, #48
  72 0040 FFF7FEFF 		bl	uart_putchar
  73              	.LVL7:
  23:../Sources/LCD.c **** 	//LCDclear();
  24:../Sources/LCD.c **** 	//LCDwriteString("CURRENT STATE:");
  25:../Sources/LCD.c **** 	//LCDmoveCursor(0,2);
  26:../Sources/LCD.c **** 	//LCDwriteString("TARGET SPEED");
  27:../Sources/LCD.c **** 	//LCDmoveCursor(0,4);
  28:../Sources/LCD.c **** 	//LCDwriteString("RIGHT WHEEL SPEED");
  29:../Sources/LCD.c **** 	//LCDmoveCursor(0,6);
  30:../Sources/LCD.c **** 	//LCDwriteString("LEFT WHEEL SPEED");
  31:../Sources/LCD.c **** 	//LCDmoveCursor(0,8);
  32:../Sources/LCD.c **** 	//LCDwriteString("ACCELEROMETER");
  33:../Sources/LCD.c **** }
  74              		.loc 1 33 0
  75              		@ sp needed for prologue
  76 0044 10BD     		pop	{r4, pc}
  77              	.L3:
  78 0046 C046     		.align	2
  79              	.L2:
  80 0048 00C00640 		.word	1074184192
  81              		.cfi_endproc
  82              	.LFE0:
  84              		.section	.text.LCDmoveCursor,"ax",%progbits
  85              		.align	2
  86              		.global	LCDmoveCursor
  87              		.code	16
  88              		.thumb_func
  90              	LCDmoveCursor:
  91              	.LFB1:
  34:../Sources/LCD.c **** 
  35:../Sources/LCD.c **** void LCDmoveCursor(int x,int y){
  92              		.loc 1 35 0
  93              		.cfi_startproc
  94              	.LVL8:
  95 0000 70B5     		push	{r4, r5, r6, lr}
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 16
  98              		.cfi_offset 4, -16
  99              		.cfi_offset 5, -12
 100              		.cfi_offset 6, -8
 101              		.cfi_offset 14, -4
  36:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 102              		.loc 1 36 0
 103 0002 0A4C     		ldr	r4, .L5
  35:../Sources/LCD.c **** void LCDmoveCursor(int x,int y){
 104              		.loc 1 35 0
 105 0004 061C     		mov	r6, r0
 106 0006 0D1C     		mov	r5, r1
 107              		.loc 1 36 0
 108 0008 201C     		mov	r0, r4
 109              	.LVL9:
 110 000a 5421     		mov	r1, #84
 111              	.LVL10:
 112 000c FFF7FEFF 		bl	uart_putchar
 113              	.LVL11:
  37:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'P');
 114              		.loc 1 37 0
 115 0010 201C     		mov	r0, r4
 116 0012 5021     		mov	r1, #80
 117 0014 FFF7FEFF 		bl	uart_putchar
 118              	.LVL12:
  38:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, x);
 119              		.loc 1 38 0
 120 0018 F1B2     		uxtb	r1, r6
 121 001a 201C     		mov	r0, r4
 122 001c FFF7FEFF 		bl	uart_putchar
 123              	.LVL13:
  39:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, y);
 124              		.loc 1 39 0
 125 0020 E9B2     		uxtb	r1, r5
 126 0022 201C     		mov	r0, r4
 127 0024 FFF7FEFF 		bl	uart_putchar
 128              	.LVL14:
  40:../Sources/LCD.c **** }
 129              		.loc 1 40 0
 130              		@ sp needed for prologue
 131              	.LVL15:
 132              	.LVL16:
 133 0028 70BD     		pop	{r4, r5, r6, pc}
 134              	.L6:
 135 002a C046     		.align	2
 136              	.L5:
 137 002c 00C00640 		.word	1074184192
 138              		.cfi_endproc
 139              	.LFE1:
 141              		.section	.text.LCDwriteString,"ax",%progbits
 142              		.align	2
 143              		.global	LCDwriteString
 144              		.code	16
 145              		.thumb_func
 147              	LCDwriteString:
 148              	.LFB3:
  41:../Sources/LCD.c **** 
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
  43:../Sources/LCD.c **** 	//LCDinit();
  44:../Sources/LCD.c **** 	LCDclear();
  45:../Sources/LCD.c **** 	
  46:../Sources/LCD.c **** 	LCDwriteString("CURRENT STATE:");
  47:../Sources/LCD.c **** 	LCDreturn();
  48:../Sources/LCD.c **** 	//LCDmoveCursor(0,1);
  49:../Sources/LCD.c **** 	LCDwriteState(carState); 				//gives feedback for car state by the LCD display
  50:../Sources/LCD.c **** 	//LCDclear();
  51:../Sources/LCD.c **** 	LCDreturn();
  52:../Sources/LCD.c **** 	LCDwriteString("TARGET SPEED");
  53:../Sources/LCD.c **** 	//LCDwriteString("REAL-TIME FEEDBACK:");
  54:../Sources/LCD.c **** 	//LCDmoveCursor(0,3);
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
  56:../Sources/LCD.c **** 	LCDreturn();
  57:../Sources/LCD.c **** 	LCDwriteString("RIGHT WHEEL SPEED");
  58:../Sources/LCD.c **** 	LCDreturn();
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
  60:../Sources/LCD.c **** 	LCDreturn();
  61:../Sources/LCD.c **** 		LCDmoveCursor(0,6);
  62:../Sources/LCD.c **** 		LCDwriteString("LEFT WHEEL SPEED");
  63:../Sources/LCD.c **** 		LCDreturn();
  64:../Sources/LCD.c **** 	//LCDmoveCursor(0,5);
  65:../Sources/LCD.c **** 	
  66:../Sources/LCD.c **** 	//LCDmoveCursor(0,7);
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
  68:../Sources/LCD.c **** 		//LCDmoveCursor(15,8);
  69:../Sources/LCD.c **** 		//LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(accel)));
  70:../Sources/LCD.c **** 	//LCDwriteVariable("Right Wheel Speed: ",);
  71:../Sources/LCD.c **** 	//LCDreturn();
  72:../Sources/LCD.c **** 	//LCDwriteVariable("Left Wheel Speed: ",FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
  73:../Sources/LCD.c **** 	//LCDclear();
  74:../Sources/LCD.c **** }
  75:../Sources/LCD.c **** 
  76:../Sources/LCD.c **** 
  77:../Sources/LCD.c **** void LCDwriteString(char string[]){
 149              		.loc 1 77 0
 150              		.cfi_startproc
 151              	.LVL17:
 152 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 24
 155              		.cfi_offset 3, -24
 156              		.cfi_offset 4, -20
 157              		.cfi_offset 5, -16
 158              		.cfi_offset 6, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161              		.loc 1 77 0
 162 0002 051C     		mov	r5, r0
  78:../Sources/LCD.c **** 	
  79:../Sources/LCD.c **** 	int string_length = strlen(string);
 163              		.loc 1 79 0
 164 0004 FFF7FEFF 		bl	strlen
 165              	.LVL18:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 166              		.loc 1 80 0
 167 0008 5421     		mov	r1, #84
  79:../Sources/LCD.c **** 	int string_length = strlen(string);
 168              		.loc 1 79 0
 169 000a 061C     		mov	r6, r0
 170              	.LVL19:
 171              		.loc 1 80 0
 172 000c 1648     		ldr	r0, .L21
 173              	.LVL20:
 174 000e FFF7FEFF 		bl	uart_putchar
 175              	.LVL21:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 176              		.loc 1 81 0
 177 0012 1548     		ldr	r0, .L21
 178 0014 5421     		mov	r1, #84
 179 0016 FFF7FEFF 		bl	uart_putchar
 180              	.LVL22:
 181              	.LBB3:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 182              		.loc 1 82 0
 183 001a 002E     		cmp	r6, #0
 184 001c 1FDD     		ble	.L9
 185 001e 0122     		mov	r2, #1
 186 0020 731E     		sub	r3, r6, #1
 187 0022 171C     		mov	r7, r2
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 188              		.loc 1 83 0
 189 0024 2978     		ldrb	r1, [r5]
 190 0026 1048     		ldr	r0, .L21
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 191              		.loc 1 82 0
 192 0028 0124     		mov	r4, #1
 193 002a 1F40     		and	r7, r3
 194              		.loc 1 83 0
 195 002c FFF7FEFF 		bl	uart_putchar
 196              	.LVL23:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 197              		.loc 1 82 0
 198 0030 A642     		cmp	r6, r4
 199 0032 14D0     		beq	.L9
 200 0034 002F     		cmp	r7, #0
 201 0036 06D0     		beq	.L11
 202              		.loc 1 83 0
 203 0038 295D     		ldrb	r1, [r5, r4]
 204 003a 0B48     		ldr	r0, .L21
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 205              		.loc 1 82 0
 206 003c 0224     		mov	r4, #2
 207              		.loc 1 83 0
 208 003e FFF7FEFF 		bl	uart_putchar
 209              	.LVL24:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 210              		.loc 1 82 0
 211 0042 A642     		cmp	r6, r4
 212 0044 0BD0     		beq	.L9
 213              	.L11:
 214              		.loc 1 83 0
 215 0046 295D     		ldrb	r1, [r5, r4]
 216 0048 0748     		ldr	r0, .L21
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 217              		.loc 1 82 0
 218 004a 0134     		add	r4, r4, #1
 219              		.loc 1 83 0
 220 004c FFF7FEFF 		bl	uart_putchar
 221              	.LVL25:
 222 0050 295D     		ldrb	r1, [r5, r4]
 223 0052 0548     		ldr	r0, .L21
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 224              		.loc 1 82 0
 225 0054 0134     		add	r4, r4, #1
 226              		.loc 1 83 0
 227 0056 FFF7FEFF 		bl	uart_putchar
 228              	.LVL26:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 229              		.loc 1 82 0
 230 005a A642     		cmp	r6, r4
 231 005c F3D1     		bne	.L11
 232              	.L9:
 233              	.LBE3:
  84:../Sources/LCD.c **** 	}
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 234              		.loc 1 85 0
 235 005e 0248     		ldr	r0, .L21
 236 0060 0021     		mov	r1, #0
 237 0062 FFF7FEFF 		bl	uart_putchar
 238              	.LVL27:
  86:../Sources/LCD.c **** }
 239              		.loc 1 86 0
 240              		@ sp needed for prologue
 241              	.LVL28:
 242              	.LVL29:
 243 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 244              	.L22:
 245              		.align	2
 246              	.L21:
 247 0068 00C00640 		.word	1074184192
 248              		.cfi_endproc
 249              	.LFE3:
 251              		.global	__aeabi_idivmod
 252              		.global	__aeabi_idiv
 253              		.section	.text.LCDwriteVariable,"ax",%progbits
 254              		.align	2
 255              		.global	LCDwriteVariable
 256              		.code	16
 257              		.thumb_func
 259              	LCDwriteVariable:
 260              	.LFB4:
  87:../Sources/LCD.c **** 
  88:../Sources/LCD.c **** void LCDwriteVariable(int variable){
 261              		.loc 1 88 0
 262              		.cfi_startproc
 263              	.LVL30:
 264 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 20
 267              		.cfi_offset 4, -20
 268              		.cfi_offset 5, -16
 269              		.cfi_offset 6, -12
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 C217     		asr	r2, r0, #31
 273 0004 8418     		add	r4, r0, r2
 274 0006 85B0     		sub	sp, sp, #20
 275              	.LCFI4:
 276              		.cfi_def_cfa_offset 40
 277              	.LVL31:
 278              		.loc 1 88 0
 279 0008 071C     		mov	r7, r0
 280 000a 5440     		eor	r4, r2
 281 000c 0025     		mov	r5, #0
 282 000e 00E0     		b	.L24
 283              	.LVL32:
 284              	.L30:
 285              	.LBB9:
 286              	.LBB10:
  89:../Sources/LCD.c **** 	char intstring[16];
  90:../Sources/LCD.c **** 	
  91:../Sources/LCD.c **** 	itoa(variable, intstring);
  92:../Sources/LCD.c **** 	
  93:../Sources/LCD.c **** 	for(int i=0;i<strlen(intstring);i++){
  94:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 'T');
  95:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 'T');
  96:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, intstring[i]);
  97:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 0x00);
  98:../Sources/LCD.c **** 	}	
  99:../Sources/LCD.c **** }
 100:../Sources/LCD.c **** 
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 102:../Sources/LCD.c **** 	
 103:../Sources/LCD.c **** 	if(carState->lineDetectionState == STOPLINE_DETECTED)
 104:../Sources/LCD.c **** 			{
 105:../Sources/LCD.c **** 				LCDwriteString("STOPLINE DETECTED");
 106:../Sources/LCD.c **** 			}
 107:../Sources/LCD.c **** 			#ifdef CROSS_DETECTION_ENABLE
 108:../Sources/LCD.c **** 			else if(carState->crossSection == YES)
 109:../Sources/LCD.c **** 			{
 110:../Sources/LCD.c **** 				LCDwriteString("X DETECTED          ");
 111:../Sources/LCD.c **** 			}
 112:../Sources/LCD.c **** 			#endif
 113:../Sources/LCD.c **** 			else if(carState->sMode == S_MODE_ON)
 114:../Sources/LCD.c **** 			{
 115:../Sources/LCD.c **** 				LCDwriteString("S MODE ON           ");
 116:../Sources/LCD.c **** 			}
 117:../Sources/LCD.c **** 			if(carState->detectedType == DOUBLE_EDGE)
 118:../Sources/LCD.c **** 			{
 119:../Sources/LCD.c **** 				LCDwriteString("BOTH EDGES          ");
 120:../Sources/LCD.c **** 			}
 121:../Sources/LCD.c **** 			else if (carState->edge == LEFT_EDGE)
 122:../Sources/LCD.c **** 			{	
 123:../Sources/LCD.c **** 				LCDwriteString("LEFT EDGE           ");
 124:../Sources/LCD.c **** 			}
 125:../Sources/LCD.c **** 			else if (carState->edge == RIGHT_EDGE)
 126:../Sources/LCD.c **** 			{	
 127:../Sources/LCD.c **** 				LCDwriteString("RIGHT EDGE          ");
 128:../Sources/LCD.c **** 			}
 129:../Sources/LCD.c **** 			else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 130:../Sources/LCD.c **** 			{	
 131:../Sources/LCD.c **** 				LCDwriteString("TEMP LOST           ");
 132:../Sources/LCD.c **** 			}
 133:../Sources/LCD.c **** 			else if (carState->lineDetectionState == LINE_LOST)
 134:../Sources/LCD.c **** 			{	
 135:../Sources/LCD.c **** 				LCDwriteString("LINE LOST           ");
 136:../Sources/LCD.c **** 			}
 137:../Sources/LCD.c **** }
 138:../Sources/LCD.c **** 
 139:../Sources/LCD.c **** void LCDclear(){
 140:../Sources/LCD.c **** 
 141:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'C');
 142:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'L');
 143:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 144:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 'P');
 145:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 0);
 146:../Sources/LCD.c **** 			uart_putchar(UART2_BASE_PTR, 0);
 147:../Sources/LCD.c **** 	
 148:../Sources/LCD.c **** }
 149:../Sources/LCD.c **** 
 150:../Sources/LCD.c **** void LCDreturn(){
 151:../Sources/LCD.c **** 	
 152:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 153:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'R');
 154:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 155:../Sources/LCD.c **** }
 156:../Sources/LCD.c **** 
 157:../Sources/LCD.c **** /* itoa:  convert n to characters in s */
 158:../Sources/LCD.c **** void itoa(int n, char s[])
 159:../Sources/LCD.c **** {
 160:../Sources/LCD.c ****     int i, sign;
 161:../Sources/LCD.c **** 
 162:../Sources/LCD.c ****     if ((sign = n) < 0)  /* record sign */
 163:../Sources/LCD.c ****         n = -n;          /* make n positive */
 164:../Sources/LCD.c ****     i = 0;
 165:../Sources/LCD.c ****     do {       /* generate digits in reverse order */
 166:../Sources/LCD.c ****         s[i++] = n % 10 + '0';   /* get next digit */
 287              		.loc 1 166 0
 288 0010 351C     		mov	r5, r6
 289              	.LVL33:
 290              	.L24:
 291 0012 201C     		mov	r0, r4
 292 0014 0A21     		mov	r1, #10
 293 0016 FFF7FEFF 		bl	__aeabi_idivmod
 294              	.LVL34:
 295 001a 6B46     		mov	r3, sp
 296 001c 3031     		add	r1, r1, #48
 297 001e 5955     		strb	r1, [r3, r5]
 167:../Sources/LCD.c ****     } while ((n /= 10) > 0);     /* delete it */
 298              		.loc 1 167 0
 299 0020 201C     		mov	r0, r4
 300 0022 0A21     		mov	r1, #10
 301 0024 FFF7FEFF 		bl	__aeabi_idiv
 302              	.LVL35:
 166:../Sources/LCD.c ****         s[i++] = n % 10 + '0';   /* get next digit */
 303              		.loc 1 166 0
 304 0028 6E1C     		add	r6, r5, #1
 305              	.LVL36:
 306              		.loc 1 167 0
 307 002a 041E     		sub	r4, r0, #0
 308              	.LVL37:
 309 002c F0DC     		bgt	.L30
 168:../Sources/LCD.c ****     if (sign < 0)
 310              		.loc 1 168 0
 311 002e 002F     		cmp	r7, #0
 312 0030 03DA     		bge	.L25
 169:../Sources/LCD.c ****         s[i++] = '-';
 313              		.loc 1 169 0
 314 0032 2D20     		mov	r0, #45
 315              	.LVL38:
 316 0034 6946     		mov	r1, sp
 317 0036 8855     		strb	r0, [r1, r6]
 318 0038 AE1C     		add	r6, r5, #2
 319              	.LVL39:
 320              	.L25:
 170:../Sources/LCD.c ****     s[i] = '\0';
 321              		.loc 1 170 0
 322 003a 00AD     		add	r5, sp, #0
 323 003c 0022     		mov	r2, #0
 324 003e AF19     		add	r7, r5, r6
 325              	.LVL40:
 326 0040 3A70     		strb	r2, [r7]
 327              	.LVL41:
 328              	.LBB11:
 329              	.LBB12:
 171:../Sources/LCD.c ****     reverse(s);
 172:../Sources/LCD.c **** }
 173:../Sources/LCD.c **** 
 174:../Sources/LCD.c **** /* reverse:  reverse string s in place */
 175:../Sources/LCD.c **** void reverse(char s[])
 176:../Sources/LCD.c **** {
 177:../Sources/LCD.c ****     int i, j;
 178:../Sources/LCD.c ****     char c;
 179:../Sources/LCD.c **** 
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 330              		.loc 1 180 0
 331 0042 6846     		mov	r0, sp
 332 0044 FFF7FEFF 		bl	strlen
 333              	.LVL42:
 334 0048 411E     		sub	r1, r0, #1
 335              	.LVL43:
 336 004a 0029     		cmp	r1, #0
 337 004c 0FDD     		ble	.L26
  88:../Sources/LCD.c **** void LCDwriteVariable(int variable){
 338              		.loc 1 88 0
 339 004e 00AB     		add	r3, sp, #0
 340 0050 5E18     		add	r6, r3, r1
 341              	.LVL44:
 342              	.LBE12:
 343              	.LBE11:
 344              		.loc 1 180 0
 345 0052 0027     		mov	r7, #0
 346              	.LVL45:
 347              	.L27:
 348              	.LBB14:
 349              	.LBB13:
 181:../Sources/LCD.c ****         c = s[i];
 182:../Sources/LCD.c ****         s[i] = s[j];
 350              		.loc 1 182 0
 351 0054 3278     		ldrb	r2, [r6]
 181:../Sources/LCD.c ****         c = s[i];
 352              		.loc 1 181 0
 353 0056 6C46     		mov	r4, sp
 354 0058 E05D     		ldrb	r0, [r4, r7]
 355              	.LVL46:
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 356              		.loc 1 180 0
 357 005a 0139     		sub	r1, r1, #1
 358              	.LVL47:
 359              		.loc 1 182 0
 360 005c E255     		strb	r2, [r4, r7]
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 361              		.loc 1 180 0
 362 005e 0137     		add	r7, r7, #1
 363              	.LVL48:
 183:../Sources/LCD.c ****         s[j] = c;
 364              		.loc 1 183 0
 365 0060 3070     		strb	r0, [r6]
 366 0062 013E     		sub	r6, r6, #1
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 367              		.loc 1 180 0
 368 0064 8F42     		cmp	r7, r1
 369 0066 F5DB     		blt	.L27
  88:../Sources/LCD.c **** void LCDwriteVariable(int variable){
 370              		.loc 1 88 0
 371 0068 6846     		mov	r0, sp
 372 006a FFF7FEFF 		bl	strlen
 373              	.LVL49:
 374              	.L26:
 375              	.LBE13:
 376              	.LBE14:
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 377              		.loc 1 180 0
 378 006e 0026     		mov	r6, #0
 379 0070 14E0     		b	.L28
 380              	.LVL50:
 381              	.L29:
 382              	.LBE10:
 383              	.LBE9:
 384              	.LBB15:
  94:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 'T');
 385              		.loc 1 94 0
 386 0072 0C48     		ldr	r0, .L32
 387 0074 5421     		mov	r1, #84
 388 0076 FFF7FEFF 		bl	uart_putchar
 389              	.LVL51:
  95:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 'T');
 390              		.loc 1 95 0
 391 007a 0A48     		ldr	r0, .L32
 392 007c 5421     		mov	r1, #84
 393 007e FFF7FEFF 		bl	uart_putchar
 394              	.LVL52:
  96:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, intstring[i]);
 395              		.loc 1 96 0
 396 0082 6946     		mov	r1, sp
 397 0084 895D     		ldrb	r1, [r1, r6]
 398 0086 0748     		ldr	r0, .L32
 399 0088 FFF7FEFF 		bl	uart_putchar
 400              	.LVL53:
  97:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 0x00);
 401              		.loc 1 97 0
 402 008c 0548     		ldr	r0, .L32
 403 008e 0021     		mov	r1, #0
 404 0090 FFF7FEFF 		bl	uart_putchar
 405              	.LVL54:
  88:../Sources/LCD.c **** void LCDwriteVariable(int variable){
 406              		.loc 1 88 0
 407 0094 6846     		mov	r0, sp
  93:../Sources/LCD.c **** 	for(int i=0;i<strlen(intstring);i++){
 408              		.loc 1 93 0
 409 0096 0136     		add	r6, r6, #1
 410              	.LVL55:
  88:../Sources/LCD.c **** void LCDwriteVariable(int variable){
 411              		.loc 1 88 0
 412 0098 FFF7FEFF 		bl	strlen
 413              	.LVL56:
 414              	.L28:
  93:../Sources/LCD.c **** 	for(int i=0;i<strlen(intstring);i++){
 415              		.loc 1 93 0
 416 009c 8642     		cmp	r6, r0
 417 009e E8D3     		bcc	.L29
 418              	.LBE15:
  99:../Sources/LCD.c **** }
 419              		.loc 1 99 0
 420 00a0 05B0     		add	sp, sp, #20
 421              		@ sp needed for prologue
 422              	.LVL57:
 423              	.LVL58:
 424 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 425              	.L33:
 426              		.align	2
 427              	.L32:
 428 00a4 00C00640 		.word	1074184192
 429              		.cfi_endproc
 430              	.LFE4:
 432              		.global	__aeabi_fmul
 433              		.global	__aeabi_fcmple
 434              		.global	__aeabi_fcmpge
 435              		.global	__aeabi_f2iz
 436              		.global	__aeabi_fcmpgt
 437              		.global	__aeabi_fcmpeq
 438              		.section	.text.LCDfeedback,"ax",%progbits
 439              		.align	2
 440              		.global	LCDfeedback
 441              		.code	16
 442              		.thumb_func
 444              	LCDfeedback:
 445              	.LFB2:
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
 446              		.loc 1 42 0
 447              		.cfi_startproc
 448              	.LVL59:
 449 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 450              	.LCFI5:
 451              		.cfi_def_cfa_offset 24
 452              		.cfi_offset 3, -24
 453              		.cfi_offset 4, -20
 454              		.cfi_offset 5, -16
 455              		.cfi_offset 6, -12
 456              		.cfi_offset 7, -8
 457              		.cfi_offset 14, -4
 458              	.LBB67:
 459              	.LBB68:
 141:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'C');
 460              		.loc 1 141 0
 461 0002 4321     		mov	r1, #67
 462              	.LBE68:
 463              	.LBE67:
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
 464              		.loc 1 42 0
 465 0004 041C     		mov	r4, r0
 466              	.LBB70:
 467              	.LBB69:
 141:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'C');
 468              		.loc 1 141 0
 469 0006 F348     		ldr	r0, .L210
 470              	.LVL60:
 471 0008 FFF7FEFF 		bl	uart_putchar
 472              	.LVL61:
 142:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'L');
 473              		.loc 1 142 0
 474 000c F148     		ldr	r0, .L210
 475 000e 4C21     		mov	r1, #76
 476 0010 FFF7FEFF 		bl	uart_putchar
 477              	.LVL62:
 143:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 478              		.loc 1 143 0
 479 0014 EF48     		ldr	r0, .L210
 480 0016 5421     		mov	r1, #84
 481 0018 FFF7FEFF 		bl	uart_putchar
 482              	.LVL63:
 144:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 'P');
 483              		.loc 1 144 0
 484 001c ED48     		ldr	r0, .L210
 485 001e 5021     		mov	r1, #80
 486 0020 FFF7FEFF 		bl	uart_putchar
 487              	.LVL64:
 145:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 0);
 488              		.loc 1 145 0
 489 0024 EB48     		ldr	r0, .L210
 490 0026 0021     		mov	r1, #0
 491 0028 FFF7FEFF 		bl	uart_putchar
 492              	.LVL65:
 146:../Sources/LCD.c **** 			uart_putchar(UART2_BASE_PTR, 0);
 493              		.loc 1 146 0
 494 002c E948     		ldr	r0, .L210
 495 002e 0021     		mov	r1, #0
 496 0030 FFF7FEFF 		bl	uart_putchar
 497              	.LVL66:
 498              	.LBE69:
 499              	.LBE70:
 500              	.LBB71:
 501              	.LBB72:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 502              		.loc 1 80 0
 503 0034 E748     		ldr	r0, .L210
 504 0036 5421     		mov	r1, #84
 505 0038 FFF7FEFF 		bl	uart_putchar
 506              	.LVL67:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 507              		.loc 1 81 0
 508 003c E548     		ldr	r0, .L210
 509 003e 5421     		mov	r1, #84
 510 0040 FFF7FEFF 		bl	uart_putchar
 511              	.LVL68:
 512              	.LBB73:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 513              		.loc 1 83 0
 514 0044 E348     		ldr	r0, .L210
 515 0046 4321     		mov	r1, #67
 516 0048 FFF7FEFF 		bl	uart_putchar
 517              	.LVL69:
 518 004c E148     		ldr	r0, .L210
 519 004e 5521     		mov	r1, #85
 520 0050 FFF7FEFF 		bl	uart_putchar
 521              	.LVL70:
 522 0054 DF48     		ldr	r0, .L210
 523 0056 5221     		mov	r1, #82
 524 0058 FFF7FEFF 		bl	uart_putchar
 525              	.LVL71:
 526 005c DD48     		ldr	r0, .L210
 527 005e 5221     		mov	r1, #82
 528 0060 FFF7FEFF 		bl	uart_putchar
 529              	.LVL72:
 530 0064 DB48     		ldr	r0, .L210
 531 0066 4521     		mov	r1, #69
 532 0068 FFF7FEFF 		bl	uart_putchar
 533              	.LVL73:
 534 006c D948     		ldr	r0, .L210
 535 006e 4E21     		mov	r1, #78
 536 0070 FFF7FEFF 		bl	uart_putchar
 537              	.LVL74:
 538 0074 D748     		ldr	r0, .L210
 539 0076 5421     		mov	r1, #84
 540 0078 FFF7FEFF 		bl	uart_putchar
 541              	.LVL75:
 542 007c D548     		ldr	r0, .L210
 543 007e 2021     		mov	r1, #32
 544 0080 FFF7FEFF 		bl	uart_putchar
 545              	.LVL76:
 546 0084 D348     		ldr	r0, .L210
 547 0086 5321     		mov	r1, #83
 548 0088 FFF7FEFF 		bl	uart_putchar
 549              	.LVL77:
 550 008c D148     		ldr	r0, .L210
 551 008e 5421     		mov	r1, #84
 552 0090 FFF7FEFF 		bl	uart_putchar
 553              	.LVL78:
 554 0094 CF48     		ldr	r0, .L210
 555 0096 4121     		mov	r1, #65
 556 0098 FFF7FEFF 		bl	uart_putchar
 557              	.LVL79:
 558 009c CD48     		ldr	r0, .L210
 559 009e 5421     		mov	r1, #84
 560 00a0 FFF7FEFF 		bl	uart_putchar
 561              	.LVL80:
 562 00a4 CB48     		ldr	r0, .L210
 563 00a6 4521     		mov	r1, #69
 564 00a8 FFF7FEFF 		bl	uart_putchar
 565              	.LVL81:
 566 00ac C948     		ldr	r0, .L210
 567 00ae 3A21     		mov	r1, #58
 568 00b0 FFF7FEFF 		bl	uart_putchar
 569              	.LVL82:
 570              	.LBE73:
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 571              		.loc 1 85 0
 572 00b4 C748     		ldr	r0, .L210
 573 00b6 0021     		mov	r1, #0
 574 00b8 FFF7FEFF 		bl	uart_putchar
 575              	.LVL83:
 576              	.LBE72:
 577              	.LBE71:
 578              	.LBB74:
 579              	.LBB75:
 152:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 580              		.loc 1 152 0
 581 00bc C548     		ldr	r0, .L210
 582 00be 5421     		mov	r1, #84
 583 00c0 FFF7FEFF 		bl	uart_putchar
 584              	.LVL84:
 153:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'R');
 585              		.loc 1 153 0
 586 00c4 C348     		ldr	r0, .L210
 587 00c6 5221     		mov	r1, #82
 588 00c8 FFF7FEFF 		bl	uart_putchar
 589              	.LVL85:
 154:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 590              		.loc 1 154 0
 591 00cc C148     		ldr	r0, .L210
 592 00ce 5421     		mov	r1, #84
 593 00d0 FFF7FEFF 		bl	uart_putchar
 594              	.LVL86:
 595              	.LBE75:
 596              	.LBE74:
 597              	.LBB76:
 598              	.LBB77:
 103:../Sources/LCD.c **** 	if(carState->lineDetectionState == STOPLINE_DETECTED)
 599              		.loc 1 103 0
 600 00d4 A378     		ldrb	r3, [r4, #2]
 601 00d6 022B     		cmp	r3, #2
 602 00d8 01D1     		bne	.LCB552
 603 00da 00F0F2FB 		bl	.L199	@far jump
 604              	.LCB552:
 113:../Sources/LCD.c **** 			else if(carState->sMode == S_MODE_ON)
 605              		.loc 1 113 0
 606 00de 607A     		ldrb	r0, [r4, #9]
 607 00e0 0128     		cmp	r0, #1
 608 00e2 01D1     		bne	.LCB555
 609 00e4 00F05BFC 		bl	.L200	@far jump
 610              	.LCB555:
 611              	.L36:
 117:../Sources/LCD.c **** 			if(carState->detectedType == DOUBLE_EDGE)
 612              		.loc 1 117 0
 613 00e8 2179     		ldrb	r1, [r4, #4]
 614 00ea 0229     		cmp	r1, #2
 615 00ec 01D1     		bne	.LCB559
 616 00ee 00F06DFC 		bl	.L201	@far jump
 617              	.LCB559:
 121:../Sources/LCD.c **** 			else if (carState->edge == LEFT_EDGE)
 618              		.loc 1 121 0
 619 00f2 6279     		ldrb	r2, [r4, #5]
 620 00f4 012A     		cmp	r2, #1
 621 00f6 01D1     		bne	.LCB562
 622 00f8 00F07FFC 		bl	.L202	@far jump
 623              	.LCB562:
 125:../Sources/LCD.c **** 			else if (carState->edge == RIGHT_EDGE)
 624              		.loc 1 125 0
 625 00fc 022A     		cmp	r2, #2
 626 00fe 01D1     		bne	.LCB564
 627 0100 00F092FC 		bl	.L203	@far jump
 628              	.LCB564:
 129:../Sources/LCD.c **** 			else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 629              		.loc 1 129 0
 630 0104 A678     		ldrb	r6, [r4, #2]
 631 0106 012E     		cmp	r6, #1
 632 0108 01D1     		bne	.LCB567
 633 010a 00F0A4FC 		bl	.L204	@far jump
 634              	.LCB567:
 133:../Sources/LCD.c **** 			else if (carState->lineDetectionState == LINE_LOST)
 635              		.loc 1 133 0
 636 010e 032E     		cmp	r6, #3
 637 0110 01D1     		bne	.LCB569
 638 0112 00F028FC 		bl	.L205	@far jump
 639              	.LCB569:
 640              	.LVL87:
 641              	.L41:
 642              	.LBE77:
 643              	.LBE76:
 644              	.LBB102:
 645              	.LBB103:
 152:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 646              		.loc 1 152 0
 647 0116 AF48     		ldr	r0, .L210
 648 0118 5421     		mov	r1, #84
 649 011a FFF7FEFF 		bl	uart_putchar
 650              	.LVL88:
 153:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'R');
 651              		.loc 1 153 0
 652 011e AD48     		ldr	r0, .L210
 653 0120 5221     		mov	r1, #82
 654 0122 FFF7FEFF 		bl	uart_putchar
 655              	.LVL89:
 154:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 656              		.loc 1 154 0
 657 0126 AB48     		ldr	r0, .L210
 658 0128 5421     		mov	r1, #84
 659 012a FFF7FEFF 		bl	uart_putchar
 660              	.LVL90:
 661              	.LBE103:
 662              	.LBE102:
 663              	.LBB104:
 664              	.LBB105:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 665              		.loc 1 80 0
 666 012e A948     		ldr	r0, .L210
 667 0130 5421     		mov	r1, #84
 668 0132 FFF7FEFF 		bl	uart_putchar
 669              	.LVL91:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 670              		.loc 1 81 0
 671 0136 A748     		ldr	r0, .L210
 672 0138 5421     		mov	r1, #84
 673 013a FFF7FEFF 		bl	uart_putchar
 674              	.LVL92:
 675              	.LBB106:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 676              		.loc 1 83 0
 677 013e A548     		ldr	r0, .L210
 678 0140 5421     		mov	r1, #84
 679 0142 FFF7FEFF 		bl	uart_putchar
 680              	.LVL93:
 681 0146 A348     		ldr	r0, .L210
 682 0148 4121     		mov	r1, #65
 683 014a FFF7FEFF 		bl	uart_putchar
 684              	.LVL94:
 685 014e A148     		ldr	r0, .L210
 686 0150 5221     		mov	r1, #82
 687 0152 FFF7FEFF 		bl	uart_putchar
 688              	.LVL95:
 689 0156 9F48     		ldr	r0, .L210
 690 0158 4721     		mov	r1, #71
 691 015a FFF7FEFF 		bl	uart_putchar
 692              	.LVL96:
 693 015e 9D48     		ldr	r0, .L210
 694 0160 4521     		mov	r1, #69
 695 0162 FFF7FEFF 		bl	uart_putchar
 696              	.LVL97:
 697 0166 9B48     		ldr	r0, .L210
 698 0168 5421     		mov	r1, #84
 699 016a FFF7FEFF 		bl	uart_putchar
 700              	.LVL98:
 701 016e 9948     		ldr	r0, .L210
 702 0170 2021     		mov	r1, #32
 703 0172 FFF7FEFF 		bl	uart_putchar
 704              	.LVL99:
 705 0176 9748     		ldr	r0, .L210
 706 0178 5321     		mov	r1, #83
 707 017a FFF7FEFF 		bl	uart_putchar
 708              	.LVL100:
 709 017e 9548     		ldr	r0, .L210
 710 0180 5021     		mov	r1, #80
 711 0182 FFF7FEFF 		bl	uart_putchar
 712              	.LVL101:
 713 0186 9348     		ldr	r0, .L210
 714 0188 4521     		mov	r1, #69
 715 018a FFF7FEFF 		bl	uart_putchar
 716              	.LVL102:
 717 018e 9148     		ldr	r0, .L210
 718 0190 4521     		mov	r1, #69
 719 0192 FFF7FEFF 		bl	uart_putchar
 720              	.LVL103:
 721 0196 8F48     		ldr	r0, .L210
 722 0198 4421     		mov	r1, #68
 723 019a FFF7FEFF 		bl	uart_putchar
 724              	.LVL104:
 725              	.LBE106:
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 726              		.loc 1 85 0
 727 019e 8D48     		ldr	r0, .L210
 728 01a0 0021     		mov	r1, #0
 729 01a2 FFF7FEFF 		bl	uart_putchar
 730              	.LVL105:
 731              	.LBE105:
 732              	.LBE104:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 733              		.loc 1 55 0
 734 01a6 8C4B     		ldr	r3, .L210+4
 735 01a8 8221     		mov	r1, #130
 736 01aa C905     		lsl	r1, r1, #23
 737 01ac 1868     		ldr	r0, [r3]
 738 01ae FFF7FEFF 		bl	__aeabi_fmul
 739              	.LVL106:
 740 01b2 8A49     		ldr	r1, .L210+8
 741 01b4 061C     		add	r6, r0, #0
 742 01b6 FFF7FEFF 		bl	__aeabi_fcmple
 743              	.LVL107:
 744 01ba 0028     		cmp	r0, #0
 745 01bc 00D1     		bne	.LCB683
 746 01be 25E1     		b	.L58	@long jump
 747              	.LCB683:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 748              		.loc 1 55 0 is_stmt 0
 749 01c0 301C     		add	r0, r6, #0
 750 01c2 0021     		mov	r1, #0
 751 01c4 FFF7FEFF 		bl	__aeabi_fcmpge
 752              	.LVL108:
 753 01c8 0028     		cmp	r0, #0
 754 01ca 00D1     		bne	.LCB689
 755 01cc 8DE2     		b	.L52	@long jump
 756              	.LCB689:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 757              		.loc 1 55 0
 758 01ce 301C     		add	r0, r6, #0
 759 01d0 8349     		ldr	r1, .L210+12
 760 01d2 FFF7FEFF 		bl	__aeabi_fcmpge
 761              	.LVL109:
 762 01d6 0028     		cmp	r0, #0
 763 01d8 00D1     		bne	.LCB695
 764 01da 80E2     		b	.L189	@long jump
 765              	.LCB695:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 766              		.loc 1 55 0
 767 01dc 301C     		add	r0, r6, #0
 768 01de 8149     		ldr	r1, .L210+16
 769 01e0 FFF7FEFF 		bl	__aeabi_fcmple
 770              	.LVL110:
 771 01e4 7F24     		mov	r4, #127
 772 01e6 071E     		sub	r7, r0, #0
 773 01e8 17D1     		bne	.L56
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 774              		.loc 1 55 0
 775 01ea 301C     		add	r0, r6, #0
 776 01ec 0021     		mov	r1, #0
 777 01ee FFF7FEFF 		bl	__aeabi_fcmpeq
 778              	.LVL111:
 779 01f2 0028     		cmp	r0, #0
 780 01f4 00D1     		bne	.LCB709
 781 01f6 78E2     		b	.L52	@long jump
 782              	.LCB709:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 783              		.loc 1 55 0
 784 01f8 002F     		cmp	r7, #0
 785 01fa 00D1     		bne	.LCB711
 786 01fc 8AE2     		b	.L65	@long jump
 787              	.LCB711:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 788              		.loc 1 55 0
 789 01fe 301C     		add	r0, r6, #0
 790 0200 7949     		ldr	r1, .L210+20
 791 0202 FFF7FEFF 		bl	__aeabi_fcmpgt
 792              	.LVL112:
 793 0206 0028     		cmp	r0, #0
 794 0208 07D1     		bne	.L56
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 795              		.loc 1 55 0
 796 020a 301C     		add	r0, r6, #0
 797 020c 7449     		ldr	r1, .L210+12
 798 020e FFF7FEFF 		bl	__aeabi_fcmpge
 799              	.LVL113:
 800 0212 7E24     		mov	r4, #126
 801 0214 0028     		cmp	r0, #0
 802 0216 00D1     		bne	.LCB724
 803 0218 0DE1     		b	.L64	@long jump
 804              	.LCB724:
 805              	.L56:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 806              		.loc 1 55 0
 807 021a 201C     		mov	r0, r4
 808 021c FFF7FEFF 		bl	LCDwriteVariable
 809              	.LVL114:
 810              	.LBB107:
 811              	.LBB108:
 152:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 812              		.loc 1 152 0 is_stmt 1
 813 0220 6C48     		ldr	r0, .L210
 814 0222 5421     		mov	r1, #84
 815 0224 FFF7FEFF 		bl	uart_putchar
 816              	.LVL115:
 153:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'R');
 817              		.loc 1 153 0
 818 0228 6A48     		ldr	r0, .L210
 819 022a 5221     		mov	r1, #82
 820 022c FFF7FEFF 		bl	uart_putchar
 821              	.LVL116:
 154:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 822              		.loc 1 154 0
 823 0230 6848     		ldr	r0, .L210
 824 0232 5421     		mov	r1, #84
 825 0234 FFF7FEFF 		bl	uart_putchar
 826              	.LVL117:
 827              	.LBE108:
 828              	.LBE107:
 829              	.LBB109:
 830              	.LBB110:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 831              		.loc 1 80 0
 832 0238 6648     		ldr	r0, .L210
 833 023a 5421     		mov	r1, #84
 834 023c FFF7FEFF 		bl	uart_putchar
 835              	.LVL118:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 836              		.loc 1 81 0
 837 0240 6448     		ldr	r0, .L210
 838 0242 5421     		mov	r1, #84
 839 0244 FFF7FEFF 		bl	uart_putchar
 840              	.LVL119:
 841              	.LBB111:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 842              		.loc 1 83 0
 843 0248 6248     		ldr	r0, .L210
 844 024a 5221     		mov	r1, #82
 845 024c FFF7FEFF 		bl	uart_putchar
 846              	.LVL120:
 847 0250 6048     		ldr	r0, .L210
 848 0252 4921     		mov	r1, #73
 849 0254 FFF7FEFF 		bl	uart_putchar
 850              	.LVL121:
 851 0258 5E48     		ldr	r0, .L210
 852 025a 4721     		mov	r1, #71
 853 025c FFF7FEFF 		bl	uart_putchar
 854              	.LVL122:
 855 0260 5C48     		ldr	r0, .L210
 856 0262 4821     		mov	r1, #72
 857 0264 FFF7FEFF 		bl	uart_putchar
 858              	.LVL123:
 859 0268 5A48     		ldr	r0, .L210
 860 026a 5421     		mov	r1, #84
 861 026c FFF7FEFF 		bl	uart_putchar
 862              	.LVL124:
 863 0270 5848     		ldr	r0, .L210
 864 0272 2021     		mov	r1, #32
 865 0274 FFF7FEFF 		bl	uart_putchar
 866              	.LVL125:
 867 0278 5648     		ldr	r0, .L210
 868 027a 5721     		mov	r1, #87
 869 027c FFF7FEFF 		bl	uart_putchar
 870              	.LVL126:
 871 0280 5448     		ldr	r0, .L210
 872 0282 4821     		mov	r1, #72
 873 0284 FFF7FEFF 		bl	uart_putchar
 874              	.LVL127:
 875 0288 5248     		ldr	r0, .L210
 876 028a 4521     		mov	r1, #69
 877 028c FFF7FEFF 		bl	uart_putchar
 878              	.LVL128:
 879 0290 5048     		ldr	r0, .L210
 880 0292 4521     		mov	r1, #69
 881 0294 FFF7FEFF 		bl	uart_putchar
 882              	.LVL129:
 883 0298 4E48     		ldr	r0, .L210
 884 029a 4C21     		mov	r1, #76
 885 029c FFF7FEFF 		bl	uart_putchar
 886              	.LVL130:
 887 02a0 4C48     		ldr	r0, .L210
 888 02a2 2021     		mov	r1, #32
 889 02a4 FFF7FEFF 		bl	uart_putchar
 890              	.LVL131:
 891 02a8 4A48     		ldr	r0, .L210
 892 02aa 5321     		mov	r1, #83
 893 02ac FFF7FEFF 		bl	uart_putchar
 894              	.LVL132:
 895 02b0 4848     		ldr	r0, .L210
 896 02b2 5021     		mov	r1, #80
 897 02b4 FFF7FEFF 		bl	uart_putchar
 898              	.LVL133:
 899 02b8 4648     		ldr	r0, .L210
 900 02ba 4521     		mov	r1, #69
 901 02bc FFF7FEFF 		bl	uart_putchar
 902              	.LVL134:
 903 02c0 4448     		ldr	r0, .L210
 904 02c2 4521     		mov	r1, #69
 905 02c4 FFF7FEFF 		bl	uart_putchar
 906              	.LVL135:
 907 02c8 4248     		ldr	r0, .L210
 908 02ca 4421     		mov	r1, #68
 909 02cc FFF7FEFF 		bl	uart_putchar
 910              	.LVL136:
 911              	.LBE111:
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 912              		.loc 1 85 0
 913 02d0 4048     		ldr	r0, .L210
 914 02d2 0021     		mov	r1, #0
 915 02d4 FFF7FEFF 		bl	uart_putchar
 916              	.LVL137:
 917              	.LBE110:
 918              	.LBE109:
 919              	.LBB112:
 920              	.LBB113:
 152:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 921              		.loc 1 152 0
 922 02d8 3E48     		ldr	r0, .L210
 923 02da 5421     		mov	r1, #84
 924 02dc FFF7FEFF 		bl	uart_putchar
 925              	.LVL138:
 153:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'R');
 926              		.loc 1 153 0
 927 02e0 3C48     		ldr	r0, .L210
 928 02e2 5221     		mov	r1, #82
 929 02e4 FFF7FEFF 		bl	uart_putchar
 930              	.LVL139:
 154:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 931              		.loc 1 154 0
 932 02e8 5421     		mov	r1, #84
 933 02ea 3A48     		ldr	r0, .L210
 934 02ec FFF7FEFF 		bl	uart_putchar
 935              	.LVL140:
 936              	.LBE113:
 937              	.LBE112:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 938              		.loc 1 59 0
 939 02f0 0020     		mov	r0, #0
 940 02f2 FFF7FEFF 		bl	getSpeed
 941              	.LVL141:
 942 02f6 8222     		mov	r2, #130
 943 02f8 D105     		lsl	r1, r2, #23
 944 02fa FFF7FEFF 		bl	__aeabi_fmul
 945              	.LVL142:
 946 02fe 3749     		ldr	r1, .L210+8
 947 0300 FFF7FEFF 		bl	__aeabi_fcmple
 948              	.LVL143:
 949 0304 0028     		cmp	r0, #0
 950 0306 00D1     		bne	.LCB878
 951 0308 A4E0     		b	.L69	@long jump
 952              	.LCB878:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 953              		.loc 1 59 0 is_stmt 0
 954 030a 0020     		mov	r0, #0
 955 030c 8225     		mov	r5, #130
 956 030e FFF7FEFF 		bl	getSpeed
 957              	.LVL144:
 958 0312 E905     		lsl	r1, r5, #23
 959 0314 FFF7FEFF 		bl	__aeabi_fmul
 960              	.LVL145:
 961 0318 0021     		mov	r1, #0
 962 031a FFF7FEFF 		bl	__aeabi_fcmpge
 963              	.LVL146:
 964 031e 0028     		cmp	r0, #0
 965 0320 00D1     		bne	.LCB890
 966 0322 97E0     		b	.L69	@long jump
 967              	.LCB890:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 968              		.loc 1 59 0
 969 0324 0020     		mov	r0, #0
 970 0326 FFF7FEFF 		bl	getSpeed
 971              	.LVL147:
 972 032a 8223     		mov	r3, #130
 973 032c D905     		lsl	r1, r3, #23
 974 032e FFF7FEFF 		bl	__aeabi_fmul
 975              	.LVL148:
 976 0332 2B49     		ldr	r1, .L210+12
 977 0334 FFF7FEFF 		bl	__aeabi_fcmpge
 978              	.LVL149:
 979 0338 0028     		cmp	r0, #0
 980 033a 00D0     		beq	.LCB902
 981 033c 7DE0     		b	.L72	@long jump
 982              	.LCB902:
 983              	.L75:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 984              		.loc 1 59 0
 985 033e 0020     		mov	r0, #0
 986 0340 8224     		mov	r4, #130
 987 0342 FFF7FEFF 		bl	getSpeed
 988              	.LVL150:
 989 0346 E105     		lsl	r1, r4, #23
 990 0348 FFF7FEFF 		bl	__aeabi_fmul
 991              	.LVL151:
 992 034c 0021     		mov	r1, #0
 993 034e FFF7FEFF 		bl	__aeabi_fcmpeq
 994              	.LVL152:
 995 0352 0028     		cmp	r0, #0
 996 0354 00D1     		bne	.LCB915
 997 0356 8AE0     		b	.L73	@long jump
 998              	.LCB915:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 999              		.loc 1 59 0
 1000 0358 0020     		mov	r0, #0
 1001 035a FFF7FEFF 		bl	getSpeed
 1002              	.LVL153:
 1003 035e 8222     		mov	r2, #130
 1004 0360 D105     		lsl	r1, r2, #23
 1005 0362 FFF7FEFF 		bl	__aeabi_fmul
 1006              	.LVL154:
 1007 0366 1D49     		ldr	r1, .L210+8
 1008 0368 FFF7FEFF 		bl	__aeabi_fcmple
 1009              	.LVL155:
 1010 036c 0028     		cmp	r0, #0
 1011 036e 25D0     		beq	.L91
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1012              		.loc 1 59 0
 1013 0370 0020     		mov	r0, #0
 1014 0372 8225     		mov	r5, #130
 1015 0374 FFF7FEFF 		bl	getSpeed
 1016              	.LVL156:
 1017 0378 E905     		lsl	r1, r5, #23
 1018 037a FFF7FEFF 		bl	__aeabi_fmul
 1019              	.LVL157:
 1020 037e 0021     		mov	r1, #0
 1021 0380 FFF7FEFF 		bl	__aeabi_fcmpge
 1022              	.LVL158:
 1023 0384 0028     		cmp	r0, #0
 1024 0386 19D0     		beq	.L91
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1025              		.loc 1 59 0
 1026 0388 0020     		mov	r0, #0
 1027 038a FFF7FEFF 		bl	getSpeed
 1028              	.LVL159:
 1029 038e 8223     		mov	r3, #130
 1030 0390 D905     		lsl	r1, r3, #23
 1031 0392 FFF7FEFF 		bl	__aeabi_fmul
 1032              	.LVL160:
 1033 0396 1249     		ldr	r1, .L210+12
 1034 0398 FFF7FEFF 		bl	__aeabi_fcmpge
 1035              	.LVL161:
 1036 039c 0028     		cmp	r0, #0
 1037 039e 00D1     		bne	.LCB951
 1038 03a0 84E2     		b	.L95	@long jump
 1039              	.LCB951:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1040              		.loc 1 59 0
 1041 03a2 0020     		mov	r0, #0
 1042 03a4 FFF7FEFF 		bl	getSpeed
 1043              	.LVL162:
 1044 03a8 8221     		mov	r1, #130
 1045 03aa C905     		lsl	r1, r1, #23
 1046 03ac FFF7FEFF 		bl	__aeabi_fmul
 1047              	.LVL163:
 1048 03b0 0C49     		ldr	r1, .L210+16
 1049 03b2 FFF7FEFF 		bl	__aeabi_fcmple
 1050              	.LVL164:
 1051 03b6 0028     		cmp	r0, #0
 1052 03b8 00D1     		bne	.LCB963
 1053 03ba 77E2     		b	.L95	@long jump
 1054              	.LCB963:
 1055              	.L91:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1056              		.loc 1 59 0
 1057 03bc 0020     		mov	r0, #0
 1058 03be 8227     		mov	r7, #130
 1059 03c0 FFF7FEFF 		bl	getSpeed
 1060              	.LVL165:
 1061 03c4 F905     		lsl	r1, r7, #23
 1062 03c6 FFF7FEFF 		bl	__aeabi_fmul
 1063              	.LVL166:
 1064 03ca 0749     		ldr	r1, .L210+20
 1065 03cc FFF7FEFF 		bl	__aeabi_fcmpgt
 1066              	.LVL167:
 1067 03d0 0CE0     		b	.L211
 1068              	.L212:
 1069 03d2 C046     		.align	2
 1070              	.L210:
 1071 03d4 00C00640 		.word	1074184192
 1072 03d8 00000000 		.word	targetSpeed
 1073 03dc 00807E43 		.word	1132363776
 1074 03e0 0000FF42 		.word	1124007936
 1075 03e4 00800043 		.word	1124106240
 1076 03e8 00007F43 		.word	1132396544
 1077              	.L211:
 1078 03ec 0028     		cmp	r0, #0
 1079 03ee 7DD1     		bne	.L90
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1080              		.loc 1 59 0
 1081 03f0 8226     		mov	r6, #130
 1082 03f2 FFF7FEFF 		bl	getSpeed
 1083              	.LVL168:
 1084 03f6 F105     		lsl	r1, r6, #23
 1085 03f8 FFF7FEFF 		bl	__aeabi_fmul
 1086              	.LVL169:
 1087 03fc C849     		ldr	r1, .L213
 1088 03fe FFF7FEFF 		bl	__aeabi_fcmpge
 1089              	.LVL170:
 1090 0402 0028     		cmp	r0, #0
 1091 0404 00D0     		beq	.LCB1001
 1092 0406 63E3     		b	.L206	@long jump
 1093              	.LCB1001:
 1094              	.L99:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1095              		.loc 1 59 0
 1096 0408 0020     		mov	r0, #0
 1097 040a 70E0     		b	.L84
 1098              	.LVL171:
 1099              	.L58:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1100              		.loc 1 55 0 is_stmt 1
 1101 040c 301C     		add	r0, r6, #0
 1102 040e C549     		ldr	r1, .L213+4
 1103 0410 FFF7FEFF 		bl	__aeabi_fcmpgt
 1104              	.LVL172:
 1105 0414 7F24     		mov	r4, #127
 1106 0416 0028     		cmp	r0, #0
 1107 0418 00D0     		beq	.LCB1017
 1108 041a FEE6     		b	.L56	@long jump
 1109              	.LCB1017:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1110              		.loc 1 55 0 is_stmt 0
 1111 041c 301C     		add	r0, r6, #0
 1112 041e C049     		ldr	r1, .L213
 1113 0420 FFF7FEFF 		bl	__aeabi_fcmpge
 1114              	.LVL173:
 1115 0424 0028     		cmp	r0, #0
 1116 0426 06D0     		beq	.L64
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1117              		.loc 1 55 0
 1118 0428 301C     		add	r0, r6, #0
 1119 042a BF49     		ldr	r1, .L213+8
 1120 042c FFF7FEFF 		bl	__aeabi_fcmple
 1121              	.LVL174:
 1122 0430 0028     		cmp	r0, #0
 1123 0432 00D0     		beq	.LCB1029
 1124 0434 F1E6     		b	.L56	@long jump
 1125              	.LCB1029:
 1126              	.L64:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1127              		.loc 1 55 0
 1128 0436 0024     		mov	r4, #0
 1129 0438 EFE6     		b	.L56
 1130              	.LVL175:
 1131              	.L72:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1132              		.loc 1 59 0 is_stmt 1
 1133 043a 0020     		mov	r0, #0
 1134 043c FFF7FEFF 		bl	getSpeed
 1135              	.LVL176:
 1136 0440 8221     		mov	r1, #130
 1137 0442 C905     		lsl	r1, r1, #23
 1138 0444 FFF7FEFF 		bl	__aeabi_fmul
 1139              	.LVL177:
 1140 0448 B749     		ldr	r1, .L213+8
 1141 044a FFF7FEFF 		bl	__aeabi_fcmple
 1142              	.LVL178:
 1143 044e 0028     		cmp	r0, #0
 1144 0450 00D1     		bne	.LCB1050
 1145 0452 74E7     		b	.L75	@long jump
 1146              	.LCB1050:
 1147              	.L69:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1148              		.loc 1 59 0 is_stmt 0
 1149 0454 0020     		mov	r0, #0
 1150 0456 8227     		mov	r7, #130
 1151 0458 FFF7FEFF 		bl	getSpeed
 1152              	.LVL179:
 1153 045c F905     		lsl	r1, r7, #23
 1154 045e FFF7FEFF 		bl	__aeabi_fmul
 1155              	.LVL180:
 1156 0462 B049     		ldr	r1, .L213+4
 1157 0464 FFF7FEFF 		bl	__aeabi_fcmpgt
 1158              	.LVL181:
 1159 0468 0028     		cmp	r0, #0
 1160 046a 00D1     		bne	.LCB1063
 1161 046c CCE1     		b	.L207	@long jump
 1162              	.LCB1063:
 1163              	.L73:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1164              		.loc 1 59 0
 1165 046e 0020     		mov	r0, #0
 1166 0470 8225     		mov	r5, #130
 1167 0472 FFF7FEFF 		bl	getSpeed
 1168              	.LVL182:
 1169 0476 E905     		lsl	r1, r5, #23
 1170 0478 FFF7FEFF 		bl	__aeabi_fmul
 1171              	.LVL183:
 1172 047c AB49     		ldr	r1, .L213+12
 1173 047e FFF7FEFF 		bl	__aeabi_fcmple
 1174              	.LVL184:
 1175 0482 0028     		cmp	r0, #0
 1176 0484 25D0     		beq	.L80
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1177              		.loc 1 59 0
 1178 0486 0020     		mov	r0, #0
 1179 0488 FFF7FEFF 		bl	getSpeed
 1180              	.LVL185:
 1181 048c 8223     		mov	r3, #130
 1182 048e D905     		lsl	r1, r3, #23
 1183 0490 FFF7FEFF 		bl	__aeabi_fmul
 1184              	.LVL186:
 1185 0494 0021     		mov	r1, #0
 1186 0496 FFF7FEFF 		bl	__aeabi_fcmpge
 1187              	.LVL187:
 1188 049a 0028     		cmp	r0, #0
 1189 049c 19D0     		beq	.L80
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1190              		.loc 1 59 0
 1191 049e 0020     		mov	r0, #0
 1192 04a0 FFF7FEFF 		bl	getSpeed
 1193              	.LVL188:
 1194 04a4 8221     		mov	r1, #130
 1195 04a6 C905     		lsl	r1, r1, #23
 1196 04a8 FFF7FEFF 		bl	__aeabi_fmul
 1197              	.LVL189:
 1198 04ac 9C49     		ldr	r1, .L213
 1199 04ae FFF7FEFF 		bl	__aeabi_fcmpge
 1200              	.LVL190:
 1201 04b2 0028     		cmp	r0, #0
 1202 04b4 00D1     		bne	.LCB1100
 1203 04b6 F9E1     		b	.L95	@long jump
 1204              	.LCB1100:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1205              		.loc 1 59 0
 1206 04b8 0020     		mov	r0, #0
 1207 04ba 8227     		mov	r7, #130
 1208 04bc FFF7FEFF 		bl	getSpeed
 1209              	.LVL191:
 1210 04c0 F905     		lsl	r1, r7, #23
 1211 04c2 FFF7FEFF 		bl	__aeabi_fmul
 1212              	.LVL192:
 1213 04c6 9849     		ldr	r1, .L213+8
 1214 04c8 FFF7FEFF 		bl	__aeabi_fcmple
 1215              	.LVL193:
 1216 04cc 0028     		cmp	r0, #0
 1217 04ce 00D1     		bne	.LCB1112
 1218 04d0 ECE1     		b	.L95	@long jump
 1219              	.LCB1112:
 1220              	.L80:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1221              		.loc 1 59 0
 1222 04d2 0020     		mov	r0, #0
 1223 04d4 8226     		mov	r6, #130
 1224 04d6 FFF7FEFF 		bl	getSpeed
 1225              	.LVL194:
 1226 04da F105     		lsl	r1, r6, #23
 1227 04dc FFF7FEFF 		bl	__aeabi_fmul
 1228              	.LVL195:
 1229 04e0 9049     		ldr	r1, .L213+4
 1230 04e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 1231              	.LVL196:
 1232 04e6 0028     		cmp	r0, #0
 1233 04e8 00D1     		bne	.LCB1125
 1234 04ea 9DE1     		b	.L192	@long jump
 1235              	.LCB1125:
 1236              	.L90:
 1237 04ec 7F20     		mov	r0, #127
 1238              	.L84:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1239              		.loc 1 59 0
 1240 04ee FFF7FEFF 		bl	LCDwriteVariable
 1241              	.LVL197:
 1242              	.LBB114:
 1243              	.LBB115:
 152:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1244              		.loc 1 152 0 is_stmt 1
 1245 04f2 8F48     		ldr	r0, .L213+16
 1246 04f4 5421     		mov	r1, #84
 1247 04f6 FFF7FEFF 		bl	uart_putchar
 1248              	.LVL198:
 153:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'R');
 1249              		.loc 1 153 0
 1250 04fa 8D48     		ldr	r0, .L213+16
 1251 04fc 5221     		mov	r1, #82
 1252 04fe FFF7FEFF 		bl	uart_putchar
 1253              	.LVL199:
 154:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1254              		.loc 1 154 0
 1255 0502 8B48     		ldr	r0, .L213+16
 1256 0504 5421     		mov	r1, #84
 1257 0506 FFF7FEFF 		bl	uart_putchar
 1258              	.LVL200:
 1259              	.LBE115:
 1260              	.LBE114:
 1261              	.LBB116:
 1262              	.LBB117:
  36:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1263              		.loc 1 36 0
 1264 050a 8948     		ldr	r0, .L213+16
 1265 050c 5421     		mov	r1, #84
 1266 050e FFF7FEFF 		bl	uart_putchar
 1267              	.LVL201:
  37:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'P');
 1268              		.loc 1 37 0
 1269 0512 8748     		ldr	r0, .L213+16
 1270 0514 5021     		mov	r1, #80
 1271 0516 FFF7FEFF 		bl	uart_putchar
 1272              	.LVL202:
  38:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, x);
 1273              		.loc 1 38 0
 1274 051a 8548     		ldr	r0, .L213+16
 1275 051c 0021     		mov	r1, #0
 1276 051e FFF7FEFF 		bl	uart_putchar
 1277              	.LVL203:
  39:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, y);
 1278              		.loc 1 39 0
 1279 0522 8348     		ldr	r0, .L213+16
 1280 0524 0621     		mov	r1, #6
 1281 0526 FFF7FEFF 		bl	uart_putchar
 1282              	.LVL204:
 1283              	.LBE117:
 1284              	.LBE116:
 1285              	.LBB118:
 1286              	.LBB119:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1287              		.loc 1 80 0
 1288 052a 8148     		ldr	r0, .L213+16
 1289 052c 5421     		mov	r1, #84
 1290 052e FFF7FEFF 		bl	uart_putchar
 1291              	.LVL205:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1292              		.loc 1 81 0
 1293 0532 7F48     		ldr	r0, .L213+16
 1294 0534 5421     		mov	r1, #84
 1295 0536 FFF7FEFF 		bl	uart_putchar
 1296              	.LVL206:
 1297              	.LBB120:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 1298              		.loc 1 83 0
 1299 053a 7D48     		ldr	r0, .L213+16
 1300 053c 4C21     		mov	r1, #76
 1301 053e FFF7FEFF 		bl	uart_putchar
 1302              	.LVL207:
 1303 0542 7B48     		ldr	r0, .L213+16
 1304 0544 4521     		mov	r1, #69
 1305 0546 FFF7FEFF 		bl	uart_putchar
 1306              	.LVL208:
 1307 054a 7948     		ldr	r0, .L213+16
 1308 054c 4621     		mov	r1, #70
 1309 054e FFF7FEFF 		bl	uart_putchar
 1310              	.LVL209:
 1311 0552 7748     		ldr	r0, .L213+16
 1312 0554 5421     		mov	r1, #84
 1313 0556 FFF7FEFF 		bl	uart_putchar
 1314              	.LVL210:
 1315 055a 7548     		ldr	r0, .L213+16
 1316 055c 2021     		mov	r1, #32
 1317 055e FFF7FEFF 		bl	uart_putchar
 1318              	.LVL211:
 1319 0562 7348     		ldr	r0, .L213+16
 1320 0564 5721     		mov	r1, #87
 1321 0566 FFF7FEFF 		bl	uart_putchar
 1322              	.LVL212:
 1323 056a 7148     		ldr	r0, .L213+16
 1324 056c 4821     		mov	r1, #72
 1325 056e FFF7FEFF 		bl	uart_putchar
 1326              	.LVL213:
 1327 0572 6F48     		ldr	r0, .L213+16
 1328 0574 4521     		mov	r1, #69
 1329 0576 FFF7FEFF 		bl	uart_putchar
 1330              	.LVL214:
 1331 057a 6D48     		ldr	r0, .L213+16
 1332 057c 4521     		mov	r1, #69
 1333 057e FFF7FEFF 		bl	uart_putchar
 1334              	.LVL215:
 1335 0582 6B48     		ldr	r0, .L213+16
 1336 0584 4C21     		mov	r1, #76
 1337 0586 FFF7FEFF 		bl	uart_putchar
 1338              	.LVL216:
 1339 058a 6948     		ldr	r0, .L213+16
 1340 058c 2021     		mov	r1, #32
 1341 058e FFF7FEFF 		bl	uart_putchar
 1342              	.LVL217:
 1343 0592 6748     		ldr	r0, .L213+16
 1344 0594 5321     		mov	r1, #83
 1345 0596 FFF7FEFF 		bl	uart_putchar
 1346              	.LVL218:
 1347 059a 6548     		ldr	r0, .L213+16
 1348 059c 5021     		mov	r1, #80
 1349 059e FFF7FEFF 		bl	uart_putchar
 1350              	.LVL219:
 1351 05a2 6348     		ldr	r0, .L213+16
 1352 05a4 4521     		mov	r1, #69
 1353 05a6 FFF7FEFF 		bl	uart_putchar
 1354              	.LVL220:
 1355 05aa 6148     		ldr	r0, .L213+16
 1356 05ac 4521     		mov	r1, #69
 1357 05ae FFF7FEFF 		bl	uart_putchar
 1358              	.LVL221:
 1359 05b2 5F48     		ldr	r0, .L213+16
 1360 05b4 4421     		mov	r1, #68
 1361 05b6 FFF7FEFF 		bl	uart_putchar
 1362              	.LVL222:
 1363              	.LBE120:
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 1364              		.loc 1 85 0
 1365 05ba 5D48     		ldr	r0, .L213+16
 1366 05bc 0021     		mov	r1, #0
 1367 05be FFF7FEFF 		bl	uart_putchar
 1368              	.LVL223:
 1369              	.LBE119:
 1370              	.LBE118:
 1371              	.LBB121:
 1372              	.LBB122:
 152:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1373              		.loc 1 152 0
 1374 05c2 5B48     		ldr	r0, .L213+16
 1375 05c4 5421     		mov	r1, #84
 1376 05c6 FFF7FEFF 		bl	uart_putchar
 1377              	.LVL224:
 153:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'R');
 1378              		.loc 1 153 0
 1379 05ca 5948     		ldr	r0, .L213+16
 1380 05cc 5221     		mov	r1, #82
 1381 05ce FFF7FEFF 		bl	uart_putchar
 1382              	.LVL225:
 154:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1383              		.loc 1 154 0
 1384 05d2 5421     		mov	r1, #84
 1385 05d4 5648     		ldr	r0, .L213+16
 1386 05d6 FFF7FEFF 		bl	uart_putchar
 1387              	.LVL226:
 1388              	.LBE122:
 1389              	.LBE121:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1390              		.loc 1 67 0
 1391 05da 0120     		mov	r0, #1
 1392 05dc FFF7FEFF 		bl	getSpeed
 1393              	.LVL227:
 1394 05e0 8223     		mov	r3, #130
 1395 05e2 D905     		lsl	r1, r3, #23
 1396 05e4 FFF7FEFF 		bl	__aeabi_fmul
 1397              	.LVL228:
 1398 05e8 5049     		ldr	r1, .L213+12
 1399 05ea FFF7FEFF 		bl	__aeabi_fcmple
 1400              	.LVL229:
 1401 05ee 0028     		cmp	r0, #0
 1402 05f0 00D1     		bne	.LCB1298
 1403 05f2 ACE0     		b	.L101	@long jump
 1404              	.LCB1298:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1405              		.loc 1 67 0 is_stmt 0
 1406 05f4 0120     		mov	r0, #1
 1407 05f6 FFF7FEFF 		bl	getSpeed
 1408              	.LVL230:
 1409 05fa 8221     		mov	r1, #130
 1410 05fc C905     		lsl	r1, r1, #23
 1411 05fe FFF7FEFF 		bl	__aeabi_fmul
 1412              	.LVL231:
 1413 0602 0021     		mov	r1, #0
 1414 0604 FFF7FEFF 		bl	__aeabi_fcmpge
 1415              	.LVL232:
 1416 0608 0028     		cmp	r0, #0
 1417 060a 00D1     		bne	.LCB1310
 1418 060c 9FE0     		b	.L101	@long jump
 1419              	.LCB1310:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1420              		.loc 1 67 0
 1421 060e 0120     		mov	r0, #1
 1422 0610 8227     		mov	r7, #130
 1423 0612 FFF7FEFF 		bl	getSpeed
 1424              	.LVL233:
 1425 0616 F905     		lsl	r1, r7, #23
 1426 0618 FFF7FEFF 		bl	__aeabi_fmul
 1427              	.LVL234:
 1428 061c 4049     		ldr	r1, .L213
 1429 061e FFF7FEFF 		bl	__aeabi_fcmpge
 1430              	.LVL235:
 1431 0622 0028     		cmp	r0, #0
 1432 0624 00D0     		beq	.LCB1322
 1433 0626 85E0     		b	.L104	@long jump
 1434              	.LCB1322:
 1435              	.L107:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1436              		.loc 1 67 0
 1437 0628 0120     		mov	r0, #1
 1438 062a 8225     		mov	r5, #130
 1439 062c FFF7FEFF 		bl	getSpeed
 1440              	.LVL236:
 1441 0630 E905     		lsl	r1, r5, #23
 1442 0632 FFF7FEFF 		bl	__aeabi_fmul
 1443              	.LVL237:
 1444 0636 0021     		mov	r1, #0
 1445 0638 FFF7FEFF 		bl	__aeabi_fcmpeq
 1446              	.LVL238:
 1447 063c 0028     		cmp	r0, #0
 1448 063e 00D1     		bne	.LCB1335
 1449 0640 91E0     		b	.L105	@long jump
 1450              	.LCB1335:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1451              		.loc 1 67 0
 1452 0642 0120     		mov	r0, #1
 1453 0644 FFF7FEFF 		bl	getSpeed
 1454              	.LVL239:
 1455 0648 8223     		mov	r3, #130
 1456 064a D905     		lsl	r1, r3, #23
 1457 064c FFF7FEFF 		bl	__aeabi_fmul
 1458              	.LVL240:
 1459 0650 3649     		ldr	r1, .L213+12
 1460 0652 FFF7FEFF 		bl	__aeabi_fcmple
 1461              	.LVL241:
 1462 0656 0028     		cmp	r0, #0
 1463 0658 25D0     		beq	.L123
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1464              		.loc 1 67 0
 1465 065a 0120     		mov	r0, #1
 1466 065c FFF7FEFF 		bl	getSpeed
 1467              	.LVL242:
 1468 0660 8221     		mov	r1, #130
 1469 0662 C905     		lsl	r1, r1, #23
 1470 0664 FFF7FEFF 		bl	__aeabi_fmul
 1471              	.LVL243:
 1472 0668 0021     		mov	r1, #0
 1473 066a FFF7FEFF 		bl	__aeabi_fcmpge
 1474              	.LVL244:
 1475 066e 0028     		cmp	r0, #0
 1476 0670 19D0     		beq	.L123
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1477              		.loc 1 67 0
 1478 0672 0120     		mov	r0, #1
 1479 0674 8227     		mov	r7, #130
 1480 0676 FFF7FEFF 		bl	getSpeed
 1481              	.LVL245:
 1482 067a F905     		lsl	r1, r7, #23
 1483 067c FFF7FEFF 		bl	__aeabi_fmul
 1484              	.LVL246:
 1485 0680 2749     		ldr	r1, .L213
 1486 0682 FFF7FEFF 		bl	__aeabi_fcmpge
 1487              	.LVL247:
 1488 0686 0028     		cmp	r0, #0
 1489 0688 00D1     		bne	.LCB1371
 1490 068a 04E1     		b	.L127	@long jump
 1491              	.LCB1371:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1492              		.loc 1 67 0
 1493 068c 0120     		mov	r0, #1
 1494 068e 8226     		mov	r6, #130
 1495 0690 FFF7FEFF 		bl	getSpeed
 1496              	.LVL248:
 1497 0694 F105     		lsl	r1, r6, #23
 1498 0696 FFF7FEFF 		bl	__aeabi_fmul
 1499              	.LVL249:
 1500 069a 2349     		ldr	r1, .L213+8
 1501 069c FFF7FEFF 		bl	__aeabi_fcmple
 1502              	.LVL250:
 1503 06a0 0028     		cmp	r0, #0
 1504 06a2 00D1     		bne	.LCB1383
 1505 06a4 F7E0     		b	.L127	@long jump
 1506              	.LCB1383:
 1507              	.L123:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1508              		.loc 1 67 0
 1509 06a6 0120     		mov	r0, #1
 1510 06a8 8224     		mov	r4, #130
 1511 06aa FFF7FEFF 		bl	getSpeed
 1512              	.LVL251:
 1513 06ae E105     		lsl	r1, r4, #23
 1514 06b0 FFF7FEFF 		bl	__aeabi_fmul
 1515              	.LVL252:
 1516 06b4 1B49     		ldr	r1, .L213+4
 1517 06b6 FFF7FEFF 		bl	__aeabi_fcmpgt
 1518              	.LVL253:
 1519 06ba 0028     		cmp	r0, #0
 1520 06bc 00D0     		beq	.LCB1396
 1521 06be 8FE0     		b	.L122	@long jump
 1522              	.LCB1396:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1523              		.loc 1 67 0
 1524 06c0 0120     		mov	r0, #1
 1525 06c2 FFF7FEFF 		bl	getSpeed
 1526              	.LVL254:
 1527 06c6 8222     		mov	r2, #130
 1528 06c8 D105     		lsl	r1, r2, #23
 1529 06ca FFF7FEFF 		bl	__aeabi_fmul
 1530              	.LVL255:
 1531 06ce 1449     		ldr	r1, .L213
 1532 06d0 FFF7FEFF 		bl	__aeabi_fcmpge
 1533              	.LVL256:
 1534 06d4 0028     		cmp	r0, #0
 1535 06d6 00D0     		beq	.LCB1408
 1536 06d8 D4E1     		b	.L208	@long jump
 1537              	.LCB1408:
 1538              	.L131:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1539              		.loc 1 67 0
 1540 06da 0020     		mov	r0, #0
 1541 06dc 81E0     		b	.L116
 1542              	.LVL257:
 1543              	.L189:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1544              		.loc 1 55 0 is_stmt 1
 1545 06de 301C     		add	r0, r6, #0
 1546 06e0 0021     		mov	r1, #0
 1547 06e2 FFF7FEFF 		bl	__aeabi_fcmpeq
 1548              	.LVL258:
 1549 06e6 0028     		cmp	r0, #0
 1550 06e8 14D1     		bne	.L65
 1551              	.L52:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1552              		.loc 1 55 0 is_stmt 0
 1553 06ea 301C     		add	r0, r6, #0
 1554 06ec 0021     		mov	r1, #0
 1555 06ee FFF7FEFF 		bl	__aeabi_fcmpge
 1556              	.LVL259:
 1557 06f2 0028     		cmp	r0, #0
 1558 06f4 00D1     		bne	.LCB1435
 1559 06f6 89E6     		b	.L58	@long jump
 1560              	.LCB1435:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1561              		.loc 1 55 0
 1562 06f8 301C     		add	r0, r6, #0
 1563 06fa 0949     		ldr	r1, .L213
 1564 06fc FFF7FEFF 		bl	__aeabi_fcmpge
 1565              	.LVL260:
 1566 0700 0028     		cmp	r0, #0
 1567 0702 07D0     		beq	.L65
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1568              		.loc 1 55 0
 1569 0704 301C     		add	r0, r6, #0
 1570 0706 0849     		ldr	r1, .L213+8
 1571 0708 FFF7FEFF 		bl	__aeabi_fcmple
 1572              	.LVL261:
 1573 070c 7F24     		mov	r4, #127
 1574 070e 0028     		cmp	r0, #0
 1575 0710 00D0     		beq	.LCB1448
 1576 0712 82E5     		b	.L56	@long jump
 1577              	.LCB1448:
 1578              	.L65:
  55:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1579              		.loc 1 55 0
 1580 0714 301C     		add	r0, r6, #0
 1581 0716 FFF7FEFF 		bl	__aeabi_f2iz
 1582              	.LVL262:
 1583 071a 44B2     		sxtb	r4, r0
 1584 071c 7DE5     		b	.L56
 1585              	.L214:
 1586 071e C046     		.align	2
 1587              	.L213:
 1588 0720 0000FF42 		.word	1124007936
 1589 0724 00007F43 		.word	1132396544
 1590 0728 00800043 		.word	1124106240
 1591 072c 00807E43 		.word	1132363776
 1592 0730 00C00640 		.word	1074184192
 1593              	.LVL263:
 1594              	.L104:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1595              		.loc 1 67 0 is_stmt 1
 1596 0734 0120     		mov	r0, #1
 1597 0736 8226     		mov	r6, #130
 1598 0738 FFF7FEFF 		bl	getSpeed
 1599              	.LVL264:
 1600 073c F105     		lsl	r1, r6, #23
 1601 073e FFF7FEFF 		bl	__aeabi_fmul
 1602              	.LVL265:
 1603 0742 D849     		ldr	r1, .L215
 1604 0744 FFF7FEFF 		bl	__aeabi_fcmple
 1605              	.LVL266:
 1606 0748 0028     		cmp	r0, #0
 1607 074a 00D1     		bne	.LCB1488
 1608 074c 6CE7     		b	.L107	@long jump
 1609              	.LCB1488:
 1610              	.L101:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1611              		.loc 1 67 0 is_stmt 0
 1612 074e 0120     		mov	r0, #1
 1613 0750 8224     		mov	r4, #130
 1614 0752 FFF7FEFF 		bl	getSpeed
 1615              	.LVL267:
 1616 0756 E105     		lsl	r1, r4, #23
 1617 0758 FFF7FEFF 		bl	__aeabi_fmul
 1618              	.LVL268:
 1619 075c D249     		ldr	r1, .L215+4
 1620 075e FFF7FEFF 		bl	__aeabi_fcmpgt
 1621              	.LVL269:
 1622 0762 0028     		cmp	r0, #0
 1623 0764 40D0     		beq	.L209
 1624              	.L105:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1625              		.loc 1 67 0
 1626 0766 0120     		mov	r0, #1
 1627 0768 FFF7FEFF 		bl	getSpeed
 1628              	.LVL270:
 1629 076c 8221     		mov	r1, #130
 1630 076e C905     		lsl	r1, r1, #23
 1631 0770 FFF7FEFF 		bl	__aeabi_fmul
 1632              	.LVL271:
 1633 0774 CD49     		ldr	r1, .L215+8
 1634 0776 FFF7FEFF 		bl	__aeabi_fcmple
 1635              	.LVL272:
 1636 077a 0028     		cmp	r0, #0
 1637 077c 24D0     		beq	.L112
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1638              		.loc 1 67 0
 1639 077e 0120     		mov	r0, #1
 1640 0780 8227     		mov	r7, #130
 1641 0782 FFF7FEFF 		bl	getSpeed
 1642              	.LVL273:
 1643 0786 F905     		lsl	r1, r7, #23
 1644 0788 FFF7FEFF 		bl	__aeabi_fmul
 1645              	.LVL274:
 1646 078c 0021     		mov	r1, #0
 1647 078e FFF7FEFF 		bl	__aeabi_fcmpge
 1648              	.LVL275:
 1649 0792 0028     		cmp	r0, #0
 1650 0794 18D0     		beq	.L112
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1651              		.loc 1 67 0
 1652 0796 0120     		mov	r0, #1
 1653 0798 8226     		mov	r6, #130
 1654 079a FFF7FEFF 		bl	getSpeed
 1655              	.LVL276:
 1656 079e F105     		lsl	r1, r6, #23
 1657 07a0 FFF7FEFF 		bl	__aeabi_fmul
 1658              	.LVL277:
 1659 07a4 C249     		ldr	r1, .L215+12
 1660 07a6 FFF7FEFF 		bl	__aeabi_fcmpge
 1661              	.LVL278:
 1662 07aa 0028     		cmp	r0, #0
 1663 07ac 00D1     		bne	.LCB1538
 1664 07ae 72E0     		b	.L127	@long jump
 1665              	.LCB1538:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1666              		.loc 1 67 0
 1667 07b0 0120     		mov	r0, #1
 1668 07b2 8224     		mov	r4, #130
 1669 07b4 FFF7FEFF 		bl	getSpeed
 1670              	.LVL279:
 1671 07b8 E105     		lsl	r1, r4, #23
 1672 07ba FFF7FEFF 		bl	__aeabi_fmul
 1673              	.LVL280:
 1674 07be B949     		ldr	r1, .L215
 1675 07c0 FFF7FEFF 		bl	__aeabi_fcmple
 1676              	.LVL281:
 1677 07c4 0028     		cmp	r0, #0
 1678 07c6 66D0     		beq	.L127
 1679              	.L112:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1680              		.loc 1 67 0
 1681 07c8 0120     		mov	r0, #1
 1682 07ca FFF7FEFF 		bl	getSpeed
 1683              	.LVL282:
 1684 07ce 8222     		mov	r2, #130
 1685 07d0 D105     		lsl	r1, r2, #23
 1686 07d2 FFF7FEFF 		bl	__aeabi_fmul
 1687              	.LVL283:
 1688 07d6 B449     		ldr	r1, .L215+4
 1689 07d8 FFF7FEFF 		bl	__aeabi_fcmpgt
 1690              	.LVL284:
 1691 07dc 0028     		cmp	r0, #0
 1692 07de 3FD0     		beq	.L194
 1693              	.L122:
 1694 07e0 7F20     		mov	r0, #127
 1695              	.L116:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1696              		.loc 1 67 0
 1697 07e2 FFF7FEFF 		bl	LCDwriteVariable
 1698              	.LVL285:
  74:../Sources/LCD.c **** }
 1699              		.loc 1 74 0 is_stmt 1
 1700              		@ sp needed for prologue
 1701 07e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1702              	.L209:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1703              		.loc 1 67 0
 1704 07e8 0120     		mov	r0, #1
 1705 07ea FFF7FEFF 		bl	getSpeed
 1706              	.LVL286:
 1707 07ee 8222     		mov	r2, #130
 1708 07f0 D105     		lsl	r1, r2, #23
 1709 07f2 FFF7FEFF 		bl	__aeabi_fmul
 1710              	.LVL287:
 1711 07f6 AE49     		ldr	r1, .L215+12
 1712 07f8 FFF7FEFF 		bl	__aeabi_fcmpge
 1713              	.LVL288:
 1714 07fc 0028     		cmp	r0, #0
 1715 07fe B2D0     		beq	.L105
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1716              		.loc 1 67 0 is_stmt 0
 1717 0800 0120     		mov	r0, #1
 1718 0802 FFF7FEFF 		bl	getSpeed
 1719              	.LVL289:
 1720 0806 AEE7     		b	.L105
 1721              	.LVL290:
 1722              	.L207:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1723              		.loc 1 59 0 is_stmt 1
 1724 0808 8226     		mov	r6, #130
 1725 080a FFF7FEFF 		bl	getSpeed
 1726              	.LVL291:
 1727 080e F105     		lsl	r1, r6, #23
 1728 0810 FFF7FEFF 		bl	__aeabi_fmul
 1729              	.LVL292:
 1730 0814 A649     		ldr	r1, .L215+12
 1731 0816 FFF7FEFF 		bl	__aeabi_fcmpge
 1732              	.LVL293:
 1733 081a 0028     		cmp	r0, #0
 1734 081c 00D1     		bne	.LCB1614
 1735 081e 26E6     		b	.L73	@long jump
 1736              	.LCB1614:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1737              		.loc 1 59 0 is_stmt 0
 1738 0820 0020     		mov	r0, #0
 1739 0822 FFF7FEFF 		bl	getSpeed
 1740              	.LVL294:
 1741 0826 22E6     		b	.L73
 1742              	.L192:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1743              		.loc 1 59 0
 1744 0828 0020     		mov	r0, #0
 1745 082a 8224     		mov	r4, #130
 1746 082c FFF7FEFF 		bl	getSpeed
 1747              	.LVL295:
 1748 0830 E105     		lsl	r1, r4, #23
 1749 0832 FFF7FEFF 		bl	__aeabi_fmul
 1750              	.LVL296:
 1751 0836 9E49     		ldr	r1, .L215+12
 1752 0838 FFF7FEFF 		bl	__aeabi_fcmpge
 1753              	.LVL297:
 1754 083c 0028     		cmp	r0, #0
 1755 083e 00D1     		bne	.LCB1633
 1756 0840 E2E5     		b	.L99	@long jump
 1757              	.LCB1633:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1758              		.loc 1 59 0
 1759 0842 0020     		mov	r0, #0
 1760 0844 FFF7FEFF 		bl	getSpeed
 1761              	.LVL298:
 1762 0848 8222     		mov	r2, #130
 1763 084a D105     		lsl	r1, r2, #23
 1764 084c FFF7FEFF 		bl	__aeabi_fmul
 1765              	.LVL299:
 1766 0850 9449     		ldr	r1, .L215
 1767 0852 FFF7FEFF 		bl	__aeabi_fcmple
 1768              	.LVL300:
 1769 0856 0028     		cmp	r0, #0
 1770 0858 00D0     		beq	.LCB1645
 1771 085a 47E6     		b	.L90	@long jump
 1772              	.LCB1645:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1773              		.loc 1 59 0
 1774 085c 0020     		mov	r0, #0
 1775 085e 46E6     		b	.L84
 1776              	.LVL301:
 1777              	.L194:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1778              		.loc 1 67 0 is_stmt 1
 1779 0860 0120     		mov	r0, #1
 1780 0862 8225     		mov	r5, #130
 1781 0864 FFF7FEFF 		bl	getSpeed
 1782              	.LVL302:
 1783 0868 E905     		lsl	r1, r5, #23
 1784 086a FFF7FEFF 		bl	__aeabi_fmul
 1785              	.LVL303:
 1786 086e 9049     		ldr	r1, .L215+12
 1787 0870 FFF7FEFF 		bl	__aeabi_fcmpge
 1788              	.LVL304:
 1789 0874 0028     		cmp	r0, #0
 1790 0876 00D1     		bne	.LCB1667
 1791 0878 2FE7     		b	.L131	@long jump
 1792              	.LCB1667:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1793              		.loc 1 67 0 is_stmt 0
 1794 087a 0120     		mov	r0, #1
 1795 087c FFF7FEFF 		bl	getSpeed
 1796              	.LVL305:
 1797 0880 8223     		mov	r3, #130
 1798 0882 D905     		lsl	r1, r3, #23
 1799 0884 FFF7FEFF 		bl	__aeabi_fmul
 1800              	.LVL306:
 1801 0888 8649     		ldr	r1, .L215
 1802 088a FFF7FEFF 		bl	__aeabi_fcmple
 1803              	.LVL307:
 1804 088e 0028     		cmp	r0, #0
 1805 0890 A6D1     		bne	.L122
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1806              		.loc 1 67 0
 1807 0892 0020     		mov	r0, #0
 1808 0894 A5E7     		b	.L116
 1809              	.L127:
 1810 0896 0120     		mov	r0, #1
 1811 0898 FFF7FEFF 		bl	getSpeed
 1812              	.LVL308:
 1813 089c 8221     		mov	r1, #130
 1814 089e C905     		lsl	r1, r1, #23
 1815 08a0 FFF7FEFF 		bl	__aeabi_fmul
 1816              	.LVL309:
 1817 08a4 FFF7FEFF 		bl	__aeabi_f2iz
 1818              	.LVL310:
 1819 08a8 40B2     		sxtb	r0, r0
 1820 08aa 9AE7     		b	.L116
 1821              	.LVL311:
 1822              	.L95:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1823              		.loc 1 59 0 is_stmt 1
 1824 08ac 0020     		mov	r0, #0
 1825 08ae 8225     		mov	r5, #130
 1826 08b0 FFF7FEFF 		bl	getSpeed
 1827              	.LVL312:
 1828 08b4 E905     		lsl	r1, r5, #23
 1829 08b6 FFF7FEFF 		bl	__aeabi_fmul
 1830              	.LVL313:
 1831 08ba FFF7FEFF 		bl	__aeabi_f2iz
 1832              	.LVL314:
 1833 08be 40B2     		sxtb	r0, r0
 1834 08c0 15E6     		b	.L84
 1835              	.LVL315:
 1836              	.L199:
 1837              	.LBB123:
 1838              	.LBB101:
 1839              	.LBB78:
 1840              	.LBB79:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1841              		.loc 1 80 0
 1842 08c2 7C48     		ldr	r0, .L215+16
 1843 08c4 5421     		mov	r1, #84
 1844 08c6 FFF7FEFF 		bl	uart_putchar
 1845              	.LVL316:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1846              		.loc 1 81 0
 1847 08ca 7A48     		ldr	r0, .L215+16
 1848 08cc 5421     		mov	r1, #84
 1849 08ce FFF7FEFF 		bl	uart_putchar
 1850              	.LVL317:
 1851              	.LBB80:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 1852              		.loc 1 83 0
 1853 08d2 7848     		ldr	r0, .L215+16
 1854 08d4 5321     		mov	r1, #83
 1855 08d6 FFF7FEFF 		bl	uart_putchar
 1856              	.LVL318:
 1857 08da 7648     		ldr	r0, .L215+16
 1858 08dc 5421     		mov	r1, #84
 1859 08de FFF7FEFF 		bl	uart_putchar
 1860              	.LVL319:
 1861 08e2 7448     		ldr	r0, .L215+16
 1862 08e4 4F21     		mov	r1, #79
 1863 08e6 FFF7FEFF 		bl	uart_putchar
 1864              	.LVL320:
 1865 08ea 7248     		ldr	r0, .L215+16
 1866 08ec 5021     		mov	r1, #80
 1867 08ee FFF7FEFF 		bl	uart_putchar
 1868              	.LVL321:
 1869 08f2 7048     		ldr	r0, .L215+16
 1870 08f4 4C21     		mov	r1, #76
 1871 08f6 FFF7FEFF 		bl	uart_putchar
 1872              	.LVL322:
 1873 08fa 6E48     		ldr	r0, .L215+16
 1874 08fc 4921     		mov	r1, #73
 1875 08fe FFF7FEFF 		bl	uart_putchar
 1876              	.LVL323:
 1877 0902 6C48     		ldr	r0, .L215+16
 1878 0904 4E21     		mov	r1, #78
 1879 0906 FFF7FEFF 		bl	uart_putchar
 1880              	.LVL324:
 1881 090a 6A48     		ldr	r0, .L215+16
 1882 090c 4521     		mov	r1, #69
 1883 090e FFF7FEFF 		bl	uart_putchar
 1884              	.LVL325:
 1885 0912 6848     		ldr	r0, .L215+16
 1886 0914 2021     		mov	r1, #32
 1887 0916 FFF7FEFF 		bl	uart_putchar
 1888              	.LVL326:
 1889 091a 6648     		ldr	r0, .L215+16
 1890 091c 4421     		mov	r1, #68
 1891 091e FFF7FEFF 		bl	uart_putchar
 1892              	.LVL327:
 1893 0922 6448     		ldr	r0, .L215+16
 1894 0924 4521     		mov	r1, #69
 1895 0926 FFF7FEFF 		bl	uart_putchar
 1896              	.LVL328:
 1897 092a 6248     		ldr	r0, .L215+16
 1898 092c 5421     		mov	r1, #84
 1899 092e FFF7FEFF 		bl	uart_putchar
 1900              	.LVL329:
 1901 0932 6048     		ldr	r0, .L215+16
 1902 0934 4521     		mov	r1, #69
 1903 0936 FFF7FEFF 		bl	uart_putchar
 1904              	.LVL330:
 1905 093a 5E48     		ldr	r0, .L215+16
 1906 093c 4321     		mov	r1, #67
 1907 093e FFF7FEFF 		bl	uart_putchar
 1908              	.LVL331:
 1909 0942 5C48     		ldr	r0, .L215+16
 1910 0944 5421     		mov	r1, #84
 1911 0946 FFF7FEFF 		bl	uart_putchar
 1912              	.LVL332:
 1913 094a 5A48     		ldr	r0, .L215+16
 1914 094c 4521     		mov	r1, #69
 1915 094e FFF7FEFF 		bl	uart_putchar
 1916              	.LVL333:
 1917 0952 5848     		ldr	r0, .L215+16
 1918 0954 4421     		mov	r1, #68
 1919 0956 FFF7FEFF 		bl	uart_putchar
 1920              	.LVL334:
 1921              	.L38:
 1922              	.LBE80:
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 1923              		.loc 1 85 0
 1924 095a 5648     		ldr	r0, .L215+16
 1925 095c 0021     		mov	r1, #0
 1926 095e FFF7FEFF 		bl	uart_putchar
 1927              	.LVL335:
 1928 0962 FFF7C1FB 		bl	.L36	@ far jump
 1929              	.L205:
 1930              	.LVL336:
 1931              	.LBE79:
 1932              	.LBE78:
 1933              	.LBB81:
 1934              	.LBB82:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1935              		.loc 1 80 0
 1936 0966 5348     		ldr	r0, .L215+16
 1937 0968 5421     		mov	r1, #84
 1938 096a FFF7FEFF 		bl	uart_putchar
 1939              	.LVL337:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1940              		.loc 1 81 0
 1941 096e 5148     		ldr	r0, .L215+16
 1942 0970 5421     		mov	r1, #84
 1943 0972 FFF7FEFF 		bl	uart_putchar
 1944              	.LVL338:
 1945 0976 504C     		ldr	r4, .L215+20
 1946              	.LVL339:
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
 1947              		.loc 1 42 0
 1948 0978 251C     		mov	r5, r4
 1949 097a 1435     		add	r5, r5, #20
 1950              	.LVL340:
 1951              	.L49:
 1952              	.LBB83:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 1953              		.loc 1 83 0
 1954 097c 2178     		ldrb	r1, [r4]
 1955 097e 4D48     		ldr	r0, .L215+16
 1956 0980 FFF7FEFF 		bl	uart_putchar
 1957              	.LVL341:
 1958 0984 6178     		ldrb	r1, [r4, #1]
 1959 0986 4B48     		ldr	r0, .L215+16
 1960 0988 0234     		add	r4, r4, #2
 1961 098a FFF7FEFF 		bl	uart_putchar
 1962              	.LVL342:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 1963              		.loc 1 82 0
 1964 098e AC42     		cmp	r4, r5
 1965 0990 F4D1     		bne	.L49
 1966              	.LVL343:
 1967              	.L44:
 1968              	.LBE83:
 1969              	.LBE82:
 1970              	.LBE81:
 1971              	.LBB84:
 1972              	.LBB85:
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 1973              		.loc 1 85 0
 1974 0992 4848     		ldr	r0, .L215+16
 1975 0994 0021     		mov	r1, #0
 1976 0996 FFF7FEFF 		bl	uart_putchar
 1977              	.LVL344:
 1978 099a FFF7BCFB 		bl	.L41	@ far jump
 1979              	.LVL345:
 1980              	.L200:
 1981              	.LBE85:
 1982              	.LBE84:
 1983              	.LBB88:
 1984              	.LBB89:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1985              		.loc 1 80 0
 1986 099e 4548     		ldr	r0, .L215+16
 1987 09a0 5421     		mov	r1, #84
 1988 09a2 FFF7FEFF 		bl	uart_putchar
 1989              	.LVL346:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 1990              		.loc 1 81 0
 1991 09a6 4348     		ldr	r0, .L215+16
 1992 09a8 5421     		mov	r1, #84
 1993 09aa FFF7FEFF 		bl	uart_putchar
 1994              	.LVL347:
 1995 09ae 434D     		ldr	r5, .L215+24
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
 1996              		.loc 1 42 0
 1997 09b0 2F1C     		mov	r7, r5
 1998 09b2 1437     		add	r7, r7, #20
 1999              	.LVL348:
 2000              	.L37:
 2001              	.LBB90:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2002              		.loc 1 83 0
 2003 09b4 2978     		ldrb	r1, [r5]
 2004 09b6 3F48     		ldr	r0, .L215+16
 2005 09b8 FFF7FEFF 		bl	uart_putchar
 2006              	.LVL349:
 2007 09bc 6978     		ldrb	r1, [r5, #1]
 2008 09be 3D48     		ldr	r0, .L215+16
 2009 09c0 0235     		add	r5, r5, #2
 2010 09c2 FFF7FEFF 		bl	uart_putchar
 2011              	.LVL350:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2012              		.loc 1 82 0
 2013 09c6 BD42     		cmp	r5, r7
 2014 09c8 F4D1     		bne	.L37
 2015 09ca C6E7     		b	.L38
 2016              	.LVL351:
 2017              	.L201:
 2018              	.LBE90:
 2019              	.LBE89:
 2020              	.LBE88:
 2021              	.LBB91:
 2022              	.LBB87:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2023              		.loc 1 80 0
 2024 09cc 3948     		ldr	r0, .L215+16
 2025 09ce 5421     		mov	r1, #84
 2026 09d0 FFF7FEFF 		bl	uart_putchar
 2027              	.LVL352:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2028              		.loc 1 81 0
 2029 09d4 3748     		ldr	r0, .L215+16
 2030 09d6 5421     		mov	r1, #84
 2031 09d8 FFF7FEFF 		bl	uart_putchar
 2032              	.LVL353:
 2033 09dc 384C     		ldr	r4, .L215+28
 2034              	.LVL354:
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
 2035              		.loc 1 42 0
 2036 09de 251C     		mov	r5, r4
 2037 09e0 1435     		add	r5, r5, #20
 2038              	.LVL355:
 2039              	.L40:
 2040              	.LBB86:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2041              		.loc 1 83 0
 2042 09e2 2178     		ldrb	r1, [r4]
 2043 09e4 3348     		ldr	r0, .L215+16
 2044 09e6 FFF7FEFF 		bl	uart_putchar
 2045              	.LVL356:
 2046 09ea 6178     		ldrb	r1, [r4, #1]
 2047 09ec 3148     		ldr	r0, .L215+16
 2048 09ee 0234     		add	r4, r4, #2
 2049 09f0 FFF7FEFF 		bl	uart_putchar
 2050              	.LVL357:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2051              		.loc 1 82 0
 2052 09f4 AC42     		cmp	r4, r5
 2053 09f6 F4D1     		bne	.L40
 2054 09f8 CBE7     		b	.L44
 2055              	.LVL358:
 2056              	.L202:
 2057              	.LBE86:
 2058              	.LBE87:
 2059              	.LBE91:
 2060              	.LBB92:
 2061              	.LBB93:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2062              		.loc 1 80 0
 2063 09fa 2E48     		ldr	r0, .L215+16
 2064 09fc 5421     		mov	r1, #84
 2065 09fe FFF7FEFF 		bl	uart_putchar
 2066              	.LVL359:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2067              		.loc 1 81 0
 2068 0a02 2C48     		ldr	r0, .L215+16
 2069 0a04 5421     		mov	r1, #84
 2070 0a06 FFF7FEFF 		bl	uart_putchar
 2071              	.LVL360:
 2072 0a0a 2E4F     		ldr	r7, .L215+32
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
 2073              		.loc 1 42 0
 2074 0a0c 3E1C     		mov	r6, r7
 2075 0a0e 1436     		add	r6, r6, #20
 2076              	.LVL361:
 2077              	.L43:
 2078              	.LBB94:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2079              		.loc 1 83 0
 2080 0a10 3978     		ldrb	r1, [r7]
 2081 0a12 2848     		ldr	r0, .L215+16
 2082 0a14 FFF7FEFF 		bl	uart_putchar
 2083              	.LVL362:
 2084 0a18 7978     		ldrb	r1, [r7, #1]
 2085 0a1a 2648     		ldr	r0, .L215+16
 2086 0a1c 0237     		add	r7, r7, #2
 2087 0a1e FFF7FEFF 		bl	uart_putchar
 2088              	.LVL363:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2089              		.loc 1 82 0
 2090 0a22 B742     		cmp	r7, r6
 2091 0a24 F4D1     		bne	.L43
 2092 0a26 B4E7     		b	.L44
 2093              	.LVL364:
 2094              	.L203:
 2095              	.LBE94:
 2096              	.LBE93:
 2097              	.LBE92:
 2098              	.LBB95:
 2099              	.LBB96:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2100              		.loc 1 80 0
 2101 0a28 2248     		ldr	r0, .L215+16
 2102 0a2a 5421     		mov	r1, #84
 2103 0a2c FFF7FEFF 		bl	uart_putchar
 2104              	.LVL365:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2105              		.loc 1 81 0
 2106 0a30 2048     		ldr	r0, .L215+16
 2107 0a32 5421     		mov	r1, #84
 2108 0a34 FFF7FEFF 		bl	uart_putchar
 2109              	.LVL366:
 2110 0a38 234C     		ldr	r4, .L215+36
 2111              	.LVL367:
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
 2112              		.loc 1 42 0
 2113 0a3a 251C     		mov	r5, r4
 2114 0a3c 1435     		add	r5, r5, #20
 2115              	.LVL368:
 2116              	.L46:
 2117              	.LBB97:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2118              		.loc 1 83 0
 2119 0a3e 2178     		ldrb	r1, [r4]
 2120 0a40 1C48     		ldr	r0, .L215+16
 2121 0a42 FFF7FEFF 		bl	uart_putchar
 2122              	.LVL369:
 2123 0a46 6178     		ldrb	r1, [r4, #1]
 2124 0a48 1A48     		ldr	r0, .L215+16
 2125 0a4a 0234     		add	r4, r4, #2
 2126 0a4c FFF7FEFF 		bl	uart_putchar
 2127              	.LVL370:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2128              		.loc 1 82 0
 2129 0a50 AC42     		cmp	r4, r5
 2130 0a52 F4D1     		bne	.L46
 2131 0a54 9DE7     		b	.L44
 2132              	.LVL371:
 2133              	.L204:
 2134              	.LBE97:
 2135              	.LBE96:
 2136              	.LBE95:
 2137              	.LBB98:
 2138              	.LBB99:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2139              		.loc 1 80 0
 2140 0a56 1748     		ldr	r0, .L215+16
 2141 0a58 5421     		mov	r1, #84
 2142 0a5a FFF7FEFF 		bl	uart_putchar
 2143              	.LVL372:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2144              		.loc 1 81 0
 2145 0a5e 1548     		ldr	r0, .L215+16
 2146 0a60 5421     		mov	r1, #84
 2147 0a62 FFF7FEFF 		bl	uart_putchar
 2148              	.LVL373:
 2149 0a66 194F     		ldr	r7, .L215+40
  42:../Sources/LCD.c **** void LCDfeedback(carState_s* carState){
 2150              		.loc 1 42 0
 2151 0a68 3E1C     		mov	r6, r7
 2152 0a6a 1436     		add	r6, r6, #20
 2153              	.LVL374:
 2154              	.L48:
 2155              	.LBB100:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2156              		.loc 1 83 0
 2157 0a6c 3978     		ldrb	r1, [r7]
 2158 0a6e 1148     		ldr	r0, .L215+16
 2159 0a70 FFF7FEFF 		bl	uart_putchar
 2160              	.LVL375:
 2161 0a74 7978     		ldrb	r1, [r7, #1]
 2162 0a76 0F48     		ldr	r0, .L215+16
 2163 0a78 0237     		add	r7, r7, #2
 2164 0a7a FFF7FEFF 		bl	uart_putchar
 2165              	.LVL376:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2166              		.loc 1 82 0
 2167 0a7e B742     		cmp	r7, r6
 2168 0a80 F4D1     		bne	.L48
 2169 0a82 86E7     		b	.L44
 2170              	.LVL377:
 2171              	.L208:
 2172              	.LBE100:
 2173              	.LBE99:
 2174              	.LBE98:
 2175              	.LBE101:
 2176              	.LBE123:
  67:../Sources/LCD.c **** 		LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2177              		.loc 1 67 0
 2178 0a84 0120     		mov	r0, #1
 2179 0a86 8225     		mov	r5, #130
 2180 0a88 FFF7FEFF 		bl	getSpeed
 2181              	.LVL378:
 2182 0a8c E905     		lsl	r1, r5, #23
 2183 0a8e FFF7FEFF 		bl	__aeabi_fmul
 2184              	.LVL379:
 2185 0a92 0449     		ldr	r1, .L215
 2186 0a94 FFF7FEFF 		bl	__aeabi_fcmple
 2187              	.LVL380:
 2188 0a98 031C     		mov	r3, r0
 2189 0a9a 7E20     		mov	r0, #126
 2190 0a9c 002B     		cmp	r3, #0
 2191 0a9e 00D1     		bne	.LCB2156
 2192 0aa0 1BE6     		b	.L131	@long jump
 2193              	.LCB2156:
 2194 0aa2 9EE6     		b	.L116
 2195              	.L216:
 2196              		.align	2
 2197              	.L215:
 2198 0aa4 00800043 		.word	1124106240
 2199 0aa8 00007F43 		.word	1132396544
 2200 0aac 00807E43 		.word	1132363776
 2201 0ab0 0000FF42 		.word	1124007936
 2202 0ab4 00C00640 		.word	1074184192
 2203 0ab8 78000000 		.word	.LC12
 2204 0abc 00000000 		.word	.LC2
 2205 0ac0 18000000 		.word	.LC4
 2206 0ac4 30000000 		.word	.LC6
 2207 0ac8 48000000 		.word	.LC8
 2208 0acc 60000000 		.word	.LC10
 2209              	.LVL381:
 2210              	.L206:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2211              		.loc 1 59 0
 2212 0ad0 0020     		mov	r0, #0
 2213 0ad2 8224     		mov	r4, #130
 2214 0ad4 FFF7FEFF 		bl	getSpeed
 2215              	.LVL382:
 2216 0ad8 E105     		lsl	r1, r4, #23
 2217 0ada FFF7FEFF 		bl	__aeabi_fmul
 2218              	.LVL383:
 2219 0ade 0549     		ldr	r1, .L217
 2220 0ae0 FFF7FEFF 		bl	__aeabi_fcmple
 2221              	.LVL384:
 2222 0ae4 021C     		mov	r2, r0
 2223 0ae6 7E20     		mov	r0, #126
 2224 0ae8 002A     		cmp	r2, #0
 2225 0aea 00D0     		beq	.LCB2195
 2226 0aec FFE4     		b	.L84	@long jump
 2227              	.LCB2195:
  59:../Sources/LCD.c **** 	LCDwriteVariable(FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2228              		.loc 1 59 0 is_stmt 0
 2229 0aee 0020     		mov	r0, #0
 2230 0af0 FDE4     		b	.L84
 2231              	.L218:
 2232 0af2 C046     		.align	2
 2233              	.L217:
 2234 0af4 00800043 		.word	1124106240
 2235              		.cfi_endproc
 2236              	.LFE2:
 2238              		.section	.text.LCDwriteState,"ax",%progbits
 2239              		.align	2
 2240              		.global	LCDwriteState
 2241              		.code	16
 2242              		.thumb_func
 2244              	LCDwriteState:
 2245              	.LFB5:
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 2246              		.loc 1 101 0 is_stmt 1
 2247              		.cfi_startproc
 2248              	.LVL385:
 2249 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2250              	.LCFI6:
 2251              		.cfi_def_cfa_offset 24
 2252              		.cfi_offset 3, -24
 2253              		.cfi_offset 4, -20
 2254              		.cfi_offset 5, -16
 2255              		.cfi_offset 6, -12
 2256              		.cfi_offset 7, -8
 2257              		.cfi_offset 14, -4
 103:../Sources/LCD.c **** 	if(carState->lineDetectionState == STOPLINE_DETECTED)
 2258              		.loc 1 103 0
 2259 0002 8378     		ldrb	r3, [r0, #2]
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 2260              		.loc 1 101 0
 2261 0004 041C     		mov	r4, r0
 103:../Sources/LCD.c **** 	if(carState->lineDetectionState == STOPLINE_DETECTED)
 2262              		.loc 1 103 0
 2263 0006 022B     		cmp	r3, #2
 2264 0008 15D0     		beq	.L247
 113:../Sources/LCD.c **** 			else if(carState->sMode == S_MODE_ON)
 2265              		.loc 1 113 0
 2266 000a 407A     		ldrb	r0, [r0, #9]
 2267              	.LVL386:
 2268 000c 0128     		cmp	r0, #1
 2269 000e 00D1     		bne	.LCB2227
 2270 0010 7DE0     		b	.L248	@long jump
 2271              	.LCB2227:
 2272              	.L221:
 117:../Sources/LCD.c **** 			if(carState->detectedType == DOUBLE_EDGE)
 2273              		.loc 1 117 0
 2274 0012 2179     		ldrb	r1, [r4, #4]
 2275 0014 0229     		cmp	r1, #2
 2276 0016 00D1     		bne	.LCB2231
 2277 0018 90E0     		b	.L249	@long jump
 2278              	.LCB2231:
 121:../Sources/LCD.c **** 			else if (carState->edge == LEFT_EDGE)
 2279              		.loc 1 121 0
 2280 001a 6279     		ldrb	r2, [r4, #5]
 2281 001c 012A     		cmp	r2, #1
 2282 001e 00D1     		bne	.LCB2234
 2283 0020 A3E0     		b	.L250	@long jump
 2284              	.LCB2234:
 125:../Sources/LCD.c **** 			else if (carState->edge == RIGHT_EDGE)
 2285              		.loc 1 125 0
 2286 0022 022A     		cmp	r2, #2
 2287 0024 00D1     		bne	.LCB2236
 2288 0026 B7E0     		b	.L251	@long jump
 2289              	.LCB2236:
 129:../Sources/LCD.c **** 			else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 2290              		.loc 1 129 0
 2291 0028 A678     		ldrb	r6, [r4, #2]
 2292 002a 012E     		cmp	r6, #1
 2293 002c 00D1     		bne	.LCB2239
 2294 002e CAE0     		b	.L252	@long jump
 2295              	.LCB2239:
 133:../Sources/LCD.c **** 			else if (carState->lineDetectionState == LINE_LOST)
 2296              		.loc 1 133 0
 2297 0030 032E     		cmp	r6, #3
 2298 0032 51D0     		beq	.L253
 2299              	.LVL387:
 2300              	.L219:
 137:../Sources/LCD.c **** }
 2301              		.loc 1 137 0
 2302              		@ sp needed for prologue
 2303 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2304              	.LVL388:
 2305              	.L247:
 2306              	.LBB145:
 2307              	.LBB146:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2308              		.loc 1 80 0
 2309 0036 6F48     		ldr	r0, .L254
 2310              	.LVL389:
 2311 0038 5421     		mov	r1, #84
 2312 003a FFF7FEFF 		bl	uart_putchar
 2313              	.LVL390:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2314              		.loc 1 81 0
 2315 003e 6D48     		ldr	r0, .L254
 2316 0040 5421     		mov	r1, #84
 2317 0042 FFF7FEFF 		bl	uart_putchar
 2318              	.LVL391:
 2319              	.LBB147:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2320              		.loc 1 83 0
 2321 0046 6B48     		ldr	r0, .L254
 2322 0048 5321     		mov	r1, #83
 2323 004a FFF7FEFF 		bl	uart_putchar
 2324              	.LVL392:
 2325 004e 6948     		ldr	r0, .L254
 2326 0050 5421     		mov	r1, #84
 2327 0052 FFF7FEFF 		bl	uart_putchar
 2328              	.LVL393:
 2329 0056 6748     		ldr	r0, .L254
 2330 0058 4F21     		mov	r1, #79
 2331 005a FFF7FEFF 		bl	uart_putchar
 2332              	.LVL394:
 2333 005e 6548     		ldr	r0, .L254
 2334 0060 5021     		mov	r1, #80
 2335 0062 FFF7FEFF 		bl	uart_putchar
 2336              	.LVL395:
 2337 0066 6348     		ldr	r0, .L254
 2338 0068 4C21     		mov	r1, #76
 2339 006a FFF7FEFF 		bl	uart_putchar
 2340              	.LVL396:
 2341 006e 6148     		ldr	r0, .L254
 2342 0070 4921     		mov	r1, #73
 2343 0072 FFF7FEFF 		bl	uart_putchar
 2344              	.LVL397:
 2345 0076 5F48     		ldr	r0, .L254
 2346 0078 4E21     		mov	r1, #78
 2347 007a FFF7FEFF 		bl	uart_putchar
 2348              	.LVL398:
 2349 007e 5D48     		ldr	r0, .L254
 2350 0080 4521     		mov	r1, #69
 2351 0082 FFF7FEFF 		bl	uart_putchar
 2352              	.LVL399:
 2353 0086 5B48     		ldr	r0, .L254
 2354 0088 2021     		mov	r1, #32
 2355 008a FFF7FEFF 		bl	uart_putchar
 2356              	.LVL400:
 2357 008e 5948     		ldr	r0, .L254
 2358 0090 4421     		mov	r1, #68
 2359 0092 FFF7FEFF 		bl	uart_putchar
 2360              	.LVL401:
 2361 0096 5748     		ldr	r0, .L254
 2362 0098 4521     		mov	r1, #69
 2363 009a FFF7FEFF 		bl	uart_putchar
 2364              	.LVL402:
 2365 009e 5548     		ldr	r0, .L254
 2366 00a0 5421     		mov	r1, #84
 2367 00a2 FFF7FEFF 		bl	uart_putchar
 2368              	.LVL403:
 2369 00a6 5348     		ldr	r0, .L254
 2370 00a8 4521     		mov	r1, #69
 2371 00aa FFF7FEFF 		bl	uart_putchar
 2372              	.LVL404:
 2373 00ae 5148     		ldr	r0, .L254
 2374 00b0 4321     		mov	r1, #67
 2375 00b2 FFF7FEFF 		bl	uart_putchar
 2376              	.LVL405:
 2377 00b6 4F48     		ldr	r0, .L254
 2378 00b8 5421     		mov	r1, #84
 2379 00ba FFF7FEFF 		bl	uart_putchar
 2380              	.LVL406:
 2381 00be 4D48     		ldr	r0, .L254
 2382 00c0 4521     		mov	r1, #69
 2383 00c2 FFF7FEFF 		bl	uart_putchar
 2384              	.LVL407:
 2385 00c6 4B48     		ldr	r0, .L254
 2386 00c8 4421     		mov	r1, #68
 2387 00ca FFF7FEFF 		bl	uart_putchar
 2388              	.LVL408:
 2389              	.L223:
 2390              	.LBE147:
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 2391              		.loc 1 85 0
 2392 00ce 4948     		ldr	r0, .L254
 2393 00d0 0021     		mov	r1, #0
 2394 00d2 FFF7FEFF 		bl	uart_putchar
 2395              	.LVL409:
 2396 00d6 9CE7     		b	.L221
 2397              	.L253:
 2398              	.LVL410:
 2399              	.LBE146:
 2400              	.LBE145:
 2401              	.LBB148:
 2402              	.LBB149:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2403              		.loc 1 80 0
 2404 00d8 4648     		ldr	r0, .L254
 2405 00da 5421     		mov	r1, #84
 2406 00dc FFF7FEFF 		bl	uart_putchar
 2407              	.LVL411:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2408              		.loc 1 81 0
 2409 00e0 4448     		ldr	r0, .L254
 2410 00e2 5421     		mov	r1, #84
 2411 00e4 FFF7FEFF 		bl	uart_putchar
 2412              	.LVL412:
 2413 00e8 434C     		ldr	r4, .L254+4
 2414              	.LVL413:
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 2415              		.loc 1 101 0
 2416 00ea 271C     		mov	r7, r4
 2417 00ec 1437     		add	r7, r7, #20
 2418              	.LVL414:
 2419              	.L234:
 2420              	.LBB150:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2421              		.loc 1 83 0
 2422 00ee 2178     		ldrb	r1, [r4]
 2423 00f0 4048     		ldr	r0, .L254
 2424 00f2 FFF7FEFF 		bl	uart_putchar
 2425              	.LVL415:
 2426 00f6 6178     		ldrb	r1, [r4, #1]
 2427 00f8 3E48     		ldr	r0, .L254
 2428 00fa 0234     		add	r4, r4, #2
 2429 00fc FFF7FEFF 		bl	uart_putchar
 2430              	.LVL416:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2431              		.loc 1 82 0
 2432 0100 BC42     		cmp	r4, r7
 2433 0102 F4D1     		bne	.L234
 2434              	.LVL417:
 2435              	.L229:
 2436              	.LBE150:
 2437              	.LBE149:
 2438              	.LBE148:
 2439              	.LBB151:
 2440              	.LBB152:
  85:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 0x00);
 2441              		.loc 1 85 0
 2442 0104 3B48     		ldr	r0, .L254
 2443 0106 0021     		mov	r1, #0
 2444 0108 FFF7FEFF 		bl	uart_putchar
 2445              	.LVL418:
 2446 010c 92E7     		b	.L219
 2447              	.LVL419:
 2448              	.L248:
 2449              	.LBE152:
 2450              	.LBE151:
 2451              	.LBB155:
 2452              	.LBB156:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2453              		.loc 1 80 0
 2454 010e 3948     		ldr	r0, .L254
 2455 0110 5421     		mov	r1, #84
 2456 0112 FFF7FEFF 		bl	uart_putchar
 2457              	.LVL420:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2458              		.loc 1 81 0
 2459 0116 3748     		ldr	r0, .L254
 2460 0118 5421     		mov	r1, #84
 2461 011a FFF7FEFF 		bl	uart_putchar
 2462              	.LVL421:
 2463 011e 374D     		ldr	r5, .L254+8
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 2464              		.loc 1 101 0
 2465 0120 2F1C     		mov	r7, r5
 2466 0122 1437     		add	r7, r7, #20
 2467              	.LVL422:
 2468              	.L222:
 2469              	.LBB157:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2470              		.loc 1 83 0
 2471 0124 2978     		ldrb	r1, [r5]
 2472 0126 3348     		ldr	r0, .L254
 2473 0128 FFF7FEFF 		bl	uart_putchar
 2474              	.LVL423:
 2475 012c 6978     		ldrb	r1, [r5, #1]
 2476 012e 3148     		ldr	r0, .L254
 2477 0130 0235     		add	r5, r5, #2
 2478 0132 FFF7FEFF 		bl	uart_putchar
 2479              	.LVL424:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2480              		.loc 1 82 0
 2481 0136 BD42     		cmp	r5, r7
 2482 0138 F4D1     		bne	.L222
 2483 013a C8E7     		b	.L223
 2484              	.LVL425:
 2485              	.L249:
 2486              	.LBE157:
 2487              	.LBE156:
 2488              	.LBE155:
 2489              	.LBB158:
 2490              	.LBB154:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2491              		.loc 1 80 0
 2492 013c 2D48     		ldr	r0, .L254
 2493 013e 5421     		mov	r1, #84
 2494 0140 FFF7FEFF 		bl	uart_putchar
 2495              	.LVL426:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2496              		.loc 1 81 0
 2497 0144 2B48     		ldr	r0, .L254
 2498 0146 5421     		mov	r1, #84
 2499 0148 FFF7FEFF 		bl	uart_putchar
 2500              	.LVL427:
 2501 014c 2C4C     		ldr	r4, .L254+12
 2502              	.LVL428:
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 2503              		.loc 1 101 0
 2504 014e 271C     		mov	r7, r4
 2505 0150 1437     		add	r7, r7, #20
 2506              	.LVL429:
 2507              	.L225:
 2508              	.LBB153:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2509              		.loc 1 83 0
 2510 0152 2178     		ldrb	r1, [r4]
 2511 0154 2748     		ldr	r0, .L254
 2512 0156 FFF7FEFF 		bl	uart_putchar
 2513              	.LVL430:
 2514 015a 6178     		ldrb	r1, [r4, #1]
 2515 015c 2548     		ldr	r0, .L254
 2516 015e 0234     		add	r4, r4, #2
 2517 0160 FFF7FEFF 		bl	uart_putchar
 2518              	.LVL431:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2519              		.loc 1 82 0
 2520 0164 BC42     		cmp	r4, r7
 2521 0166 F4D1     		bne	.L225
 2522 0168 CCE7     		b	.L229
 2523              	.LVL432:
 2524              	.L250:
 2525              	.LBE153:
 2526              	.LBE154:
 2527              	.LBE158:
 2528              	.LBB159:
 2529              	.LBB160:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2530              		.loc 1 80 0
 2531 016a 2248     		ldr	r0, .L254
 2532 016c 5421     		mov	r1, #84
 2533 016e FFF7FEFF 		bl	uart_putchar
 2534              	.LVL433:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2535              		.loc 1 81 0
 2536 0172 2048     		ldr	r0, .L254
 2537 0174 5421     		mov	r1, #84
 2538 0176 FFF7FEFF 		bl	uart_putchar
 2539              	.LVL434:
 2540 017a 224F     		ldr	r7, .L254+16
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 2541              		.loc 1 101 0
 2542 017c 3E1C     		mov	r6, r7
 2543 017e 1436     		add	r6, r6, #20
 2544              	.LVL435:
 2545              	.L228:
 2546              	.LBB161:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2547              		.loc 1 83 0
 2548 0180 3978     		ldrb	r1, [r7]
 2549 0182 1C48     		ldr	r0, .L254
 2550 0184 FFF7FEFF 		bl	uart_putchar
 2551              	.LVL436:
 2552 0188 7978     		ldrb	r1, [r7, #1]
 2553 018a 1A48     		ldr	r0, .L254
 2554 018c 0237     		add	r7, r7, #2
 2555 018e FFF7FEFF 		bl	uart_putchar
 2556              	.LVL437:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2557              		.loc 1 82 0
 2558 0192 B742     		cmp	r7, r6
 2559 0194 F4D1     		bne	.L228
 2560 0196 B5E7     		b	.L229
 2561              	.LVL438:
 2562              	.L251:
 2563              	.LBE161:
 2564              	.LBE160:
 2565              	.LBE159:
 2566              	.LBB162:
 2567              	.LBB163:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2568              		.loc 1 80 0
 2569 0198 1648     		ldr	r0, .L254
 2570 019a 5421     		mov	r1, #84
 2571 019c FFF7FEFF 		bl	uart_putchar
 2572              	.LVL439:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2573              		.loc 1 81 0
 2574 01a0 1448     		ldr	r0, .L254
 2575 01a2 5421     		mov	r1, #84
 2576 01a4 FFF7FEFF 		bl	uart_putchar
 2577              	.LVL440:
 2578 01a8 174F     		ldr	r7, .L254+20
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 2579              		.loc 1 101 0
 2580 01aa 3C1C     		mov	r4, r7
 2581              	.LVL441:
 2582 01ac 1434     		add	r4, r4, #20
 2583              	.LVL442:
 2584              	.L231:
 2585              	.LBB164:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2586              		.loc 1 83 0
 2587 01ae 3978     		ldrb	r1, [r7]
 2588 01b0 1048     		ldr	r0, .L254
 2589 01b2 FFF7FEFF 		bl	uart_putchar
 2590              	.LVL443:
 2591 01b6 7978     		ldrb	r1, [r7, #1]
 2592 01b8 0E48     		ldr	r0, .L254
 2593 01ba 0237     		add	r7, r7, #2
 2594 01bc FFF7FEFF 		bl	uart_putchar
 2595              	.LVL444:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2596              		.loc 1 82 0
 2597 01c0 A742     		cmp	r7, r4
 2598 01c2 F4D1     		bne	.L231
 2599 01c4 9EE7     		b	.L229
 2600              	.LVL445:
 2601              	.L252:
 2602              	.LBE164:
 2603              	.LBE163:
 2604              	.LBE162:
 2605              	.LBB165:
 2606              	.LBB166:
  80:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2607              		.loc 1 80 0
 2608 01c6 0B48     		ldr	r0, .L254
 2609 01c8 5421     		mov	r1, #84
 2610 01ca FFF7FEFF 		bl	uart_putchar
 2611              	.LVL446:
  81:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2612              		.loc 1 81 0
 2613 01ce 0948     		ldr	r0, .L254
 2614 01d0 5421     		mov	r1, #84
 2615 01d2 FFF7FEFF 		bl	uart_putchar
 2616              	.LVL447:
 2617 01d6 0D4C     		ldr	r4, .L254+24
 2618              	.LVL448:
 101:../Sources/LCD.c **** void LCDwriteState(carState_s* carState){
 2619              		.loc 1 101 0
 2620 01d8 261C     		mov	r6, r4
 2621 01da 1436     		add	r6, r6, #20
 2622              	.LVL449:
 2623              	.L233:
 2624              	.LBB167:
  83:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, string[i]);	
 2625              		.loc 1 83 0
 2626 01dc 2178     		ldrb	r1, [r4]
 2627 01de 0548     		ldr	r0, .L254
 2628 01e0 FFF7FEFF 		bl	uart_putchar
 2629              	.LVL450:
 2630 01e4 6178     		ldrb	r1, [r4, #1]
 2631 01e6 0348     		ldr	r0, .L254
 2632 01e8 0234     		add	r4, r4, #2
 2633 01ea FFF7FEFF 		bl	uart_putchar
 2634              	.LVL451:
  82:../Sources/LCD.c **** 	for(int i=0;i<string_length;i++){
 2635              		.loc 1 82 0
 2636 01ee B442     		cmp	r4, r6
 2637 01f0 F4D1     		bne	.L233
 2638 01f2 87E7     		b	.L229
 2639              	.L255:
 2640              		.align	2
 2641              	.L254:
 2642 01f4 00C00640 		.word	1074184192
 2643 01f8 78000000 		.word	.LC12
 2644 01fc 00000000 		.word	.LC2
 2645 0200 18000000 		.word	.LC4
 2646 0204 30000000 		.word	.LC6
 2647 0208 48000000 		.word	.LC8
 2648 020c 60000000 		.word	.LC10
 2649              	.LBE167:
 2650              	.LBE166:
 2651              	.LBE165:
 2652              		.cfi_endproc
 2653              	.LFE5:
 2655              		.section	.text.LCDclear,"ax",%progbits
 2656              		.align	2
 2657              		.global	LCDclear
 2658              		.code	16
 2659              		.thumb_func
 2661              	LCDclear:
 2662              	.LFB6:
 139:../Sources/LCD.c **** void LCDclear(){
 2663              		.loc 1 139 0
 2664              		.cfi_startproc
 2665 0000 10B5     		push	{r4, lr}
 2666              	.LCFI7:
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 4, -8
 2669              		.cfi_offset 14, -4
 141:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'C');
 2670              		.loc 1 141 0
 2671 0002 0D4C     		ldr	r4, .L257
 2672 0004 4321     		mov	r1, #67
 2673 0006 201C     		mov	r0, r4
 2674 0008 FFF7FEFF 		bl	uart_putchar
 2675              	.LVL452:
 142:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'L');
 2676              		.loc 1 142 0
 2677 000c 201C     		mov	r0, r4
 2678 000e 4C21     		mov	r1, #76
 2679 0010 FFF7FEFF 		bl	uart_putchar
 2680              	.LVL453:
 143:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2681              		.loc 1 143 0
 2682 0014 201C     		mov	r0, r4
 2683 0016 5421     		mov	r1, #84
 2684 0018 FFF7FEFF 		bl	uart_putchar
 2685              	.LVL454:
 144:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 'P');
 2686              		.loc 1 144 0
 2687 001c 201C     		mov	r0, r4
 2688 001e 5021     		mov	r1, #80
 2689 0020 FFF7FEFF 		bl	uart_putchar
 2690              	.LVL455:
 145:../Sources/LCD.c **** 		uart_putchar(UART2_BASE_PTR, 0);
 2691              		.loc 1 145 0
 2692 0024 201C     		mov	r0, r4
 2693 0026 0021     		mov	r1, #0
 2694 0028 FFF7FEFF 		bl	uart_putchar
 2695              	.LVL456:
 146:../Sources/LCD.c **** 			uart_putchar(UART2_BASE_PTR, 0);
 2696              		.loc 1 146 0
 2697 002c 201C     		mov	r0, r4
 2698 002e 0021     		mov	r1, #0
 2699 0030 FFF7FEFF 		bl	uart_putchar
 2700              	.LVL457:
 148:../Sources/LCD.c **** }
 2701              		.loc 1 148 0
 2702              		@ sp needed for prologue
 2703 0034 10BD     		pop	{r4, pc}
 2704              	.L258:
 2705 0036 C046     		.align	2
 2706              	.L257:
 2707 0038 00C00640 		.word	1074184192
 2708              		.cfi_endproc
 2709              	.LFE6:
 2711              		.section	.text.LCDreturn,"ax",%progbits
 2712              		.align	2
 2713              		.global	LCDreturn
 2714              		.code	16
 2715              		.thumb_func
 2717              	LCDreturn:
 2718              	.LFB7:
 150:../Sources/LCD.c **** void LCDreturn(){
 2719              		.loc 1 150 0
 2720              		.cfi_startproc
 2721 0000 10B5     		push	{r4, lr}
 2722              	.LCFI8:
 2723              		.cfi_def_cfa_offset 8
 2724              		.cfi_offset 4, -8
 2725              		.cfi_offset 14, -4
 152:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2726              		.loc 1 152 0
 2727 0002 074C     		ldr	r4, .L260
 2728 0004 5421     		mov	r1, #84
 2729 0006 201C     		mov	r0, r4
 2730 0008 FFF7FEFF 		bl	uart_putchar
 2731              	.LVL458:
 153:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'R');
 2732              		.loc 1 153 0
 2733 000c 201C     		mov	r0, r4
 2734 000e 5221     		mov	r1, #82
 2735 0010 FFF7FEFF 		bl	uart_putchar
 2736              	.LVL459:
 154:../Sources/LCD.c **** 	uart_putchar(UART2_BASE_PTR, 'T');
 2737              		.loc 1 154 0
 2738 0014 201C     		mov	r0, r4
 2739 0016 5421     		mov	r1, #84
 2740 0018 FFF7FEFF 		bl	uart_putchar
 2741              	.LVL460:
 155:../Sources/LCD.c **** }
 2742              		.loc 1 155 0
 2743              		@ sp needed for prologue
 2744 001c 10BD     		pop	{r4, pc}
 2745              	.L261:
 2746 001e C046     		.align	2
 2747              	.L260:
 2748 0020 00C00640 		.word	1074184192
 2749              		.cfi_endproc
 2750              	.LFE7:
 2752              		.section	.text.itoa,"ax",%progbits
 2753              		.align	2
 2754              		.global	itoa
 2755              		.code	16
 2756              		.thumb_func
 2758              	itoa:
 2759              	.LFB8:
 159:../Sources/LCD.c **** {
 2760              		.loc 1 159 0
 2761              		.cfi_startproc
 2762              	.LVL461:
 2763 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2764              	.LCFI9:
 2765              		.cfi_def_cfa_offset 20
 2766              		.cfi_offset 4, -20
 2767              		.cfi_offset 5, -16
 2768              		.cfi_offset 6, -12
 2769              		.cfi_offset 7, -8
 2770              		.cfi_offset 14, -4
 2771 0002 C217     		asr	r2, r0, #31
 2772 0004 4746     		mov	r7, r8
 2773 0006 8518     		add	r5, r0, r2
 2774 0008 80B4     		push	{r7}
 2775              	.LCFI10:
 2776              		.cfi_def_cfa_offset 24
 2777              		.cfi_offset 8, -24
 159:../Sources/LCD.c **** {
 2778              		.loc 1 159 0
 2779 000a 8046     		mov	r8, r0
 2780 000c 0C1C     		mov	r4, r1
 2781 000e 5540     		eor	r5, r2
 2782 0010 0026     		mov	r6, #0
 2783 0012 00E0     		b	.L263
 2784              	.LVL462:
 2785              	.L267:
 166:../Sources/LCD.c ****         s[i++] = n % 10 + '0';   /* get next digit */
 2786              		.loc 1 166 0
 2787 0014 3E1C     		mov	r6, r7
 2788              	.LVL463:
 2789              	.L263:
 166:../Sources/LCD.c ****         s[i++] = n % 10 + '0';   /* get next digit */
 2790              		.loc 1 166 0 is_stmt 0
 2791 0016 281C     		mov	r0, r5
 2792 0018 0A21     		mov	r1, #10
 2793 001a FFF7FEFF 		bl	__aeabi_idivmod
 2794              	.LVL464:
 2795 001e 3031     		add	r1, r1, #48
 2796 0020 A155     		strb	r1, [r4, r6]
 167:../Sources/LCD.c ****     } while ((n /= 10) > 0);     /* delete it */
 2797              		.loc 1 167 0 is_stmt 1
 2798 0022 281C     		mov	r0, r5
 2799 0024 0A21     		mov	r1, #10
 2800 0026 FFF7FEFF 		bl	__aeabi_idiv
 2801              	.LVL465:
 166:../Sources/LCD.c ****         s[i++] = n % 10 + '0';   /* get next digit */
 2802              		.loc 1 166 0
 2803 002a 771C     		add	r7, r6, #1
 2804              	.LVL466:
 167:../Sources/LCD.c ****     } while ((n /= 10) > 0);     /* delete it */
 2805              		.loc 1 167 0
 2806 002c 051E     		sub	r5, r0, #0
 2807              	.LVL467:
 2808 002e F1DC     		bgt	.L267
 168:../Sources/LCD.c ****     if (sign < 0)
 2809              		.loc 1 168 0
 2810 0030 4346     		mov	r3, r8
 2811 0032 002B     		cmp	r3, #0
 2812 0034 02DA     		bge	.L264
 2813              	.LVL468:
 169:../Sources/LCD.c ****         s[i++] = '-';
 2814              		.loc 1 169 0
 2815 0036 2D21     		mov	r1, #45
 2816 0038 E155     		strb	r1, [r4, r7]
 2817 003a B71C     		add	r7, r6, #2
 2818              	.LVL469:
 2819              	.L264:
 170:../Sources/LCD.c ****     s[i] = '\0';
 2820              		.loc 1 170 0
 2821 003c 0026     		mov	r6, #0
 2822 003e E655     		strb	r6, [r4, r7]
 2823              	.LVL470:
 2824              	.LBB170:
 2825              	.LBB171:
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 2826              		.loc 1 180 0
 2827 0040 201C     		mov	r0, r4
 2828              	.LVL471:
 2829 0042 FFF7FEFF 		bl	strlen
 2830              	.LVL472:
 2831 0046 451E     		sub	r5, r0, #1
 2832              	.LVL473:
 2833 0048 0022     		mov	r2, #0
 2834 004a 002D     		cmp	r5, #0
 2835 004c 07DD     		ble	.L262
 2836              	.LVL474:
 2837              	.L269:
 181:../Sources/LCD.c ****         c = s[i];
 2838              		.loc 1 181 0
 2839 004e A35C     		ldrb	r3, [r4, r2]
 2840              	.LVL475:
 182:../Sources/LCD.c ****         s[i] = s[j];
 2841              		.loc 1 182 0
 2842 0050 605D     		ldrb	r0, [r4, r5]
 2843 0052 A054     		strb	r0, [r4, r2]
 2844              		.loc 1 183 0
 2845 0054 6355     		strb	r3, [r4, r5]
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 2846              		.loc 1 180 0
 2847 0056 0132     		add	r2, r2, #1
 2848              	.LVL476:
 2849 0058 013D     		sub	r5, r5, #1
 2850              	.LVL477:
 2851 005a AA42     		cmp	r2, r5
 2852 005c F7DB     		blt	.L269
 2853              	.LVL478:
 2854              	.L262:
 2855              	.LBE171:
 2856              	.LBE170:
 172:../Sources/LCD.c **** }
 2857              		.loc 1 172 0
 2858              		@ sp needed for prologue
 2859              	.LVL479:
 2860              	.LVL480:
 2861              	.LVL481:
 2862              	.LVL482:
 2863 005e 04BC     		pop	{r2}
 2864 0060 9046     		mov	r8, r2
 2865 0062 F0BD     		pop	{r4, r5, r6, r7, pc}
 2866              		.cfi_endproc
 2867              	.LFE8:
 2869              		.section	.text.reverse,"ax",%progbits
 2870              		.align	2
 2871              		.global	reverse
 2872              		.code	16
 2873              		.thumb_func
 2875              	reverse:
 2876              	.LFB9:
 176:../Sources/LCD.c **** {
 2877              		.loc 1 176 0
 2878              		.cfi_startproc
 2879              	.LVL483:
 2880 0000 10B5     		push	{r4, lr}
 2881              	.LCFI11:
 2882              		.cfi_def_cfa_offset 8
 2883              		.cfi_offset 4, -8
 2884              		.cfi_offset 14, -4
 176:../Sources/LCD.c **** {
 2885              		.loc 1 176 0
 2886 0002 041C     		mov	r4, r0
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 2887              		.loc 1 180 0
 2888 0004 FFF7FEFF 		bl	strlen
 2889              	.LVL484:
 2890 0008 431E     		sub	r3, r0, #1
 2891              	.LVL485:
 2892 000a 0022     		mov	r2, #0
 2893 000c 002B     		cmp	r3, #0
 2894 000e 07DD     		ble	.L271
 2895              	.LVL486:
 2896              	.L275:
 181:../Sources/LCD.c ****         c = s[i];
 2897              		.loc 1 181 0
 2898 0010 A15C     		ldrb	r1, [r4, r2]
 2899              	.LVL487:
 182:../Sources/LCD.c ****         s[i] = s[j];
 2900              		.loc 1 182 0
 2901 0012 E05C     		ldrb	r0, [r4, r3]
 2902 0014 A054     		strb	r0, [r4, r2]
 2903              		.loc 1 183 0
 2904 0016 E154     		strb	r1, [r4, r3]
 180:../Sources/LCD.c ****     for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
 2905              		.loc 1 180 0
 2906 0018 0132     		add	r2, r2, #1
 2907              	.LVL488:
 2908 001a 013B     		sub	r3, r3, #1
 2909              	.LVL489:
 2910 001c 9A42     		cmp	r2, r3
 2911 001e F7DB     		blt	.L275
 2912              	.LVL490:
 2913              	.L271:
 184:../Sources/LCD.c ****     }
 185:../Sources/LCD.c **** }
 2914              		.loc 1 185 0
 2915              		@ sp needed for prologue
 2916              	.LVL491:
 2917 0020 10BD     		pop	{r4, pc}
 2918              		.cfi_endproc
 2919              	.LFE9:
 2921 0022 C046     		.section	.rodata.str1.4,"aMS",%progbits,1
 2922              		.align	2
 2923              	.LC2:
 2924 0000 53204D4F 		.ascii	"S MODE ON           \000"
 2924      4445204F 
 2924      4E202020 
 2924      20202020 
 2924      20202020 
 2925 0015 000000   		.space	3
 2926              	.LC4:
 2927 0018 424F5448 		.ascii	"BOTH EDGES          \000"
 2927      20454447 
 2927      45532020 
 2927      20202020 
 2927      20202020 
 2928 002d 000000   		.space	3
 2929              	.LC6:
 2930 0030 4C454654 		.ascii	"LEFT EDGE           \000"
 2930      20454447 
 2930      45202020 
 2930      20202020 
 2930      20202020 
 2931 0045 000000   		.space	3
 2932              	.LC8:
 2933 0048 52494748 		.ascii	"RIGHT EDGE          \000"
 2933      54204544 
 2933      47452020 
 2933      20202020 
 2933      20202020 
 2934 005d 000000   		.space	3
 2935              	.LC10:
 2936 0060 54454D50 		.ascii	"TEMP LOST           \000"
 2936      204C4F53 
 2936      54202020 
 2936      20202020 
 2936      20202020 
 2937 0075 000000   		.space	3
 2938              	.LC12:
 2939 0078 4C494E45 		.ascii	"LINE LOST           \000"
 2939      204C4F53 
 2939      54202020 
 2939      20202020 
 2939      20202020 
 2940 008d 000000   		.text
 2941              	.Letext0:
 2942              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 2943              		.file 3 "C:/Users/bentr_000/Desktop/New folder/FreescaleCup2016Group2/Project_Headers/MKL25Z4.h"
 2944              		.file 4 "C:/Users/bentr_000/Desktop/New folder/FreescaleCup2016Group2/Project_Headers/typedefs_str
DEFINED SYMBOLS
                            *ABS*:00000000 LCD.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:18     .text.LCDinit:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:23     .text.LCDinit:00000000 LCDinit
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:80     .text.LCDinit:00000048 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:85     .text.LCDmoveCursor:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:90     .text.LCDmoveCursor:00000000 LCDmoveCursor
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:137    .text.LCDmoveCursor:0000002c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:142    .text.LCDwriteString:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:147    .text.LCDwriteString:00000000 LCDwriteString
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:247    .text.LCDwriteString:00000068 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:254    .text.LCDwriteVariable:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:259    .text.LCDwriteVariable:00000000 LCDwriteVariable
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:428    .text.LCDwriteVariable:000000a4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:439    .text.LCDfeedback:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:444    .text.LCDfeedback:00000000 LCDfeedback
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:1071   .text.LCDfeedback:000003d4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:1078   .text.LCDfeedback:000003ec $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:1588   .text.LCDfeedback:00000720 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:1596   .text.LCDfeedback:00000734 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2198   .text.LCDfeedback:00000aa4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2212   .text.LCDfeedback:00000ad0 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2234   .text.LCDfeedback:00000af4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2239   .text.LCDwriteState:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2244   .text.LCDwriteState:00000000 LCDwriteState
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2642   .text.LCDwriteState:000001f4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2656   .text.LCDclear:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2661   .text.LCDclear:00000000 LCDclear
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2707   .text.LCDclear:00000038 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2712   .text.LCDreturn:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2717   .text.LCDreturn:00000000 LCDreturn
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2748   .text.LCDreturn:00000020 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2753   .text.itoa:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2758   .text.itoa:00000000 itoa
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2870   .text.reverse:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2875   .text.reverse:00000000 reverse
C:\Users\BENTR_~1\AppData\Local\Temp\ccgx31cF.s:2922   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
uart_putchar
strlen
__aeabi_idivmod
__aeabi_idiv
__aeabi_fmul
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_f2iz
__aeabi_fcmpgt
__aeabi_fcmpeq
getSpeed
targetSpeed
