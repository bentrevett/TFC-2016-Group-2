   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SpeedControl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_ui2f
  18              		.global	__aeabi_fdiv
  19              		.global	__aeabi_fcmpgt
  20              		.global	__aeabi_fcmplt
  21              		.global	__aeabi_fsub
  22              		.global	__aeabi_fmul
  23              		.global	__aeabi_fadd
  24              		.section	.text.getDesiredMotorPWM,"ax",%progbits
  25              		.align	2
  26              		.global	getDesiredMotorPWM
  27              		.code	16
  28              		.thumb_func
  30              	getDesiredMotorPWM:
  31              	.LFB0:
  32              		.file 1 "../Sources/SpeedControl.c"
   1:../Sources/SpeedControl.c **** /*
   2:../Sources/SpeedControl.c ****  * SpeedControl.c
   3:../Sources/SpeedControl.c ****  *
   4:../Sources/SpeedControl.c ****  *  Created on: Feb 3, 2014
   5:../Sources/SpeedControl.c ****  *      Author: Matt
   6:../Sources/SpeedControl.c ****  */
   7:../Sources/SpeedControl.c **** 
   8:../Sources/SpeedControl.c **** #include <SpeedControl.h>
   9:../Sources/SpeedControl.c **** 
  10:../Sources/SpeedControl.c **** #define KP 0.3f				// Matt Original: 0.3f
  11:../Sources/SpeedControl.c **** #define KI 0.5f				// Matt Original: 0.5f
  12:../Sources/SpeedControl.c **** //#define KD 0.0f			// Matt: disabled in the code
  13:../Sources/SpeedControl.c **** 
  14:../Sources/SpeedControl.c **** #define MAX_PWM 1.0f
  15:../Sources/SpeedControl.c **** #define MIN_PWM -0.8f
  16:../Sources/SpeedControl.c **** 
  17:../Sources/SpeedControl.c **** #define INCLUDE_INTEGRAL 1
  18:../Sources/SpeedControl.c **** #define NO_INTEGRAL 0
  19:../Sources/SpeedControl.c **** 
  20:../Sources/SpeedControl.c **** float getDesiredMotorPWM(float setpoint, float measurement, volatile isNewMeasurementAvailable_t* i
  21:../Sources/SpeedControl.c **** {
  33              		.loc 1 21 0
  34              		.cfi_startproc
  35              	.LVL0:
  36 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 24
  39              		.cfi_offset 3, -24
  40              		.cfi_offset 4, -20
  41              		.cfi_offset 5, -16
  42              		.cfi_offset 6, -12
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 4D46     		mov	r5, r9
  46 0004 4446     		mov	r4, r8
  47 0006 5F46     		mov	r7, fp
  48 0008 5646     		mov	r6, sl
  49 000a F0B4     		push	{r4, r5, r6, r7}
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 40
  52              		.cfi_offset 8, -40
  53              		.cfi_offset 9, -36
  54              		.cfi_offset 10, -32
  55              		.cfi_offset 11, -28
  22:../Sources/SpeedControl.c **** 	static struct persistantPIDVariables_s PIDVariables[] = {
  23:../Sources/SpeedControl.c **** 	{ 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0 } };
  24:../Sources/SpeedControl.c **** 
  25:../Sources/SpeedControl.c **** 	if (*isNewMeasurementAvailable == NEW_MEASUREMENT_AVAILABLE)
  56              		.loc 1 25 0
  57 000c 1578     		ldrb	r5, [r2]
  21:../Sources/SpeedControl.c **** {
  58              		.loc 1 21 0
  59 000e 8146     		mov	r9, r0
  60 0010 8846     		mov	r8, r1
  61 0012 1C1C     		mov	r4, r3
  62              		.loc 1 25 0
  63 0014 002D     		cmp	r5, #0
  64 0016 5DD1     		bne	.L21
  65              	.LBB7:
  26:../Sources/SpeedControl.c **** 	{
  27:../Sources/SpeedControl.c **** 		*isNewMeasurementAvailable = NO_NEW_MEASUREMENT_AVAILABLE;
  28:../Sources/SpeedControl.c **** 
  29:../Sources/SpeedControl.c **** 		float dt = (TFC_Ticker[2] / 10000.0f);
  66              		.loc 1 29 0
  67 0018 3A4F     		ldr	r7, .L23
  27:../Sources/SpeedControl.c **** 		*isNewMeasurementAvailable = NO_NEW_MEASUREMENT_AVAILABLE;
  68              		.loc 1 27 0
  69 001a 0126     		mov	r6, #1
  70 001c 1670     		strb	r6, [r2]
  71              		.loc 1 29 0
  72 001e B868     		ldr	r0, [r7, #8]
  73              	.LVL1:
  74 0020 FFF7FEFF 		bl	__aeabi_ui2f
  75              	.LVL2:
  76 0024 3849     		ldr	r1, .L23+4
  77 0026 FFF7FEFF 		bl	__aeabi_fdiv
  78              	.LVL3:
  30:../Sources/SpeedControl.c **** 		TFC_Ticker[2] = 0;
  79              		.loc 1 30 0
  80 002a BD60     		str	r5, [r7, #8]
  31:../Sources/SpeedControl.c **** 		if(dt > 0.1f)
  81              		.loc 1 31 0
  82 002c 3749     		ldr	r1, .L23+8
  29:../Sources/SpeedControl.c **** 		float dt = (TFC_Ticker[2] / 10000.0f);
  83              		.loc 1 29 0
  84 002e 8246     		mov	sl, r0
  85              	.LVL4:
  86              		.loc 1 31 0
  87 0030 FFF7FEFF 		bl	__aeabi_fcmpgt
  88              	.LVL5:
  89 0034 0028     		cmp	r0, #0
  90 0036 01D0     		beq	.L4
  32:../Sources/SpeedControl.c **** 		{
  33:../Sources/SpeedControl.c **** 			dt = 0.1f;
  91              		.loc 1 33 0
  92 0038 344D     		ldr	r5, .L23+8
  93 003a AA46     		mov	sl, r5
  94              	.LVL6:
  95              	.L4:
  34:../Sources/SpeedControl.c **** 		}
  35:../Sources/SpeedControl.c **** 		
  36:../Sources/SpeedControl.c **** 		// Integral wind-up protection
  37:../Sources/SpeedControl.c **** 		if (PIDVariables[channel].PWM < MAX_PWM && PIDVariables[channel].PWM > MIN_PWM)
  96              		.loc 1 37 0
  97 003c 6700     		lsl	r7, r4, #1
  98 003e 344E     		ldr	r6, .L23+12
  99 0040 3B19     		add	r3, r7, r4
 100 0042 D800     		lsl	r0, r3, #3
 101 0044 3558     		ldr	r5, [r6, r0]
 102 0046 FE21     		mov	r1, #254
 103 0048 8346     		mov	fp, r0
 104 004a 8905     		lsl	r1, r1, #22
 105 004c 281C     		add	r0, r5, #0
 106 004e FFF7FEFF 		bl	__aeabi_fcmplt
 107              	.LVL7:
 108 0052 0028     		cmp	r0, #0
 109 0054 44D1     		bne	.L22
 110              	.L5:
  38:../Sources/SpeedControl.c **** 		{
  39:../Sources/SpeedControl.c **** 			PID(setpoint, measurement, &PIDVariables[channel], INCLUDE_INTEGRAL, dt);
  40:../Sources/SpeedControl.c **** 		}
  41:../Sources/SpeedControl.c **** 		else
  42:../Sources/SpeedControl.c **** 		{
  43:../Sources/SpeedControl.c **** 			PID(setpoint, measurement, &PIDVariables[channel], NO_INTEGRAL, dt);
 111              		.loc 1 43 0
 112 0056 3A19     		add	r2, r7, r4
 113 0058 D300     		lsl	r3, r2, #3
 114              	.LBB8:
 115              	.LBB9:
  44:../Sources/SpeedControl.c **** 		}
  45:../Sources/SpeedControl.c **** 
  46:../Sources/SpeedControl.c **** 		
  47:../Sources/SpeedControl.c **** 		if (PIDVariables[channel].PWM < MIN_PWM)
  48:../Sources/SpeedControl.c **** 			PIDVariables[channel].PWM = MIN_PWM;
  49:../Sources/SpeedControl.c **** 		else if (PIDVariables[channel].PWM > MAX_PWM)
  50:../Sources/SpeedControl.c **** 			PIDVariables[channel].PWM = MAX_PWM;
  51:../Sources/SpeedControl.c **** 	}
  52:../Sources/SpeedControl.c **** 	return PIDVariables[channel].PWM;
  53:../Sources/SpeedControl.c **** }
  54:../Sources/SpeedControl.c **** 
  55:../Sources/SpeedControl.c **** void PID(float setpoint, float measurement, struct persistantPIDVariables_s* PIDVariables, uint8_t 
  56:../Sources/SpeedControl.c **** {
  57:../Sources/SpeedControl.c **** 	PIDVariables->error = setpoint - measurement;
 116              		.loc 1 57 0
 117 005a 4146     		mov	r1, r8
 118 005c 4846     		mov	r0, r9
 119              	.LBE9:
 120              	.LBE8:
  43:../Sources/SpeedControl.c **** 			PID(setpoint, measurement, &PIDVariables[channel], NO_INTEGRAL, dt);
 121              		.loc 1 43 0
 122 005e F518     		add	r5, r6, r3
 123              	.LVL8:
 124              	.LBB12:
 125              	.LBB10:
 126              		.loc 1 57 0
 127 0060 FFF7FEFF 		bl	__aeabi_fsub
 128              	.LVL9:
  58:../Sources/SpeedControl.c **** 	PIDVariables->errorSum += PIDVariables->error * incrementIntegral * dt;
 129              		.loc 1 58 0
 130 0064 0021     		mov	r1, #0
  57:../Sources/SpeedControl.c **** 	PIDVariables->error = setpoint - measurement;
 131              		.loc 1 57 0
 132 0066 A860     		str	r0, [r5, #8]
 133 0068 8046     		mov	r8, r0
 134              	.LVL10:
 135              		.loc 1 58 0
 136 006a FFF7FEFF 		bl	__aeabi_fmul
 137              	.LVL11:
 138 006e 011C     		add	r1, r0, #0
 139 0070 5046     		mov	r0, sl
 140              	.LVL12:
 141              	.L18:
 142 0072 FFF7FEFF 		bl	__aeabi_fmul
 143              	.LVL13:
 144 0076 6969     		ldr	r1, [r5, #20]
 145 0078 FFF7FEFF 		bl	__aeabi_fadd
 146              	.LVL14:
  59:../Sources/SpeedControl.c **** 	PIDVariables->PWM = (PIDVariables->error * KP) + (PIDVariables->errorSum * KI); /* + (PIDVariables
 147              		.loc 1 59 0
 148 007c 2549     		ldr	r1, .L23+16
  58:../Sources/SpeedControl.c **** 	PIDVariables->errorSum += PIDVariables->error * incrementIntegral * dt;
 149              		.loc 1 58 0
 150 007e 6861     		str	r0, [r5, #20]
 151 0080 8146     		mov	r9, r0
 152              	.LVL15:
 153              		.loc 1 59 0
 154 0082 4046     		mov	r0, r8
 155 0084 FFF7FEFF 		bl	__aeabi_fmul
 156              	.LVL16:
 157 0088 FC23     		mov	r3, #252
 158 008a 9905     		lsl	r1, r3, #22
 159 008c 8246     		mov	sl, r0
 160              	.LVL17:
 161 008e 4846     		mov	r0, r9
 162 0090 FFF7FEFF 		bl	__aeabi_fmul
 163              	.LVL18:
 164 0094 011C     		add	r1, r0, #0
 165 0096 5046     		mov	r0, sl
 166 0098 FFF7FEFF 		bl	__aeabi_fadd
 167              	.LVL19:
 168              	.LBE10:
 169              	.LBE12:
  47:../Sources/SpeedControl.c **** 		if (PIDVariables[channel].PWM < MIN_PWM)
 170              		.loc 1 47 0
 171 009c 3C19     		add	r4, r7, r4
 172              	.LBB13:
 173              	.LBB11:
 174              		.loc 1 59 0
 175 009e 2860     		str	r0, [r5]
 176              	.LBE11:
 177              	.LBE13:
  47:../Sources/SpeedControl.c **** 		if (PIDVariables[channel].PWM < MIN_PWM)
 178              		.loc 1 47 0
 179 00a0 E400     		lsl	r4, r4, #3
 180 00a2 3559     		ldr	r5, [r6, r4]
 181 00a4 1C4F     		ldr	r7, .L23+20
 182 00a6 281C     		add	r0, r5, #0
 183 00a8 391C     		add	r1, r7, #0
 184 00aa FFF7FEFF 		bl	__aeabi_fcmplt
 185              	.LVL20:
 186 00ae 0028     		cmp	r0, #0
 187 00b0 07D1     		bne	.L19
  49:../Sources/SpeedControl.c **** 		else if (PIDVariables[channel].PWM > MAX_PWM)
 188              		.loc 1 49 0
 189 00b2 FE27     		mov	r7, #254
 190 00b4 BF05     		lsl	r7, r7, #22
 191 00b6 281C     		add	r0, r5, #0
 192 00b8 391C     		add	r1, r7, #0
 193 00ba FFF7FEFF 		bl	__aeabi_fcmpgt
 194              	.LVL21:
 195 00be 0028     		cmp	r0, #0
 196 00c0 01D0     		beq	.L3
 197              	.L19:
  50:../Sources/SpeedControl.c **** 			PIDVariables[channel].PWM = MAX_PWM;
 198              		.loc 1 50 0
 199 00c2 A751     		str	r7, [r4, r6]
 200 00c4 3D1C     		add	r5, r7, #0
 201              	.L3:
 202              	.LBE7:
  53:../Sources/SpeedControl.c **** }
 203              		.loc 1 53 0
 204 00c6 281C     		add	r0, r5, #0
 205              		@ sp needed for prologue
 206 00c8 3CBC     		pop	{r2, r3, r4, r5}
 207 00ca 9046     		mov	r8, r2
 208 00cc 9946     		mov	r9, r3
 209 00ce A246     		mov	sl, r4
 210 00d0 AB46     		mov	fp, r5
 211 00d2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 212              	.LVL22:
 213              	.L21:
 214 00d4 5B00     		lsl	r3, r3, #1
 215              	.LVL23:
 216 00d6 1819     		add	r0, r3, r4
 217              	.LVL24:
 218 00d8 0D4A     		ldr	r2, .L23+12
 219              	.LVL25:
 220 00da C100     		lsl	r1, r0, #3
 221              	.LVL26:
 222 00dc 8D58     		ldr	r5, [r1, r2]
 223 00de F2E7     		b	.L3
 224              	.LVL27:
 225              	.L22:
 226              	.LBB18:
  37:../Sources/SpeedControl.c **** 		if (PIDVariables[channel].PWM < MAX_PWM && PIDVariables[channel].PWM > MIN_PWM)
 227              		.loc 1 37 0
 228 00e0 281C     		add	r0, r5, #0
 229 00e2 0D49     		ldr	r1, .L23+20
 230 00e4 FFF7FEFF 		bl	__aeabi_fcmpgt
 231              	.LVL28:
 232 00e8 0028     		cmp	r0, #0
 233 00ea B4D0     		beq	.L5
  39:../Sources/SpeedControl.c **** 			PID(setpoint, measurement, &PIDVariables[channel], INCLUDE_INTEGRAL, dt);
 234              		.loc 1 39 0
 235 00ec 5846     		mov	r0, fp
 236              	.LBB14:
 237              	.LBB15:
  57:../Sources/SpeedControl.c **** 	PIDVariables->error = setpoint - measurement;
 238              		.loc 1 57 0
 239 00ee 4146     		mov	r1, r8
 240              	.LBE15:
 241              	.LBE14:
  39:../Sources/SpeedControl.c **** 			PID(setpoint, measurement, &PIDVariables[channel], INCLUDE_INTEGRAL, dt);
 242              		.loc 1 39 0
 243 00f0 3518     		add	r5, r6, r0
 244              	.LVL29:
 245              	.LBB17:
 246              	.LBB16:
  57:../Sources/SpeedControl.c **** 	PIDVariables->error = setpoint - measurement;
 247              		.loc 1 57 0
 248 00f2 4846     		mov	r0, r9
 249 00f4 FFF7FEFF 		bl	__aeabi_fsub
 250              	.LVL30:
 251 00f8 8046     		mov	r8, r0
 252              	.LVL31:
 253 00fa A860     		str	r0, [r5, #8]
  58:../Sources/SpeedControl.c **** 	PIDVariables->errorSum += PIDVariables->error * incrementIntegral * dt;
 254              		.loc 1 58 0
 255 00fc 4146     		mov	r1, r8
 256 00fe 5046     		mov	r0, sl
 257 0100 B7E7     		b	.L18
 258              	.L24:
 259 0102 C046     		.align	2
 260              	.L23:
 261 0104 00000000 		.word	TFC_Ticker
 262 0108 00401C46 		.word	1176256512
 263 010c CDCCCC3D 		.word	1036831949
 264 0110 00000000 		.word	.LANCHOR0
 265 0114 9A99993E 		.word	1050253722
 266 0118 CDCC4CBF 		.word	-1085485875
 267              	.LBE16:
 268              	.LBE17:
 269              	.LBE18:
 270              		.cfi_endproc
 271              	.LFE0:
 273              		.global	__aeabi_i2f
 274              		.section	.text.PID,"ax",%progbits
 275              		.align	2
 276              		.global	PID
 277              		.code	16
 278              		.thumb_func
 280              	PID:
 281              	.LFB1:
  56:../Sources/SpeedControl.c **** {
 282              		.loc 1 56 0
 283              		.cfi_startproc
 284              	.LVL32:
 285 0000 70B5     		push	{r4, r5, r6, lr}
 286              	.LCFI2:
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
  56:../Sources/SpeedControl.c **** {
 292              		.loc 1 56 0
 293 0002 141C     		mov	r4, r2
 294 0004 1E1C     		mov	r6, r3
  57:../Sources/SpeedControl.c **** 	PIDVariables->error = setpoint - measurement;
 295              		.loc 1 57 0
 296 0006 FFF7FEFF 		bl	__aeabi_fsub
 297              	.LVL33:
 298 000a 051C     		add	r5, r0, #0
 299 000c A060     		str	r0, [r4, #8]
  58:../Sources/SpeedControl.c **** 	PIDVariables->errorSum += PIDVariables->error * incrementIntegral * dt;
 300              		.loc 1 58 0
 301 000e 301C     		mov	r0, r6
 302 0010 FFF7FEFF 		bl	__aeabi_i2f
 303              	.LVL34:
 304 0014 011C     		add	r1, r0, #0
 305 0016 281C     		add	r0, r5, #0
 306 0018 FFF7FEFF 		bl	__aeabi_fmul
 307              	.LVL35:
 308 001c 0499     		ldr	r1, [sp, #16]
 309 001e FFF7FEFF 		bl	__aeabi_fmul
 310              	.LVL36:
 311 0022 6169     		ldr	r1, [r4, #20]
 312 0024 FFF7FEFF 		bl	__aeabi_fadd
 313              	.LVL37:
 314              		.loc 1 59 0
 315 0028 0849     		ldr	r1, .L26
  58:../Sources/SpeedControl.c **** 	PIDVariables->errorSum += PIDVariables->error * incrementIntegral * dt;
 316              		.loc 1 58 0
 317 002a 061C     		add	r6, r0, #0
 318 002c 6061     		str	r0, [r4, #20]
 319              		.loc 1 59 0
 320 002e 281C     		add	r0, r5, #0
 321 0030 FFF7FEFF 		bl	__aeabi_fmul
 322              	.LVL38:
 323 0034 FC21     		mov	r1, #252
 324 0036 051C     		add	r5, r0, #0
 325 0038 8905     		lsl	r1, r1, #22
 326 003a 301C     		add	r0, r6, #0
 327 003c FFF7FEFF 		bl	__aeabi_fmul
 328              	.LVL39:
 329 0040 011C     		add	r1, r0, #0
 330 0042 281C     		add	r0, r5, #0
 331 0044 FFF7FEFF 		bl	__aeabi_fadd
 332              	.LVL40:
  60:../Sources/SpeedControl.c **** }
 333              		.loc 1 60 0
 334              		@ sp needed for prologue
  59:../Sources/SpeedControl.c **** 	PIDVariables->PWM = (PIDVariables->error * KP) + (PIDVariables->errorSum * KI); /* + (PIDVariables
 335              		.loc 1 59 0
 336 0048 2060     		str	r0, [r4]
 337              	.LVL41:
 338              		.loc 1 60 0
 339 004a 70BD     		pop	{r4, r5, r6, pc}
 340              	.L27:
 341              		.align	2
 342              	.L26:
 343 004c 9A99993E 		.word	1050253722
 344              		.cfi_endproc
 345              	.LFE1:
 347              		.section	.bss.PIDVariables.5929,"aw",%nobits
 348              		.align	2
 349              		.set	.LANCHOR0,. + 0
 352              	PIDVariables.5929:
 353 0000 00000000 		.space	48
 353      00000000 
 353      00000000 
 353      00000000 
 353      00000000 
 354              		.text
 355              	.Letext0:
 356              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 357              		.file 3 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/SpeedSensor.h"
 358              		.file 4 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/SpeedControl.h"
 359              		.file 5 "C:/Users/bentr_000/Desktop/FreescaleCup2016Group2/Project_Headers/TFC\\TFC_ARM_SysTick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 SpeedControl.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccERPPBa.s:25     .text.getDesiredMotorPWM:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccERPPBa.s:30     .text.getDesiredMotorPWM:00000000 getDesiredMotorPWM
C:\Users\BENTR_~1\AppData\Local\Temp\ccERPPBa.s:261    .text.getDesiredMotorPWM:00000104 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccERPPBa.s:275    .text.PID:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccERPPBa.s:280    .text.PID:00000000 PID
C:\Users\BENTR_~1\AppData\Local\Temp\ccERPPBa.s:343    .text.PID:0000004c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccERPPBa.s:348    .bss.PIDVariables.5929:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccERPPBa.s:352    .bss.PIDVariables.5929:00000000 PIDVariables.5929
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_fsub
__aeabi_fmul
__aeabi_fadd
TFC_Ticker
__aeabi_i2f
