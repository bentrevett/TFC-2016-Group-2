   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ServoMapping.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fcmplt
  18              		.global	__aeabi_fcmpgt
  19              		.global	__aeabi_fsub
  20              		.global	__aeabi_fmul
  21              		.global	__aeabi_fdiv
  22              		.global	__aeabi_fadd
  23              		.global	__aeabi_f2uiz
  24              		.section	.text.getRadiusRoot,"ax",%progbits
  25              		.align	2
  26              		.global	getRadiusRoot
  27              		.code	16
  28              		.thumb_func
  30              	getRadiusRoot:
  31              	.LFB0:
  32              		.file 1 "../Sources/ServoMapping.c"
   1:../Sources/ServoMapping.c **** /*
   2:../Sources/ServoMapping.c ****  * ServoMapping.c
   3:../Sources/ServoMapping.c ****  *
   4:../Sources/ServoMapping.c ****  *  Created on: April 17, 2015
   5:../Sources/ServoMapping.c ****  *  Author: Miroslav Dobrev
   6:../Sources/ServoMapping.c ****  *  
   7:../Sources/ServoMapping.c ****  *  Handles the mapping between servoValue and steering radius.
   8:../Sources/ServoMapping.c ****  */
   9:../Sources/ServoMapping.c **** 
  10:../Sources/ServoMapping.c **** #include "ServoMapping.h"
  11:../Sources/ServoMapping.c **** 
  12:../Sources/ServoMapping.c **** #define MAP_ARRAY_SIZE	101
  13:../Sources/ServoMapping.c **** 
  14:../Sources/ServoMapping.c **** #define SERVO_VALUE_MIN		0.04f	// Minimum servoValue that is mapped
  15:../Sources/ServoMapping.c **** #define SERVO_VALUE_MAX		0.36f	// Max servoValue that is mapped
  16:../Sources/ServoMapping.c **** #define STEP_RECIPROCAL	  (MAP_ARRAY_SIZE-1)/(SERVO_VALUE_MAX - SERVO_VALUE_MIN)	// 1/servoValueSte
  17:../Sources/ServoMapping.c **** 
  18:../Sources/ServoMapping.c **** float getRadiusRoot(float servoValue)
  19:../Sources/ServoMapping.c **** {	
  33              		.loc 1 19 0
  34              		.cfi_startproc
  35              	.LVL0:
  36 0000 10B5     		push	{r4, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 14, -4
  20:../Sources/ServoMapping.c **** 	if(servoValue < 0.0f)
  41              		.loc 1 20 0
  42 0002 0021     		mov	r1, #0
  19:../Sources/ServoMapping.c **** {	
  43              		.loc 1 19 0
  44 0004 041C     		add	r4, r0, #0
  45              		.loc 1 20 0
  46 0006 FFF7FEFF 		bl	__aeabi_fcmplt
  47              	.LVL1:
  48 000a 0028     		cmp	r0, #0
  49 000c 27D1     		bne	.L12
  50              	.L2:
  21:../Sources/ServoMapping.c **** 	{
  22:../Sources/ServoMapping.c **** 		servoValue = (-servoValue);
  23:../Sources/ServoMapping.c **** 	}
  24:../Sources/ServoMapping.c **** 		
  25:../Sources/ServoMapping.c **** 	if(servoValue < SERVO_VALUE_MIN)
  51              		.loc 1 25 0
  52 000e 201C     		add	r0, r4, #0
  53 0010 1549     		ldr	r1, .L14
  54 0012 FFF7FEFF 		bl	__aeabi_fcmplt
  55              	.LVL2:
  56 0016 0028     		cmp	r0, #0
  57 0018 1FD1     		bne	.L7
  26:../Sources/ServoMapping.c **** 	{
  27:../Sources/ServoMapping.c **** 		return 100000.0f;		// Huge radius - practically moving straight.
  28:../Sources/ServoMapping.c **** 	}
  29:../Sources/ServoMapping.c **** 	else if(servoValue > SERVO_VALUE_MAX)
  58              		.loc 1 29 0
  59 001a 201C     		add	r0, r4, #0
  60 001c 1349     		ldr	r1, .L14+4
  61 001e FFF7FEFF 		bl	__aeabi_fcmpgt
  62              	.LVL3:
  63 0022 0028     		cmp	r0, #0
  64 0024 14D1     		bne	.L13
  65              	.LVL4:
  30:../Sources/ServoMapping.c **** 	{
  31:../Sources/ServoMapping.c **** 		return mapArray[MAP_ARRAY_SIZE - 1];
  32:../Sources/ServoMapping.c **** 	}
  33:../Sources/ServoMapping.c **** 	
  34:../Sources/ServoMapping.c **** 	uint8_t i = (uint8_t)((servoValue - SERVO_VALUE_MIN)*STEP_RECIPROCAL + 0.5f);
  66              		.loc 1 34 0
  67 0026 1049     		ldr	r1, .L14
  68 0028 201C     		add	r0, r4, #0
  69 002a FFF7FEFF 		bl	__aeabi_fsub
  70              	.LVL5:
  71 002e 1049     		ldr	r1, .L14+8
  72 0030 FFF7FEFF 		bl	__aeabi_fmul
  73              	.LVL6:
  74 0034 0F49     		ldr	r1, .L14+12
  75 0036 FFF7FEFF 		bl	__aeabi_fdiv
  76              	.LVL7:
  77 003a FC21     		mov	r1, #252
  78 003c 8905     		lsl	r1, r1, #22
  79 003e FFF7FEFF 		bl	__aeabi_fadd
  80              	.LVL8:
  81 0042 FFF7FEFF 		bl	__aeabi_f2uiz
  82              	.LVL9:
  35:../Sources/ServoMapping.c **** 	
  36:../Sources/ServoMapping.c **** 	return mapArray[i];
  83              		.loc 1 36 0
  84 0046 0C4B     		ldr	r3, .L14+16
  85 0048 C2B2     		uxtb	r2, r0
  86 004a 9000     		lsl	r0, r2, #2
  87 004c C058     		ldr	r0, [r0, r3]
  88              	.LVL10:
  89              	.L4:
  37:../Sources/ServoMapping.c **** }
  90              		.loc 1 37 0
  91              		@ sp needed for prologue
  92 004e 10BD     		pop	{r4, pc}
  93              	.LVL11:
  94              	.L13:
  31:../Sources/ServoMapping.c **** 		return mapArray[MAP_ARRAY_SIZE - 1];
  95              		.loc 1 31 0
  96 0050 C824     		mov	r4, #200
  97              	.LVL12:
  98 0052 094A     		ldr	r2, .L14+16
  99 0054 6100     		lsl	r1, r4, #1
 100 0056 5058     		ldr	r0, [r2, r1]
 101 0058 F9E7     		b	.L4
 102              	.LVL13:
 103              	.L7:
  27:../Sources/ServoMapping.c **** 		return 100000.0f;		// Huge radius - practically moving straight.
 104              		.loc 1 27 0
 105 005a 0848     		ldr	r0, .L14+20
 106 005c F7E7     		b	.L4
 107              	.L12:
  22:../Sources/ServoMapping.c **** 		servoValue = (-servoValue);
 108              		.loc 1 22 0
 109 005e 8023     		mov	r3, #128
 110 0060 1806     		lsl	r0, r3, #24
 111 0062 2418     		add	r4, r4, r0
 112              	.LVL14:
 113 0064 D3E7     		b	.L2
 114              	.L15:
 115 0066 C046     		.align	2
 116              	.L14:
 117 0068 0AD7233D 		.word	1025758986
 118 006c EC51B83E 		.word	1052266988
 119 0070 0000C842 		.word	1120403456
 120 0074 0BD7A33E 		.word	1050924811
 121 0078 00000000 		.word	.LANCHOR0
 122 007c 0050C347 		.word	1203982336
 123              		.cfi_endproc
 124              	.LFE0:
 126              		.section	.text.getRadius,"ax",%progbits
 127              		.align	2
 128              		.global	getRadius
 129              		.code	16
 130              		.thumb_func
 132              	getRadius:
 133              	.LFB1:
  38:../Sources/ServoMapping.c **** 
  39:../Sources/ServoMapping.c **** float getRadius(float servoValue)
  40:../Sources/ServoMapping.c **** {
 134              		.loc 1 40 0
 135              		.cfi_startproc
 136              	.LVL15:
 137 0000 10B5     		push	{r4, lr}
 138              	.LCFI1:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 4, -8
 141              		.cfi_offset 14, -4
 142              	.LBB4:
 143              	.LBB5:
  20:../Sources/ServoMapping.c **** 	if(servoValue < 0.0f)
 144              		.loc 1 20 0
 145 0002 0021     		mov	r1, #0
 146              	.LBE5:
 147              	.LBE4:
 148              		.loc 1 40 0
 149 0004 041C     		add	r4, r0, #0
 150              	.LBB8:
 151              	.LBB6:
  20:../Sources/ServoMapping.c **** 	if(servoValue < 0.0f)
 152              		.loc 1 20 0
 153 0006 FFF7FEFF 		bl	__aeabi_fcmplt
 154              	.LVL16:
 155 000a 0028     		cmp	r0, #0
 156 000c 2DD1     		bne	.L26
 157              	.LVL17:
 158              	.L17:
  25:../Sources/ServoMapping.c **** 	if(servoValue < SERVO_VALUE_MIN)
 159              		.loc 1 25 0
 160 000e 201C     		add	r0, r4, #0
 161 0010 1849     		ldr	r1, .L28
 162 0012 FFF7FEFF 		bl	__aeabi_fcmplt
 163              	.LVL18:
 164 0016 0028     		cmp	r0, #0
 165 0018 25D1     		bne	.L22
  29:../Sources/ServoMapping.c **** 	else if(servoValue > SERVO_VALUE_MAX)
 166              		.loc 1 29 0
 167 001a 201C     		add	r0, r4, #0
 168 001c 1649     		ldr	r1, .L28+4
 169 001e FFF7FEFF 		bl	__aeabi_fcmpgt
 170              	.LVL19:
 171 0022 0028     		cmp	r0, #0
 172 0024 17D1     		bne	.L27
 173              	.LVL20:
  34:../Sources/ServoMapping.c **** 	uint8_t i = (uint8_t)((servoValue - SERVO_VALUE_MIN)*STEP_RECIPROCAL + 0.5f);
 174              		.loc 1 34 0
 175 0026 1349     		ldr	r1, .L28
 176 0028 201C     		add	r0, r4, #0
 177 002a FFF7FEFF 		bl	__aeabi_fsub
 178              	.LVL21:
 179 002e 1349     		ldr	r1, .L28+8
 180 0030 FFF7FEFF 		bl	__aeabi_fmul
 181              	.LVL22:
 182 0034 1249     		ldr	r1, .L28+12
 183 0036 FFF7FEFF 		bl	__aeabi_fdiv
 184              	.LVL23:
 185 003a FC21     		mov	r1, #252
 186 003c 8905     		lsl	r1, r1, #22
 187 003e FFF7FEFF 		bl	__aeabi_fadd
 188              	.LVL24:
 189 0042 FFF7FEFF 		bl	__aeabi_f2uiz
 190              	.LVL25:
  36:../Sources/ServoMapping.c **** 	return mapArray[i];
 191              		.loc 1 36 0
 192 0046 0F4B     		ldr	r3, .L28+16
 193 0048 C2B2     		uxtb	r2, r0
 194 004a 9000     		lsl	r0, r2, #2
 195 004c C158     		ldr	r1, [r0, r3]
 196 004e 081C     		add	r0, r1, #0
 197 0050 FFF7FEFF 		bl	__aeabi_fmul
 198              	.LVL26:
 199              	.L19:
 200              	.LBE6:
 201              	.LBE8:
  41:../Sources/ServoMapping.c **** 	float radiusRoot = getRadiusRoot(servoValue);
  42:../Sources/ServoMapping.c **** 	
  43:../Sources/ServoMapping.c **** 	return radiusRoot*radiusRoot;
  44:../Sources/ServoMapping.c **** }
 202              		.loc 1 44 0
 203              		@ sp needed for prologue
 204 0054 10BD     		pop	{r4, pc}
 205              	.LVL27:
 206              	.L27:
 207              	.LBB9:
 208              	.LBB7:
  31:../Sources/ServoMapping.c **** 		return mapArray[MAP_ARRAY_SIZE - 1];
 209              		.loc 1 31 0
 210 0056 C824     		mov	r4, #200
 211              	.LVL28:
 212 0058 0A4A     		ldr	r2, .L28+16
 213 005a 6100     		lsl	r1, r4, #1
 214 005c 5158     		ldr	r1, [r2, r1]
 215 005e 081C     		add	r0, r1, #0
 216 0060 FFF7FEFF 		bl	__aeabi_fmul
 217              	.LVL29:
 218 0064 F6E7     		b	.L19
 219              	.LVL30:
 220              	.L22:
  25:../Sources/ServoMapping.c **** 	if(servoValue < SERVO_VALUE_MIN)
 221              		.loc 1 25 0
 222 0066 0848     		ldr	r0, .L28+20
 223 0068 F4E7     		b	.L19
 224              	.LVL31:
 225              	.L26:
  22:../Sources/ServoMapping.c **** 		servoValue = (-servoValue);
 226              		.loc 1 22 0
 227 006a 8023     		mov	r3, #128
 228 006c 1806     		lsl	r0, r3, #24
 229 006e 2418     		add	r4, r4, r0
 230              	.LVL32:
 231 0070 CDE7     		b	.L17
 232              	.L29:
 233 0072 C046     		.align	2
 234              	.L28:
 235 0074 0AD7233D 		.word	1025758986
 236 0078 EC51B83E 		.word	1052266988
 237 007c 0000C842 		.word	1120403456
 238 0080 0BD7A33E 		.word	1050924811
 239 0084 00000000 		.word	.LANCHOR0
 240 0088 F9021550 		.word	1343554297
 241              	.LBE7:
 242              	.LBE9:
 243              		.cfi_endproc
 244              	.LFE1:
 246              		.global	mapArray
 247              		.section	.data.mapArray,"aw",%progbits
 248              		.align	2
 249              		.set	.LANCHOR0,. + 0
 252              	mapArray:
 253 0000 B4ABD23F 		.word	1070771124
 254 0004 B9A6CE3F 		.word	1070507705
 255 0008 E5B9CA3F 		.word	1070250469
 256 000c F3E4C63F 		.word	1069999347
 257 0010 8927C33F 		.word	1069754249
 258 0014 5281BF3F 		.word	1069515090
 259 0018 FAF1BB3F 		.word	1069281786
 260 001c 2D79B83F 		.word	1069054253
 261 0020 A016B53F 		.word	1068832416
 262 0024 F7C9B13F 		.word	1068616183
 263 0028 E692AE3F 		.word	1068405478
 264 002c 1171AB3F 		.word	1068200209
 265 0030 2C64A83F 		.word	1068000300
 266 0034 E36BA53F 		.word	1067805667
 267 0038 DB87A23F 		.word	1067616219
 268 003c D0B79F3F 		.word	1067431888
 269 0040 5DFB9C3F 		.word	1067252573
 270 0044 3F529A3F 		.word	1067078207
 271 0048 12BC973F 		.word	1066908690
 272 004c 9338953F 		.word	1066743955
 273 0050 65C7923F 		.word	1066583909
 274 0054 3C68903F 		.word	1066428476
 275 0058 BD1A8E3F 		.word	1066277565
 276 005c 94DE8B3F 		.word	1066131092
 277 0060 74B3893F 		.word	1065988980
 278 0064 0B99873F 		.word	1065851147
 279 0068 FC8E853F 		.word	1065717500
 280 006c FB94833F 		.word	1065587963
 281 0070 B4AA813F 		.word	1065462452
 282 0074 A99F7F3F 		.word	1065328553
 283 0078 20087C3F 		.word	1065093152
 284 007c 048E783F 		.word	1064865284
 285 0080 BE30753F 		.word	1064644798
 286 0084 B7EF713F 		.word	1064431543
 287 0088 36CA6E3F 		.word	1064225334
 288 008c 94BF6B3F 		.word	1064026004
 289 0090 3ACF683F 		.word	1063833402
 290 0094 7FF8653F 		.word	1063647359
 291 0098 AC3A633F 		.word	1063467692
 292 009c 2995603F 		.word	1063294249
 293 00a0 4F075E3F 		.word	1063126863
 294 00a4 75905B3F 		.word	1062965365
 295 00a8 E42F593F 		.word	1062809572
 296 00ac 15E5563F 		.word	1062659349
 297 00b0 4FAF543F 		.word	1062514511
 298 00b4 EB8D523F 		.word	1062374891
 299 00b8 4180503F 		.word	1062240321
 300 00bc A9854E3F 		.word	1062110633
 301 00c0 8C9D4C3F 		.word	1061985676
 302 00c4 43C74A3F 		.word	1061865283
 303 00c8 1502493F 		.word	1061749269
 304 00cc 6A4D473F 		.word	1061637482
 305 00d0 8BA8453F 		.word	1061529739
 306 00d4 E012443F 		.word	1061425888
 307 00d8 D28B423F 		.word	1061325778
 308 00dc 9912413F 		.word	1061229209
 309 00e0 9CA63F3F 		.word	1061136028
 310 00e4 34473E3F 		.word	1061046068
 311 00e8 BAF33C3F 		.word	1060959162
 312 00ec 97AB3B3F 		.word	1060875159
 313 00f0 116E3A3F 		.word	1060793873
 314 00f4 823A393F 		.word	1060715138
 315 00f8 5210383F 		.word	1060638802
 316 00fc D9EE363F 		.word	1060564697
 317 0100 5ED5353F 		.word	1060492638
 318 0104 4CC3343F 		.word	1060422476
 319 0108 E9B7333F 		.word	1060354025
 320 010c AFB2323F 		.word	1060287151
 321 0110 D5B2313F 		.word	1060221653
 322 0114 D4B7303F 		.word	1060157396
 323 0118 E4C02F3F 		.word	1060094180
 324 011c 7DCD2E3F 		.word	1060031869
 325 0120 E8DC2D3F 		.word	1059970280
 326 0124 8DEE2C3F 		.word	1059909261
 327 0128 A3012C3F 		.word	1059848611
 328 012c B5152B3F 		.word	1059788213
 329 0130 E9292A3F 		.word	1059727849
 330 0134 C93D293F 		.word	1059667401
 331 0138 8B50283F 		.word	1059606667
 332 013c 9961273F 		.word	1059545497
 333 0140 4C70263F 		.word	1059483724
 334 0144 EA7B253F 		.word	1059421162
 335 0148 ED83243F 		.word	1059357677
 336 014c 9C87233F 		.word	1059293084
 337 0150 5186223F 		.word	1059227217
 338 0154 637F213F 		.word	1059159907
 339 0158 3B72203F 		.word	1059091003
 340 015c 205E1F3F 		.word	1059020320
 341 0160 6C421E3F 		.word	1058947692
 342 0164 861E1D3F 		.word	1058872966
 343 0168 C7F11B3F 		.word	1058795975
 344 016c 88BB1A3F 		.word	1058716552
 345 0170 0F7B193F 		.word	1058634511
 346 0174 C72F183F 		.word	1058549703
 347 0178 06D9163F 		.word	1058461958
 348 017c 2576153F 		.word	1058371109
 349 0180 7D06143F 		.word	1058276989
 350 0184 6589123F 		.word	1058179429
 351 0188 37FE103F 		.word	1058078263
 352 018c 5A640F3F 		.word	1057973338
 353 0190 17BB0D3F 		.word	1057864471
 354              		.text
 355              	.Letext0:
 356              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
DEFINED SYMBOLS
                            *ABS*:00000000 ServoMapping.c
C:\Users\BENTR_~1\AppData\Local\Temp\cckrpdx4.s:25     .text.getRadiusRoot:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cckrpdx4.s:30     .text.getRadiusRoot:00000000 getRadiusRoot
C:\Users\BENTR_~1\AppData\Local\Temp\cckrpdx4.s:117    .text.getRadiusRoot:00000068 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cckrpdx4.s:127    .text.getRadius:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cckrpdx4.s:132    .text.getRadius:00000000 getRadius
C:\Users\BENTR_~1\AppData\Local\Temp\cckrpdx4.s:235    .text.getRadius:00000074 $d
C:\Users\BENTR_~1\AppData\Local\Temp\cckrpdx4.s:252    .data.mapArray:00000000 mapArray
C:\Users\BENTR_~1\AppData\Local\Temp\cckrpdx4.s:248    .data.mapArray:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fcmplt
__aeabi_fcmpgt
__aeabi_fsub
__aeabi_fmul
__aeabi_fdiv
__aeabi_fadd
__aeabi_f2uiz
