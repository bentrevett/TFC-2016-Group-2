   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SteeringControl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_i2f
  18              		.global	__aeabi_f2iz
  19              		.global	__aeabi_fcmplt
  20              		.global	__aeabi_ui2f
  21              		.global	__aeabi_fdiv
  22              		.global	__aeabi_fmul
  23              		.global	__aeabi_fadd
  24              		.global	__aeabi_fcmpgt
  25              		.global	__aeabi_fsub
  26              		.section	.text.getDesiredServoValue,"ax",%progbits
  27              		.align	2
  28              		.global	getDesiredServoValue
  29              		.code	16
  30              		.thumb_func
  32              	getDesiredServoValue:
  33              	.LFB0:
  34              		.file 1 "../Sources/SteeringControl.c"
   1:../Sources/SteeringControl.c **** /*
   2:../Sources/SteeringControl.c ****  * SteeringControl.c
   3:../Sources/SteeringControl.c ****  *
   4:../Sources/SteeringControl.c ****  *  Created on: Nov 14, 2013
   5:../Sources/SteeringControl.c ****  *      Author: Matt
   6:../Sources/SteeringControl.c ****  *      Modified By: Miroslav Dobrev
   7:../Sources/SteeringControl.c ****  */
   8:../Sources/SteeringControl.c **** 
   9:../Sources/SteeringControl.c **** #include "TFC\TFC.h"
  10:../Sources/SteeringControl.c **** #include "Settings.h"
  11:../Sources/SteeringControl.c **** 
  12:../Sources/SteeringControl.c **** #define NEW_SERVO_RESCALE 0.8f	// 0.7f Rescale to accommodate for new servo arm length
  13:../Sources/SteeringControl.c **** 
  14:../Sources/SteeringControl.c **** float getDesiredServoValue(int8_t position, int8_t setpoint, lineScanState_t* lineScanState)
  15:../Sources/SteeringControl.c **** {
  35              		.loc 1 15 0
  36              		.cfi_startproc
  37              	.LVL0:
  38 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 20
  41              		.cfi_offset 4, -20
  42              		.cfi_offset 5, -16
  43              		.cfi_offset 6, -12
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  16:../Sources/SteeringControl.c **** 	static float newPosition = 0;
  17:../Sources/SteeringControl.c **** 	static float errorSum = 0;
  18:../Sources/SteeringControl.c **** 	static float previousError = 0;
  19:../Sources/SteeringControl.c **** 
  20:../Sources/SteeringControl.c **** 	if (*lineScanState == LINESCAN_IMAGE_READY)
  46              		.loc 1 20 0
  47 0002 1378     		ldrb	r3, [r2]
  15:../Sources/SteeringControl.c **** {
  48              		.loc 1 15 0
  49 0004 5746     		mov	r7, sl
  50 0006 4E46     		mov	r6, r9
  51 0008 4546     		mov	r5, r8
  52 000a E0B4     		push	{r5, r6, r7}
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 32
  55              		.cfi_offset 8, -32
  56              		.cfi_offset 9, -28
  57              		.cfi_offset 10, -24
  58              		.loc 1 20 0
  59 000c 002B     		cmp	r3, #0
  60 000e 00D0     		beq	.LCB26
  61 0010 79E0     		b	.L19	@long jump
  62              	.LCB26:
  63              	.LBB2:
  21:../Sources/SteeringControl.c **** 	{
  22:../Sources/SteeringControl.c **** 		*lineScanState = NO_NEW_LINESCAN_IMAGE;
  64              		.loc 1 22 0
  65 0012 0124     		mov	r4, #1
  66 0014 1470     		strb	r4, [r2]
  23:../Sources/SteeringControl.c **** 		float error = (float) (setpoint - position);
  67              		.loc 1 23 0
  68 0016 081A     		sub	r0, r1, r0
  69              	.LVL1:
  70 0018 FFF7FEFF 		bl	__aeabi_i2f
  71              	.LVL2:
  24:../Sources/SteeringControl.c **** 
  25:../Sources/SteeringControl.c **** 		if (abs(newPosition) < STEERING_LIMIT_UPPER)
  72              		.loc 1 25 0
  73 001c 464C     		ldr	r4, .L21
  23:../Sources/SteeringControl.c **** 		float error = (float) (setpoint - position);
  74              		.loc 1 23 0
  75 001e 051C     		add	r5, r0, #0
  76              	.LVL3:
  77              		.loc 1 25 0
  78 0020 2068     		ldr	r0, [r4]
  79              	.LVL4:
  80 0022 FFF7FEFF 		bl	__aeabi_f2iz
  81              	.LVL5:
  82 0026 C117     		asr	r1, r0, #31
  83 0028 4018     		add	r0, r0, r1
  84 002a 4840     		eor	r0, r1
  85 002c FFF7FEFF 		bl	__aeabi_i2f
  86              	.LVL6:
  87 0030 4249     		ldr	r1, .L21+4
  88 0032 FFF7FEFF 		bl	__aeabi_fcmplt
  89              	.LVL7:
  90 0036 0028     		cmp	r0, #0
  91 0038 54D1     		bne	.L4
  92 003a 414F     		ldr	r7, .L21+8
  93 003c 414E     		ldr	r6, .L21+12
  94 003e 3A68     		ldr	r2, [r7]
  95 0040 9046     		mov	r8, r2
  96              	.L5:
  26:../Sources/SteeringControl.c **** 		{
  27:../Sources/SteeringControl.c **** 			errorSum += error * (TFC_Ticker[1] / 10000.0f);
  28:../Sources/SteeringControl.c **** 		}
  29:../Sources/SteeringControl.c **** 
  30:../Sources/SteeringControl.c **** 		if (errorSum > INTEGRAL_LIMIT)
  97              		.loc 1 30 0
  98 0042 FE20     		mov	r0, #254
  99 0044 8105     		lsl	r1, r0, #22
 100 0046 4046     		mov	r0, r8
 101 0048 8946     		mov	r9, r1
 102 004a FFF7FEFF 		bl	__aeabi_fcmpgt
 103              	.LVL8:
 104 004e 0028     		cmp	r0, #0
 105 0050 5FD0     		beq	.L16
  31:../Sources/SteeringControl.c **** 		{
  32:../Sources/SteeringControl.c **** 			errorSum = INTEGRAL_LIMIT;
 106              		.loc 1 32 0
 107 0052 3D49     		ldr	r1, .L21+16
 108 0054 4846     		mov	r0, r9
 109 0056 3860     		str	r0, [r7]
 110 0058 8A46     		mov	sl, r1
 111              	.L8:
  33:../Sources/SteeringControl.c **** 		}
  34:../Sources/SteeringControl.c **** 		else if (errorSum < -INTEGRAL_LIMIT)
  35:../Sources/SteeringControl.c **** 		{
  36:../Sources/SteeringControl.c **** 			errorSum = -INTEGRAL_LIMIT;
  37:../Sources/SteeringControl.c **** 		}
  38:../Sources/SteeringControl.c **** 
  39:../Sources/SteeringControl.c **** 		float errorDifferential = (error - previousError) / (TFC_Ticker[1] / 10000.0f);
 112              		.loc 1 39 0
 113 005a 3C4F     		ldr	r7, .L21+20
 114 005c 7268     		ldr	r2, [r6, #4]
 115 005e 3968     		ldr	r1, [r7]
 116 0060 281C     		add	r0, r5, #0
 117 0062 9146     		mov	r9, r2
 118 0064 FFF7FEFF 		bl	__aeabi_fsub
 119              	.LVL9:
 120 0068 8046     		mov	r8, r0
 121 006a 4846     		mov	r0, r9
 122 006c FFF7FEFF 		bl	__aeabi_ui2f
 123              	.LVL10:
 124 0070 3749     		ldr	r1, .L21+24
 125 0072 FFF7FEFF 		bl	__aeabi_fdiv
 126              	.LVL11:
 127 0076 011C     		add	r1, r0, #0
 128 0078 4046     		mov	r0, r8
 129 007a FFF7FEFF 		bl	__aeabi_fdiv
 130              	.LVL12:
  40:../Sources/SteeringControl.c **** 		TFC_Ticker[1] = 0;
 131              		.loc 1 40 0
 132 007e 0023     		mov	r3, #0
 133 0080 7360     		str	r3, [r6, #4]
  39:../Sources/SteeringControl.c **** 		float errorDifferential = (error - previousError) / (TFC_Ticker[1] / 10000.0f);
 134              		.loc 1 39 0
 135 0082 8146     		mov	r9, r0
 136              	.LVL13:
  41:../Sources/SteeringControl.c **** 
  42:../Sources/SteeringControl.c **** 		newPosition = (Kp * error) + (Ki * errorSum) + (Kd * errorDifferential);
 137              		.loc 1 42 0
 138 0084 3349     		ldr	r1, .L21+28
 139 0086 281C     		add	r0, r5, #0
 140              	.LVL14:
 141 0088 FFF7FEFF 		bl	__aeabi_fmul
 142              	.LVL15:
 143 008c 5146     		mov	r1, sl
 144 008e FFF7FEFF 		bl	__aeabi_fadd
 145              	.LVL16:
 146 0092 3149     		ldr	r1, .L21+32
 147 0094 061C     		add	r6, r0, #0
 148 0096 4846     		mov	r0, r9
 149 0098 FFF7FEFF 		bl	__aeabi_fmul
 150              	.LVL17:
 151 009c 011C     		add	r1, r0, #0
 152 009e 301C     		add	r0, r6, #0
 153 00a0 FFF7FEFF 		bl	__aeabi_fadd
 154              	.LVL18:
 155 00a4 061C     		add	r6, r0, #0
  43:../Sources/SteeringControl.c **** 		
  44:../Sources/SteeringControl.c **** 		
  45:../Sources/SteeringControl.c **** 		
  46:../Sources/SteeringControl.c **** 		if (newPosition > STEERING_LIMIT_UPPER)
 156              		.loc 1 46 0
 157 00a6 2548     		ldr	r0, .L21+4
 158 00a8 8246     		mov	sl, r0
 159 00aa 5146     		mov	r1, sl
 160 00ac 301C     		add	r0, r6, #0
 161 00ae FFF7FEFF 		bl	__aeabi_fcmpgt
 162              	.LVL19:
 163 00b2 0028     		cmp	r0, #0
 164 00b4 06D1     		bne	.L13
  47:../Sources/SteeringControl.c **** 		{
  48:../Sources/SteeringControl.c **** 			newPosition = STEERING_LIMIT_UPPER;
  49:../Sources/SteeringControl.c **** 		}
  50:../Sources/SteeringControl.c **** 		else if (newPosition < STEERING_LIMIT_LOWER)
 165              		.loc 1 50 0
 166 00b6 2949     		ldr	r1, .L21+36
 167 00b8 301C     		add	r0, r6, #0
 168 00ba 8A46     		mov	sl, r1
 169 00bc FFF7FEFF 		bl	__aeabi_fcmplt
 170              	.LVL20:
 171 00c0 0028     		cmp	r0, #0
 172 00c2 23D0     		beq	.L20
 173              	.L13:
  51:../Sources/SteeringControl.c **** 		{
  52:../Sources/SteeringControl.c **** 			newPosition = STEERING_LIMIT_LOWER;
 174              		.loc 1 52 0
 175 00c4 5246     		mov	r2, sl
 176 00c6 2260     		str	r2, [r4]
 177 00c8 5046     		mov	r0, sl
 178              	.L12:
  53:../Sources/SteeringControl.c **** 		}
  54:../Sources/SteeringControl.c **** 		
  55:../Sources/SteeringControl.c **** 		previousError = error;
 179              		.loc 1 55 0
 180 00ca 3D60     		str	r5, [r7]
  56:../Sources/SteeringControl.c **** 		
  57:../Sources/SteeringControl.c **** 		#ifdef NEW_SERVO_RESCALE
  58:../Sources/SteeringControl.c **** 		newPosition = newPosition*NEW_SERVO_RESCALE;
 181              		.loc 1 58 0
 182 00cc 2449     		ldr	r1, .L21+40
 183 00ce FFF7FEFF 		bl	__aeabi_fmul
 184              	.LVL21:
 185 00d2 2060     		str	r0, [r4]
 186              	.LVL22:
 187              	.L3:
 188              	.LBE2:
  59:../Sources/SteeringControl.c **** 		#endif
  60:../Sources/SteeringControl.c **** 	}
  61:../Sources/SteeringControl.c **** 	
  62:../Sources/SteeringControl.c **** 	return SERVO_MOUNT_DIRECTION*newPosition;
 189              		.loc 1 62 0
 190 00d4 8025     		mov	r5, #128
 191 00d6 2C06     		lsl	r4, r5, #24
 192 00d8 0019     		add	r0, r0, r4
  63:../Sources/SteeringControl.c **** }
 193              		.loc 1 63 0
 194              		@ sp needed for prologue
 195 00da 1CBC     		pop	{r2, r3, r4}
 196 00dc 9046     		mov	r8, r2
 197 00de 9946     		mov	r9, r3
 198 00e0 A246     		mov	sl, r4
 199 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 200              	.LVL23:
 201              	.L4:
 202              	.LBB3:
  27:../Sources/SteeringControl.c **** 			errorSum += error * (TFC_Ticker[1] / 10000.0f);
 203              		.loc 1 27 0
 204 00e4 174E     		ldr	r6, .L21+12
 205 00e6 7068     		ldr	r0, [r6, #4]
 206 00e8 FFF7FEFF 		bl	__aeabi_ui2f
 207              	.LVL24:
 208 00ec 1849     		ldr	r1, .L21+24
 209 00ee FFF7FEFF 		bl	__aeabi_fdiv
 210              	.LVL25:
 211 00f2 291C     		add	r1, r5, #0
 212 00f4 FFF7FEFF 		bl	__aeabi_fmul
 213              	.LVL26:
 214 00f8 114F     		ldr	r7, .L21+8
 215 00fa 3968     		ldr	r1, [r7]
 216 00fc FFF7FEFF 		bl	__aeabi_fadd
 217              	.LVL27:
 218 0100 8046     		mov	r8, r0
 219 0102 3860     		str	r0, [r7]
 220 0104 9DE7     		b	.L5
 221              	.LVL28:
 222              	.L19:
 223 0106 0C48     		ldr	r0, .L21
 224              	.LVL29:
 225 0108 0068     		ldr	r0, [r0]
 226 010a E3E7     		b	.L3
 227              	.LVL30:
 228              	.L20:
  42:../Sources/SteeringControl.c **** 		newPosition = (Kp * error) + (Ki * errorSum) + (Kd * errorDifferential);
 229              		.loc 1 42 0
 230 010c 2660     		str	r6, [r4]
 231 010e 301C     		add	r0, r6, #0
 232 0110 DBE7     		b	.L12
 233              	.LVL31:
 234              	.L16:
  34:../Sources/SteeringControl.c **** 		else if (errorSum < -INTEGRAL_LIMIT)
 235              		.loc 1 34 0
 236 0112 144A     		ldr	r2, .L21+44
 237 0114 4046     		mov	r0, r8
 238 0116 111C     		add	r1, r2, #0
 239 0118 9246     		mov	sl, r2
 240 011a FFF7FEFF 		bl	__aeabi_fcmplt
 241              	.LVL32:
 242 011e 0028     		cmp	r0, #0
 243 0120 05D1     		bne	.L9
 244 0122 4046     		mov	r0, r8
 245 0124 0849     		ldr	r1, .L21+16
 246 0126 FFF7FEFF 		bl	__aeabi_fmul
 247              	.LVL33:
 248 012a 8246     		mov	sl, r0
 249 012c 95E7     		b	.L8
 250              	.L9:
  36:../Sources/SteeringControl.c **** 			errorSum = -INTEGRAL_LIMIT;
 251              		.loc 1 36 0
 252 012e 5346     		mov	r3, sl
 253 0130 3B60     		str	r3, [r7]
 254 0132 0D4F     		ldr	r7, .L21+48
 255 0134 BA46     		mov	sl, r7
 256 0136 90E7     		b	.L8
 257              	.L22:
 258              		.align	2
 259              	.L21:
 260 0138 00000000 		.word	.LANCHOR0
 261 013c F628DC3E 		.word	1054615798
 262 0140 00000000 		.word	.LANCHOR1
 263 0144 00000000 		.word	TFC_Ticker
 264 0148 0AD7233D 		.word	1025758986
 265 014c 00000000 		.word	.LANCHOR2
 266 0150 00401C46 		.word	1176256512
 267 0154 0AD7233C 		.word	1008981770
 268 0158 3480373A 		.word	976715828
 269 015c 9A9999BE 		.word	-1097229926
 270 0160 CDCC4C3F 		.word	1061997773
 271 0164 000080BF 		.word	-1082130432
 272 0168 0AD723BD 		.word	-1121724662
 273              	.LBE3:
 274              		.cfi_endproc
 275              	.LFE0:
 277              		.section	.bss.newPosition.5887,"aw",%nobits
 278              		.align	2
 279              		.set	.LANCHOR0,. + 0
 282              	newPosition.5887:
 283 0000 00000000 		.space	4
 284              		.section	.bss.errorSum.5888,"aw",%nobits
 285              		.align	2
 286              		.set	.LANCHOR1,. + 0
 289              	errorSum.5888:
 290 0000 00000000 		.space	4
 291              		.section	.bss.previousError.5889,"aw",%nobits
 292              		.align	2
 293              		.set	.LANCHOR2,. + 0
 296              	previousError.5889:
 297 0000 00000000 		.space	4
 298              		.text
 299              	.Letext0:
 300              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 301              		.file 3 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 302              		.file 4 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
DEFINED SYMBOLS
                            *ABS*:00000000 SteeringControl.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:27     .text.getDesiredServoValue:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:32     .text.getDesiredServoValue:00000000 getDesiredServoValue
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:260    .text.getDesiredServoValue:00000138 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:278    .bss.newPosition.5887:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:282    .bss.newPosition.5887:00000000 newPosition.5887
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:285    .bss.errorSum.5888:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:289    .bss.errorSum.5888:00000000 errorSum.5888
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:292    .bss.previousError.5889:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccXsX8KK.s:296    .bss.previousError.5889:00000000 previousError.5889
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_f2iz
__aeabi_fcmplt
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_fadd
__aeabi_fcmpgt
__aeabi_fsub
TFC_Ticker
