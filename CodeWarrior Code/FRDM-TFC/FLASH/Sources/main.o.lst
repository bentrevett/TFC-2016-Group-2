   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.rawFocussingMode,"ax",%progbits
  18              		.align	2
  19              		.global	rawFocussingMode
  20              		.code	16
  21              		.thumb_func
  23              	rawFocussingMode:
  24              	.LFB2:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** 
   2:../Sources/main.c **** /*************************************
   3:../Sources/main.c **** //// Shield Interfaces Description /////////////////
   4:../Sources/main.c **** 
   5:../Sources/main.c **** //// DIP /////////////////
   6:../Sources/main.c **** 
   7:../Sources/main.c **** Standard Mode:
   8:../Sources/main.c **** 
   9:../Sources/main.c **** 1	2	3	4
  10:../Sources/main.c **** X	0  	0	X	Raw Focusing Mode
  11:../Sources/main.c **** X	1	0	X	Servo Alignment
  12:../Sources/main.c **** X	0	1	X	Derivative Focusing Mode
  13:../Sources/main.c **** X	1	1	X	Line Following Mode
  14:../Sources/main.c **** Pin 1:	1 HBRIDGE enabled, RunningState;	0 HBRIDGE DISSABLED;
  15:../Sources/main.c **** Pin 4:	0 SingleSpeed_SingleUart;	1 DualSpeed_NoUart
  16:../Sources/main.c **** 
  17:../Sources/main.c **** Race Mode:
  18:../Sources/main.c **** 
  19:../Sources/main.c **** Pin 1: HBRIDGE enabled
  20:../Sources/main.c **** Pin 2: S-Mode enabled
  21:../Sources/main.c **** Pin 3: Cross Detection enabled
  22:../Sources/main.c **** Pin 4: Stopline Detection enabled
  23:../Sources/main.c **** 
  24:../Sources/main.c **** 
  25:../Sources/main.c **** //// LEDs /////////////////		0 LED_ON	x LED_OFF
  26:../Sources/main.c **** 
  27:../Sources/main.c **** 0xxx	Line lost
  28:../Sources/main.c **** x0xx	Line temporarily lost
  29:../Sources/main.c **** xx0x	Right edge following
  30:../Sources/main.c **** xxx0	Left edge following
  31:../Sources/main.c **** xx00	Double line following
  32:../Sources/main.c **** 0xx0	Cross Section detected
  33:../Sources/main.c **** 00xx	Stop Line detected
  34:../Sources/main.c **** x00x	S-Mode active
  35:../Sources/main.c **** 0000	Low battery
  36:../Sources/main.c **** 
  37:../Sources/main.c **** 
  38:../Sources/main.c **** //// Pots ///////////
  39:../Sources/main.c **** 
  40:../Sources/main.c **** Standard mode:
  41:../Sources/main.c **** Pot_1	Max Speed percent
  42:../Sources/main.c **** Pot_2	No Function
  43:../Sources/main.c **** 
  44:../Sources/main.c **** Race mode:
  45:../Sources/main.c **** Pot_1	Max Speed percent
  46:../Sources/main.c **** Pot_2	Friction Coefficient Correction - rotate clockwise to decrease friction coefficient
  47:../Sources/main.c **** 
  48:../Sources/main.c **** 
  49:../Sources/main.c **** //// Push Buttons ///////////
  50:../Sources/main.c **** 
  51:../Sources/main.c **** Switch_1	Stop Line reset
  52:../Sources/main.c **** 
  53:../Sources/main.c **** **************************************/
  54:../Sources/main.c **** 
  55:../Sources/main.c **** #include "main.h"
  56:../Sources/main.c **** 
  57:../Sources/main.c **** #define CHANNEL_0 0
  58:../Sources/main.c **** #define CHANNEL_1 1
  59:../Sources/main.c **** #define PUSH_BUTTON_1 1
  60:../Sources/main.c **** #define PUSH_BUTTON_2 2
  61:../Sources/main.c **** //#define TESTING
  62:../Sources/main.c **** 
  63:../Sources/main.c **** 
  64:../Sources/main.c **** #define BLUETOOTH_FLAG	-128
  65:../Sources/main.c **** 
  66:../Sources/main.c **** #define FLOAT_TO_CHAR(x)	(x >= 0.0) ? (signed char)(x + 0.5) : (signed char)(x - 0.5)		
  67:../Sources/main.c **** #define LIMIT_255(x)		(x <= 254.5f && x >= 0.0f && !(x >= 127.5f && x <= 128.5f)) ? x : ((x > 255.0
  68:../Sources/main.c **** #define LIMIT_ABS_127(x)	(x <= 126.9f && x >= -126.9f) ? x : ((x > 126.9f) ? 126.9f : -126.9f)
  69:../Sources/main.c **** 
  70:../Sources/main.c **** #define LINE_SCAN_IMAGE(x)	LINE_SCAN_IMAGE_EXAPND(x)	// Second level of indirection needed to expan
  71:../Sources/main.c **** #define LINE_SCAN_IMAGE_EXAPND(x)	LineScanImage##x
  72:../Sources/main.c **** 
  73:../Sources/main.c **** // carState struct initialization - keeps the main parameters of the car state
  74:../Sources/main.c **** static carState_s carState =
  75:../Sources/main.c **** {   .motorState = FORCED_DISABLED, .UARTSpeedState = UNDEFINED, 
  76:../Sources/main.c ****     .lineDetectionState = LINE_LOST, .lineScanState = NO_NEW_LINESCAN_IMAGE, 
  77:../Sources/main.c **** 	.detectedType = NONE, .edge = NO_EDGE, .crossSection = NO, .crossSectionPosition = NO_CROSS,
  78:../Sources/main.c **** 	.lineDistance = STRAIGHT_DISTANCE_DEFAULT, .carMode = NORMAL_MODE, .sMode = S_MODE_OFF};
  79:../Sources/main.c **** 
  80:../Sources/main.c **** uint16_t loop_time = 0, loop_begin = 0;
  81:../Sources/main.c **** float batteryLevel = 0;
  82:../Sources/main.c **** static float targetSpeed = 0;
  83:../Sources/main.c **** float incline_speed;
  84:../Sources/main.c **** float speedL = 0;
  85:../Sources/main.c **** float speedR = 0;
  86:../Sources/main.c **** static float servoValue = 0;
  87:../Sources/main.c **** extern int32_t newExposure;
  88:../Sources/main.c **** float max_speed_percent = 30;
  89:../Sources/main.c **** uint8_t received_byte1 = 0; //received byte from bluetooth 0 to 255
  90:../Sources/main.c **** uint8_t received_byte2 = 0;
  91:../Sources/main.c **** uint8_t count = 0; //bluetooth count
  92:../Sources/main.c **** static uint8_t stoplineJustDetected = 0;
  93:../Sources/main.c **** float friction_correct = 0;
  94:../Sources/main.c **** float i =0; // for testing pwm speed for torque control
  95:../Sources/main.c **** uint8_t camera_output[128];
  96:../Sources/main.c **** #ifdef S_MODE_ENABLE
  97:../Sources/main.c **** uint8_t s_mode_enable = 1;
  98:../Sources/main.c **** #else
  99:../Sources/main.c **** uint8_t s_mode_enable = 0;
 100:../Sources/main.c **** #endif
 101:../Sources/main.c **** 
 102:../Sources/main.c **** #ifdef CROSS_DETECTION_ENABLE
 103:../Sources/main.c **** uint8_t cross_section_enable = 1;
 104:../Sources/main.c **** #else
 105:../Sources/main.c **** uint8_t cross_section_enable = 0;
 106:../Sources/main.c **** #endif
 107:../Sources/main.c **** 
 108:../Sources/main.c **** #ifdef STOPLINE_ENABLE
 109:../Sources/main.c **** uint8_t stopline_enable = 1;
 110:../Sources/main.c **** #else
 111:../Sources/main.c **** uint8_t stopline_enable = 0;
 112:../Sources/main.c **** #endif
 113:../Sources/main.c **** 
 114:../Sources/main.c **** // Test timer ////////////////////
 115:../Sources/main.c **** uint32_t test_begin = 0;
 116:../Sources/main.c **** uint32_t test_time  = 0;
 117:../Sources/main.c **** //////////////////////////////////
 118:../Sources/main.c **** 
 119:../Sources/main.c **** 
 120:../Sources/main.c **** int main(void)
 121:../Sources/main.c **** {
 122:../Sources/main.c **** 	TFC_Init(&carState);
 123:../Sources/main.c **** 	
 124:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 125:../Sources/main.c **** 		Init_I2C();
 126:../Sources/main.c **** 		Init_Accelerometer();
 127:../Sources/main.c **** 	#endif
 128:../Sources/main.c **** 			
 129:../Sources/main.c **** 	while (1)
 130:../Sources/main.c **** 	{
 131:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 132:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 133:../Sources/main.c **** 			TFC_Task();
 134:../Sources/main.c **** 		#endif
 135:../Sources/main.c **** 		
 136:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS	
 137:../Sources/main.c **** 			evaluateUARTorSpeed(&carState);		// Checks DIP switch
 138:../Sources/main.c **** 		#endif
 139:../Sources/main.c **** 		
 140:../Sources/main.c **** 		evaluateMotorState(&carState);		// Checks DIP switch
 141:../Sources/main.c **** 		
 142:../Sources/main.c **** 		LEDfeedback(&carState);				// Gives feedback for car state by the 4 LEDs
 143:../Sources/main.c **** 		
 144:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 145:../Sources/main.c **** 		
 146:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS
 147:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 148:../Sources/main.c **** 			{
 149:../Sources/main.c **** 			default:
 150:../Sources/main.c **** 			case 0:
 151:../Sources/main.c **** 				rawFocussingMode(&carState);
 152:../Sources/main.c **** 				break;
 153:../Sources/main.c **** 	
 154:../Sources/main.c **** 			case 1:
 155:../Sources/main.c **** 				servoAlignment();
 156:../Sources/main.c **** 				break;
 157:../Sources/main.c **** 	
 158:../Sources/main.c **** 			case 2:
 159:../Sources/main.c **** 				derivativeFocussingMode(&carState);
 160:../Sources/main.c **** 				break;
 161:../Sources/main.c **** 	
 162:../Sources/main.c **** 			case 3:
 163:../Sources/main.c **** 				lineFollowingMode(&carState);
 164:../Sources/main.c **** 				break;
 165:../Sources/main.c **** 			}
 166:../Sources/main.c **** 		#else
 167:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 1) & 0x01) == 1)
 168:../Sources/main.c **** 				s_mode_enable = 1;
 169:../Sources/main.c **** 			else
 170:../Sources/main.c **** 				s_mode_enable = 0;
 171:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 2) & 0x01) == 1)
 172:../Sources/main.c **** 				cross_section_enable = 1;
 173:../Sources/main.c **** 			else
 174:../Sources/main.c **** 				cross_section_enable = 0;
 175:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 3) & 0x01) == 1)
 176:../Sources/main.c **** 			{
 177:../Sources/main.c **** 				stopline_enable = 1;
 178:../Sources/main.c **** 			}
 179:../Sources/main.c **** 			else
 180:../Sources/main.c **** 			{
 181:../Sources/main.c **** 				stopline_enable = 0;
 182:../Sources/main.c **** 			}
 183:../Sources/main.c **** 			
 184:../Sources/main.c **** 			friction_correct = ((0 + 1.0f)/2)*MAX_FRICTION_CORRECT;
 185:../Sources/main.c **** 			
 186:../Sources/main.c **** 			lineFollowingMode(&carState);
 187:../Sources/main.c **** 		#endif
 188:../Sources/main.c **** 		
 189:../Sources/main.c **** 		
 190:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 191:../Sources/main.c **** 	}
 192:../Sources/main.c **** 	
 193:../Sources/main.c **** 	return 0;
 194:../Sources/main.c **** }
 195:../Sources/main.c **** 
 196:../Sources/main.c **** 
 197:../Sources/main.c **** void lineFollowingMode(carState_s* carState)
 198:../Sources/main.c **** {
 199:../Sources/main.c **** 	static lineScanState_t steeringControlUpdate;
 200:../Sources/main.c **** 	static uint32_t totalIntensity = 0;
 201:../Sources/main.c **** 	
 202:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 203:../Sources/main.c **** 	{
 204:../Sources/main.c **** 		stoplineJustDetected = 0;
 205:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 206:../Sources/main.c **** 	}
 207:../Sources/main.c **** 
 208:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 209:../Sources/main.c **** 	{
 210:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 211:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 212:../Sources/main.c **** 	}
 213:../Sources/main.c **** 	
 214:../Sources/main.c **** 	#ifdef TELEMETRY_ENABLE
 215:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 216:../Sources/main.c **** 	{
 217:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 218:../Sources/main.c **** 		telemetrySendData();
 219:../Sources/main.c **** 		telemetryReadData();
 220:../Sources/main.c **** 	}
 221:../Sources/main.c **** 	#endif
 222:../Sources/main.c **** 	
 223:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 224:../Sources/main.c **** 		if(TFC_Ticker[8]>=1000){
 225:../Sources/main.c **** 			TFC_Ticker[8]=0;
 226:../Sources/main.c **** 			//accel_z=getZAcc();
 227:../Sources/main.c **** 			if(getZAcc<-1){
 228:../Sources/main.c **** 				incline_speed=max_speed_percent+10;
 229:../Sources/main.c **** 			}
 230:../Sources/main.c **** 			else{
 231:../Sources/main.c **** 				incline_speed=max_speed_percent;
 232:../Sources/main.c **** 				}
 233:../Sources/main.c **** 		}
 234:../Sources/main.c **** 	#endif
 235:../Sources/main.c **** 	#ifndef ACCELEROMETER_ENABLE
 236:../Sources/main.c **** 		incline_speed=max_speed_percent;
 237:../Sources/main.c **** 	#endif
 238:../Sources/main.c **** 		
 239:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 240:../Sources/main.c **** 	{
 241:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 242:../Sources/main.c **** 	//	test_begin = TFC_Ticker[5];
 243:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 244:../Sources/main.c **** 	//	test_time = TFC_Ticker[5] - test_begin;
 245:../Sources/main.c **** 		processRaceLine(carState);
 246:../Sources/main.c **** 	}
 247:../Sources/main.c **** 		
 248:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 249:../Sources/main.c **** 	{
 250:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 251:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 252:../Sources/main.c **** 		
 253:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 254:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 255:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 256:../Sources/main.c **** 					{
 257:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 258:../Sources/main.c **** 					}
 259:../Sources/main.c **** 			}
 260:../Sources/main.c **** 	
 261:../Sources/main.c **** 		
 262:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 263:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 264:../Sources/main.c **** 	}
 265:../Sources/main.c **** 
 266:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 267:../Sources/main.c **** 	{
 268:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 269:../Sources/main.c **** 		if(stopline_enable == 1)
 270:../Sources/main.c **** 		{
 271:../Sources/main.c **** 			findStop(carState);
 272:../Sources/main.c **** 		}
 273:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 274:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 275:../Sources/main.c **** 	}
 276:../Sources/main.c **** 
 277:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 278:../Sources/main.c **** 	{
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 280:../Sources/main.c **** 		
 281:../Sources/main.c **** 		float activeDifferentialModifier[] =
 282:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 283:../Sources/main.c **** 		
 284:../Sources/main.c **** 		// Speed measurement depending on the particular mode which is used
 285:../Sources/main.c **** 		#if (SPEED_DETECTION_MODE == 0)
 286:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 287:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 288:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 1)
 289:../Sources/main.c **** 			speedR = (getSpeed(CHANNEL_0) + getSpeed(CHANNEL_1))/2;
 290:../Sources/main.c **** 			speedL = speedR;
 291:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 2)
 292:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 293:../Sources/main.c **** 			speedL = speedR;
 294:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 3)
 295:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 296:../Sources/main.c **** 			speedR = speedL;
 297:../Sources/main.c **** 		#endif
 298:../Sources/main.c **** 
 299:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 300:../Sources/main.c **** 		{//50000=1sec
 301:../Sources/main.c **** #ifdef TESTING
 302:../Sources/main.c **** 			if(TFC_Ticker[5]>50000){
 303:../Sources/main.c **** 				TFC_Ticker[5]=0;
 304:../Sources/main.c **** 				i+=0.1f;
 305:../Sources/main.c **** 				TFC_SetMotorPWM(i,i);
 306:../Sources/main.c **** 			}
 307:../Sources/main.c **** #endif
 308:../Sources/main.c **** #ifndef TESTING
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 310:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 312:../Sources/main.c **** #endif
 313:../Sources/main.c **** 		}
 314:../Sources/main.c **** 		else if (carState->UARTSpeedState == SINGLE_SPEED_SINGLE_UART)
 315:../Sources/main.c **** 		{
 316:../Sources/main.c **** 			// Missing setup - Normally this mode is not used
 317:../Sources/main.c **** 		}
 318:../Sources/main.c **** 	}
 319:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 320:../Sources/main.c **** 	{
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 323:../Sources/main.c **** 	}
 324:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 325:../Sources/main.c **** 	{
 326:../Sources/main.c **** 		if(stopline_enable == 1)
 327:../Sources/main.c **** 		{	
 328:../Sources/main.c **** 			static uint32_t stoplineDetectedMoment = 0;
 329:../Sources/main.c **** 			static uint32_t stopDelayTime = 0;
 330:../Sources/main.c **** 			
 331:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 332:../Sources/main.c **** 			{
 333:../Sources/main.c **** 				stoplineJustDetected = 1;
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 335:../Sources/main.c **** 				
 336:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 338:../Sources/main.c **** 				
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 340:../Sources/main.c **** 				{
 341:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 342:../Sources/main.c **** 				}
 343:../Sources/main.c **** 				
 344:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 345:../Sources/main.c **** 			}
 346:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 347:../Sources/main.c **** 			{
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 349:../Sources/main.c **** 				
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 351:../Sources/main.c **** 				{
 352:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 353:../Sources/main.c **** 				}
 354:../Sources/main.c **** 				else
 355:../Sources/main.c **** 				{
 356:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 357:../Sources/main.c **** 				}
 358:../Sources/main.c **** 			}
 359:../Sources/main.c **** 		}	
 360:../Sources/main.c **** 	}
 361:../Sources/main.c **** }
 362:../Sources/main.c **** 
 363:../Sources/main.c **** void rawFocussingMode(carState_s* carState)
 364:../Sources/main.c **** {
  26              		.loc 1 364 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
 365:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
  37              		.loc 1 365 0
  38 0002 204B     		ldr	r3, .L8
 364:../Sources/main.c **** {
  39              		.loc 1 364 0
  40 0004 4746     		mov	r7, r8
  41              		.loc 1 365 0
  42 0006 1A68     		ldr	r2, [r3]
 364:../Sources/main.c **** {
  43              		.loc 1 364 0
  44 0008 80B4     		push	{r7}
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47              		.cfi_offset 8, -24
  48              		.loc 1 365 0
  49 000a C72A     		cmp	r2, #199
  50 000c 02D9     		bls	.L1
  51              		.loc 1 365 0 is_stmt 0
  52 000e C178     		ldrb	r1, [r0, #3]
  53 0010 0029     		cmp	r1, #0
  54 0012 02D0     		beq	.L7
  55              	.LVL1:
  56              	.L1:
 366:../Sources/main.c **** 	{
 367:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 369:../Sources/main.c **** 
 370:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 373:../Sources/main.c **** 
 374:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 375:../Sources/main.c **** 		
 376:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 378:../Sources/main.c **** 			{
 379:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 380:../Sources/main.c **** 			}
 381:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 382:../Sources/main.c **** 		#endif		
 383:../Sources/main.c **** 	}
 384:../Sources/main.c **** }
  57              		.loc 1 384 0 is_stmt 1
  58              		@ sp needed for prologue
  59 0014 04BC     		pop	{r2}
  60 0016 9046     		mov	r8, r2
  61 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
  62              	.LVL2:
  63              	.L7:
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  64              		.loc 1 368 0
  65 001a 0124     		mov	r4, #1
 367:../Sources/main.c **** 		TFC_Ticker[0] = 0;
  66              		.loc 1 367 0
  67 001c 1960     		str	r1, [r3]
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  68              		.loc 1 368 0
  69 001e C470     		strb	r4, [r0, #3]
 370:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
  70              		.loc 1 370 0
  71 0020 0021     		mov	r1, #0
  72 0022 0020     		mov	r0, #0
  73              	.LVL3:
  74 0024 FFF7FEFF 		bl	TFC_SetServo
  75              	.LVL4:
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  76              		.loc 1 371 0
  77 0028 174E     		ldr	r6, .L8+4
  78 002a 8020     		mov	r0, #128
  79 002c 8503     		lsl	r5, r0, #14
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  80              		.loc 1 372 0
  81 002e 0020     		mov	r0, #0
  82 0030 011C     		add	r1, r0, #0
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  83              		.loc 1 371 0
  84 0032 B560     		str	r5, [r6, #8]
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  85              		.loc 1 372 0
  86 0034 FFF7FEFF 		bl	TFC_SetMotorPWM
  87              	.LVL5:
 374:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
  88              		.loc 1 374 0
  89 0038 144E     		ldr	r6, .L8+8
  90 003a 0024     		mov	r4, #0
  91 003c 3068     		ldr	r0, [r6]
  92 003e FFF7FEFF 		bl	getTotalIntensity
  93              	.LVL6:
  94 0042 1349     		ldr	r1, .L8+12
  95 0044 FFF7FEFF 		bl	calculateNewExposure
  96              	.LVL7:
  97 0048 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
  98              	.LVL8:
  99              	.LBB23:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 100              		.loc 1 377 0
 101 004c 8023     		mov	r3, #128
 102 004e 5A00     		lsl	r2, r3, #1
 103 0050 104D     		ldr	r5, .L8+16
 104 0052 114F     		ldr	r7, .L8+20
 105 0054 9046     		mov	r8, r2
 106              	.LVL9:
 107              	.L3:
 379:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 108              		.loc 1 379 0
 109 0056 3168     		ldr	r1, [r6]
 110 0058 0819     		add	r0, r1, r4
 111 005a 0288     		ldrh	r2, [r0]
 112 005c 391C     		mov	r1, r7
 113 005e 281C     		mov	r0, r5
 114 0060 FFF7FEFF 		bl	Qprintf
 115              	.LVL10:
 116 0064 3368     		ldr	r3, [r6]
 117 0066 0234     		add	r4, r4, #2
 118 0068 1A19     		add	r2, r3, r4
 119 006a 1288     		ldrh	r2, [r2]
 120 006c 281C     		mov	r0, r5
 121 006e 391C     		mov	r1, r7
 122 0070 0234     		add	r4, r4, #2
 123 0072 FFF7FEFF 		bl	Qprintf
 124              	.LVL11:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 125              		.loc 1 377 0
 126 0076 4445     		cmp	r4, r8
 127 0078 EDD1     		bne	.L3
 128              	.LBE23:
 381:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 129              		.loc 1 381 0
 130 007a 281C     		mov	r0, r5
 131 007c 0749     		ldr	r1, .L8+24
 132 007e FFF7FEFF 		bl	Qprintf
 133              	.LVL12:
 134 0082 C7E7     		b	.L1
 135              	.L9:
 136              		.align	2
 137              	.L8:
 138 0084 00000000 		.word	TFC_Ticker
 139 0088 00F10F40 		.word	1074786560
 140 008c 00000000 		.word	LineScanImage0
 141 0090 E0930400 		.word	300000
 142 0094 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 143 0098 00000000 		.word	.LC3
 144 009c 04000000 		.word	.LC5
 145              		.cfi_endproc
 146              	.LFE2:
 148              		.section	.text.derivativeFocussingMode,"ax",%progbits
 149              		.align	2
 150              		.global	derivativeFocussingMode
 151              		.code	16
 152              		.thumb_func
 154              	derivativeFocussingMode:
 155              	.LFB3:
 385:../Sources/main.c **** 
 386:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 387:../Sources/main.c **** {
 156              		.loc 1 387 0
 157              		.cfi_startproc
 158              	.LVL13:
 159 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 20
 162              		.cfi_offset 4, -20
 163              		.cfi_offset 5, -16
 164              		.cfi_offset 6, -12
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 4746     		mov	r7, r8
 168 0004 80B4     		push	{r7}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 24
 171              		.cfi_offset 8, -24
 388:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 172              		.loc 1 388 0
 173 0006 284C     		ldr	r4, .L16
 387:../Sources/main.c **** {
 174              		.loc 1 387 0
 175 0008 C0B0     		sub	sp, sp, #256
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 280
 178              		.loc 1 388 0
 179 000a 2368     		ldr	r3, [r4]
 180 000c C72B     		cmp	r3, #199
 181 000e 02D9     		bls	.L10
 182              		.loc 1 388 0 is_stmt 0
 183 0010 C178     		ldrb	r1, [r0, #3]
 184 0012 0029     		cmp	r1, #0
 185 0014 03D0     		beq	.L15
 186              	.LVL14:
 187              	.L10:
 389:../Sources/main.c **** 	{
 390:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 391:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 392:../Sources/main.c **** 
 393:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 396:../Sources/main.c **** 
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 398:../Sources/main.c **** 		int16_t temp[128];
 399:../Sources/main.c **** 		
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 403:../Sources/main.c **** 		
 404:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 405:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 406:../Sources/main.c **** 			{
 407:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 408:../Sources/main.c **** 			}
 409:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 410:../Sources/main.c **** 		#endif	
 411:../Sources/main.c **** 	}
 412:../Sources/main.c **** }
 188              		.loc 1 412 0 is_stmt 1
 189 0016 40B0     		add	sp, sp, #256
 190              		@ sp needed for prologue
 191 0018 04BC     		pop	{r2}
 192 001a 9046     		mov	r8, r2
 193 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 194              	.LVL15:
 195              	.L15:
 196              	.LBB24:
 391:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 197              		.loc 1 391 0
 198 001e 0122     		mov	r2, #1
 390:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 199              		.loc 1 390 0
 200 0020 2160     		str	r1, [r4]
 391:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 201              		.loc 1 391 0
 202 0022 C270     		strb	r2, [r0, #3]
 393:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 203              		.loc 1 393 0
 204 0024 0021     		mov	r1, #0
 205 0026 0020     		mov	r0, #0
 206              	.LVL16:
 207 0028 FFF7FEFF 		bl	TFC_SetServo
 208              	.LVL17:
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 209              		.loc 1 394 0
 210 002c 1F4E     		ldr	r6, .L16+4
 211 002e 8020     		mov	r0, #128
 212 0030 8503     		lsl	r5, r0, #14
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 213              		.loc 1 395 0
 214 0032 0020     		mov	r0, #0
 215 0034 011C     		add	r1, r0, #0
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 216              		.loc 1 394 0
 217 0036 B560     		str	r5, [r6, #8]
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 218              		.loc 1 395 0
 219 0038 FFF7FEFF 		bl	TFC_SetMotorPWM
 220              	.LVL18:
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 221              		.loc 1 397 0
 222 003c 1C4F     		ldr	r7, .L16+8
 386:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 223              		.loc 1 386 0
 224 003e 40AE     		add	r6, sp, #256
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 225              		.loc 1 397 0
 226 0040 3868     		ldr	r0, [r7]
 227 0042 FFF7FEFF 		bl	getTotalIntensity
 228              	.LVL19:
 229 0046 1B49     		ldr	r1, .L16+12
 230 0048 FFF7FEFF 		bl	calculateNewExposure
 231              	.LVL20:
 232 004c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 233              	.LVL21:
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 234              		.loc 1 400 0
 235 0050 194D     		ldr	r5, .L16+16
 236 0052 6369     		ldr	r3, [r4, #20]
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 237              		.loc 1 401 0
 238 0054 3868     		ldr	r0, [r7]
 239 0056 6946     		mov	r1, sp
 240 0058 8022     		mov	r2, #128
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 241              		.loc 1 400 0
 242 005a 2B60     		str	r3, [r5]
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 243              		.loc 1 401 0
 244 005c FFF7FEFF 		bl	edgeDetection
 245              	.LVL22:
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 246              		.loc 1 402 0
 247 0060 6469     		ldr	r4, [r4, #20]
 248 0062 2968     		ldr	r1, [r5]
 249 0064 1548     		ldr	r0, .L16+20
 250 0066 621A     		sub	r2, r4, r1
 386:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 251              		.loc 1 386 0
 252 0068 B046     		mov	r8, r6
 253 006a 154D     		ldr	r5, .L16+24
 254 006c 154E     		ldr	r6, .L16+28
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 255              		.loc 1 402 0
 256 006e 0260     		str	r2, [r0]
 257              	.LVL23:
 258 0070 6C46     		mov	r4, sp
 259              	.LVL24:
 260              	.L12:
 261              	.LBB25:
 407:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 262              		.loc 1 407 0
 263 0072 0023     		mov	r3, #0
 264 0074 E75E     		ldrsh	r7, [r4, r3]
 265 0076 311C     		mov	r1, r6
 266 0078 FB17     		asr	r3, r7, #31
 267 007a FA18     		add	r2, r7, r3
 268 007c 5A40     		eor	r2, r3
 269 007e 281C     		mov	r0, r5
 270 0080 FFF7FEFF 		bl	Qprintf
 271              	.LVL25:
 272 0084 0223     		mov	r3, #2
 273 0086 E15E     		ldrsh	r1, [r4, r3]
 274 0088 0434     		add	r4, r4, #4
 275 008a C817     		asr	r0, r1, #31
 276 008c 0A18     		add	r2, r1, r0
 277 008e 4240     		eor	r2, r0
 278 0090 311C     		mov	r1, r6
 279 0092 281C     		mov	r0, r5
 280 0094 FFF7FEFF 		bl	Qprintf
 281              	.LVL26:
 405:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 282              		.loc 1 405 0
 283 0098 4445     		cmp	r4, r8
 284 009a EAD1     		bne	.L12
 285              	.LBE25:
 409:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 286              		.loc 1 409 0
 287 009c 281C     		mov	r0, r5
 288 009e 0A49     		ldr	r1, .L16+32
 289 00a0 FFF7FEFF 		bl	Qprintf
 290              	.LVL27:
 291 00a4 B7E7     		b	.L10
 292              	.L17:
 293 00a6 C046     		.align	2
 294              	.L16:
 295 00a8 00000000 		.word	TFC_Ticker
 296 00ac 00F10F40 		.word	1074786560
 297 00b0 00000000 		.word	LineScanImage0
 298 00b4 E0930400 		.word	300000
 299 00b8 00000000 		.word	.LANCHOR0
 300 00bc 00000000 		.word	.LANCHOR1
 301 00c0 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 302 00c4 00000000 		.word	.LC3
 303 00c8 04000000 		.word	.LC5
 304              	.LBE24:
 305              		.cfi_endproc
 306              	.LFE3:
 308              		.section	.text.TFC_Init,"ax",%progbits
 309              		.align	2
 310              		.global	TFC_Init
 311              		.code	16
 312              		.thumb_func
 314              	TFC_Init:
 315              	.LFB4:
 413:../Sources/main.c **** 
 414:../Sources/main.c **** 
 415:../Sources/main.c **** void TFC_Init(carState_s* carState)
 416:../Sources/main.c **** {
 316              		.loc 1 416 0
 317              		.cfi_startproc
 318              	.LVL28:
 319 0000 10B5     		push	{r4, lr}
 320              	.LCFI5:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 14, -4
 324              		.loc 1 416 0
 325 0002 041C     		mov	r4, r0
 417:../Sources/main.c **** 	TFC_InitClock();
 326              		.loc 1 417 0
 327 0004 FFF7FEFF 		bl	TFC_InitClock
 328              	.LVL29:
 418:../Sources/main.c **** 	TFC_InitSysTick();
 329              		.loc 1 418 0
 330 0008 FFF7FEFF 		bl	TFC_InitSysTick
 331              	.LVL30:
 419:../Sources/main.c **** 	TFC_InitGPIO();
 332              		.loc 1 419 0
 333 000c FFF7FEFF 		bl	TFC_InitGPIO
 334              	.LVL31:
 420:../Sources/main.c **** 	TFC_InitServos();
 335              		.loc 1 420 0
 336 0010 FFF7FEFF 		bl	TFC_InitServos
 337              	.LVL32:
 421:../Sources/main.c **** 	TFC_InitMotorPWM();
 338              		.loc 1 421 0
 339 0014 FFF7FEFF 		bl	TFC_InitMotorPWM
 340              	.LVL33:
 422:../Sources/main.c **** 	TFC_InitADCs(carState);
 341              		.loc 1 422 0
 342 0018 201C     		mov	r0, r4
 343 001a FFF7FEFF 		bl	TFC_InitADCs
 344              	.LVL34:
 423:../Sources/main.c **** 	TFC_InitLineScanCamera();
 345              		.loc 1 423 0
 346 001e FFF7FEFF 		bl	TFC_InitLineScanCamera
 347              	.LVL35:
 424:../Sources/main.c **** 	
 425:../Sources/main.c **** 	#ifdef CHANGE_BLUETOOTH_BAUD_RATE
 426:../Sources/main.c **** 		TFC_InitUARTs(SDA_SERIAL_BAUD, 38400);	// 38400 is default for the BL module in AT mode 2
 427:../Sources/main.c **** 		int dummy_timee = TFC_Ticker[0];
 428:../Sources/main.c **** 		while(TFC_Ticker[0] - dummy_timee < 30000)
 429:../Sources/main.c **** 		{}
 430:../Sources/main.c **** 		TFC_BluetoothModuleSetBaud(BLUETOOTH_BAUD);		// Need to manually power the AT pin on the module
 431:../Sources/main.c **** 	#endif
 432:../Sources/main.c **** 	
 433:../Sources/main.c **** 	TFC_InitUARTs(SDA_SERIAL_BAUD, BLUETOOTH_BAUD);
 348              		.loc 1 433 0
 349 0022 E121     		mov	r1, #225
 350 0024 4902     		lsl	r1, r1, #9
 351 0026 081C     		mov	r0, r1
 352 0028 FFF7FEFF 		bl	TFC_InitUARTs
 353              	.LVL36:
 434:../Sources/main.c **** 	
 435:../Sources/main.c **** 	#ifdef TERMINAL_ENABLED
 436:../Sources/main.c **** 		TFC_InitTerminal();
 354              		.loc 1 436 0
 355 002c FFF7FEFF 		bl	TFC_InitTerminal
 356              	.LVL37:
 437:../Sources/main.c **** 	#endif
 438:../Sources/main.c **** 		
 439:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 357              		.loc 1 439 0
 358 0030 8022     		mov	r2, #128
 359 0032 094B     		ldr	r3, .L19
 360 0034 9003     		lsl	r0, r2, #14
 440:../Sources/main.c **** 	TFC_SetMotorPWM(0, 0);
 361              		.loc 1 440 0
 362 0036 0024     		mov	r4, #0
 363              	.LVL38:
 439:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 364              		.loc 1 439 0
 365 0038 9860     		str	r0, [r3, #8]
 366              		.loc 1 440 0
 367 003a 211C     		add	r1, r4, #0
 368 003c 201C     		add	r0, r4, #0
 369 003e FFF7FEFF 		bl	TFC_SetMotorPWM
 370              	.LVL39:
 441:../Sources/main.c **** 	TFC_InitSpeedSensor();
 371              		.loc 1 441 0
 372 0042 FFF7FEFF 		bl	TFC_InitSpeedSensor
 373              	.LVL40:
 442:../Sources/main.c **** 	preloadProbabilityTables(); //Prevents probability tables for stop line evaluation from being crea
 374              		.loc 1 442 0
 375 0046 FFF7FEFF 		bl	preloadProbabilityTables
 376              	.LVL41:
 443:../Sources/main.c **** 	generateKernel();
 377              		.loc 1 443 0
 378 004a FFF7FEFF 		bl	generateKernel
 379              	.LVL42:
 444:../Sources/main.c **** 	
 445:../Sources/main.c **** 	#ifdef RACE_MODE_CONTROLS
 446:../Sources/main.c **** 	PORTA_PCR2 &= 0xFFFFF8FF;
 447:../Sources/main.c **** 	PORTA_PCR2 |= 0x00000300;
 448:../Sources/main.c **** 	disable_irq(INT_UART0-16);
 449:../Sources/main.c **** 	carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 450:../Sources/main.c **** 	#endif
 451:../Sources/main.c **** 	
 452:../Sources/main.c **** 	TFC_SetServo(0, 0);
 380              		.loc 1 452 0
 381 004e 0020     		mov	r0, #0
 382 0050 211C     		add	r1, r4, #0
 383 0052 FFF7FEFF 		bl	TFC_SetServo
 384              	.LVL43:
 453:../Sources/main.c **** }
 385              		.loc 1 453 0
 386              		@ sp needed for prologue
 387 0056 10BD     		pop	{r4, pc}
 388              	.L20:
 389              		.align	2
 390              	.L19:
 391 0058 00F10F40 		.word	1074786560
 392              		.cfi_endproc
 393              	.LFE4:
 395              		.section	.text.TFC_Task,"ax",%progbits
 396              		.align	2
 397              		.global	TFC_Task
 398              		.code	16
 399              		.thumb_func
 401              	TFC_Task:
 402              	.LFB5:
 454:../Sources/main.c **** 
 455:../Sources/main.c **** void TFC_Task()
 456:../Sources/main.c **** {
 403              		.loc 1 456 0
 404              		.cfi_startproc
 405 0000 08B5     		push	{r3, lr}
 406              	.LCFI6:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 3, -8
 409              		.cfi_offset 14, -4
 457:../Sources/main.c **** #if defined(TERMINAL_USE_SDA_SERIAL)
 458:../Sources/main.c **** 	TFC_UART_Process();
 410              		.loc 1 458 0
 411 0002 FFF7FEFF 		bl	TFC_UART_Process
 412              	.LVL44:
 459:../Sources/main.c **** #endif
 460:../Sources/main.c **** 	TFC_ProcessTerminal();
 461:../Sources/main.c **** }
 413              		.loc 1 461 0
 414              		@ sp needed for prologue
 460:../Sources/main.c **** 	TFC_ProcessTerminal();
 415              		.loc 1 460 0
 416 0006 FFF7FEFF 		bl	TFC_ProcessTerminal
 417              	.LVL45:
 418              		.loc 1 461 0
 419 000a 08BD     		pop	{r3, pc}
 420              		.cfi_endproc
 421              	.LFE5:
 423              		.section	.text.evaluateMotorState,"ax",%progbits
 424              		.align	2
 425              		.global	evaluateMotorState
 426              		.code	16
 427              		.thumb_func
 429              	evaluateMotorState:
 430              	.LFB6:
 462:../Sources/main.c **** 
 463:../Sources/main.c **** void evaluateMotorState(carState_s* carState)
 464:../Sources/main.c **** {
 431              		.loc 1 464 0
 432              		.cfi_startproc
 433              	.LVL46:
 434 0000 38B5     		push	{r3, r4, r5, lr}
 435              	.LCFI7:
 436              		.cfi_def_cfa_offset 16
 437              		.cfi_offset 3, -16
 438              		.cfi_offset 4, -12
 439              		.cfi_offset 5, -8
 440              		.cfi_offset 14, -4
 441              		.loc 1 464 0
 442 0002 051C     		mov	r5, r0
 465:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 443              		.loc 1 465 0
 444 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 445              	.LVL47:
 446 0008 0124     		mov	r4, #1
 447 000a 0442     		tst	r4, r0
 448 000c 05D0     		beq	.L23
 466:../Sources/main.c **** 	{
 467:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 449              		.loc 1 467 0
 450 000e 8021     		mov	r1, #128
 451 0010 0848     		ldr	r0, .L25
 452 0012 8A03     		lsl	r2, r1, #14
 453 0014 4260     		str	r2, [r0, #4]
 468:../Sources/main.c **** 		carState->motorState = RUNNING;
 454              		.loc 1 468 0
 455 0016 2C70     		strb	r4, [r5]
 456              	.L22:
 469:../Sources/main.c **** 	}
 470:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 471:../Sources/main.c **** 	{
 472:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 473:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 474:../Sources/main.c **** 	}
 475:../Sources/main.c **** }
 457              		.loc 1 475 0
 458              		@ sp needed for prologue
 459              	.LVL48:
 460 0018 38BD     		pop	{r3, r4, r5, pc}
 461              	.LVL49:
 462              	.L23:
 470:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 463              		.loc 1 470 0
 464 001a FFF7FEFF 		bl	TFC_GetDIP_Switch
 465              	.LVL50:
 466 001e 0442     		tst	r4, r0
 467 0020 FAD1     		bne	.L22
 472:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 468              		.loc 1 472 0
 469 0022 8022     		mov	r2, #128
 470 0024 034B     		ldr	r3, .L25
 471 0026 9003     		lsl	r0, r2, #14
 472 0028 9860     		str	r0, [r3, #8]
 473:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 473              		.loc 1 473 0
 474 002a 0020     		mov	r0, #0
 475 002c 011C     		add	r1, r0, #0
 476 002e FFF7FEFF 		bl	TFC_SetMotorPWM
 477              	.LVL51:
 478 0032 F1E7     		b	.L22
 479              	.L26:
 480              		.align	2
 481              	.L25:
 482 0034 00F10F40 		.word	1074786560
 483              		.cfi_endproc
 484              	.LFE6:
 486              		.section	.text.evaluateUARTorSpeed,"ax",%progbits
 487              		.align	2
 488              		.global	evaluateUARTorSpeed
 489              		.code	16
 490              		.thumb_func
 492              	evaluateUARTorSpeed:
 493              	.LFB7:
 476:../Sources/main.c **** 
 477:../Sources/main.c **** void evaluateUARTorSpeed(carState_s* carState)
 478:../Sources/main.c **** {
 494              		.loc 1 478 0
 495              		.cfi_startproc
 496              	.LVL52:
 497 0000 10B5     		push	{r4, lr}
 498              	.LCFI8:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 4, -8
 501              		.cfi_offset 14, -4
 502              		.loc 1 478 0
 503 0002 041C     		mov	r4, r0
 479:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 504              		.loc 1 479 0
 505 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 506              	.LVL53:
 507 0008 0307     		lsl	r3, r0, #28
 508 000a 15D4     		bmi	.L28
 509              		.loc 1 479 0 is_stmt 0
 510 000c 1B4B     		ldr	r3, .L37
 511 000e 9868     		ldr	r0, [r3, #8]
 512 0010 4105     		lsl	r1, r0, #21
 513 0012 4A0F     		lsr	r2, r1, #29
 514 0014 022A     		cmp	r2, #2
 515 0016 0FD0     		beq	.L28
 516              	.L29:
 480:../Sources/main.c **** 	{
 481:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 517              		.loc 1 481 0 is_stmt 1
 518 0018 1848     		ldr	r0, .L37
 519 001a 194A     		ldr	r2, .L37+4
 520 001c 8168     		ldr	r1, [r0, #8]
 521 001e 0A40     		and	r2, r1
 522 0020 8260     		str	r2, [r0, #8]
 482:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 523              		.loc 1 482 0
 524 0022 8368     		ldr	r3, [r0, #8]
 525 0024 8021     		mov	r1, #128
 526 0026 8A00     		lsl	r2, r1, #2
 527 0028 1A43     		orr	r2, r3
 528 002a 8260     		str	r2, [r0, #8]
 483:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 529              		.loc 1 483 0
 530 002c 0C20     		mov	r0, #12
 531 002e FFF7FEFF 		bl	enable_irq
 532              	.LVL54:
 484:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 533              		.loc 1 484 0
 534 0032 0020     		mov	r0, #0
 535 0034 6070     		strb	r0, [r4, #1]
 536              	.L27:
 485:../Sources/main.c **** 	}
 486:../Sources/main.c **** 
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 488:../Sources/main.c **** 	{
 489:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 490:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 491:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 492:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 493:../Sources/main.c **** 	}
 494:../Sources/main.c **** }
 537              		.loc 1 494 0
 538              		@ sp needed for prologue
 539              	.LVL55:
 540 0036 10BD     		pop	{r4, pc}
 541              	.LVL56:
 542              	.L28:
 479:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 543              		.loc 1 479 0
 544 0038 6378     		ldrb	r3, [r4, #1]
 545 003a 022B     		cmp	r3, #2
 546 003c ECD0     		beq	.L29
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 547              		.loc 1 487 0
 548 003e FFF7FEFF 		bl	TFC_GetDIP_Switch
 549              	.LVL57:
 550 0042 0307     		lsl	r3, r0, #28
 551 0044 15D5     		bpl	.L32
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 552              		.loc 1 487 0 is_stmt 0
 553 0046 0D48     		ldr	r0, .L37
 554 0048 8168     		ldr	r1, [r0, #8]
 555 004a 4A05     		lsl	r2, r1, #21
 556 004c 530F     		lsr	r3, r2, #29
 557 004e 032B     		cmp	r3, #3
 558 0050 0FD0     		beq	.L32
 559              	.L33:
 489:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 560              		.loc 1 489 0 is_stmt 1
 561 0052 0A4B     		ldr	r3, .L37
 562 0054 0A4A     		ldr	r2, .L37+4
 563 0056 9968     		ldr	r1, [r3, #8]
 564 0058 0A40     		and	r2, r1
 565 005a 9A60     		str	r2, [r3, #8]
 490:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 566              		.loc 1 490 0
 567 005c 9868     		ldr	r0, [r3, #8]
 568 005e C021     		mov	r1, #192
 569 0060 8A00     		lsl	r2, r1, #2
 570 0062 0243     		orr	r2, r0
 571 0064 9A60     		str	r2, [r3, #8]
 491:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 572              		.loc 1 491 0
 573 0066 0C20     		mov	r0, #12
 574 0068 FFF7FEFF 		bl	disable_irq
 575              	.LVL58:
 492:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 576              		.loc 1 492 0
 577 006c 0123     		mov	r3, #1
 578 006e 6370     		strb	r3, [r4, #1]
 579 0070 E1E7     		b	.L27
 580              	.L32:
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 581              		.loc 1 487 0
 582 0072 6078     		ldrb	r0, [r4, #1]
 583 0074 0228     		cmp	r0, #2
 584 0076 DED1     		bne	.L27
 585 0078 EBE7     		b	.L33
 586              	.L38:
 587 007a C046     		.align	2
 588              	.L37:
 589 007c 00900440 		.word	1074040832
 590 0080 FFF8FFFF 		.word	-1793
 591              		.cfi_endproc
 592              	.LFE7:
 594              		.global	__aeabi_fcmpgt
 595              		.section	.text.LEDfeedback,"ax",%progbits
 596              		.align	2
 597              		.global	LEDfeedback
 598              		.code	16
 599              		.thumb_func
 601              	LEDfeedback:
 602              	.LFB8:
 495:../Sources/main.c **** 
 496:../Sources/main.c **** void LEDfeedback(carState_s* carState)
 497:../Sources/main.c **** {
 603              		.loc 1 497 0
 604              		.cfi_startproc
 605              	.LVL59:
 498:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 606              		.loc 1 498 0
 607 0000 4F4B     		ldr	r3, .L66
 497:../Sources/main.c **** {
 608              		.loc 1 497 0
 609 0002 10B5     		push	{r4, lr}
 610              	.LCFI9:
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 4, -8
 613              		.cfi_offset 14, -4
 614              		.loc 1 498 0
 615 0004 4F49     		ldr	r1, .L66+4
 497:../Sources/main.c **** {
 616              		.loc 1 497 0
 617 0006 041C     		mov	r4, r0
 618              		.loc 1 498 0
 619 0008 1868     		ldr	r0, [r3]
 620              	.LVL60:
 621 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 622              	.LVL61:
 623 000e 0028     		cmp	r0, #0
 624 0010 1DD0     		beq	.L51
 499:../Sources/main.c **** 	{
 500:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 625              		.loc 1 500 0
 626 0012 A078     		ldrb	r0, [r4, #2]
 627 0014 0228     		cmp	r0, #2
 628 0016 30D0     		beq	.L59
 501:../Sources/main.c **** 		{
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 503:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 504:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 505:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 506:../Sources/main.c **** 		}
 507:../Sources/main.c **** 		#ifdef CROSS_DETECTION_ENABLE
 508:../Sources/main.c **** 		else if(carState->crossSection == YES)
 629              		.loc 1 508 0
 630 0018 A379     		ldrb	r3, [r4, #6]
 631 001a 012B     		cmp	r3, #1
 632 001c 39D0     		beq	.L60
 509:../Sources/main.c **** 		{
 510:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 511:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 512:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 513:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 514:../Sources/main.c **** 		}
 515:../Sources/main.c **** 		#endif
 516:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 633              		.loc 1 516 0
 634 001e 617A     		ldrb	r1, [r4, #9]
 635 0020 0129     		cmp	r1, #1
 636 0022 47D0     		beq	.L61
 517:../Sources/main.c **** 		{
 518:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 519:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 520:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 521:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 522:../Sources/main.c **** 		}
 523:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 637              		.loc 1 523 0
 638 0024 2279     		ldrb	r2, [r4, #4]
 639 0026 022A     		cmp	r2, #2
 640 0028 5AD0     		beq	.L62
 524:../Sources/main.c **** 		{
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 526:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 527:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 528:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 529:../Sources/main.c **** 		}
 530:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 641              		.loc 1 530 0
 642 002a 6479     		ldrb	r4, [r4, #5]
 643              	.LVL62:
 644 002c 012C     		cmp	r4, #1
 645 002e 68D0     		beq	.L63
 531:../Sources/main.c **** 		{	
 532:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 534:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 535:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 536:../Sources/main.c **** 		}
 537:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 646              		.loc 1 537 0
 647 0030 022C     		cmp	r4, #2
 648 0032 00D1     		bne	.LCB551
 649 0034 71E0     		b	.L64	@long jump
 650              	.LCB551:
 538:../Sources/main.c **** 		{	
 539:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 540:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 541:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 542:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 543:../Sources/main.c **** 		}
 544:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 651              		.loc 1 544 0
 652 0036 0128     		cmp	r0, #1
 653 0038 00D1     		bne	.LCB553
 654 003a 75E0     		b	.L65	@long jump
 655              	.LCB553:
 545:../Sources/main.c **** 		{	
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 547:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 548:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 549:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 550:../Sources/main.c **** 		}
 551:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 656              		.loc 1 551 0
 657 003c 0328     		cmp	r0, #3
 658 003e 1BD1     		bne	.L39
 552:../Sources/main.c **** 		{	
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 659              		.loc 1 553 0
 660 0040 4148     		ldr	r0, .L66+8
 661 0042 8021     		mov	r1, #128
 662 0044 8368     		ldr	r3, [r0, #8]
 663 0046 4A00     		lsl	r2, r1, #1
 664 0048 1A43     		orr	r2, r3
 665 004a 8260     		str	r2, [r0, #8]
 666 004c 27E0     		b	.L58
 667              	.LVL63:
 668              	.L51:
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 555:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 556:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 557:../Sources/main.c **** 		}
 558:../Sources/main.c **** 	}
 559:../Sources/main.c **** 	else
 560:../Sources/main.c **** 	{
 561:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 669              		.loc 1 561 0
 670 004e 3E48     		ldr	r0, .L66+8
 671 0050 8022     		mov	r2, #128
 672 0052 4168     		ldr	r1, [r0, #4]
 673 0054 5400     		lsl	r4, r2, #1
 674              	.LVL64:
 675 0056 0C43     		orr	r4, r1
 676 0058 4460     		str	r4, [r0, #4]
 562:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 677              		.loc 1 562 0
 678 005a 4368     		ldr	r3, [r0, #4]
 679 005c 8021     		mov	r1, #128
 680 005e 8A00     		lsl	r2, r1, #2
 681 0060 1A43     		orr	r2, r3
 682 0062 4260     		str	r2, [r0, #4]
 683              	.L52:
 563:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 684              		.loc 1 563 0
 685 0064 4368     		ldr	r3, [r0, #4]
 686 0066 8021     		mov	r1, #128
 687 0068 CA00     		lsl	r2, r1, #3
 688 006a 1A43     		orr	r2, r3
 689 006c 4260     		str	r2, [r0, #4]
 690              	.L53:
 564:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 691              		.loc 1 564 0
 692 006e 4468     		ldr	r4, [r0, #4]
 693 0070 8023     		mov	r3, #128
 694 0072 1901     		lsl	r1, r3, #4
 695 0074 2143     		orr	r1, r4
 696 0076 4160     		str	r1, [r0, #4]
 697              	.L39:
 565:../Sources/main.c **** 	}
 566:../Sources/main.c **** }
 698              		.loc 1 566 0
 699              		@ sp needed for prologue
 700 0078 10BD     		pop	{r4, pc}
 701              	.LVL65:
 702              	.L59:
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 703              		.loc 1 502 0
 704 007a 3348     		ldr	r0, .L66+8
 705 007c 8024     		mov	r4, #128
 706              	.LVL66:
 707 007e 8168     		ldr	r1, [r0, #8]
 708 0080 6300     		lsl	r3, r4, #1
 709 0082 0B43     		orr	r3, r1
 710 0084 8360     		str	r3, [r0, #8]
 503:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 711              		.loc 1 503 0
 712 0086 8168     		ldr	r1, [r0, #8]
 713 0088 8022     		mov	r2, #128
 714 008a 9400     		lsl	r4, r2, #2
 715 008c 0C43     		orr	r4, r1
 716 008e 8460     		str	r4, [r0, #8]
 717 0090 E8E7     		b	.L52
 718              	.LVL67:
 719              	.L60:
 510:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 720              		.loc 1 510 0
 721 0092 2D48     		ldr	r0, .L66+8
 722 0094 8021     		mov	r1, #128
 723 0096 4368     		ldr	r3, [r0, #4]
 724 0098 4C00     		lsl	r4, r1, #1
 725              	.LVL68:
 726 009a 1C43     		orr	r4, r3
 727 009c 4460     		str	r4, [r0, #4]
 728              	.L58:
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 729              		.loc 1 554 0
 730 009e 8368     		ldr	r3, [r0, #8]
 731 00a0 8022     		mov	r2, #128
 732 00a2 9100     		lsl	r1, r2, #2
 733 00a4 1943     		orr	r1, r3
 734 00a6 8160     		str	r1, [r0, #8]
 555:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 735              		.loc 1 555 0
 736 00a8 8468     		ldr	r4, [r0, #8]
 737 00aa 8023     		mov	r3, #128
 738 00ac DA00     		lsl	r2, r3, #3
 739 00ae 2243     		orr	r2, r4
 740 00b0 8260     		str	r2, [r0, #8]
 741 00b2 DCE7     		b	.L53
 742              	.LVL69:
 743              	.L61:
 518:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 744              		.loc 1 518 0
 745 00b4 2448     		ldr	r0, .L66+8
 746 00b6 8021     		mov	r1, #128
 747 00b8 8368     		ldr	r3, [r0, #8]
 748 00ba 4A00     		lsl	r2, r1, #1
 749 00bc 1A43     		orr	r2, r3
 750 00be 8260     		str	r2, [r0, #8]
 519:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 751              		.loc 1 519 0
 752 00c0 4468     		ldr	r4, [r0, #4]
 753              	.LVL70:
 754 00c2 8023     		mov	r3, #128
 755 00c4 9900     		lsl	r1, r3, #2
 756 00c6 2143     		orr	r1, r4
 757 00c8 4160     		str	r1, [r0, #4]
 758              	.L55:
 548:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 759              		.loc 1 548 0
 760 00ca 4468     		ldr	r4, [r0, #4]
 761 00cc 8022     		mov	r2, #128
 762 00ce D300     		lsl	r3, r2, #3
 763 00d0 2343     		orr	r3, r4
 764 00d2 4360     		str	r3, [r0, #4]
 765              	.L54:
 549:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 766              		.loc 1 549 0
 767 00d4 8168     		ldr	r1, [r0, #8]
 768 00d6 8024     		mov	r4, #128
 769 00d8 2201     		lsl	r2, r4, #4
 770 00da 0A43     		orr	r2, r1
 771 00dc 8260     		str	r2, [r0, #8]
 772 00de CBE7     		b	.L39
 773              	.LVL71:
 774              	.L62:
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 775              		.loc 1 525 0
 776 00e0 1948     		ldr	r0, .L66+8
 777 00e2 8023     		mov	r3, #128
 778 00e4 4468     		ldr	r4, [r0, #4]
 779              	.LVL72:
 780 00e6 5A00     		lsl	r2, r3, #1
 781 00e8 2243     		orr	r2, r4
 782 00ea 4260     		str	r2, [r0, #4]
 783              	.L57:
 540:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 784              		.loc 1 540 0
 785 00ec 4168     		ldr	r1, [r0, #4]
 786 00ee 8024     		mov	r4, #128
 787 00f0 A300     		lsl	r3, r4, #2
 788 00f2 0B43     		orr	r3, r1
 789 00f4 4360     		str	r3, [r0, #4]
 790              	.L56:
 541:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 791              		.loc 1 541 0
 792 00f6 8168     		ldr	r1, [r0, #8]
 793 00f8 8022     		mov	r2, #128
 794 00fa D400     		lsl	r4, r2, #3
 795 00fc 0C43     		orr	r4, r1
 796 00fe 8460     		str	r4, [r0, #8]
 797 0100 E8E7     		b	.L54
 798              	.L63:
 532:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 799              		.loc 1 532 0
 800 0102 1148     		ldr	r0, .L66+8
 801 0104 8021     		mov	r1, #128
 802 0106 4368     		ldr	r3, [r0, #4]
 803 0108 4C00     		lsl	r4, r1, #1
 804 010a 1C43     		orr	r4, r3
 805 010c 4460     		str	r4, [r0, #4]
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 806              		.loc 1 533 0
 807 010e 8368     		ldr	r3, [r0, #8]
 808 0110 8022     		mov	r2, #128
 809 0112 9100     		lsl	r1, r2, #2
 810 0114 1943     		orr	r1, r3
 811 0116 8160     		str	r1, [r0, #8]
 812 0118 EDE7     		b	.L56
 813              	.L64:
 539:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 814              		.loc 1 539 0
 815 011a 0B48     		ldr	r0, .L66+8
 816 011c 8024     		mov	r4, #128
 817 011e 8168     		ldr	r1, [r0, #8]
 818 0120 6200     		lsl	r2, r4, #1
 819 0122 0A43     		orr	r2, r1
 820 0124 8260     		str	r2, [r0, #8]
 821 0126 E1E7     		b	.L57
 822              	.L65:
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 823              		.loc 1 546 0
 824 0128 0748     		ldr	r0, .L66+8
 825 012a 8023     		mov	r3, #128
 826 012c 8468     		ldr	r4, [r0, #8]
 827 012e 5900     		lsl	r1, r3, #1
 828 0130 2143     		orr	r1, r4
 829 0132 8160     		str	r1, [r0, #8]
 547:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 830              		.loc 1 547 0
 831 0134 8468     		ldr	r4, [r0, #8]
 832 0136 8022     		mov	r2, #128
 833 0138 9300     		lsl	r3, r2, #2
 834 013a 2343     		orr	r3, r4
 835 013c 8360     		str	r3, [r0, #8]
 836 013e C4E7     		b	.L55
 837              	.L67:
 838              		.align	2
 839              	.L66:
 840 0140 00000000 		.word	.LANCHOR2
 841 0144 0000F040 		.word	1089470464
 842 0148 40F00F40 		.word	1074786368
 843              		.cfi_endproc
 844              	.LFE8:
 846              		.section	.text.servoAlignment,"ax",%progbits
 847              		.align	2
 848              		.global	servoAlignment
 849              		.code	16
 850              		.thumb_func
 852              	servoAlignment:
 853              	.LFB9:
 567:../Sources/main.c **** 
 568:../Sources/main.c **** void servoAlignment()		// Helps setting the servo offset value by debugging
 569:../Sources/main.c **** {
 854              		.loc 1 569 0
 855              		.cfi_startproc
 856 0000 08B5     		push	{r3, lr}
 857              	.LCFI10:
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 3, -8
 860              		.cfi_offset 14, -4
 570:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 861              		.loc 1 570 0
 862 0002 054B     		ldr	r3, .L70
 863 0004 1A68     		ldr	r2, [r3]
 864 0006 C72A     		cmp	r2, #199
 865 0008 05D9     		bls	.L68
 866              	.LBB27:
 571:../Sources/main.c **** 	{
 572:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 867              		.loc 1 572 0
 868 000a 0020     		mov	r0, #0
 869 000c 1860     		str	r0, [r3]
 870              	.LVL73:
 573:../Sources/main.c **** 		float offset = 30000 * 0.15f;
 574:../Sources/main.c **** 		TFC_SetServo(0, offset);
 871              		.loc 1 574 0
 872 000e 0349     		ldr	r1, .L70+4
 873 0010 0020     		mov	r0, #0
 874 0012 FFF7FEFF 		bl	TFC_SetServo
 875              	.LVL74:
 876              	.L68:
 877              	.LBE27:
 575:../Sources/main.c **** 	}
 576:../Sources/main.c **** }
 878              		.loc 1 576 0
 879              		@ sp needed for prologue
 880 0016 08BD     		pop	{r3, pc}
 881              	.L71:
 882              		.align	2
 883              	.L70:
 884 0018 00000000 		.word	TFC_Ticker
 885 001c 00A08C45 		.word	1166843904
 886              		.cfi_endproc
 887              	.LFE9:
 889              		.global	__aeabi_fmul
 890              		.global	__aeabi_fcmple
 891              		.global	__aeabi_fcmpge
 892              		.global	__aeabi_f2iz
 893              		.global	__aeabi_fcmpeq
 894              		.global	__aeabi_f2d
 895              		.global	__aeabi_dadd
 896              		.global	__aeabi_d2iz
 897              		.global	__aeabi_dsub
 898              		.global	__aeabi_i2f
 899              		.section	.text.telemetrySendData,"ax",%progbits
 900              		.align	2
 901              		.global	telemetrySendData
 902              		.code	16
 903              		.thumb_func
 905              	telemetrySendData:
 906              	.LFB10:
 577:../Sources/main.c **** 
 578:../Sources/main.c **** void telemetrySendData()
 579:../Sources/main.c **** {
 907              		.loc 1 579 0
 908              		.cfi_startproc
 909 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 910              	.LCFI11:
 911              		.cfi_def_cfa_offset 24
 912              		.cfi_offset 3, -24
 913              		.cfi_offset 4, -20
 914              		.cfi_offset 5, -16
 915              		.cfi_offset 6, -12
 916              		.cfi_offset 7, -8
 917              		.cfi_offset 14, -4
 580:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, BLUETOOTH_FLAG);
 918              		.loc 1 580 0
 919 0002 E348     		ldr	r0, .L377
 920 0004 8021     		mov	r1, #128
 921 0006 FFF7FEFF 		bl	uart_putchar
 922              	.LVL75:
 581:../Sources/main.c **** 	
 582:../Sources/main.c **** 	// 1 - Track Centre Detected by the Camera
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineCenter);
 923              		.loc 1 583 0
 924 000a E24C     		ldr	r4, .L377+4
 925 000c E048     		ldr	r0, .L377
 926 000e A17A     		ldrb	r1, [r4, #10]
 927 0010 FFF7FEFF 		bl	uart_putchar
 928              	.LVL76:
 584:../Sources/main.c **** 	// 2 - Calculated Target Speed
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 929              		.loc 1 585 0
 930 0014 E04B     		ldr	r3, .L377+8
 931 0016 8221     		mov	r1, #130
 932 0018 C905     		lsl	r1, r1, #23
 933 001a 1868     		ldr	r0, [r3]
 934 001c FFF7FEFF 		bl	__aeabi_fmul
 935              	.LVL77:
 936 0020 DE49     		ldr	r1, .L377+12
 937 0022 051C     		add	r5, r0, #0
 938 0024 FFF7FEFF 		bl	__aeabi_fcmple
 939              	.LVL78:
 940 0028 0028     		cmp	r0, #0
 941 002a 00D1     		bne	.LCB817
 942 002c B3E0     		b	.L81	@long jump
 943              	.LCB817:
 944              		.loc 1 585 0 is_stmt 0
 945 002e 281C     		add	r0, r5, #0
 946 0030 0021     		mov	r1, #0
 947 0032 FFF7FEFF 		bl	__aeabi_fcmpge
 948              	.LVL79:
 949 0036 0028     		cmp	r0, #0
 950 0038 00D1     		bne	.LCB823
 951 003a BDE1     		b	.L75	@long jump
 952              	.LCB823:
 953              		.loc 1 585 0
 954 003c 281C     		add	r0, r5, #0
 955 003e D849     		ldr	r1, .L377+16
 956 0040 FFF7FEFF 		bl	__aeabi_fcmpge
 957              	.LVL80:
 958 0044 0028     		cmp	r0, #0
 959 0046 00D1     		bne	.LCB829
 960 0048 B0E1     		b	.L343	@long jump
 961              	.LCB829:
 962              		.loc 1 585 0
 963 004a 281C     		add	r0, r5, #0
 964 004c D549     		ldr	r1, .L377+20
 965 004e FFF7FEFF 		bl	__aeabi_fcmple
 966              	.LVL81:
 967 0052 7F26     		mov	r6, #127
 968 0054 071E     		sub	r7, r0, #0
 969 0056 17D1     		bne	.L79
 970              		.loc 1 585 0
 971 0058 281C     		add	r0, r5, #0
 972 005a 0021     		mov	r1, #0
 973 005c FFF7FEFF 		bl	__aeabi_fcmpeq
 974              	.LVL82:
 975 0060 0028     		cmp	r0, #0
 976 0062 00D1     		bne	.LCB843
 977 0064 A8E1     		b	.L75	@long jump
 978              	.LCB843:
 979              		.loc 1 585 0
 980 0066 002F     		cmp	r7, #0
 981 0068 00D1     		bne	.LCB845
 982 006a BAE1     		b	.L88	@long jump
 983              	.LCB845:
 984              		.loc 1 585 0
 985 006c 281C     		add	r0, r5, #0
 986 006e CE49     		ldr	r1, .L377+24
 987 0070 FFF7FEFF 		bl	__aeabi_fcmpgt
 988              	.LVL83:
 989 0074 0028     		cmp	r0, #0
 990 0076 07D1     		bne	.L79
 991              		.loc 1 585 0
 992 0078 281C     		add	r0, r5, #0
 993 007a C949     		ldr	r1, .L377+16
 994 007c FFF7FEFF 		bl	__aeabi_fcmpge
 995              	.LVL84:
 996 0080 7E26     		mov	r6, #126
 997 0082 0028     		cmp	r0, #0
 998 0084 00D1     		bne	.LCB858
 999 0086 9BE0     		b	.L87	@long jump
 1000              	.LCB858:
 1001              	.L79:
 1002              		.loc 1 585 0
 1003 0088 311C     		mov	r1, r6
 1004 008a C148     		ldr	r0, .L377
 1005 008c FFF7FEFF 		bl	uart_putchar
 1006              	.LVL85:
 586:../Sources/main.c **** 	// 3 - Speed of the right wheel
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1007              		.loc 1 587 0 is_stmt 1
 1008 0090 0020     		mov	r0, #0
 1009 0092 FFF7FEFF 		bl	getSpeed
 1010              	.LVL86:
 1011 0096 8222     		mov	r2, #130
 1012 0098 D105     		lsl	r1, r2, #23
 1013 009a FFF7FEFF 		bl	__aeabi_fmul
 1014              	.LVL87:
 1015 009e BF49     		ldr	r1, .L377+12
 1016 00a0 FFF7FEFF 		bl	__aeabi_fcmple
 1017              	.LVL88:
 1018 00a4 0028     		cmp	r0, #0
 1019 00a6 00D1     		bne	.LCB875
 1020 00a8 99E0     		b	.L92	@long jump
 1021              	.LCB875:
 1022              		.loc 1 587 0 is_stmt 0
 1023 00aa 0020     		mov	r0, #0
 1024 00ac FFF7FEFF 		bl	getSpeed
 1025              	.LVL89:
 1026 00b0 8223     		mov	r3, #130
 1027 00b2 D905     		lsl	r1, r3, #23
 1028 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1029              	.LVL90:
 1030 00b8 0021     		mov	r1, #0
 1031 00ba FFF7FEFF 		bl	__aeabi_fcmpge
 1032              	.LVL91:
 1033 00be 0028     		cmp	r0, #0
 1034 00c0 00D1     		bne	.LCB887
 1035 00c2 8CE0     		b	.L92	@long jump
 1036              	.LCB887:
 1037              		.loc 1 587 0
 1038 00c4 0020     		mov	r0, #0
 1039 00c6 FFF7FEFF 		bl	getSpeed
 1040              	.LVL92:
 1041 00ca 8221     		mov	r1, #130
 1042 00cc C905     		lsl	r1, r1, #23
 1043 00ce FFF7FEFF 		bl	__aeabi_fmul
 1044              	.LVL93:
 1045 00d2 B349     		ldr	r1, .L377+16
 1046 00d4 FFF7FEFF 		bl	__aeabi_fcmpge
 1047              	.LVL94:
 1048 00d8 0028     		cmp	r0, #0
 1049 00da 73D1     		bne	.L95
 1050              	.L98:
 1051              		.loc 1 587 0
 1052 00dc 0020     		mov	r0, #0
 1053 00de FFF7FEFF 		bl	getSpeed
 1054              	.LVL95:
 1055 00e2 8222     		mov	r2, #130
 1056 00e4 D105     		lsl	r1, r2, #23
 1057 00e6 FFF7FEFF 		bl	__aeabi_fmul
 1058              	.LVL96:
 1059 00ea 0021     		mov	r1, #0
 1060 00ec FFF7FEFF 		bl	__aeabi_fcmpeq
 1061              	.LVL97:
 1062 00f0 0028     		cmp	r0, #0
 1063 00f2 00D1     		bne	.LCB912
 1064 00f4 81E0     		b	.L96	@long jump
 1065              	.LCB912:
 1066              		.loc 1 587 0
 1067 00f6 0020     		mov	r0, #0
 1068 00f8 FFF7FEFF 		bl	getSpeed
 1069              	.LVL98:
 1070 00fc 8223     		mov	r3, #130
 1071 00fe D905     		lsl	r1, r3, #23
 1072 0100 FFF7FEFF 		bl	__aeabi_fmul
 1073              	.LVL99:
 1074 0104 A549     		ldr	r1, .L377+12
 1075 0106 FFF7FEFF 		bl	__aeabi_fcmple
 1076              	.LVL100:
 1077 010a 0028     		cmp	r0, #0
 1078 010c 27D0     		beq	.L114
 1079              		.loc 1 587 0
 1080 010e 0020     		mov	r0, #0
 1081 0110 FFF7FEFF 		bl	getSpeed
 1082              	.LVL101:
 1083 0114 8221     		mov	r1, #130
 1084 0116 C905     		lsl	r1, r1, #23
 1085 0118 FFF7FEFF 		bl	__aeabi_fmul
 1086              	.LVL102:
 1087 011c 0021     		mov	r1, #0
 1088 011e FFF7FEFF 		bl	__aeabi_fcmpge
 1089              	.LVL103:
 1090 0122 0028     		cmp	r0, #0
 1091 0124 1BD0     		beq	.L114
 1092              		.loc 1 587 0
 1093 0126 0020     		mov	r0, #0
 1094 0128 8227     		mov	r7, #130
 1095 012a FFF7FEFF 		bl	getSpeed
 1096              	.LVL104:
 1097 012e F905     		lsl	r1, r7, #23
 1098 0130 FFF7FEFF 		bl	__aeabi_fmul
 1099              	.LVL105:
 1100 0134 9A49     		ldr	r1, .L377+16
 1101 0136 FFF7FEFF 		bl	__aeabi_fcmpge
 1102              	.LVL106:
 1103 013a 0028     		cmp	r0, #0
 1104 013c 01D1     		bne	.LCB948
 1105 013e 00F027FD 		bl	.L118	@far jump
 1106              	.LCB948:
 1107              		.loc 1 587 0
 1108 0142 0020     		mov	r0, #0
 1109 0144 8225     		mov	r5, #130
 1110 0146 FFF7FEFF 		bl	getSpeed
 1111              	.LVL107:
 1112 014a E905     		lsl	r1, r5, #23
 1113 014c FFF7FEFF 		bl	__aeabi_fmul
 1114              	.LVL108:
 1115 0150 9449     		ldr	r1, .L377+20
 1116 0152 FFF7FEFF 		bl	__aeabi_fcmple
 1117              	.LVL109:
 1118 0156 0028     		cmp	r0, #0
 1119 0158 01D1     		bne	.LCB960
 1120 015a 00F019FD 		bl	.L118	@far jump
 1121              	.LCB960:
 1122              	.L114:
 1123              		.loc 1 587 0
 1124 015e 0020     		mov	r0, #0
 1125 0160 8226     		mov	r6, #130
 1126 0162 FFF7FEFF 		bl	getSpeed
 1127              	.LVL110:
 1128 0166 F105     		lsl	r1, r6, #23
 1129 0168 FFF7FEFF 		bl	__aeabi_fmul
 1130              	.LVL111:
 1131 016c 8E49     		ldr	r1, .L377+24
 1132 016e FFF7FEFF 		bl	__aeabi_fcmpgt
 1133              	.LVL112:
 1134 0172 0028     		cmp	r0, #0
 1135 0174 00D0     		beq	.LCB973
 1136 0176 82E0     		b	.L113	@long jump
 1137              	.LCB973:
 1138              		.loc 1 587 0
 1139 0178 FFF7FEFF 		bl	getSpeed
 1140              	.LVL113:
 1141 017c 8222     		mov	r2, #130
 1142 017e D105     		lsl	r1, r2, #23
 1143 0180 FFF7FEFF 		bl	__aeabi_fmul
 1144              	.LVL114:
 1145 0184 8649     		ldr	r1, .L377+16
 1146 0186 FFF7FEFF 		bl	__aeabi_fcmpge
 1147              	.LVL115:
 1148 018a 0028     		cmp	r0, #0
 1149 018c 01D0     		beq	.LCB984
 1150 018e 00F03DFD 		bl	.L368	@far jump
 1151              	.LCB984:
 1152              	.L122:
 1153              		.loc 1 587 0
 1154 0192 0021     		mov	r1, #0
 1155 0194 74E0     		b	.L107
 1156              	.L81:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1157              		.loc 1 585 0 is_stmt 1
 1158 0196 281C     		add	r0, r5, #0
 1159 0198 8349     		ldr	r1, .L377+24
 1160 019a FFF7FEFF 		bl	__aeabi_fcmpgt
 1161              	.LVL116:
 1162 019e 7F26     		mov	r6, #127
 1163 01a0 0028     		cmp	r0, #0
 1164 01a2 00D0     		beq	.LCB997
 1165 01a4 70E7     		b	.L79	@long jump
 1166              	.LCB997:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1167              		.loc 1 585 0 is_stmt 0
 1168 01a6 281C     		add	r0, r5, #0
 1169 01a8 7D49     		ldr	r1, .L377+16
 1170 01aa FFF7FEFF 		bl	__aeabi_fcmpge
 1171              	.LVL117:
 1172 01ae 0028     		cmp	r0, #0
 1173 01b0 06D0     		beq	.L87
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1174              		.loc 1 585 0
 1175 01b2 281C     		add	r0, r5, #0
 1176 01b4 7B49     		ldr	r1, .L377+20
 1177 01b6 FFF7FEFF 		bl	__aeabi_fcmple
 1178              	.LVL118:
 1179 01ba 0028     		cmp	r0, #0
 1180 01bc 00D0     		beq	.LCB1009
 1181 01be 63E7     		b	.L79	@long jump
 1182              	.LCB1009:
 1183              	.L87:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1184              		.loc 1 585 0
 1185 01c0 0026     		mov	r6, #0
 1186 01c2 61E7     		b	.L79
 1187              	.L95:
 1188              		.loc 1 587 0 is_stmt 1
 1189 01c4 0020     		mov	r0, #0
 1190 01c6 8227     		mov	r7, #130
 1191 01c8 FFF7FEFF 		bl	getSpeed
 1192              	.LVL119:
 1193 01cc F905     		lsl	r1, r7, #23
 1194 01ce FFF7FEFF 		bl	__aeabi_fmul
 1195              	.LVL120:
 1196 01d2 7449     		ldr	r1, .L377+20
 1197 01d4 FFF7FEFF 		bl	__aeabi_fcmple
 1198              	.LVL121:
 1199 01d8 0028     		cmp	r0, #0
 1200 01da 00D1     		bne	.LCB1027
 1201 01dc 7EE7     		b	.L98	@long jump
 1202              	.LCB1027:
 1203              	.L92:
 1204              		.loc 1 587 0 is_stmt 0
 1205 01de 0020     		mov	r0, #0
 1206 01e0 8225     		mov	r5, #130
 1207 01e2 FFF7FEFF 		bl	getSpeed
 1208              	.LVL122:
 1209 01e6 E905     		lsl	r1, r5, #23
 1210 01e8 FFF7FEFF 		bl	__aeabi_fmul
 1211              	.LVL123:
 1212 01ec 6E49     		ldr	r1, .L377+24
 1213 01ee FFF7FEFF 		bl	__aeabi_fcmpgt
 1214              	.LVL124:
 1215 01f2 0028     		cmp	r0, #0
 1216 01f4 01D1     		bne	.LCB1040
 1217 01f6 00F04AFC 		bl	.L369	@far jump
 1218              	.LCB1040:
 1219              	.L96:
 1220              		.loc 1 587 0
 1221 01fa 0020     		mov	r0, #0
 1222 01fc FFF7FEFF 		bl	getSpeed
 1223              	.LVL125:
 1224 0200 8221     		mov	r1, #130
 1225 0202 C905     		lsl	r1, r1, #23
 1226 0204 FFF7FEFF 		bl	__aeabi_fmul
 1227              	.LVL126:
 1228 0208 6449     		ldr	r1, .L377+12
 1229 020a FFF7FEFF 		bl	__aeabi_fcmple
 1230              	.LVL127:
 1231 020e 0028     		cmp	r0, #0
 1232 0210 27D0     		beq	.L103
 1233              		.loc 1 587 0
 1234 0212 0020     		mov	r0, #0
 1235 0214 8227     		mov	r7, #130
 1236 0216 FFF7FEFF 		bl	getSpeed
 1237              	.LVL128:
 1238 021a F905     		lsl	r1, r7, #23
 1239 021c FFF7FEFF 		bl	__aeabi_fmul
 1240              	.LVL129:
 1241 0220 0021     		mov	r1, #0
 1242 0222 FFF7FEFF 		bl	__aeabi_fcmpge
 1243              	.LVL130:
 1244 0226 0028     		cmp	r0, #0
 1245 0228 1BD0     		beq	.L103
 1246              		.loc 1 587 0
 1247 022a 0020     		mov	r0, #0
 1248 022c 8225     		mov	r5, #130
 1249 022e FFF7FEFF 		bl	getSpeed
 1250              	.LVL131:
 1251 0232 E905     		lsl	r1, r5, #23
 1252 0234 FFF7FEFF 		bl	__aeabi_fmul
 1253              	.LVL132:
 1254 0238 5949     		ldr	r1, .L377+16
 1255 023a FFF7FEFF 		bl	__aeabi_fcmpge
 1256              	.LVL133:
 1257 023e 0028     		cmp	r0, #0
 1258 0240 01D1     		bne	.LCB1077
 1259 0242 00F0A5FC 		bl	.L118	@far jump
 1260              	.LCB1077:
 1261              		.loc 1 587 0
 1262 0246 0020     		mov	r0, #0
 1263 0248 8226     		mov	r6, #130
 1264 024a FFF7FEFF 		bl	getSpeed
 1265              	.LVL134:
 1266 024e F105     		lsl	r1, r6, #23
 1267 0250 FFF7FEFF 		bl	__aeabi_fmul
 1268              	.LVL135:
 1269 0254 5349     		ldr	r1, .L377+20
 1270 0256 FFF7FEFF 		bl	__aeabi_fcmple
 1271              	.LVL136:
 1272 025a 0028     		cmp	r0, #0
 1273 025c 01D1     		bne	.LCB1089
 1274 025e 00F097FC 		bl	.L118	@far jump
 1275              	.LCB1089:
 1276              	.L103:
 1277              		.loc 1 587 0
 1278 0262 0020     		mov	r0, #0
 1279 0264 FFF7FEFF 		bl	getSpeed
 1280              	.LVL137:
 1281 0268 8222     		mov	r2, #130
 1282 026a D105     		lsl	r1, r2, #23
 1283 026c FFF7FEFF 		bl	__aeabi_fmul
 1284              	.LVL138:
 1285 0270 4D49     		ldr	r1, .L377+24
 1286 0272 FFF7FEFF 		bl	__aeabi_fcmpgt
 1287              	.LVL139:
 1288 0276 0028     		cmp	r0, #0
 1289 0278 01D1     		bne	.LCB1102
 1290 027a 00F01AFC 		bl	.L346	@far jump
 1291              	.LCB1102:
 1292              	.L113:
 1293 027e 7F21     		mov	r1, #127
 1294              	.L107:
 1295              		.loc 1 587 0
 1296 0280 4348     		ldr	r0, .L377
 1297 0282 FFF7FEFF 		bl	uart_putchar
 1298              	.LVL140:
 588:../Sources/main.c **** 	// 4 - Speed of the left wheel
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1299              		.loc 1 589 0 is_stmt 1
 1300 0286 8225     		mov	r5, #130
 1301 0288 0120     		mov	r0, #1
 1302 028a FFF7FEFF 		bl	getSpeed
 1303              	.LVL141:
 1304 028e E905     		lsl	r1, r5, #23
 1305 0290 FFF7FEFF 		bl	__aeabi_fmul
 1306              	.LVL142:
 1307 0294 4149     		ldr	r1, .L377+12
 1308 0296 FFF7FEFF 		bl	__aeabi_fcmple
 1309              	.LVL143:
 1310 029a 0028     		cmp	r0, #0
 1311 029c 00D1     		bne	.LCB1121
 1312 029e B2E0     		b	.L124	@long jump
 1313              	.LCB1121:
 1314              		.loc 1 589 0 is_stmt 0
 1315 02a0 0120     		mov	r0, #1
 1316 02a2 8226     		mov	r6, #130
 1317 02a4 FFF7FEFF 		bl	getSpeed
 1318              	.LVL144:
 1319 02a8 F105     		lsl	r1, r6, #23
 1320 02aa FFF7FEFF 		bl	__aeabi_fmul
 1321              	.LVL145:
 1322 02ae 0021     		mov	r1, #0
 1323 02b0 FFF7FEFF 		bl	__aeabi_fcmpge
 1324              	.LVL146:
 1325 02b4 0028     		cmp	r0, #0
 1326 02b6 00D1     		bne	.LCB1133
 1327 02b8 A5E0     		b	.L124	@long jump
 1328              	.LCB1133:
 1329              		.loc 1 589 0
 1330 02ba 0120     		mov	r0, #1
 1331 02bc FFF7FEFF 		bl	getSpeed
 1332              	.LVL147:
 1333 02c0 8222     		mov	r2, #130
 1334 02c2 D105     		lsl	r1, r2, #23
 1335 02c4 FFF7FEFF 		bl	__aeabi_fmul
 1336              	.LVL148:
 1337 02c8 3549     		ldr	r1, .L377+16
 1338 02ca FFF7FEFF 		bl	__aeabi_fcmpge
 1339              	.LVL149:
 1340 02ce 0028     		cmp	r0, #0
 1341 02d0 00D0     		beq	.LCB1145
 1342 02d2 8BE0     		b	.L127	@long jump
 1343              	.LCB1145:
 1344              	.L130:
 1345              		.loc 1 589 0
 1346 02d4 0120     		mov	r0, #1
 1347 02d6 8225     		mov	r5, #130
 1348 02d8 FFF7FEFF 		bl	getSpeed
 1349              	.LVL150:
 1350 02dc E905     		lsl	r1, r5, #23
 1351 02de FFF7FEFF 		bl	__aeabi_fmul
 1352              	.LVL151:
 1353 02e2 0021     		mov	r1, #0
 1354 02e4 FFF7FEFF 		bl	__aeabi_fcmpeq
 1355              	.LVL152:
 1356 02e8 0028     		cmp	r0, #0
 1357 02ea 00D1     		bne	.LCB1158
 1358 02ec 98E0     		b	.L128	@long jump
 1359              	.LCB1158:
 1360              		.loc 1 589 0
 1361 02ee 0120     		mov	r0, #1
 1362 02f0 8226     		mov	r6, #130
 1363 02f2 FFF7FEFF 		bl	getSpeed
 1364              	.LVL153:
 1365 02f6 F105     		lsl	r1, r6, #23
 1366 02f8 FFF7FEFF 		bl	__aeabi_fmul
 1367              	.LVL154:
 1368 02fc 2749     		ldr	r1, .L377+12
 1369 02fe FFF7FEFF 		bl	__aeabi_fcmple
 1370              	.LVL155:
 1371 0302 0028     		cmp	r0, #0
 1372 0304 27D0     		beq	.L146
 1373              		.loc 1 589 0
 1374 0306 0120     		mov	r0, #1
 1375 0308 FFF7FEFF 		bl	getSpeed
 1376              	.LVL156:
 1377 030c 8222     		mov	r2, #130
 1378 030e D105     		lsl	r1, r2, #23
 1379 0310 FFF7FEFF 		bl	__aeabi_fmul
 1380              	.LVL157:
 1381 0314 0021     		mov	r1, #0
 1382 0316 FFF7FEFF 		bl	__aeabi_fcmpge
 1383              	.LVL158:
 1384 031a 0028     		cmp	r0, #0
 1385 031c 1BD0     		beq	.L146
 1386              		.loc 1 589 0
 1387 031e 0120     		mov	r0, #1
 1388 0320 FFF7FEFF 		bl	getSpeed
 1389              	.LVL159:
 1390 0324 8223     		mov	r3, #130
 1391 0326 D905     		lsl	r1, r3, #23
 1392 0328 FFF7FEFF 		bl	__aeabi_fmul
 1393              	.LVL160:
 1394 032c 1C49     		ldr	r1, .L377+16
 1395 032e FFF7FEFF 		bl	__aeabi_fcmpge
 1396              	.LVL161:
 1397 0332 0028     		cmp	r0, #0
 1398 0334 01D1     		bne	.LCB1194
 1399 0336 00F04BFC 		bl	.L150	@far jump
 1400              	.LCB1194:
 1401              		.loc 1 589 0
 1402 033a 0120     		mov	r0, #1
 1403 033c FFF7FEFF 		bl	getSpeed
 1404              	.LVL162:
 1405 0340 8221     		mov	r1, #130
 1406 0342 C905     		lsl	r1, r1, #23
 1407 0344 FFF7FEFF 		bl	__aeabi_fmul
 1408              	.LVL163:
 1409 0348 1649     		ldr	r1, .L377+20
 1410 034a FFF7FEFF 		bl	__aeabi_fcmple
 1411              	.LVL164:
 1412 034e 0028     		cmp	r0, #0
 1413 0350 01D1     		bne	.LCB1206
 1414 0352 00F03DFC 		bl	.L150	@far jump
 1415              	.LCB1206:
 1416              	.L146:
 1417              		.loc 1 589 0
 1418 0356 0120     		mov	r0, #1
 1419 0358 8227     		mov	r7, #130
 1420 035a FFF7FEFF 		bl	getSpeed
 1421              	.LVL165:
 1422 035e F905     		lsl	r1, r7, #23
 1423 0360 FFF7FEFF 		bl	__aeabi_fmul
 1424              	.LVL166:
 1425 0364 1049     		ldr	r1, .L377+24
 1426 0366 FFF7FEFF 		bl	__aeabi_fcmpgt
 1427              	.LVL167:
 1428 036a 0028     		cmp	r0, #0
 1429 036c 00D0     		beq	.LCB1219
 1430 036e 96E0     		b	.L145	@long jump
 1431              	.LCB1219:
 1432              		.loc 1 589 0
 1433 0370 0120     		mov	r0, #1
 1434 0372 8225     		mov	r5, #130
 1435 0374 FFF7FEFF 		bl	getSpeed
 1436              	.LVL168:
 1437 0378 E905     		lsl	r1, r5, #23
 1438 037a FFF7FEFF 		bl	__aeabi_fmul
 1439              	.LVL169:
 1440 037e 0849     		ldr	r1, .L377+16
 1441 0380 FFF7FEFF 		bl	__aeabi_fcmpge
 1442              	.LVL170:
 1443 0384 0028     		cmp	r0, #0
 1444 0386 01D0     		beq	.LCB1231
 1445 0388 00F052FC 		bl	.L370	@far jump
 1446              	.LCB1231:
 1447              	.L154:
 1448              		.loc 1 589 0
 1449 038c 0021     		mov	r1, #0
 1450 038e 87E0     		b	.L139
 1451              	.L378:
 1452              		.align	2
 1453              	.L377:
 1454 0390 00C00640 		.word	1074184192
 1455 0394 00000000 		.word	.LANCHOR3
 1456 0398 00000000 		.word	.LANCHOR4
 1457 039c 00807E43 		.word	1132363776
 1458 03a0 0000FF42 		.word	1124007936
 1459 03a4 00800043 		.word	1124106240
 1460 03a8 00007F43 		.word	1132396544
 1461              	.L343:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1462              		.loc 1 585 0 is_stmt 1
 1463 03ac 281C     		add	r0, r5, #0
 1464 03ae 0021     		mov	r1, #0
 1465 03b0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1466              	.LVL171:
 1467 03b4 0028     		cmp	r0, #0
 1468 03b6 14D1     		bne	.L88
 1469              	.L75:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1470              		.loc 1 585 0 is_stmt 0
 1471 03b8 281C     		add	r0, r5, #0
 1472 03ba 0021     		mov	r1, #0
 1473 03bc FFF7FEFF 		bl	__aeabi_fcmpge
 1474              	.LVL172:
 1475 03c0 0028     		cmp	r0, #0
 1476 03c2 00D1     		bne	.LCB1262
 1477 03c4 E7E6     		b	.L81	@long jump
 1478              	.LCB1262:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1479              		.loc 1 585 0
 1480 03c6 281C     		add	r0, r5, #0
 1481 03c8 9149     		ldr	r1, .L379+8
 1482 03ca FFF7FEFF 		bl	__aeabi_fcmpge
 1483              	.LVL173:
 1484 03ce 0028     		cmp	r0, #0
 1485 03d0 07D0     		beq	.L88
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1486              		.loc 1 585 0
 1487 03d2 281C     		add	r0, r5, #0
 1488 03d4 8F49     		ldr	r1, .L379+12
 1489 03d6 FFF7FEFF 		bl	__aeabi_fcmple
 1490              	.LVL174:
 1491 03da 7F26     		mov	r6, #127
 1492 03dc 0028     		cmp	r0, #0
 1493 03de 00D0     		beq	.LCB1275
 1494 03e0 52E6     		b	.L79	@long jump
 1495              	.LCB1275:
 1496              	.L88:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1497              		.loc 1 585 0
 1498 03e2 281C     		add	r0, r5, #0
 1499 03e4 FFF7FEFF 		bl	__aeabi_f2iz
 1500              	.LVL175:
 1501 03e8 C6B2     		uxtb	r6, r0
 1502 03ea 4DE6     		b	.L79
 1503              	.L127:
 1504              		.loc 1 589 0 is_stmt 1
 1505 03ec 0120     		mov	r0, #1
 1506 03ee FFF7FEFF 		bl	getSpeed
 1507              	.LVL176:
 1508 03f2 8223     		mov	r3, #130
 1509 03f4 D905     		lsl	r1, r3, #23
 1510 03f6 FFF7FEFF 		bl	__aeabi_fmul
 1511              	.LVL177:
 1512 03fa 8649     		ldr	r1, .L379+12
 1513 03fc FFF7FEFF 		bl	__aeabi_fcmple
 1514              	.LVL178:
 1515 0400 0028     		cmp	r0, #0
 1516 0402 00D1     		bne	.LCB1297
 1517 0404 66E7     		b	.L130	@long jump
 1518              	.LCB1297:
 1519              	.L124:
 1520              		.loc 1 589 0 is_stmt 0
 1521 0406 0120     		mov	r0, #1
 1522 0408 FFF7FEFF 		bl	getSpeed
 1523              	.LVL179:
 1524 040c 8221     		mov	r1, #130
 1525 040e C905     		lsl	r1, r1, #23
 1526 0410 FFF7FEFF 		bl	__aeabi_fmul
 1527              	.LVL180:
 1528 0414 8049     		ldr	r1, .L379+16
 1529 0416 FFF7FEFF 		bl	__aeabi_fcmpgt
 1530              	.LVL181:
 1531 041a 0028     		cmp	r0, #0
 1532 041c 00D1     		bne	.LCB1310
 1533 041e 25E3     		b	.L371	@long jump
 1534              	.LCB1310:
 1535              	.L128:
 1536              		.loc 1 589 0
 1537 0420 0120     		mov	r0, #1
 1538 0422 FFF7FEFF 		bl	getSpeed
 1539              	.LVL182:
 1540 0426 8222     		mov	r2, #130
 1541 0428 D105     		lsl	r1, r2, #23
 1542 042a FFF7FEFF 		bl	__aeabi_fmul
 1543              	.LVL183:
 1544 042e 7B49     		ldr	r1, .L379+20
 1545 0430 FFF7FEFF 		bl	__aeabi_fcmple
 1546              	.LVL184:
 1547 0434 0028     		cmp	r0, #0
 1548 0436 25D0     		beq	.L135
 1549              		.loc 1 589 0
 1550 0438 0120     		mov	r0, #1
 1551 043a FFF7FEFF 		bl	getSpeed
 1552              	.LVL185:
 1553 043e 8223     		mov	r3, #130
 1554 0440 D905     		lsl	r1, r3, #23
 1555 0442 FFF7FEFF 		bl	__aeabi_fmul
 1556              	.LVL186:
 1557 0446 0021     		mov	r1, #0
 1558 0448 FFF7FEFF 		bl	__aeabi_fcmpge
 1559              	.LVL187:
 1560 044c 0028     		cmp	r0, #0
 1561 044e 19D0     		beq	.L135
 1562              		.loc 1 589 0
 1563 0450 0120     		mov	r0, #1
 1564 0452 FFF7FEFF 		bl	getSpeed
 1565              	.LVL188:
 1566 0456 8221     		mov	r1, #130
 1567 0458 C905     		lsl	r1, r1, #23
 1568 045a FFF7FEFF 		bl	__aeabi_fmul
 1569              	.LVL189:
 1570 045e 6C49     		ldr	r1, .L379+8
 1571 0460 FFF7FEFF 		bl	__aeabi_fcmpge
 1572              	.LVL190:
 1573 0464 0028     		cmp	r0, #0
 1574 0466 00D1     		bne	.LCB1347
 1575 0468 B2E3     		b	.L150	@long jump
 1576              	.LCB1347:
 1577              		.loc 1 589 0
 1578 046a 0120     		mov	r0, #1
 1579 046c 8227     		mov	r7, #130
 1580 046e FFF7FEFF 		bl	getSpeed
 1581              	.LVL191:
 1582 0472 F905     		lsl	r1, r7, #23
 1583 0474 FFF7FEFF 		bl	__aeabi_fmul
 1584              	.LVL192:
 1585 0478 6649     		ldr	r1, .L379+12
 1586 047a FFF7FEFF 		bl	__aeabi_fcmple
 1587              	.LVL193:
 1588 047e 0028     		cmp	r0, #0
 1589 0480 00D1     		bne	.LCB1359
 1590 0482 A5E3     		b	.L150	@long jump
 1591              	.LCB1359:
 1592              	.L135:
 1593              		.loc 1 589 0
 1594 0484 0120     		mov	r0, #1
 1595 0486 8225     		mov	r5, #130
 1596 0488 FFF7FEFF 		bl	getSpeed
 1597              	.LVL194:
 1598 048c E905     		lsl	r1, r5, #23
 1599 048e FFF7FEFF 		bl	__aeabi_fmul
 1600              	.LVL195:
 1601 0492 6149     		ldr	r1, .L379+16
 1602 0494 FFF7FEFF 		bl	__aeabi_fcmpgt
 1603              	.LVL196:
 1604 0498 0028     		cmp	r0, #0
 1605 049a 00D1     		bne	.LCB1372
 1606 049c 28E3     		b	.L348	@long jump
 1607              	.LCB1372:
 1608              	.L145:
 1609 049e 7F21     		mov	r1, #127
 1610              	.L139:
 1611              		.loc 1 589 0
 1612 04a0 5F48     		ldr	r0, .L379+24
 1613 04a2 FFF7FEFF 		bl	uart_putchar
 1614              	.LVL197:
 590:../Sources/main.c **** 	// 5 - PWM output to right motor
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 1615              		.loc 1 591 0 is_stmt 1
 1616 04a6 0020     		mov	r0, #0
 1617 04a8 FFF7FEFF 		bl	TFC_GetMotorPWM
 1618              	.LVL198:
 1619 04ac 5D49     		ldr	r1, .L379+28
 1620 04ae FFF7FEFF 		bl	__aeabi_fmul
 1621              	.LVL199:
 1622 04b2 0021     		mov	r1, #0
 1623 04b4 FFF7FEFF 		bl	__aeabi_fcmpge
 1624              	.LVL200:
 1625 04b8 0028     		cmp	r0, #0
 1626 04ba 00D1     		bne	.LCB1390
 1627 04bc A7E2     		b	.L349	@long jump
 1628              	.LCB1390:
 1629              		.loc 1 591 0 is_stmt 0
 1630 04be 0020     		mov	r0, #0
 1631 04c0 FFF7FEFF 		bl	TFC_GetMotorPWM
 1632              	.LVL201:
 1633 04c4 5749     		ldr	r1, .L379+28
 1634 04c6 FFF7FEFF 		bl	__aeabi_fmul
 1635              	.LVL202:
 1636 04ca FFF7FEFF 		bl	__aeabi_f2d
 1637              	.LVL203:
 1638 04ce 4F4B     		ldr	r3, .L379+4
 1639 04d0 4D4A     		ldr	r2, .L379
 1640 04d2 FFF7FEFF 		bl	__aeabi_dadd
 1641              	.LVL204:
 1642 04d6 FFF7FEFF 		bl	__aeabi_d2iz
 1643              	.LVL205:
 1644 04da C1B2     		uxtb	r1, r0
 1645              	.L158:
 1646              		.loc 1 591 0
 1647 04dc 5048     		ldr	r0, .L379+24
 1648 04de FFF7FEFF 		bl	uart_putchar
 1649              	.LVL206:
 592:../Sources/main.c **** 	// 6 - PWM output to left motor
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 1650              		.loc 1 593 0 is_stmt 1
 1651 04e2 0120     		mov	r0, #1
 1652 04e4 FFF7FEFF 		bl	TFC_GetMotorPWM
 1653              	.LVL207:
 1654 04e8 4E49     		ldr	r1, .L379+28
 1655 04ea FFF7FEFF 		bl	__aeabi_fmul
 1656              	.LVL208:
 1657 04ee 0021     		mov	r1, #0
 1658 04f0 FFF7FEFF 		bl	__aeabi_fcmpge
 1659              	.LVL209:
 1660 04f4 0028     		cmp	r0, #0
 1661 04f6 00D1     		bne	.LCB1421
 1662 04f8 79E2     		b	.L350	@long jump
 1663              	.LCB1421:
 1664              		.loc 1 593 0 is_stmt 0
 1665 04fa 0120     		mov	r0, #1
 1666 04fc FFF7FEFF 		bl	TFC_GetMotorPWM
 1667              	.LVL210:
 1668 0500 4849     		ldr	r1, .L379+28
 1669 0502 FFF7FEFF 		bl	__aeabi_fmul
 1670              	.LVL211:
 1671 0506 FFF7FEFF 		bl	__aeabi_f2d
 1672              	.LVL212:
 1673 050a 404B     		ldr	r3, .L379+4
 1674 050c 3E4A     		ldr	r2, .L379
 1675 050e FFF7FEFF 		bl	__aeabi_dadd
 1676              	.LVL213:
 1677 0512 FFF7FEFF 		bl	__aeabi_d2iz
 1678              	.LVL214:
 1679 0516 C1B2     		uxtb	r1, r0
 1680              	.L161:
 1681              		.loc 1 593 0
 1682 0518 4148     		ldr	r0, .L379+24
 1683 051a FFF7FEFF 		bl	uart_putchar
 1684              	.LVL215:
 594:../Sources/main.c **** 	// 7 - Current of the right motor
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 1685              		.loc 1 595 0 is_stmt 1
 1686 051e 0020     		mov	r0, #0
 1687 0520 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1688              	.LVL216:
 1689 0524 4049     		ldr	r1, .L379+32
 1690 0526 FFF7FEFF 		bl	__aeabi_fmul
 1691              	.LVL217:
 1692 052a 3C49     		ldr	r1, .L379+20
 1693 052c FFF7FEFF 		bl	__aeabi_fcmple
 1694              	.LVL218:
 1695 0530 0028     		cmp	r0, #0
 1696 0532 00D1     		bne	.LCB1452
 1697 0534 85E0     		b	.L162	@long jump
 1698              	.LCB1452:
 1699              		.loc 1 595 0 is_stmt 0
 1700 0536 0020     		mov	r0, #0
 1701 0538 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1702              	.LVL219:
 1703 053c 3A49     		ldr	r1, .L379+32
 1704 053e FFF7FEFF 		bl	__aeabi_fmul
 1705              	.LVL220:
 1706 0542 0021     		mov	r1, #0
 1707 0544 FFF7FEFF 		bl	__aeabi_fcmpge
 1708              	.LVL221:
 1709 0548 0028     		cmp	r0, #0
 1710 054a 7AD0     		beq	.L162
 1711              		.loc 1 595 0
 1712 054c 0020     		mov	r0, #0
 1713 054e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1714              	.LVL222:
 1715 0552 3549     		ldr	r1, .L379+32
 1716 0554 FFF7FEFF 		bl	__aeabi_fmul
 1717              	.LVL223:
 1718 0558 2D49     		ldr	r1, .L379+8
 1719 055a FFF7FEFF 		bl	__aeabi_fcmpge
 1720              	.LVL224:
 1721 055e 0028     		cmp	r0, #0
 1722 0560 64D1     		bne	.L165
 1723              	.L168:
 1724              		.loc 1 595 0
 1725 0562 0020     		mov	r0, #0
 1726 0564 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1727              	.LVL225:
 1728 0568 2F49     		ldr	r1, .L379+32
 1729 056a FFF7FEFF 		bl	__aeabi_fmul
 1730              	.LVL226:
 1731 056e 0021     		mov	r1, #0
 1732 0570 FFF7FEFF 		bl	__aeabi_fcmpeq
 1733              	.LVL227:
 1734 0574 0028     		cmp	r0, #0
 1735 0576 70D0     		beq	.L166
 1736              		.loc 1 595 0
 1737 0578 0020     		mov	r0, #0
 1738 057a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1739              	.LVL228:
 1740 057e 2A49     		ldr	r1, .L379+32
 1741 0580 FFF7FEFF 		bl	__aeabi_fmul
 1742              	.LVL229:
 1743 0584 2549     		ldr	r1, .L379+20
 1744 0586 FFF7FEFF 		bl	__aeabi_fcmple
 1745              	.LVL230:
 1746 058a 0028     		cmp	r0, #0
 1747 058c 22D0     		beq	.L184
 1748              		.loc 1 595 0
 1749 058e 0020     		mov	r0, #0
 1750 0590 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1751              	.LVL231:
 1752 0594 2449     		ldr	r1, .L379+32
 1753 0596 FFF7FEFF 		bl	__aeabi_fmul
 1754              	.LVL232:
 1755 059a 0021     		mov	r1, #0
 1756 059c FFF7FEFF 		bl	__aeabi_fcmpge
 1757              	.LVL233:
 1758 05a0 0028     		cmp	r0, #0
 1759 05a2 17D0     		beq	.L184
 1760              		.loc 1 595 0
 1761 05a4 0020     		mov	r0, #0
 1762 05a6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1763              	.LVL234:
 1764 05aa 1F49     		ldr	r1, .L379+32
 1765 05ac FFF7FEFF 		bl	__aeabi_fmul
 1766              	.LVL235:
 1767 05b0 1749     		ldr	r1, .L379+8
 1768 05b2 FFF7FEFF 		bl	__aeabi_fcmpge
 1769              	.LVL236:
 1770 05b6 0028     		cmp	r0, #0
 1771 05b8 00D1     		bne	.LCB1519
 1772 05ba FFE2     		b	.L188	@long jump
 1773              	.LCB1519:
 1774              		.loc 1 595 0
 1775 05bc 0020     		mov	r0, #0
 1776 05be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1777              	.LVL237:
 1778 05c2 1949     		ldr	r1, .L379+32
 1779 05c4 FFF7FEFF 		bl	__aeabi_fmul
 1780              	.LVL238:
 1781 05c8 1249     		ldr	r1, .L379+12
 1782 05ca FFF7FEFF 		bl	__aeabi_fcmple
 1783              	.LVL239:
 1784 05ce 0028     		cmp	r0, #0
 1785 05d0 00D1     		bne	.LCB1530
 1786 05d2 F3E2     		b	.L188	@long jump
 1787              	.LCB1530:
 1788              	.L184:
 1789              		.loc 1 595 0
 1790 05d4 0020     		mov	r0, #0
 1791 05d6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1792              	.LVL240:
 1793 05da 1349     		ldr	r1, .L379+32
 1794 05dc FFF7FEFF 		bl	__aeabi_fmul
 1795              	.LVL241:
 1796 05e0 0D49     		ldr	r1, .L379+16
 1797 05e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 1798              	.LVL242:
 1799 05e6 0028     		cmp	r0, #0
 1800 05e8 71D1     		bne	.L183
 1801              		.loc 1 595 0
 1802 05ea FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1803              	.LVL243:
 1804 05ee 0E49     		ldr	r1, .L379+32
 1805 05f0 FFF7FEFF 		bl	__aeabi_fmul
 1806              	.LVL244:
 1807 05f4 0649     		ldr	r1, .L379+8
 1808 05f6 FFF7FEFF 		bl	__aeabi_fcmpge
 1809              	.LVL245:
 1810 05fa 0028     		cmp	r0, #0
 1811 05fc 00D0     		beq	.LCB1552
 1812 05fe 27E3     		b	.L372	@long jump
 1813              	.LCB1552:
 1814              	.L192:
 1815              		.loc 1 595 0
 1816 0600 0021     		mov	r1, #0
 1817 0602 65E0     		b	.L177
 1818              	.L380:
 1819 0604 C046C046 		.align	3
 1820              	.L379:
 1821 0608 00000000 		.word	0
 1822 060c 0000E03F 		.word	1071644672
 1823 0610 0000FF42 		.word	1124007936
 1824 0614 00800043 		.word	1124106240
 1825 0618 00007F43 		.word	1132396544
 1826 061c 00807E43 		.word	1132363776
 1827 0620 00C00640 		.word	1074184192
 1828 0624 0000FC42 		.word	1123811328
 1829 0628 00007042 		.word	1114636288
 1830              	.L165:
 1831              		.loc 1 595 0
 1832 062c 0020     		mov	r0, #0
 1833 062e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1834              	.LVL246:
 1835 0632 CF49     		ldr	r1, .L381+8
 1836 0634 FFF7FEFF 		bl	__aeabi_fmul
 1837              	.LVL247:
 1838 0638 CE49     		ldr	r1, .L381+12
 1839 063a FFF7FEFF 		bl	__aeabi_fcmple
 1840              	.LVL248:
 1841 063e 0028     		cmp	r0, #0
 1842 0640 8FD0     		beq	.L168
 1843              	.L162:
 1844              		.loc 1 595 0
 1845 0642 0020     		mov	r0, #0
 1846 0644 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1847              	.LVL249:
 1848 0648 C949     		ldr	r1, .L381+8
 1849 064a FFF7FEFF 		bl	__aeabi_fmul
 1850              	.LVL250:
 1851 064e CA49     		ldr	r1, .L381+16
 1852 0650 FFF7FEFF 		bl	__aeabi_fcmpgt
 1853              	.LVL251:
 1854 0654 0028     		cmp	r0, #0
 1855 0656 00D1     		bne	.LCB1594
 1856 0658 F9E1     		b	.L373	@long jump
 1857              	.LCB1594:
 1858              	.L166:
 1859              		.loc 1 595 0
 1860 065a 0020     		mov	r0, #0
 1861 065c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1862              	.LVL252:
 1863 0660 C349     		ldr	r1, .L381+8
 1864 0662 FFF7FEFF 		bl	__aeabi_fmul
 1865              	.LVL253:
 1866 0666 C549     		ldr	r1, .L381+20
 1867 0668 FFF7FEFF 		bl	__aeabi_fcmple
 1868              	.LVL254:
 1869 066c 0028     		cmp	r0, #0
 1870 066e 22D0     		beq	.L173
 1871              		.loc 1 595 0
 1872 0670 0020     		mov	r0, #0
 1873 0672 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1874              	.LVL255:
 1875 0676 BE49     		ldr	r1, .L381+8
 1876 0678 FFF7FEFF 		bl	__aeabi_fmul
 1877              	.LVL256:
 1878 067c 0021     		mov	r1, #0
 1879 067e FFF7FEFF 		bl	__aeabi_fcmpge
 1880              	.LVL257:
 1881 0682 0028     		cmp	r0, #0
 1882 0684 17D0     		beq	.L173
 1883              		.loc 1 595 0
 1884 0686 0020     		mov	r0, #0
 1885 0688 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1886              	.LVL258:
 1887 068c B849     		ldr	r1, .L381+8
 1888 068e FFF7FEFF 		bl	__aeabi_fmul
 1889              	.LVL259:
 1890 0692 BB49     		ldr	r1, .L381+24
 1891 0694 FFF7FEFF 		bl	__aeabi_fcmpge
 1892              	.LVL260:
 1893 0698 0028     		cmp	r0, #0
 1894 069a 00D1     		bne	.LCB1628
 1895 069c 8EE2     		b	.L188	@long jump
 1896              	.LCB1628:
 1897              		.loc 1 595 0
 1898 069e 0020     		mov	r0, #0
 1899 06a0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1900              	.LVL261:
 1901 06a4 B249     		ldr	r1, .L381+8
 1902 06a6 FFF7FEFF 		bl	__aeabi_fmul
 1903              	.LVL262:
 1904 06aa B249     		ldr	r1, .L381+12
 1905 06ac FFF7FEFF 		bl	__aeabi_fcmple
 1906              	.LVL263:
 1907 06b0 0028     		cmp	r0, #0
 1908 06b2 00D1     		bne	.LCB1639
 1909 06b4 82E2     		b	.L188	@long jump
 1910              	.LCB1639:
 1911              	.L173:
 1912              		.loc 1 595 0
 1913 06b6 0020     		mov	r0, #0
 1914 06b8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1915              	.LVL264:
 1916 06bc AC49     		ldr	r1, .L381+8
 1917 06be FFF7FEFF 		bl	__aeabi_fmul
 1918              	.LVL265:
 1919 06c2 AD49     		ldr	r1, .L381+16
 1920 06c4 FFF7FEFF 		bl	__aeabi_fcmpgt
 1921              	.LVL266:
 1922 06c8 0028     		cmp	r0, #0
 1923 06ca 00D1     		bne	.LCB1651
 1924 06cc 46E2     		b	.L352	@long jump
 1925              	.LCB1651:
 1926              	.L183:
 1927 06ce 7F21     		mov	r1, #127
 1928              	.L177:
 1929              		.loc 1 595 0
 1930 06d0 AC48     		ldr	r0, .L381+28
 1931 06d2 FFF7FEFF 		bl	uart_putchar
 1932              	.LVL267:
 596:../Sources/main.c **** 	// 8 - Current of the left motor
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 1933              		.loc 1 597 0 is_stmt 1
 1934 06d6 0120     		mov	r0, #1
 1935 06d8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1936              	.LVL268:
 1937 06dc A449     		ldr	r1, .L381+8
 1938 06de FFF7FEFF 		bl	__aeabi_fmul
 1939              	.LVL269:
 1940 06e2 A649     		ldr	r1, .L381+20
 1941 06e4 FFF7FEFF 		bl	__aeabi_fcmple
 1942              	.LVL270:
 1943 06e8 0028     		cmp	r0, #0
 1944 06ea 72D0     		beq	.L194
 1945              		.loc 1 597 0 is_stmt 0
 1946 06ec 0120     		mov	r0, #1
 1947 06ee FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1948              	.LVL271:
 1949 06f2 9F49     		ldr	r1, .L381+8
 1950 06f4 FFF7FEFF 		bl	__aeabi_fmul
 1951              	.LVL272:
 1952 06f8 0021     		mov	r1, #0
 1953 06fa FFF7FEFF 		bl	__aeabi_fcmpge
 1954              	.LVL273:
 1955 06fe 0028     		cmp	r0, #0
 1956 0700 67D0     		beq	.L194
 1957              		.loc 1 597 0
 1958 0702 0120     		mov	r0, #1
 1959 0704 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1960              	.LVL274:
 1961 0708 9949     		ldr	r1, .L381+8
 1962 070a FFF7FEFF 		bl	__aeabi_fmul
 1963              	.LVL275:
 1964 070e 9C49     		ldr	r1, .L381+24
 1965 0710 FFF7FEFF 		bl	__aeabi_fcmpge
 1966              	.LVL276:
 1967 0714 0028     		cmp	r0, #0
 1968 0716 51D1     		bne	.L197
 1969              	.L200:
 1970              		.loc 1 597 0
 1971 0718 0120     		mov	r0, #1
 1972 071a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1973              	.LVL277:
 1974 071e 9449     		ldr	r1, .L381+8
 1975 0720 FFF7FEFF 		bl	__aeabi_fmul
 1976              	.LVL278:
 1977 0724 0021     		mov	r1, #0
 1978 0726 FFF7FEFF 		bl	__aeabi_fcmpeq
 1979              	.LVL279:
 1980 072a 0028     		cmp	r0, #0
 1981 072c 5DD0     		beq	.L198
 1982              		.loc 1 597 0
 1983 072e 0120     		mov	r0, #1
 1984 0730 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1985              	.LVL280:
 1986 0734 8E49     		ldr	r1, .L381+8
 1987 0736 FFF7FEFF 		bl	__aeabi_fmul
 1988              	.LVL281:
 1989 073a 9049     		ldr	r1, .L381+20
 1990 073c FFF7FEFF 		bl	__aeabi_fcmple
 1991              	.LVL282:
 1992 0740 0028     		cmp	r0, #0
 1993 0742 22D0     		beq	.L216
 1994              		.loc 1 597 0
 1995 0744 0120     		mov	r0, #1
 1996 0746 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1997              	.LVL283:
 1998 074a 8949     		ldr	r1, .L381+8
 1999 074c FFF7FEFF 		bl	__aeabi_fmul
 2000              	.LVL284:
 2001 0750 0021     		mov	r1, #0
 2002 0752 FFF7FEFF 		bl	__aeabi_fcmpge
 2003              	.LVL285:
 2004 0756 0028     		cmp	r0, #0
 2005 0758 17D0     		beq	.L216
 2006              		.loc 1 597 0
 2007 075a 0120     		mov	r0, #1
 2008 075c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2009              	.LVL286:
 2010 0760 8349     		ldr	r1, .L381+8
 2011 0762 FFF7FEFF 		bl	__aeabi_fmul
 2012              	.LVL287:
 2013 0766 8649     		ldr	r1, .L381+24
 2014 0768 FFF7FEFF 		bl	__aeabi_fcmpge
 2015              	.LVL288:
 2016 076c 0028     		cmp	r0, #0
 2017 076e 00D1     		bne	.LCB1736
 2018 0770 1AE2     		b	.L220	@long jump
 2019              	.LCB1736:
 2020              		.loc 1 597 0
 2021 0772 0120     		mov	r0, #1
 2022 0774 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2023              	.LVL289:
 2024 0778 7D49     		ldr	r1, .L381+8
 2025 077a FFF7FEFF 		bl	__aeabi_fmul
 2026              	.LVL290:
 2027 077e 7D49     		ldr	r1, .L381+12
 2028 0780 FFF7FEFF 		bl	__aeabi_fcmple
 2029              	.LVL291:
 2030 0784 0028     		cmp	r0, #0
 2031 0786 00D1     		bne	.LCB1747
 2032 0788 0EE2     		b	.L220	@long jump
 2033              	.LCB1747:
 2034              	.L216:
 2035              		.loc 1 597 0
 2036 078a 0120     		mov	r0, #1
 2037 078c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2038              	.LVL292:
 2039 0790 7749     		ldr	r1, .L381+8
 2040 0792 FFF7FEFF 		bl	__aeabi_fmul
 2041              	.LVL293:
 2042 0796 7849     		ldr	r1, .L381+16
 2043 0798 FFF7FEFF 		bl	__aeabi_fcmpgt
 2044              	.LVL294:
 2045 079c 0028     		cmp	r0, #0
 2046 079e 5ED1     		bne	.L215
 2047              		.loc 1 597 0
 2048 07a0 0120     		mov	r0, #1
 2049 07a2 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2050              	.LVL295:
 2051 07a6 7249     		ldr	r1, .L381+8
 2052 07a8 FFF7FEFF 		bl	__aeabi_fmul
 2053              	.LVL296:
 2054 07ac 7449     		ldr	r1, .L381+24
 2055 07ae FFF7FEFF 		bl	__aeabi_fcmpge
 2056              	.LVL297:
 2057 07b2 0028     		cmp	r0, #0
 2058 07b4 00D0     		beq	.LCB1770
 2059 07b6 1AE2     		b	.L374	@long jump
 2060              	.LCB1770:
 2061              	.L224:
 2062              		.loc 1 597 0
 2063 07b8 0021     		mov	r1, #0
 2064 07ba 51E0     		b	.L209
 2065              	.L197:
 2066              		.loc 1 597 0
 2067 07bc 0120     		mov	r0, #1
 2068 07be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2069              	.LVL298:
 2070 07c2 6B49     		ldr	r1, .L381+8
 2071 07c4 FFF7FEFF 		bl	__aeabi_fmul
 2072              	.LVL299:
 2073 07c8 6A49     		ldr	r1, .L381+12
 2074 07ca FFF7FEFF 		bl	__aeabi_fcmple
 2075              	.LVL300:
 2076 07ce 0028     		cmp	r0, #0
 2077 07d0 A2D0     		beq	.L200
 2078              	.L194:
 2079              		.loc 1 597 0
 2080 07d2 0120     		mov	r0, #1
 2081 07d4 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2082              	.LVL301:
 2083 07d8 6549     		ldr	r1, .L381+8
 2084 07da FFF7FEFF 		bl	__aeabi_fmul
 2085              	.LVL302:
 2086 07de 6649     		ldr	r1, .L381+16
 2087 07e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 2088              	.LVL303:
 2089 07e4 0028     		cmp	r0, #0
 2090 07e6 00D1     		bne	.LCB1799
 2091 07e8 21E1     		b	.L375	@long jump
 2092              	.LCB1799:
 2093              	.L198:
 2094              		.loc 1 597 0
 2095 07ea 0120     		mov	r0, #1
 2096 07ec FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2097              	.LVL304:
 2098 07f0 5F49     		ldr	r1, .L381+8
 2099 07f2 FFF7FEFF 		bl	__aeabi_fmul
 2100              	.LVL305:
 2101 07f6 6149     		ldr	r1, .L381+20
 2102 07f8 FFF7FEFF 		bl	__aeabi_fcmple
 2103              	.LVL306:
 2104 07fc 0028     		cmp	r0, #0
 2105 07fe 22D0     		beq	.L205
 2106              		.loc 1 597 0
 2107 0800 0120     		mov	r0, #1
 2108 0802 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2109              	.LVL307:
 2110 0806 5A49     		ldr	r1, .L381+8
 2111 0808 FFF7FEFF 		bl	__aeabi_fmul
 2112              	.LVL308:
 2113 080c 0021     		mov	r1, #0
 2114 080e FFF7FEFF 		bl	__aeabi_fcmpge
 2115              	.LVL309:
 2116 0812 0028     		cmp	r0, #0
 2117 0814 17D0     		beq	.L205
 2118              		.loc 1 597 0
 2119 0816 0120     		mov	r0, #1
 2120 0818 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2121              	.LVL310:
 2122 081c 5449     		ldr	r1, .L381+8
 2123 081e FFF7FEFF 		bl	__aeabi_fmul
 2124              	.LVL311:
 2125 0822 5749     		ldr	r1, .L381+24
 2126 0824 FFF7FEFF 		bl	__aeabi_fcmpge
 2127              	.LVL312:
 2128 0828 0028     		cmp	r0, #0
 2129 082a 00D1     		bne	.LCB1833
 2130 082c BCE1     		b	.L220	@long jump
 2131              	.LCB1833:
 2132              		.loc 1 597 0
 2133 082e 0120     		mov	r0, #1
 2134 0830 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2135              	.LVL313:
 2136 0834 4E49     		ldr	r1, .L381+8
 2137 0836 FFF7FEFF 		bl	__aeabi_fmul
 2138              	.LVL314:
 2139 083a 4E49     		ldr	r1, .L381+12
 2140 083c FFF7FEFF 		bl	__aeabi_fcmple
 2141              	.LVL315:
 2142 0840 0028     		cmp	r0, #0
 2143 0842 00D1     		bne	.LCB1844
 2144 0844 B0E1     		b	.L220	@long jump
 2145              	.LCB1844:
 2146              	.L205:
 2147              		.loc 1 597 0
 2148 0846 0120     		mov	r0, #1
 2149 0848 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2150              	.LVL316:
 2151 084c 4849     		ldr	r1, .L381+8
 2152 084e FFF7FEFF 		bl	__aeabi_fmul
 2153              	.LVL317:
 2154 0852 4949     		ldr	r1, .L381+16
 2155 0854 FFF7FEFF 		bl	__aeabi_fcmpgt
 2156              	.LVL318:
 2157 0858 0028     		cmp	r0, #0
 2158 085a 00D1     		bne	.LCB1856
 2159 085c 64E1     		b	.L354	@long jump
 2160              	.LCB1856:
 2161              	.L215:
 2162 085e 7F21     		mov	r1, #127
 2163              	.L209:
 2164              		.loc 1 597 0
 2165 0860 4848     		ldr	r0, .L381+28
 2166 0862 FFF7FEFF 		bl	uart_putchar
 2167              	.LVL319:
 598:../Sources/main.c **** 	// 9 - Servo Value
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2168              		.loc 1 599 0 is_stmt 1
 2169 0866 4848     		ldr	r0, .L381+32
 2170 0868 4849     		ldr	r1, .L381+36
 2171 086a 0068     		ldr	r0, [r0]
 2172 086c FFF7FEFF 		bl	__aeabi_fmul
 2173              	.LVL320:
 2174 0870 0021     		mov	r1, #0
 2175 0872 071C     		add	r7, r0, #0
 2176 0874 FFF7FEFF 		bl	__aeabi_fcmpge
 2177              	.LVL321:
 2178 0878 0028     		cmp	r0, #0
 2179 087a 00D1     		bne	.LCB1874
 2180 087c ACE0     		b	.L355	@long jump
 2181              	.LCB1874:
 2182              		.loc 1 599 0 is_stmt 0
 2183 087e 381C     		add	r0, r7, #0
 2184 0880 FFF7FEFF 		bl	__aeabi_f2d
 2185              	.LVL322:
 2186 0884 394B     		ldr	r3, .L381+4
 2187 0886 384A     		ldr	r2, .L381
 2188 0888 FFF7FEFF 		bl	__aeabi_dadd
 2189              	.LVL323:
 2190 088c FFF7FEFF 		bl	__aeabi_d2iz
 2191              	.LVL324:
 2192 0890 C1B2     		uxtb	r1, r0
 2193              	.L228:
 2194              		.loc 1 599 0
 2195 0892 3C48     		ldr	r0, .L381+28
 2196 0894 FFF7FEFF 		bl	uart_putchar
 2197              	.LVL325:
 600:../Sources/main.c **** 	// 10 - Detected edge type - Left:100, Right:-100, Track: 0, None:50
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2198              		.loc 1 601 0 is_stmt 1
 2199 0898 6579     		ldrb	r5, [r4, #5]
 2200 089a 3221     		mov	r1, #50
 2201 089c 002D     		cmp	r5, #0
 2202 089e 06D0     		beq	.L229
 2203              		.loc 1 601 0 is_stmt 0
 2204 08a0 032D     		cmp	r5, #3
 2205 08a2 00D1     		bne	.LCB1895
 2206 08a4 9FE1     		b	.L259	@long jump
 2207              	.LCB1895:
 2208              		.loc 1 601 0
 2209 08a6 9C21     		mov	r1, #156
 2210 08a8 012D     		cmp	r5, #1
 2211 08aa 00D1     		bne	.LCB1898
 2212 08ac 9DE1     		b	.L376	@long jump
 2213              	.LCB1898:
 2214              	.L229:
 2215              		.loc 1 601 0
 2216 08ae 3548     		ldr	r0, .L381+28
 2217 08b0 FFF7FEFF 		bl	uart_putchar
 2218              	.LVL326:
 602:../Sources/main.c **** 	// 11 - Camera Exposure Time, 1 unit = 0.1 ms
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2219              		.loc 1 603 0 is_stmt 1
 2220 08b4 3649     		ldr	r1, .L381+40
 2221 08b6 0868     		ldr	r0, [r1]
 2222 08b8 FFF7FEFF 		bl	__aeabi_i2f
 2223              	.LVL327:
 2224 08bc 3549     		ldr	r1, .L381+44
 2225 08be FFF7FEFF 		bl	__aeabi_fmul
 2226              	.LVL328:
 2227 08c2 2E49     		ldr	r1, .L381+20
 2228 08c4 051C     		add	r5, r0, #0
 2229 08c6 FFF7FEFF 		bl	__aeabi_fcmple
 2230              	.LVL329:
 2231 08ca 0028     		cmp	r0, #0
 2232 08cc 36D0     		beq	.L238
 2233              		.loc 1 603 0 is_stmt 0
 2234 08ce 281C     		add	r0, r5, #0
 2235 08d0 0021     		mov	r1, #0
 2236 08d2 FFF7FEFF 		bl	__aeabi_fcmpge
 2237              	.LVL330:
 2238 08d6 0028     		cmp	r0, #0
 2239 08d8 66D0     		beq	.L232
 2240              		.loc 1 603 0
 2241 08da 281C     		add	r0, r5, #0
 2242 08dc 2849     		ldr	r1, .L381+24
 2243 08de FFF7FEFF 		bl	__aeabi_fcmpge
 2244              	.LVL331:
 2245 08e2 0028     		cmp	r0, #0
 2246 08e4 5AD0     		beq	.L357
 2247              		.loc 1 603 0
 2248 08e6 281C     		add	r0, r5, #0
 2249 08e8 2249     		ldr	r1, .L381+12
 2250 08ea FFF7FEFF 		bl	__aeabi_fcmple
 2251              	.LVL332:
 2252 08ee 7F26     		mov	r6, #127
 2253 08f0 071E     		sub	r7, r0, #0
 2254 08f2 15D1     		bne	.L236
 2255              		.loc 1 603 0
 2256 08f4 281C     		add	r0, r5, #0
 2257 08f6 0021     		mov	r1, #0
 2258 08f8 FFF7FEFF 		bl	__aeabi_fcmpeq
 2259              	.LVL333:
 2260 08fc 0028     		cmp	r0, #0
 2261 08fe 53D0     		beq	.L232
 2262              		.loc 1 603 0
 2263 0900 002F     		cmp	r7, #0
 2264 0902 64D0     		beq	.L245
 2265              		.loc 1 603 0
 2266 0904 281C     		add	r0, r5, #0
 2267 0906 1C49     		ldr	r1, .L381+16
 2268 0908 FFF7FEFF 		bl	__aeabi_fcmpgt
 2269              	.LVL334:
 2270 090c 0028     		cmp	r0, #0
 2271 090e 07D1     		bne	.L236
 2272              		.loc 1 603 0
 2273 0910 281C     		add	r0, r5, #0
 2274 0912 1B49     		ldr	r1, .L381+24
 2275 0914 FFF7FEFF 		bl	__aeabi_fcmpge
 2276              	.LVL335:
 2277 0918 7E26     		mov	r6, #126
 2278 091a 0028     		cmp	r0, #0
 2279 091c 00D1     		bne	.L236
 2280              	.L244:
 2281              		.loc 1 603 0
 2282 091e 0026     		mov	r6, #0
 2283              	.L236:
 2284              		.loc 1 603 0
 2285 0920 311C     		mov	r1, r6
 2286 0922 1848     		ldr	r0, .L381+28
 2287 0924 FFF7FEFF 		bl	uart_putchar
 2288              	.LVL336:
 604:../Sources/main.c **** 	// 12 - Loop time
 605:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)loop_time);
 2289              		.loc 1 605 0 is_stmt 1
 2290 0928 1B4A     		ldr	r2, .L381+48
 2291 092a 1648     		ldr	r0, .L381+28
 2292 092c 1178     		ldrb	r1, [r2]
 2293 092e FFF7FEFF 		bl	uart_putchar
 2294              	.LVL337:
 606:../Sources/main.c **** 	// 13 - Line Distance
 607:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineDistance);
 2295              		.loc 1 607 0
 2296 0932 217B     		ldrb	r1, [r4, #12]
 2297 0934 1348     		ldr	r0, .L381+28
 2298 0936 FFF7FEFF 		bl	uart_putchar
 2299              	.LVL338:
 608:../Sources/main.c **** 	
 609:../Sources/main.c **** }
 2300              		.loc 1 609 0
 2301              		@ sp needed for prologue
 2302 093a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2303              	.L238:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2304              		.loc 1 603 0
 2305 093c 281C     		add	r0, r5, #0
 2306 093e 0E49     		ldr	r1, .L381+16
 2307 0940 FFF7FEFF 		bl	__aeabi_fcmpgt
 2308              	.LVL339:
 2309 0944 7F26     		mov	r6, #127
 2310 0946 0028     		cmp	r0, #0
 2311 0948 EAD1     		bne	.L236
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2312              		.loc 1 603 0 is_stmt 0
 2313 094a 281C     		add	r0, r5, #0
 2314 094c 0C49     		ldr	r1, .L381+24
 2315 094e FFF7FEFF 		bl	__aeabi_fcmpge
 2316              	.LVL340:
 2317 0952 0028     		cmp	r0, #0
 2318 0954 E3D0     		beq	.L244
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2319              		.loc 1 603 0
 2320 0956 281C     		add	r0, r5, #0
 2321 0958 0649     		ldr	r1, .L381+12
 2322 095a FFF7FEFF 		bl	__aeabi_fcmple
 2323              	.LVL341:
 2324 095e 0028     		cmp	r0, #0
 2325 0960 DED1     		bne	.L236
 2326 0962 DCE7     		b	.L244
 2327              	.L382:
 2328 0964 C046C046 		.align	3
 2329              	.L381:
 2330 0968 00000000 		.word	0
 2331 096c 0000E03F 		.word	1071644672
 2332 0970 00007042 		.word	1114636288
 2333 0974 00800043 		.word	1124106240
 2334 0978 00007F43 		.word	1132396544
 2335 097c 00807E43 		.word	1132363776
 2336 0980 0000FF42 		.word	1124007936
 2337 0984 00C00640 		.word	1074184192
 2338 0988 00000000 		.word	.LANCHOR5
 2339 098c 0000FC42 		.word	1123811328
 2340 0990 00000000 		.word	newExposure
 2341 0994 CDCCCC3C 		.word	1020054733
 2342 0998 00000000 		.word	.LANCHOR6
 2343              	.L357:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2344              		.loc 1 603 0
 2345 099c 281C     		add	r0, r5, #0
 2346 099e 0021     		mov	r1, #0
 2347 09a0 FFF7FEFF 		bl	__aeabi_fcmpeq
 2348              	.LVL342:
 2349 09a4 0028     		cmp	r0, #0
 2350 09a6 12D1     		bne	.L245
 2351              	.L232:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2352              		.loc 1 603 0
 2353 09a8 281C     		add	r0, r5, #0
 2354 09aa 0021     		mov	r1, #0
 2355 09ac FFF7FEFF 		bl	__aeabi_fcmpge
 2356              	.LVL343:
 2357 09b0 0028     		cmp	r0, #0
 2358 09b2 C3D0     		beq	.L238
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2359              		.loc 1 603 0
 2360 09b4 281C     		add	r0, r5, #0
 2361 09b6 B049     		ldr	r1, .L383+8
 2362 09b8 FFF7FEFF 		bl	__aeabi_fcmpge
 2363              	.LVL344:
 2364 09bc 0028     		cmp	r0, #0
 2365 09be 06D0     		beq	.L245
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2366              		.loc 1 603 0
 2367 09c0 281C     		add	r0, r5, #0
 2368 09c2 AE49     		ldr	r1, .L383+12
 2369 09c4 FFF7FEFF 		bl	__aeabi_fcmple
 2370              	.LVL345:
 2371 09c8 7F26     		mov	r6, #127
 2372 09ca 0028     		cmp	r0, #0
 2373 09cc A8D1     		bne	.L236
 2374              	.L245:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2375              		.loc 1 603 0
 2376 09ce 281C     		add	r0, r5, #0
 2377 09d0 FFF7FEFF 		bl	__aeabi_f2iz
 2378              	.LVL346:
 2379 09d4 C6B2     		uxtb	r6, r0
 2380 09d6 A3E7     		b	.L236
 2381              	.L355:
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2382              		.loc 1 599 0 is_stmt 1
 2383 09d8 381C     		add	r0, r7, #0
 2384 09da FFF7FEFF 		bl	__aeabi_f2d
 2385              	.LVL347:
 2386 09de A54B     		ldr	r3, .L383+4
 2387 09e0 A34A     		ldr	r2, .L383
 2388 09e2 FFF7FEFF 		bl	__aeabi_dsub
 2389              	.LVL348:
 2390 09e6 FFF7FEFF 		bl	__aeabi_d2iz
 2391              	.LVL349:
 2392 09ea C1B2     		uxtb	r1, r0
 2393 09ec 51E7     		b	.L228
 2394              	.L350:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 2395              		.loc 1 593 0
 2396 09ee 0120     		mov	r0, #1
 2397 09f0 FFF7FEFF 		bl	TFC_GetMotorPWM
 2398              	.LVL350:
 2399 09f4 A249     		ldr	r1, .L383+16
 2400 09f6 FFF7FEFF 		bl	__aeabi_fmul
 2401              	.LVL351:
 2402 09fa FFF7FEFF 		bl	__aeabi_f2d
 2403              	.LVL352:
 2404 09fe 9D4B     		ldr	r3, .L383+4
 2405 0a00 9B4A     		ldr	r2, .L383
 2406 0a02 FFF7FEFF 		bl	__aeabi_dsub
 2407              	.LVL353:
 2408 0a06 FFF7FEFF 		bl	__aeabi_d2iz
 2409              	.LVL354:
 2410 0a0a C1B2     		uxtb	r1, r0
 2411 0a0c 84E5     		b	.L161
 2412              	.L349:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 2413              		.loc 1 591 0
 2414 0a0e 0020     		mov	r0, #0
 2415 0a10 FFF7FEFF 		bl	TFC_GetMotorPWM
 2416              	.LVL355:
 2417 0a14 9A49     		ldr	r1, .L383+16
 2418 0a16 FFF7FEFF 		bl	__aeabi_fmul
 2419              	.LVL356:
 2420 0a1a FFF7FEFF 		bl	__aeabi_f2d
 2421              	.LVL357:
 2422 0a1e 954B     		ldr	r3, .L383+4
 2423 0a20 934A     		ldr	r2, .L383
 2424 0a22 FFF7FEFF 		bl	__aeabi_dsub
 2425              	.LVL358:
 2426 0a26 FFF7FEFF 		bl	__aeabi_d2iz
 2427              	.LVL359:
 2428 0a2a C1B2     		uxtb	r1, r0
 2429 0a2c 56E5     		b	.L158
 2430              	.L375:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2431              		.loc 1 597 0
 2432 0a2e 0120     		mov	r0, #1
 2433 0a30 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2434              	.LVL360:
 2435 0a34 9349     		ldr	r1, .L383+20
 2436 0a36 FFF7FEFF 		bl	__aeabi_fmul
 2437              	.LVL361:
 2438 0a3a 8F49     		ldr	r1, .L383+8
 2439 0a3c FFF7FEFF 		bl	__aeabi_fcmpge
 2440              	.LVL362:
 2441 0a40 0028     		cmp	r0, #0
 2442 0a42 00D1     		bne	.LCB2125
 2443 0a44 D1E6     		b	.L198	@long jump
 2444              	.LCB2125:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2445              		.loc 1 597 0 is_stmt 0
 2446 0a46 0120     		mov	r0, #1
 2447 0a48 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2448              	.LVL363:
 2449 0a4c CDE6     		b	.L198
 2450              	.L373:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2451              		.loc 1 595 0 is_stmt 1
 2452 0a4e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2453              	.LVL364:
 2454 0a52 8C49     		ldr	r1, .L383+20
 2455 0a54 FFF7FEFF 		bl	__aeabi_fmul
 2456              	.LVL365:
 2457 0a58 8749     		ldr	r1, .L383+8
 2458 0a5a FFF7FEFF 		bl	__aeabi_fcmpge
 2459              	.LVL366:
 2460 0a5e 0028     		cmp	r0, #0
 2461 0a60 00D1     		bne	.LCB2142
 2462 0a62 FAE5     		b	.L166	@long jump
 2463              	.LCB2142:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2464              		.loc 1 595 0 is_stmt 0
 2465 0a64 0020     		mov	r0, #0
 2466 0a66 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2467              	.LVL367:
 2468 0a6a F6E5     		b	.L166
 2469              	.L371:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2470              		.loc 1 589 0 is_stmt 1
 2471 0a6c 0120     		mov	r0, #1
 2472 0a6e 8227     		mov	r7, #130
 2473 0a70 FFF7FEFF 		bl	getSpeed
 2474              	.LVL368:
 2475 0a74 F905     		lsl	r1, r7, #23
 2476 0a76 FFF7FEFF 		bl	__aeabi_fmul
 2477              	.LVL369:
 2478 0a7a 7F49     		ldr	r1, .L383+8
 2479 0a7c FFF7FEFF 		bl	__aeabi_fcmpge
 2480              	.LVL370:
 2481 0a80 0028     		cmp	r0, #0
 2482 0a82 00D1     		bne	.LCB2161
 2483 0a84 CCE4     		b	.L128	@long jump
 2484              	.LCB2161:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2485              		.loc 1 589 0 is_stmt 0
 2486 0a86 0120     		mov	r0, #1
 2487 0a88 FFF7FEFF 		bl	getSpeed
 2488              	.LVL371:
 2489 0a8c C8E4     		b	.L128
 2490              	.L369:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2491              		.loc 1 587 0 is_stmt 1
 2492 0a8e 8226     		mov	r6, #130
 2493 0a90 FFF7FEFF 		bl	getSpeed
 2494              	.LVL372:
 2495 0a94 F105     		lsl	r1, r6, #23
 2496 0a96 FFF7FEFF 		bl	__aeabi_fmul
 2497              	.LVL373:
 2498 0a9a 7749     		ldr	r1, .L383+8
 2499 0a9c FFF7FEFF 		bl	__aeabi_fcmpge
 2500              	.LVL374:
 2501 0aa0 0028     		cmp	r0, #0
 2502 0aa2 01D1     		bne	.LCB2179
 2503 0aa4 FFF7A9FB 		bl	.L96	@far jump
 2504              	.LCB2179:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2505              		.loc 1 587 0 is_stmt 0
 2506 0aa8 0020     		mov	r0, #0
 2507 0aaa FFF7FEFF 		bl	getSpeed
 2508              	.LVL375:
 2509 0aae FFF7A4FB 		bl	.L96	@ far jump
 2510              	.L346:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2511              		.loc 1 587 0
 2512 0ab2 0020     		mov	r0, #0
 2513 0ab4 FFF7FEFF 		bl	getSpeed
 2514              	.LVL376:
 2515 0ab8 8223     		mov	r3, #130
 2516 0aba D905     		lsl	r1, r3, #23
 2517 0abc FFF7FEFF 		bl	__aeabi_fmul
 2518              	.LVL377:
 2519 0ac0 6D49     		ldr	r1, .L383+8
 2520 0ac2 FFF7FEFF 		bl	__aeabi_fcmpge
 2521              	.LVL378:
 2522 0ac6 0028     		cmp	r0, #0
 2523 0ac8 01D1     		bne	.LCB2198
 2524 0aca FFF762FB 		bl	.L122	@far jump
 2525              	.LCB2198:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2526              		.loc 1 587 0
 2527 0ace 0020     		mov	r0, #0
 2528 0ad0 FFF7FEFF 		bl	getSpeed
 2529              	.LVL379:
 2530 0ad4 8221     		mov	r1, #130
 2531 0ad6 C905     		lsl	r1, r1, #23
 2532 0ad8 FFF7FEFF 		bl	__aeabi_fmul
 2533              	.LVL380:
 2534 0adc 6749     		ldr	r1, .L383+12
 2535 0ade FFF7FEFF 		bl	__aeabi_fcmple
 2536              	.LVL381:
 2537 0ae2 0028     		cmp	r0, #0
 2538 0ae4 01D0     		beq	.LCB2210
 2539 0ae6 FFF7CAFB 		bl	.L113	@far jump
 2540              	.LCB2210:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2541              		.loc 1 587 0
 2542 0aea 0021     		mov	r1, #0
 2543 0aec FFF7C8FB 		bl	.L107	@ far jump
 2544              	.L348:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2545              		.loc 1 589 0 is_stmt 1
 2546 0af0 0120     		mov	r0, #1
 2547 0af2 8226     		mov	r6, #130
 2548 0af4 FFF7FEFF 		bl	getSpeed
 2549              	.LVL382:
 2550 0af8 F105     		lsl	r1, r6, #23
 2551 0afa FFF7FEFF 		bl	__aeabi_fmul
 2552              	.LVL383:
 2553 0afe 5E49     		ldr	r1, .L383+8
 2554 0b00 FFF7FEFF 		bl	__aeabi_fcmpge
 2555              	.LVL384:
 2556 0b04 0028     		cmp	r0, #0
 2557 0b06 00D1     		bne	.LCB2227
 2558 0b08 40E4     		b	.L154	@long jump
 2559              	.LCB2227:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2560              		.loc 1 589 0 is_stmt 0
 2561 0b0a 0120     		mov	r0, #1
 2562 0b0c FFF7FEFF 		bl	getSpeed
 2563              	.LVL385:
 2564 0b10 8222     		mov	r2, #130
 2565 0b12 D105     		lsl	r1, r2, #23
 2566 0b14 FFF7FEFF 		bl	__aeabi_fmul
 2567              	.LVL386:
 2568 0b18 5849     		ldr	r1, .L383+12
 2569 0b1a FFF7FEFF 		bl	__aeabi_fcmple
 2570              	.LVL387:
 2571 0b1e 0028     		cmp	r0, #0
 2572 0b20 00D0     		beq	.LCB2239
 2573 0b22 BCE4     		b	.L145	@long jump
 2574              	.LCB2239:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2575              		.loc 1 589 0
 2576 0b24 0021     		mov	r1, #0
 2577 0b26 BBE4     		b	.L139
 2578              	.L354:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2579              		.loc 1 597 0 is_stmt 1
 2580 0b28 0120     		mov	r0, #1
 2581 0b2a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2582              	.LVL388:
 2583 0b2e 5549     		ldr	r1, .L383+20
 2584 0b30 FFF7FEFF 		bl	__aeabi_fmul
 2585              	.LVL389:
 2586 0b34 5049     		ldr	r1, .L383+8
 2587 0b36 FFF7FEFF 		bl	__aeabi_fcmpge
 2588              	.LVL390:
 2589 0b3a 0028     		cmp	r0, #0
 2590 0b3c 00D1     		bne	.LCB2255
 2591 0b3e 3BE6     		b	.L224	@long jump
 2592              	.LCB2255:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2593              		.loc 1 597 0 is_stmt 0
 2594 0b40 0120     		mov	r0, #1
 2595 0b42 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2596              	.LVL391:
 2597 0b46 4F49     		ldr	r1, .L383+20
 2598 0b48 FFF7FEFF 		bl	__aeabi_fmul
 2599              	.LVL392:
 2600 0b4c 4B49     		ldr	r1, .L383+12
 2601 0b4e FFF7FEFF 		bl	__aeabi_fcmple
 2602              	.LVL393:
 2603 0b52 0028     		cmp	r0, #0
 2604 0b54 00D0     		beq	.LCB2266
 2605 0b56 82E6     		b	.L215	@long jump
 2606              	.LCB2266:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2607              		.loc 1 597 0
 2608 0b58 0021     		mov	r1, #0
 2609 0b5a 81E6     		b	.L209
 2610              	.L352:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2611              		.loc 1 595 0 is_stmt 1
 2612 0b5c 0020     		mov	r0, #0
 2613 0b5e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2614              	.LVL394:
 2615 0b62 4849     		ldr	r1, .L383+20
 2616 0b64 FFF7FEFF 		bl	__aeabi_fmul
 2617              	.LVL395:
 2618 0b68 4349     		ldr	r1, .L383+8
 2619 0b6a FFF7FEFF 		bl	__aeabi_fcmpge
 2620              	.LVL396:
 2621 0b6e 0028     		cmp	r0, #0
 2622 0b70 00D1     		bne	.LCB2282
 2623 0b72 45E5     		b	.L192	@long jump
 2624              	.LCB2282:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2625              		.loc 1 595 0 is_stmt 0
 2626 0b74 0020     		mov	r0, #0
 2627 0b76 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2628              	.LVL397:
 2629 0b7a 4249     		ldr	r1, .L383+20
 2630 0b7c FFF7FEFF 		bl	__aeabi_fmul
 2631              	.LVL398:
 2632 0b80 3E49     		ldr	r1, .L383+12
 2633 0b82 FFF7FEFF 		bl	__aeabi_fcmple
 2634              	.LVL399:
 2635 0b86 0028     		cmp	r0, #0
 2636 0b88 00D0     		beq	.LCB2293
 2637 0b8a A0E5     		b	.L183	@long jump
 2638              	.LCB2293:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2639              		.loc 1 595 0
 2640 0b8c 0021     		mov	r1, #0
 2641 0b8e 9FE5     		b	.L177
 2642              	.L118:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2643              		.loc 1 587 0 is_stmt 1
 2644 0b90 0020     		mov	r0, #0
 2645 0b92 8227     		mov	r7, #130
 2646 0b94 FFF7FEFF 		bl	getSpeed
 2647              	.LVL400:
 2648 0b98 F905     		lsl	r1, r7, #23
 2649 0b9a FFF7FEFF 		bl	__aeabi_fmul
 2650              	.LVL401:
 2651 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 2652              	.LVL402:
 2653 0ba2 C1B2     		uxtb	r1, r0
 2654 0ba4 FFF76CFB 		bl	.L107	@ far jump
 2655              	.L220:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2656              		.loc 1 597 0
 2657 0ba8 0120     		mov	r0, #1
 2658 0baa FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2659              	.LVL403:
 2660 0bae 3549     		ldr	r1, .L383+20
 2661 0bb0 FFF7FEFF 		bl	__aeabi_fmul
 2662              	.LVL404:
 2663 0bb4 FFF7FEFF 		bl	__aeabi_f2iz
 2664              	.LVL405:
 2665 0bb8 C1B2     		uxtb	r1, r0
 2666 0bba 51E6     		b	.L209
 2667              	.L188:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2668              		.loc 1 595 0
 2669 0bbc 0020     		mov	r0, #0
 2670 0bbe FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2671              	.LVL406:
 2672 0bc2 3049     		ldr	r1, .L383+20
 2673 0bc4 FFF7FEFF 		bl	__aeabi_fmul
 2674              	.LVL407:
 2675 0bc8 FFF7FEFF 		bl	__aeabi_f2iz
 2676              	.LVL408:
 2677 0bcc C1B2     		uxtb	r1, r0
 2678 0bce 7FE5     		b	.L177
 2679              	.L150:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2680              		.loc 1 589 0
 2681 0bd0 0120     		mov	r0, #1
 2682 0bd2 FFF7FEFF 		bl	getSpeed
 2683              	.LVL409:
 2684 0bd6 8223     		mov	r3, #130
 2685 0bd8 D905     		lsl	r1, r3, #23
 2686 0bda FFF7FEFF 		bl	__aeabi_fmul
 2687              	.LVL410:
 2688 0bde FFF7FEFF 		bl	__aeabi_f2iz
 2689              	.LVL411:
 2690 0be2 C1B2     		uxtb	r1, r0
 2691 0be4 5CE4     		b	.L139
 2692              	.L259:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2693              		.loc 1 601 0
 2694 0be6 0021     		mov	r1, #0
 2695 0be8 61E6     		b	.L229
 2696              	.L376:
 2697 0bea 6421     		mov	r1, #100
 2698 0bec 5FE6     		b	.L229
 2699              	.L374:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2700              		.loc 1 597 0
 2701 0bee 0120     		mov	r0, #1
 2702 0bf0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2703              	.LVL412:
 2704 0bf4 2349     		ldr	r1, .L383+20
 2705 0bf6 FFF7FEFF 		bl	__aeabi_fmul
 2706              	.LVL413:
 2707 0bfa 2049     		ldr	r1, .L383+12
 2708 0bfc FFF7FEFF 		bl	__aeabi_fcmple
 2709              	.LVL414:
 2710 0c00 7E21     		mov	r1, #126
 2711 0c02 0028     		cmp	r0, #0
 2712 0c04 00D0     		beq	.LCB2378
 2713 0c06 2BE6     		b	.L209	@long jump
 2714              	.LCB2378:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2715              		.loc 1 597 0 is_stmt 0
 2716 0c08 0021     		mov	r1, #0
 2717 0c0a 29E6     		b	.L209
 2718              	.L368:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2719              		.loc 1 587 0 is_stmt 1
 2720 0c0c 0020     		mov	r0, #0
 2721 0c0e FFF7FEFF 		bl	getSpeed
 2722              	.LVL415:
 2723 0c12 8223     		mov	r3, #130
 2724 0c14 D905     		lsl	r1, r3, #23
 2725 0c16 FFF7FEFF 		bl	__aeabi_fmul
 2726              	.LVL416:
 2727 0c1a 1849     		ldr	r1, .L383+12
 2728 0c1c FFF7FEFF 		bl	__aeabi_fcmple
 2729              	.LVL417:
 2730 0c20 7E21     		mov	r1, #126
 2731 0c22 0028     		cmp	r0, #0
 2732 0c24 01D0     		beq	.LCB2396
 2733 0c26 FFF72BFB 		bl	.L107	@far jump
 2734              	.LCB2396:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2735              		.loc 1 587 0 is_stmt 0
 2736 0c2a 0021     		mov	r1, #0
 2737 0c2c FFF728FB 		bl	.L107	@ far jump
 2738              	.L370:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2739              		.loc 1 589 0 is_stmt 1
 2740 0c30 0120     		mov	r0, #1
 2741 0c32 8226     		mov	r6, #130
 2742 0c34 FFF7FEFF 		bl	getSpeed
 2743              	.LVL418:
 2744 0c38 F105     		lsl	r1, r6, #23
 2745 0c3a FFF7FEFF 		bl	__aeabi_fmul
 2746              	.LVL419:
 2747 0c3e 0F49     		ldr	r1, .L383+12
 2748 0c40 FFF7FEFF 		bl	__aeabi_fcmple
 2749              	.LVL420:
 2750 0c44 7E21     		mov	r1, #126
 2751 0c46 0028     		cmp	r0, #0
 2752 0c48 00D0     		beq	.LCB2414
 2753 0c4a 29E4     		b	.L139	@long jump
 2754              	.LCB2414:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2755              		.loc 1 589 0 is_stmt 0
 2756 0c4c 0021     		mov	r1, #0
 2757 0c4e 27E4     		b	.L139
 2758              	.L372:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2759              		.loc 1 595 0 is_stmt 1
 2760 0c50 0020     		mov	r0, #0
 2761 0c52 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2762              	.LVL421:
 2763 0c56 0B49     		ldr	r1, .L383+20
 2764 0c58 FFF7FEFF 		bl	__aeabi_fmul
 2765              	.LVL422:
 2766 0c5c 0749     		ldr	r1, .L383+12
 2767 0c5e FFF7FEFF 		bl	__aeabi_fcmple
 2768              	.LVL423:
 2769 0c62 7E21     		mov	r1, #126
 2770 0c64 0028     		cmp	r0, #0
 2771 0c66 00D0     		beq	.LCB2431
 2772 0c68 32E5     		b	.L177	@long jump
 2773              	.LCB2431:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2774              		.loc 1 595 0 is_stmt 0
 2775 0c6a 0021     		mov	r1, #0
 2776 0c6c 30E5     		b	.L177
 2777              	.L384:
 2778 0c6e C046     		.align	3
 2779              	.L383:
 2780 0c70 00000000 		.word	0
 2781 0c74 0000E03F 		.word	1071644672
 2782 0c78 0000FF42 		.word	1124007936
 2783 0c7c 00800043 		.word	1124106240
 2784 0c80 0000FC42 		.word	1123811328
 2785 0c84 00007042 		.word	1114636288
 2786              		.cfi_endproc
 2787              	.LFE10:
 2789              		.global	__aeabi_ui2f
 2790              		.section	.text.BluetoothSetSpeed,"ax",%progbits
 2791              		.align	2
 2792              		.global	BluetoothSetSpeed
 2793              		.code	16
 2794              		.thumb_func
 2796              	BluetoothSetSpeed:
 2797              	.LFB12:
 610:../Sources/main.c **** 
 611:../Sources/main.c **** void telemetryReadData(){
 612:../Sources/main.c **** 	
 613:../Sources/main.c **** 	if(count==0){
 614:../Sources/main.c **** 		//if something is on the UART, get it and put it in received_byte
 615:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 616:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 618:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 619:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 620:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 621:../Sources/main.c **** 			count++;
 622:../Sources/main.c **** 		}
 623:../Sources/main.c **** 	}
 624:../Sources/main.c **** 	else if(count>0){
 625:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 626:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 627:../Sources/main.c **** 			count=0;
 628:../Sources/main.c **** 		}
 629:../Sources/main.c **** 	}
 630:../Sources/main.c **** 	
 631:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 632:../Sources/main.c **** 		switch(received_byte1){
 633:../Sources/main.c **** 		case 255: //SPEED
 634:../Sources/main.c **** 			BluetoothSetSpeed(received_byte2);
 635:../Sources/main.c **** 			break;
 636:../Sources/main.c **** 		case 251: //LED
 637:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 638:../Sources/main.c **** 			break;
 639:../Sources/main.c **** 		}
 640:../Sources/main.c **** 		//received_byte1=0;
 641:../Sources/main.c **** 		//received_byte2=0;
 642:../Sources/main.c **** 	}
 643:../Sources/main.c **** 	
 644:../Sources/main.c **** }
 645:../Sources/main.c **** 
 646:../Sources/main.c **** void BluetoothSetSpeed(uint8_t i){
 2798              		.loc 1 646 0 is_stmt 1
 2799              		.cfi_startproc
 2800              	.LVL424:
 2801 0000 38B5     		push	{r3, r4, r5, lr}
 2802              	.LCFI12:
 2803              		.cfi_def_cfa_offset 16
 2804              		.cfi_offset 3, -16
 2805              		.cfi_offset 4, -12
 2806              		.cfi_offset 5, -8
 2807              		.cfi_offset 14, -4
 647:../Sources/main.c **** 	max_speed_percent=i;
 2808              		.loc 1 647 0
 2809 0002 FFF7FEFF 		bl	__aeabi_ui2f
 2810              	.LVL425:
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 2811              		.loc 1 648 0
 2812 0006 064C     		ldr	r4, .L389
 647:../Sources/main.c **** 	max_speed_percent=i;
 2813              		.loc 1 647 0
 2814 0008 051C     		add	r5, r0, #0
 2815              		.loc 1 648 0
 2816 000a 211C     		add	r1, r4, #0
 2817 000c FFF7FEFF 		bl	__aeabi_fcmpgt
 2818              	.LVL426:
 649:../Sources/main.c **** 			max_speed_percent=100;
 2819              		.loc 1 649 0
 2820 0010 044B     		ldr	r3, .L389+4
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 2821              		.loc 1 648 0
 2822 0012 0028     		cmp	r0, #0
 2823 0014 01D0     		beq	.L388
 2824              		.loc 1 649 0
 2825 0016 1C60     		str	r4, [r3]
 2826              	.L385:
 650:../Sources/main.c **** 		}
 651:../Sources/main.c **** }
 2827              		.loc 1 651 0
 2828              		@ sp needed for prologue
 2829 0018 38BD     		pop	{r3, r4, r5, pc}
 2830              	.L388:
 647:../Sources/main.c **** 	max_speed_percent=i;
 2831              		.loc 1 647 0
 2832 001a 1D60     		str	r5, [r3]
 2833 001c FCE7     		b	.L385
 2834              	.L390:
 2835 001e C046     		.align	2
 2836              	.L389:
 2837 0020 0000C842 		.word	1120403456
 2838 0024 00000000 		.word	.LANCHOR7
 2839              		.cfi_endproc
 2840              	.LFE12:
 2842              		.section	.text.BluetoothSetLED,"ax",%progbits
 2843              		.align	2
 2844              		.global	BluetoothSetLED
 2845              		.code	16
 2846              		.thumb_func
 2848              	BluetoothSetLED:
 2849              	.LFB13:
 652:../Sources/main.c **** 
 653:../Sources/main.c **** void BluetoothSetLED(uint8_t i){	
 2850              		.loc 1 653 0
 2851              		.cfi_startproc
 2852              	.LVL427:
 2853 0000 00B5     		push	{lr}
 2854              	.LCFI13:
 2855              		.cfi_def_cfa_offset 4
 2856              		.cfi_offset 14, -4
 654:../Sources/main.c **** 		switch(i){
 2857              		.loc 1 654 0
 2858 0002 0228     		cmp	r0, #2
 2859 0004 43D0     		beq	.L394
 2860 0006 17D8     		bhi	.L397
 2861 0008 0128     		cmp	r0, #1
 2862 000a 4CD0     		beq	.L402
 2863              	.L392:
 655:../Sources/main.c **** 			case 1: 
 656:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 657:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 658:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 659:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 660:../Sources/main.c **** 				break;
 661:../Sources/main.c **** 			case 2:
 662:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 663:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 664:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 665:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 666:../Sources/main.c **** 				break;
 667:../Sources/main.c **** 			case 3:
 668:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 669:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 670:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 671:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);			
 672:../Sources/main.c **** 				break;
 673:../Sources/main.c **** 			case 4: 
 674:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 675:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 676:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 677:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 678:../Sources/main.c **** 				break;
 679:../Sources/main.c **** 			default:
 680:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2864              		.loc 1 680 0
 2865 000c 294B     		ldr	r3, .L403
 2866 000e 8022     		mov	r2, #128
 2867 0010 9968     		ldr	r1, [r3, #8]
 2868 0012 5000     		lsl	r0, r2, #1
 2869              	.LVL428:
 2870 0014 0843     		orr	r0, r1
 2871 0016 9860     		str	r0, [r3, #8]
 2872              	.L400:
 681:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2873              		.loc 1 681 0
 2874 0018 9968     		ldr	r1, [r3, #8]
 2875 001a 8022     		mov	r2, #128
 2876 001c 9000     		lsl	r0, r2, #2
 2877 001e 0843     		orr	r0, r1
 2878 0020 9860     		str	r0, [r3, #8]
 2879              	.L401:
 682:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2880              		.loc 1 682 0
 2881 0022 9968     		ldr	r1, [r3, #8]
 2882 0024 8022     		mov	r2, #128
 2883 0026 D000     		lsl	r0, r2, #3
 2884 0028 0843     		orr	r0, r1
 2885 002a 9860     		str	r0, [r3, #8]
 2886              	.L399:
 683:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 2887              		.loc 1 683 0
 2888 002c 9968     		ldr	r1, [r3, #8]
 2889 002e 8022     		mov	r2, #128
 2890 0030 1001     		lsl	r0, r2, #4
 2891 0032 0843     		orr	r0, r1
 2892 0034 9860     		str	r0, [r3, #8]
 2893              	.L391:
 684:../Sources/main.c **** 			}
 685:../Sources/main.c **** }
 2894              		.loc 1 685 0
 2895              		@ sp needed for prologue
 2896 0036 00BD     		pop	{pc}
 2897              	.LVL429:
 2898              	.L397:
 654:../Sources/main.c **** 		switch(i){
 2899              		.loc 1 654 0
 2900 0038 0328     		cmp	r0, #3
 2901 003a 17D0     		beq	.L395
 2902 003c 0428     		cmp	r0, #4
 2903 003e E5D1     		bne	.L392
 674:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2904              		.loc 1 674 0
 2905 0040 1C4B     		ldr	r3, .L403
 2906 0042 8022     		mov	r2, #128
 2907 0044 9968     		ldr	r1, [r3, #8]
 2908 0046 5000     		lsl	r0, r2, #1
 2909              	.LVL430:
 2910 0048 0843     		orr	r0, r1
 2911 004a 9860     		str	r0, [r3, #8]
 675:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2912              		.loc 1 675 0
 2913 004c 9968     		ldr	r1, [r3, #8]
 2914 004e 8022     		mov	r2, #128
 2915 0050 9000     		lsl	r0, r2, #2
 2916 0052 0843     		orr	r0, r1
 2917 0054 9860     		str	r0, [r3, #8]
 676:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2918              		.loc 1 676 0
 2919 0056 9968     		ldr	r1, [r3, #8]
 2920 0058 8022     		mov	r2, #128
 2921 005a D000     		lsl	r0, r2, #3
 2922 005c 0843     		orr	r0, r1
 2923 005e 9860     		str	r0, [r3, #8]
 677:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 2924              		.loc 1 677 0
 2925 0060 5968     		ldr	r1, [r3, #4]
 2926 0062 8022     		mov	r2, #128
 2927 0064 1001     		lsl	r0, r2, #4
 2928 0066 0843     		orr	r0, r1
 2929 0068 5860     		str	r0, [r3, #4]
 678:../Sources/main.c **** 				break;
 2930              		.loc 1 678 0
 2931 006a E4E7     		b	.L391
 2932              	.LVL431:
 2933              	.L395:
 668:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2934              		.loc 1 668 0
 2935 006c 114B     		ldr	r3, .L403
 2936 006e 8022     		mov	r2, #128
 2937 0070 9968     		ldr	r1, [r3, #8]
 2938 0072 5000     		lsl	r0, r2, #1
 2939              	.LVL432:
 2940 0074 0843     		orr	r0, r1
 2941 0076 9860     		str	r0, [r3, #8]
 669:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2942              		.loc 1 669 0
 2943 0078 9968     		ldr	r1, [r3, #8]
 2944 007a 8022     		mov	r2, #128
 2945 007c 9000     		lsl	r0, r2, #2
 2946 007e 0843     		orr	r0, r1
 2947 0080 9860     		str	r0, [r3, #8]
 670:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 2948              		.loc 1 670 0
 2949 0082 5968     		ldr	r1, [r3, #4]
 2950 0084 8022     		mov	r2, #128
 2951 0086 D000     		lsl	r0, r2, #3
 2952 0088 0843     		orr	r0, r1
 2953 008a 5860     		str	r0, [r3, #4]
 2954 008c CEE7     		b	.L399
 2955              	.LVL433:
 2956              	.L394:
 662:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2957              		.loc 1 662 0
 2958 008e 094B     		ldr	r3, .L403
 2959 0090 8022     		mov	r2, #128
 2960 0092 9968     		ldr	r1, [r3, #8]
 2961 0094 5000     		lsl	r0, r2, #1
 2962              	.LVL434:
 2963 0096 0843     		orr	r0, r1
 2964 0098 9860     		str	r0, [r3, #8]
 663:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 2965              		.loc 1 663 0
 2966 009a 5968     		ldr	r1, [r3, #4]
 2967 009c 8022     		mov	r2, #128
 2968 009e 9000     		lsl	r0, r2, #2
 2969 00a0 0843     		orr	r0, r1
 2970 00a2 5860     		str	r0, [r3, #4]
 2971 00a4 BDE7     		b	.L401
 2972              	.LVL435:
 2973              	.L402:
 656:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 2974              		.loc 1 656 0
 2975 00a6 034B     		ldr	r3, .L403
 2976 00a8 8022     		mov	r2, #128
 2977 00aa 5968     		ldr	r1, [r3, #4]
 2978 00ac 5000     		lsl	r0, r2, #1
 2979              	.LVL436:
 2980 00ae 0843     		orr	r0, r1
 2981 00b0 5860     		str	r0, [r3, #4]
 2982 00b2 B1E7     		b	.L400
 2983              	.L404:
 2984              		.align	2
 2985              	.L403:
 2986 00b4 40F00F40 		.word	1074786368
 2987              		.cfi_endproc
 2988              	.LFE13:
 2990              		.section	.text.telemetryReadData,"ax",%progbits
 2991              		.align	2
 2992              		.global	telemetryReadData
 2993              		.code	16
 2994              		.thumb_func
 2996              	telemetryReadData:
 2997              	.LFB11:
 611:../Sources/main.c **** void telemetryReadData(){
 2998              		.loc 1 611 0
 2999              		.cfi_startproc
 3000 0000 38B5     		push	{r3, r4, r5, lr}
 3001              	.LCFI14:
 3002              		.cfi_def_cfa_offset 16
 3003              		.cfi_offset 3, -16
 3004              		.cfi_offset 4, -12
 3005              		.cfi_offset 5, -8
 3006              		.cfi_offset 14, -4
 613:../Sources/main.c **** 	if(count==0){
 3007              		.loc 1 613 0
 3008 0002 284C     		ldr	r4, .L423
 615:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3009              		.loc 1 615 0
 3010 0004 2848     		ldr	r0, .L423+4
 613:../Sources/main.c **** 	if(count==0){
 3011              		.loc 1 613 0
 3012 0006 2378     		ldrb	r3, [r4]
 3013 0008 002B     		cmp	r3, #0
 3014 000a 10D0     		beq	.L421
 625:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3015              		.loc 1 625 0
 3016 000c FFF7FEFF 		bl	uart_getchar_present
 3017              	.LVL437:
 3018 0010 0028     		cmp	r0, #0
 3019 0012 3BD1     		bne	.L409
 3020              	.L420:
 3021 0014 254A     		ldr	r2, .L423+8
 3022 0016 1578     		ldrb	r5, [r2]
 3023              	.L408:
 631:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3024              		.loc 1 631 0
 3025 0018 002D     		cmp	r5, #0
 3026 001a 07D0     		beq	.L405
 631:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3027              		.loc 1 631 0 is_stmt 0
 3028 001c 244C     		ldr	r4, .L423+12
 3029 001e 2078     		ldrb	r0, [r4]
 3030 0020 0028     		cmp	r0, #0
 3031 0022 03D0     		beq	.L405
 632:../Sources/main.c **** 		switch(received_byte1){
 3032              		.loc 1 632 0 is_stmt 1
 3033 0024 FB2D     		cmp	r5, #251
 3034 0026 39D0     		beq	.L413
 3035 0028 FF2D     		cmp	r5, #255
 3036 002a 23D0     		beq	.L422
 3037              	.L405:
 644:../Sources/main.c **** }
 3038              		.loc 1 644 0
 3039              		@ sp needed for prologue
 3040 002c 38BD     		pop	{r3, r4, r5, pc}
 3041              	.L421:
 615:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3042              		.loc 1 615 0
 3043 002e FFF7FEFF 		bl	uart_getchar_present
 3044              	.LVL438:
 3045 0032 0028     		cmp	r0, #0
 3046 0034 EED0     		beq	.L420
 616:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3047              		.loc 1 616 0
 3048 0036 1C48     		ldr	r0, .L423+4
 3049 0038 FFF7FEFF 		bl	uart_getchar
 3050              	.LVL439:
 3051 003c 1B4B     		ldr	r3, .L423+8
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3052              		.loc 1 617 0
 3053 003e 1D4A     		ldr	r2, .L423+16
 616:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3054              		.loc 1 616 0
 3055 0040 1870     		strb	r0, [r3]
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3056              		.loc 1 617 0
 3057 0042 8021     		mov	r1, #128
 616:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3058              		.loc 1 616 0
 3059 0044 051C     		mov	r5, r0
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3060              		.loc 1 617 0
 3061 0046 5068     		ldr	r0, [r2, #4]
 3062 0048 4B00     		lsl	r3, r1, #1
 3063 004a 0343     		orr	r3, r0
 3064 004c 5360     		str	r3, [r2, #4]
 618:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 3065              		.loc 1 618 0
 3066 004e 5068     		ldr	r0, [r2, #4]
 3067 0050 8021     		mov	r1, #128
 3068 0052 8B00     		lsl	r3, r1, #2
 3069 0054 0343     		orr	r3, r0
 3070 0056 5360     		str	r3, [r2, #4]
 619:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 3071              		.loc 1 619 0
 3072 0058 5068     		ldr	r0, [r2, #4]
 3073 005a 8021     		mov	r1, #128
 3074 005c CB00     		lsl	r3, r1, #3
 3075 005e 0343     		orr	r3, r0
 3076 0060 5360     		str	r3, [r2, #4]
 620:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 3077              		.loc 1 620 0
 3078 0062 5068     		ldr	r0, [r2, #4]
 3079 0064 8021     		mov	r1, #128
 3080 0066 0B01     		lsl	r3, r1, #4
 3081 0068 0343     		orr	r3, r0
 3082 006a 5360     		str	r3, [r2, #4]
 621:../Sources/main.c **** 			count++;
 3083              		.loc 1 621 0
 3084 006c 2278     		ldrb	r2, [r4]
 3085 006e 0132     		add	r2, r2, #1
 3086 0070 2270     		strb	r2, [r4]
 3087 0072 D1E7     		b	.L408
 3088              	.L422:
 3089              	.LVL440:
 3090              	.LBB28:
 3091              	.LBB29:
 647:../Sources/main.c **** 	max_speed_percent=i;
 3092              		.loc 1 647 0
 3093 0074 FFF7FEFF 		bl	__aeabi_ui2f
 3094              	.LVL441:
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 3095              		.loc 1 648 0
 3096 0078 0F4D     		ldr	r5, .L423+20
 647:../Sources/main.c **** 	max_speed_percent=i;
 3097              		.loc 1 647 0
 3098 007a 104C     		ldr	r4, .L423+24
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 3099              		.loc 1 648 0
 3100 007c 291C     		add	r1, r5, #0
 647:../Sources/main.c **** 	max_speed_percent=i;
 3101              		.loc 1 647 0
 3102 007e 2060     		str	r0, [r4]
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 3103              		.loc 1 648 0
 3104 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 3105              	.LVL442:
 3106 0084 0028     		cmp	r0, #0
 3107 0086 D1D0     		beq	.L405
 649:../Sources/main.c **** 			max_speed_percent=100;
 3108              		.loc 1 649 0
 3109 0088 2560     		str	r5, [r4]
 3110 008a CFE7     		b	.L405
 3111              	.L409:
 3112              	.LBE29:
 3113              	.LBE28:
 626:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 3114              		.loc 1 626 0
 3115 008c 0648     		ldr	r0, .L423+4
 3116 008e FFF7FEFF 		bl	uart_getchar
 3117              	.LVL443:
 3118 0092 0749     		ldr	r1, .L423+12
 3119 0094 0870     		strb	r0, [r1]
 627:../Sources/main.c **** 			count=0;
 3120              		.loc 1 627 0
 3121 0096 0020     		mov	r0, #0
 3122 0098 2070     		strb	r0, [r4]
 3123 009a BBE7     		b	.L420
 3124              	.L413:
 637:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 3125              		.loc 1 637 0
 3126 009c FFF7FEFF 		bl	BluetoothSetLED
 3127              	.LVL444:
 638:../Sources/main.c **** 			break;
 3128              		.loc 1 638 0
 3129 00a0 C4E7     		b	.L405
 3130              	.L424:
 3131 00a2 C046     		.align	2
 3132              	.L423:
 3133 00a4 00000000 		.word	.LANCHOR8
 3134 00a8 00C00640 		.word	1074184192
 3135 00ac 00000000 		.word	.LANCHOR9
 3136 00b0 00000000 		.word	.LANCHOR10
 3137 00b4 40F00F40 		.word	1074786368
 3138 00b8 0000C842 		.word	1120403456
 3139 00bc 00000000 		.word	.LANCHOR7
 3140              		.cfi_endproc
 3141              	.LFE11:
 3143              		.global	__aeabi_fadd
 3144              		.global	__aeabi_f2uiz
 3145              		.global	__aeabi_dmul
 3146              		.global	__aeabi_d2f
 3147              		.global	__aeabi_fdiv
 3148              		.global	__aeabi_fcmplt
 3149              		.section	.text.lineFollowingMode,"ax",%progbits
 3150              		.align	2
 3151              		.global	lineFollowingMode
 3152              		.code	16
 3153              		.thumb_func
 3155              	lineFollowingMode:
 3156              	.LFB1:
 198:../Sources/main.c **** {
 3157              		.loc 1 198 0
 3158              		.cfi_startproc
 3159              	.LVL445:
 3160 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3161              	.LCFI15:
 3162              		.cfi_def_cfa_offset 24
 3163              		.cfi_offset 3, -24
 3164              		.cfi_offset 4, -20
 3165              		.cfi_offset 5, -16
 3166              		.cfi_offset 6, -12
 3167              		.cfi_offset 7, -8
 3168              		.cfi_offset 14, -4
 3169 0002 5F46     		mov	r7, fp
 3170 0004 5646     		mov	r6, sl
 3171 0006 4D46     		mov	r5, r9
 3172 0008 4446     		mov	r4, r8
 3173 000a F0B4     		push	{r4, r5, r6, r7}
 3174              	.LCFI16:
 3175              		.cfi_def_cfa_offset 40
 3176              		.cfi_offset 8, -40
 3177              		.cfi_offset 9, -36
 3178              		.cfi_offset 10, -32
 3179              		.cfi_offset 11, -28
 198:../Sources/main.c **** {
 3180              		.loc 1 198 0
 3181 000c 071C     		mov	r7, r0
 202:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 3182              		.loc 1 202 0
 3183 000e 0120     		mov	r0, #1
 3184              	.LVL446:
 3185 0010 FFF7FEFF 		bl	TFC_GetPush_Button
 3186              	.LVL447:
 3187 0014 0128     		cmp	r0, #1
 3188 0016 00D1     		bne	.LCB2794
 3189 0018 C9E0     		b	.L454	@long jump
 3190              	.LCB2794:
 3191              	.L426:
 208:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 3192              		.loc 1 208 0
 3193 001a CF4C     		ldr	r4, .L466+8
 3194 001c CF4D     		ldr	r5, .L466+12
 3195 001e A169     		ldr	r1, [r4, #24]
 3196 0020 A942     		cmp	r1, r5
 3197 0022 00D9     		bls	.LCB2800
 3198 0024 BCE0     		b	.L455	@long jump
 3199              	.LCB2800:
 3200              	.L427:
 215:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 3201              		.loc 1 215 0
 3202 0026 2369     		ldr	r3, [r4, #16]
 3203 0028 312B     		cmp	r3, #49
 3204 002a 00D9     		bls	.LCB2804
 3205 002c B1E0     		b	.L456	@long jump
 3206              	.LCB2804:
 3207              	.L428:
 236:../Sources/main.c **** 		incline_speed=max_speed_percent;
 3208              		.loc 1 236 0
 3209 002e CC4D     		ldr	r5, .L466+16
 3210 0030 CC49     		ldr	r1, .L466+20
 3211 0032 2E68     		ldr	r6, [r5]
 3212 0034 8946     		mov	r9, r1
 3213 0036 0E60     		str	r6, [r1]
 239:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 3214              		.loc 1 239 0
 3215 0038 FB78     		ldrb	r3, [r7, #3]
 3216 003a 002B     		cmp	r3, #0
 3217 003c 00D1     		bne	.LCB2814
 3218 003e 8FE0     		b	.L457	@long jump
 3219              	.LCB2814:
 3220              	.L429:
 248:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 3221              		.loc 1 248 0
 3222 0040 2268     		ldr	r2, [r4]
 3223 0042 632A     		cmp	r2, #99
 3224 0044 55D8     		bhi	.L458
 3225              	.L436:
 266:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 3226              		.loc 1 266 0
 3227 0046 FA78     		ldrb	r2, [r7, #3]
 3228 0048 002A     		cmp	r2, #0
 3229 004a 11D1     		bne	.L440
 269:../Sources/main.c **** 		if(stopline_enable == 1)
 3230              		.loc 1 269 0
 3231 004c C648     		ldr	r0, .L466+24
 268:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3232              		.loc 1 268 0
 3233 004e 0123     		mov	r3, #1
 269:../Sources/main.c **** 		if(stopline_enable == 1)
 3234              		.loc 1 269 0
 3235 0050 0678     		ldrb	r6, [r0]
 268:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3236              		.loc 1 268 0
 3237 0052 FB70     		strb	r3, [r7, #3]
 269:../Sources/main.c **** 		if(stopline_enable == 1)
 3238              		.loc 1 269 0
 3239 0054 012E     		cmp	r6, #1
 3240 0056 00D1     		bne	.LCB2828
 3241 0058 C4E0     		b	.L459	@long jump
 3242              	.LCB2828:
 3243              	.L441:
 273:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3244              		.loc 1 273 0
 3245 005a C449     		ldr	r1, .L466+28
 3246 005c 0868     		ldr	r0, [r1]
 3247 005e FFF7FEFF 		bl	getTotalIntensity
 3248              	.LVL448:
 3249 0062 C34D     		ldr	r5, .L466+32
 274:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3250              		.loc 1 274 0
 3251 0064 C349     		ldr	r1, .L466+36
 273:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3252              		.loc 1 273 0
 3253 0066 2860     		str	r0, [r5]
 274:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3254              		.loc 1 274 0
 3255 0068 FFF7FEFF 		bl	calculateNewExposure
 3256              	.LVL449:
 3257 006c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 3258              	.LVL450:
 3259              	.L440:
 277:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 3260              		.loc 1 277 0
 3261 0070 BA78     		ldrb	r2, [r7, #2]
 3262 0072 012A     		cmp	r2, #1
 3263 0074 00D8     		bhi	.LCB2845
 3264 0076 BEE0     		b	.L460	@long jump
 3265              	.LCB2845:
 319:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 3266              		.loc 1 319 0
 3267 0078 032A     		cmp	r2, #3
 3268 007a 00D1     		bne	.LCB2847
 3269 007c 32E1     		b	.L461	@long jump
 3270              	.LCB2847:
 324:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 3271              		.loc 1 324 0
 3272 007e 022A     		cmp	r2, #2
 3273 0080 05D0     		beq	.L462
 3274              	.LVL451:
 3275              	.L425:
 361:../Sources/main.c **** }
 3276              		.loc 1 361 0
 3277              		@ sp needed for prologue
 3278 0082 3CBC     		pop	{r2, r3, r4, r5}
 3279 0084 9046     		mov	r8, r2
 3280 0086 9946     		mov	r9, r3
 3281 0088 A246     		mov	sl, r4
 3282 008a AB46     		mov	fp, r5
 3283 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3284              	.LVL452:
 3285              	.L462:
 326:../Sources/main.c **** 		if(stopline_enable == 1)
 3286              		.loc 1 326 0
 3287 008e B64F     		ldr	r7, .L466+24
 3288              	.LVL453:
 3289 0090 3B78     		ldrb	r3, [r7]
 3290 0092 012B     		cmp	r3, #1
 3291 0094 F5D1     		bne	.L425
 3292              	.LBB40:
 331:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 3293              		.loc 1 331 0
 3294 0096 B848     		ldr	r0, .L466+40
 3295 0098 0678     		ldrb	r6, [r0]
 3296 009a 002E     		cmp	r6, #0
 3297 009c 00D0     		beq	.LCB2876
 3298 009e 2DE1     		b	.L447	@long jump
 3299              	.LCB2876:
 3300              	.LBB41:
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3301              		.loc 1 334 0
 3302 00a0 6269     		ldr	r2, [r4, #20]
 333:../Sources/main.c **** 				stoplineJustDetected = 1;
 3303              		.loc 1 333 0
 3304 00a2 0370     		strb	r3, [r0]
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3305              		.loc 1 334 0
 3306 00a4 B54F     		ldr	r7, .L466+44
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3307              		.loc 1 337 0
 3308 00a6 B64B     		ldr	r3, .L466+48
 3309 00a8 B64E     		ldr	r6, .L466+52
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3310              		.loc 1 334 0
 3311 00aa 3A60     		str	r2, [r7]
 3312              	.LVL454:
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3313              		.loc 1 337 0
 3314 00ac 1868     		ldr	r0, [r3]
 3315 00ae 3168     		ldr	r1, [r6]
 3316 00b0 FC24     		mov	r4, #252
 3317 00b2 FFF7FEFF 		bl	__aeabi_fadd
 3318              	.LVL455:
 3319 00b6 A105     		lsl	r1, r4, #22
 3320 00b8 FFF7FEFF 		bl	__aeabi_fmul
 3321              	.LVL456:
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3322              		.loc 1 339 0
 3323 00bc B249     		ldr	r1, .L466+56
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3324              		.loc 1 337 0
 3325 00be 071C     		add	r7, r0, #0
 3326              	.LVL457:
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3327              		.loc 1 339 0
 3328 00c0 FFF7FEFF 		bl	__aeabi_fcmplt
 3329              	.LVL458:
 3330 00c4 0028     		cmp	r0, #0
 3331 00c6 00D1     		bne	.LCB2900
 3332 00c8 3DE1     		b	.L463	@long jump
 3333              	.LCB2900:
 341:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 3334              		.loc 1 341 0
 3335 00ca B04D     		ldr	r5, .L466+60
 3336              	.L448:
 3337              	.LVL459:
 344:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 3338              		.loc 1 344 0
 3339 00cc B049     		ldr	r1, .L466+64
 3340 00ce 381C     		add	r0, r7, #0
 3341 00d0 FFF7FEFF 		bl	__aeabi_fmul
 3342              	.LVL460:
 3343 00d4 AF49     		ldr	r1, .L466+68
 3344 00d6 FFF7FEFF 		bl	__aeabi_fdiv
 3345              	.LVL461:
 3346 00da 011C     		add	r1, r0, #0
 3347 00dc 281C     		add	r0, r5, #0
 3348 00de FFF7FEFF 		bl	__aeabi_fdiv
 3349              	.LVL462:
 3350 00e2 AD49     		ldr	r1, .L466+72
 3351 00e4 FFF7FEFF 		bl	__aeabi_fmul
 3352              	.LVL463:
 3353 00e8 FFF7FEFF 		bl	__aeabi_f2uiz
 3354              	.LVL464:
 3355 00ec AB49     		ldr	r1, .L466+76
 3356 00ee 0860     		str	r0, [r1]
 3357 00f0 C7E7     		b	.L425
 3358              	.LVL465:
 3359              	.L458:
 3360              	.LBE41:
 3361              	.LBE40:
 250:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 3362              		.loc 1 250 0
 3363 00f2 0023     		mov	r3, #0
 3364 00f4 2360     		str	r3, [r4]
 251:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3365              		.loc 1 251 0
 3366 00f6 0B25     		mov	r5, #11
 3367 00f8 7857     		ldrsb	r0, [r7, r5]
 3368 00fa 0021     		mov	r1, #0
 3369 00fc A84A     		ldr	r2, .L466+80
 3370 00fe FFF7FEFF 		bl	getDesiredServoValue
 3371              	.LVL466:
 253:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 3372              		.loc 1 253 0
 3373 0102 0021     		mov	r1, #0
 251:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3374              		.loc 1 251 0
 3375 0104 051C     		add	r5, r0, #0
 253:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 3376              		.loc 1 253 0
 3377 0106 FFF7FEFF 		bl	__aeabi_fcmpgt
 3378              	.LVL467:
 3379 010a 0028     		cmp	r0, #0
 3380 010c 00D1     		bne	.LCB2945
 3381 010e F2E0     		b	.L464	@long jump
 3382              	.LCB2945:
 254:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 3383              		.loc 1 254 0
 3384 0110 281C     		add	r0, r5, #0
 3385 0112 A449     		ldr	r1, .L466+84
 3386 0114 FFF7FEFF 		bl	__aeabi_fmul
 3387              	.LVL468:
 3388 0118 011C     		add	r1, r0, #0
 3389 011a 281C     		add	r0, r5, #0
 3390 011c FFF7FEFF 		bl	__aeabi_fadd
 3391              	.LVL469:
 3392 0120 051C     		add	r5, r0, #0
 255:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 3393              		.loc 1 255 0
 3394 0122 A148     		ldr	r0, .L466+88
 3395 0124 8246     		mov	sl, r0
 3396 0126 5146     		mov	r1, sl
 3397 0128 281C     		add	r0, r5, #0
 3398 012a FFF7FEFF 		bl	__aeabi_fcmpgt
 3399              	.LVL470:
 257:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 3400              		.loc 1 257 0
 3401 012e 9F4E     		ldr	r6, .L466+92
 255:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 3402              		.loc 1 255 0
 3403 0130 0028     		cmp	r0, #0
 3404 0132 53D1     		bne	.L439
 254:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 3405              		.loc 1 254 0
 3406 0134 3560     		str	r5, [r6]
 3407              	.L438:
 262:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 3408              		.loc 1 262 0
 3409 0136 291C     		add	r1, r5, #0
 3410 0138 0020     		mov	r0, #0
 3411 013a FFF7FEFF 		bl	TFC_SetServo
 3412              	.LVL471:
 3413              	.LBB45:
 3414              	.LBB46:
 686:../Sources/main.c **** 
 687:../Sources/main.c **** void processRaceLine(carState_s* carState)
 688:../Sources/main.c **** {
 689:../Sources/main.c **** 	if(s_mode_enable)
 690:../Sources/main.c **** 	{	
 691:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 692:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 693:../Sources/main.c **** 				&& carState->crossSection == NO)
 694:../Sources/main.c **** 		{
 695:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 696:../Sources/main.c **** 			{
 697:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 698:../Sources/main.c **** 			}
 699:../Sources/main.c **** 		}
 700:../Sources/main.c **** 		else
 701:../Sources/main.c **** 		{
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 704:../Sources/main.c **** 		}
 705:../Sources/main.c **** 	}
 706:../Sources/main.c **** 	
 707:../Sources/main.c **** 	static float previousRaceLine = 0;
 708:../Sources/main.c **** 	
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 710:../Sources/main.c **** 	{
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 713:../Sources/main.c **** 	}
 714:../Sources/main.c **** 	else
 715:../Sources/main.c **** 	{
 716:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 718:../Sources/main.c **** 	}
 719:../Sources/main.c **** }
 720:../Sources/main.c **** 
 721:../Sources/main.c **** float targetSpeedAverage(float targetSpeed)
 722:../Sources/main.c **** {
 723:../Sources/main.c **** 	static float previousTargetSpeed = 0;
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 725:../Sources/main.c **** 	return previousTargetSpeed;
 726:../Sources/main.c **** }
 727:../Sources/main.c **** 
 728:../Sources/main.c **** float servoValueAverage(float servoValue)
 729:../Sources/main.c **** {
 730:../Sources/main.c **** 	static float previousServoValue = 0;
 731:../Sources/main.c **** 	previousServoValue = SERVO_LOWPASS_COEFF*previousServoValue + (1-SERVO_LOWPASS_COEFF)*servoValue;
 3415              		.loc 1 731 0
 3416 013e 9C4D     		ldr	r5, .L466+96
 3417 0140 9C49     		ldr	r1, .L466+100
 3418 0142 2868     		ldr	r0, [r5]
 3419 0144 FFF7FEFF 		bl	__aeabi_fmul
 3420              	.LVL472:
 3421 0148 9B49     		ldr	r1, .L466+104
 3422 014a 8346     		mov	fp, r0
 3423 014c 3068     		ldr	r0, [r6]
 3424              	.LVL473:
 3425 014e FFF7FEFF 		bl	__aeabi_fmul
 3426              	.LVL474:
 3427 0152 011C     		add	r1, r0, #0
 3428 0154 5846     		mov	r0, fp
 3429 0156 FFF7FEFF 		bl	__aeabi_fadd
 3430              	.LVL475:
 3431 015a 2860     		str	r0, [r5]
 3432              	.LBE46:
 3433              	.LBE45:
 263:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 3434              		.loc 1 263 0
 3435 015c 3060     		str	r0, [r6]
 3436 015e 72E7     		b	.L436
 3437              	.L457:
 241:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3438              		.loc 1 241 0
 3439 0160 8F4A     		ldr	r2, .L466+80
 243:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3440              		.loc 1 243 0
 3441 0162 8248     		ldr	r0, .L466+28
 3442 0164 9549     		ldr	r1, .L466+108
 241:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3443              		.loc 1 241 0
 3444 0166 1370     		strb	r3, [r2]
 243:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3445              		.loc 1 243 0
 3446 0168 0068     		ldr	r0, [r0]
 3447 016a 0968     		ldr	r1, [r1]
 3448 016c 3A1C     		mov	r2, r7
 3449 016e FFF7FEFF 		bl	findLine
 3450              	.LVL476:
 3451              	.LBB47:
 3452              	.LBB48:
 689:../Sources/main.c **** 	if(s_mode_enable)
 3453              		.loc 1 689 0
 3454 0172 934D     		ldr	r5, .L466+112
 3455 0174 2E78     		ldrb	r6, [r5]
 3456 0176 002E     		cmp	r6, #0
 3457 0178 1FD1     		bne	.L430
 3458 017a 7D7A     		ldrb	r5, [r7, #9]
 3459 017c BB7A     		ldrb	r3, [r7, #10]
 3460              	.L431:
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 3461              		.loc 1 709 0
 3462 017e 012D     		cmp	r5, #1
 3463 0180 00D1     		bne	.LCB3023
 3464 0182 33E1     		b	.L465	@long jump
 3465              	.LCB3023:
 3466              	.L435:
 716:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 3467              		.loc 1 716 0
 3468 0184 FB72     		strb	r3, [r7, #11]
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 3469              		.loc 1 717 0
 3470 0186 58B2     		sxtb	r0, r3
 3471 0188 FFF7FEFF 		bl	__aeabi_i2f
 3472              	.LVL477:
 3473 018c 8D4B     		ldr	r3, .L466+116
 3474 018e 1860     		str	r0, [r3]
 3475 0190 56E7     		b	.L429
 3476              	.LVL478:
 3477              	.L456:
 3478              	.LBE48:
 3479              	.LBE47:
 217:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 3480              		.loc 1 217 0
 3481 0192 0020     		mov	r0, #0
 3482 0194 2061     		str	r0, [r4, #16]
 218:../Sources/main.c **** 		telemetrySendData();
 3483              		.loc 1 218 0
 3484 0196 FFF7FEFF 		bl	telemetrySendData
 3485              	.LVL479:
 219:../Sources/main.c **** 		telemetryReadData();
 3486              		.loc 1 219 0
 3487 019a FFF7FEFF 		bl	telemetryReadData
 3488              	.LVL480:
 3489 019e 46E7     		b	.L428
 3490              	.L455:
 210:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 3491              		.loc 1 210 0
 3492 01a0 0026     		mov	r6, #0
 3493 01a2 A661     		str	r6, [r4, #24]
 211:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 3494              		.loc 1 211 0
 3495 01a4 FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 3496              	.LVL481:
 3497 01a8 874A     		ldr	r2, .L466+120
 3498 01aa 1060     		str	r0, [r2]
 3499 01ac 3BE7     		b	.L427
 3500              	.L454:
 204:../Sources/main.c **** 		stoplineJustDetected = 0;
 3501              		.loc 1 204 0
 3502 01ae 724B     		ldr	r3, .L466+40
 3503 01b0 0022     		mov	r2, #0
 205:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3504              		.loc 1 205 0
 3505 01b2 0320     		mov	r0, #3
 204:../Sources/main.c **** 		stoplineJustDetected = 0;
 3506              		.loc 1 204 0
 3507 01b4 1A70     		strb	r2, [r3]
 205:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3508              		.loc 1 205 0
 3509 01b6 B870     		strb	r0, [r7, #2]
 3510 01b8 2FE7     		b	.L426
 3511              	.LVL482:
 3512              	.L430:
 3513              	.LBB52:
 3514              	.LBB49:
 691:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 3515              		.loc 1 691 0
 3516 01ba BB7A     		ldrb	r3, [r7, #10]
 3517 01bc 5DB2     		sxtb	r5, r3
 3518 01be 092D     		cmp	r5, #9
 3519 01c0 14DC     		bgt	.L432
 692:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 3520              		.loc 1 692 0
 3521 01c2 3A7B     		ldrb	r2, [r7, #12]
 3522 01c4 462A     		cmp	r2, #70
 3523 01c6 11D9     		bls	.L432
 693:../Sources/main.c **** 				&& carState->crossSection == NO)
 3524              		.loc 1 693 0
 3525 01c8 B879     		ldrb	r0, [r7, #6]
 3526 01ca 0028     		cmp	r0, #0
 3527 01cc 0ED1     		bne	.L432
 695:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 3528              		.loc 1 695 0
 3529 01ce E669     		ldr	r6, [r4, #28]
 3530 01d0 7E4A     		ldr	r2, .L466+124
 3531 01d2 9642     		cmp	r6, r2
 3532 01d4 00D9     		bls	.LCB3085
 3533 01d6 23E1     		b	.L433	@long jump
 3534              	.LCB3085:
 3535 01d8 7D7A     		ldrb	r5, [r7, #9]
 3536 01da D0E7     		b	.L431
 3537              	.LVL483:
 3538              	.L439:
 3539              	.LBE49:
 3540              	.LBE52:
 257:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 3541              		.loc 1 257 0
 3542 01dc 5146     		mov	r1, sl
 3543 01de 3160     		str	r1, [r6]
 3544 01e0 5546     		mov	r5, sl
 3545 01e2 A8E7     		b	.L438
 3546              	.L459:
 271:../Sources/main.c **** 			findStop(carState);
 3547              		.loc 1 271 0
 3548 01e4 381C     		mov	r0, r7
 3549 01e6 FFF7FEFF 		bl	findStop
 3550              	.LVL484:
 3551 01ea 36E7     		b	.L441
 3552              	.LVL485:
 3553              	.L432:
 3554              	.LBB53:
 3555              	.LBB50:
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 3556              		.loc 1 702 0
 3557 01ec 0021     		mov	r1, #0
 3558 01ee 7972     		strb	r1, [r7, #9]
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 3559              		.loc 1 703 0
 3560 01f0 E161     		str	r1, [r4, #28]
 3561 01f2 BB7A     		ldrb	r3, [r7, #10]
 3562 01f4 C6E7     		b	.L435
 3563              	.LVL486:
 3564              	.L460:
 3565              	.LBE50:
 3566              	.LBE53:
 3567              	.LBB54:
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3568              		.loc 1 279 0
 3569 01f6 6D4E     		ldr	r6, .L466+92
 3570 01f8 3068     		ldr	r0, [r6]
 3571 01fa FFF7FEFF 		bl	getRadiusRoot
 3572              	.LVL487:
 3573 01fe 7449     		ldr	r1, .L466+128
 3574 0200 021C     		add	r2, r0, #0
 3575 0202 381C     		mov	r0, r7
 3576 0204 FFF7FEFF 		bl	getDesiredSpeed
 3577              	.LVL488:
 3578              	.LBB55:
 3579              	.LBB56:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3580              		.loc 1 724 0
 3581 0208 724C     		ldr	r4, .L466+132
 3582              	.LBE56:
 3583              	.LBE55:
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3584              		.loc 1 279 0
 3585 020a 8046     		mov	r8, r0
 3586              	.LVL489:
 3587              	.LBB59:
 3588              	.LBB57:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3589              		.loc 1 724 0
 3590 020c 7249     		ldr	r1, .L466+136
 3591 020e 2068     		ldr	r0, [r4]
 3592              	.LVL490:
 3593 0210 FFF7FEFF 		bl	__aeabi_fmul
 3594              	.LVL491:
 3595 0214 FFF7FEFF 		bl	__aeabi_f2d
 3596              	.LVL492:
 3597 0218 A246     		mov	sl, r4
 3598 021a 041C     		mov	r4, r0
 3599 021c 4046     		mov	r0, r8
 3600 021e 0D1C     		mov	r5, r1
 3601 0220 FFF7FEFF 		bl	__aeabi_f2d
 3602              	.LVL493:
 3603 0224 4B4B     		ldr	r3, .L466+4
 3604 0226 4A4A     		ldr	r2, .L466
 3605 0228 FFF7FEFF 		bl	__aeabi_dmul
 3606              	.LVL494:
 3607 022c 021C     		mov	r2, r0
 3608 022e 0B1C     		mov	r3, r1
 3609 0230 201C     		mov	r0, r4
 3610 0232 291C     		mov	r1, r5
 3611 0234 FFF7FEFF 		bl	__aeabi_dadd
 3612              	.LVL495:
 3613 0238 FFF7FEFF 		bl	__aeabi_d2f
 3614              	.LVL496:
 3615              	.LBE57:
 3616              	.LBE59:
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3617              		.loc 1 279 0
 3618 023c 674C     		ldr	r4, .L466+140
 3619              	.LBB60:
 3620              	.LBB58:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3621              		.loc 1 724 0
 3622 023e 5146     		mov	r1, sl
 3623 0240 0860     		str	r0, [r1]
 3624              	.LBE58:
 3625              	.LBE60:
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3626              		.loc 1 279 0
 3627 0242 2060     		str	r0, [r4]
 282:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 3628              		.loc 1 282 0
 3629 0244 0021     		mov	r1, #0
 3630 0246 3068     		ldr	r0, [r6]
 3631 0248 FFF7FEFF 		bl	getActiveDifferentialModifier
 3632              	.LVL497:
 3633 024c 0121     		mov	r1, #1
 3634 024e 8346     		mov	fp, r0
 3635              	.LVL498:
 3636 0250 3068     		ldr	r0, [r6]
 3637              	.LVL499:
 3638 0252 FFF7FEFF 		bl	getActiveDifferentialModifier
 3639              	.LVL500:
 3640 0256 8246     		mov	sl, r0
 3641              	.LVL501:
 286:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 3642              		.loc 1 286 0
 3643 0258 0020     		mov	r0, #0
 3644              	.LVL502:
 3645 025a FFF7FEFF 		bl	getSpeed
 3646              	.LVL503:
 3647 025e 494E     		ldr	r6, .L466+52
 3648 0260 3060     		str	r0, [r6]
 287:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 3649              		.loc 1 287 0
 3650 0262 0120     		mov	r0, #1
 3651 0264 FFF7FEFF 		bl	getSpeed
 3652              	.LVL504:
 3653 0268 454D     		ldr	r5, .L466+48
 3654 026a 2860     		str	r0, [r5]
 299:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 3655              		.loc 1 299 0
 3656 026c 7F78     		ldrb	r7, [r7, #1]
 3657              	.LVL505:
 3658 026e 012F     		cmp	r7, #1
 3659 0270 00D0     		beq	.LCB3208
 3660 0272 06E7     		b	.L425	@long jump
 3661              	.LCB3208:
 310:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 3662              		.loc 1 310 0
 3663 0274 4846     		mov	r0, r9
 3664 0276 0068     		ldr	r0, [r0]
 3665 0278 5949     		ldr	r1, .L466+144
 3666 027a FFF7FEFF 		bl	__aeabi_fdiv
 3667              	.LVL506:
 3668 027e 2168     		ldr	r1, [r4]
 3669 0280 8046     		mov	r8, r0
 3670              	.LVL507:
 3671 0282 5846     		mov	r0, fp
 3672 0284 FFF7FEFF 		bl	__aeabi_fmul
 3673              	.LVL508:
 3674 0288 071C     		add	r7, r0, #0
 3675 028a 0020     		mov	r0, #0
 3676 028c 3668     		ldr	r6, [r6]
 3677 028e FFF7FEFF 		bl	isANewmeasurementAvailable
 3678              	.LVL509:
 3679 0292 0023     		mov	r3, #0
 3680 0294 021C     		mov	r2, r0
 3681 0296 311C     		add	r1, r6, #0
 3682 0298 381C     		add	r0, r7, #0
 3683 029a FFF7FEFF 		bl	getDesiredMotorPWM
 3684              	.LVL510:
 3685 029e 011C     		add	r1, r0, #0
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3686              		.loc 1 309 0
 3687 02a0 4046     		mov	r0, r8
 3688 02a2 FFF7FEFF 		bl	__aeabi_fmul
 3689              	.LVL511:
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3690              		.loc 1 311 0
 3691 02a6 4A46     		mov	r2, r9
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3692              		.loc 1 309 0
 3693 02a8 061C     		add	r6, r0, #0
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3694              		.loc 1 311 0
 3695 02aa 4D49     		ldr	r1, .L466+144
 3696 02ac 1068     		ldr	r0, [r2]
 3697 02ae FFF7FEFF 		bl	__aeabi_fdiv
 3698              	.LVL512:
 3699 02b2 2168     		ldr	r1, [r4]
 3700 02b4 071C     		add	r7, r0, #0
 3701 02b6 5046     		mov	r0, sl
 3702 02b8 FFF7FEFF 		bl	__aeabi_fmul
 3703              	.LVL513:
 3704 02bc 8146     		mov	r9, r0
 3705 02be 0120     		mov	r0, #1
 3706 02c0 2C68     		ldr	r4, [r5]
 3707 02c2 FFF7FEFF 		bl	isANewmeasurementAvailable
 3708              	.LVL514:
 3709 02c6 211C     		add	r1, r4, #0
 3710 02c8 021C     		mov	r2, r0
 3711 02ca 0123     		mov	r3, #1
 3712 02cc 4846     		mov	r0, r9
 3713 02ce FFF7FEFF 		bl	getDesiredMotorPWM
 3714              	.LVL515:
 3715 02d2 011C     		add	r1, r0, #0
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3716              		.loc 1 309 0
 3717 02d4 381C     		add	r0, r7, #0
 3718 02d6 FFF7FEFF 		bl	__aeabi_fmul
 3719              	.LVL516:
 3720 02da 011C     		add	r1, r0, #0
 3721 02dc 301C     		add	r0, r6, #0
 3722 02de FFF7FEFF 		bl	TFC_SetMotorPWM
 3723              	.LVL517:
 3724 02e2 CEE6     		b	.L425
 3725              	.LVL518:
 3726              	.L461:
 3727              	.LBE54:
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 3728              		.loc 1 321 0
 3729 02e4 8020     		mov	r0, #128
 3730 02e6 3F4B     		ldr	r3, .L466+148
 3731 02e8 8203     		lsl	r2, r0, #14
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 3732              		.loc 1 322 0
 3733 02ea 0020     		mov	r0, #0
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 3734              		.loc 1 321 0
 3735 02ec 9A60     		str	r2, [r3, #8]
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 3736              		.loc 1 322 0
 3737 02ee 011C     		add	r1, r0, #0
 3738 02f0 FFF7FEFF 		bl	TFC_SetMotorPWM
 3739              	.LVL519:
 3740 02f4 C5E6     		b	.L425
 3741              	.L464:
 251:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3742              		.loc 1 251 0
 3743 02f6 2D4E     		ldr	r6, .L466+92
 3744 02f8 3560     		str	r5, [r6]
 3745 02fa 1CE7     		b	.L438
 3746              	.LVL520:
 3747              	.L447:
 3748              	.LBB61:
 346:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 3749              		.loc 1 346 0
 3750 02fc 1F49     		ldr	r1, .L466+44
 3751 02fe 274F     		ldr	r7, .L466+76
 3752 0300 6469     		ldr	r4, [r4, #20]
 3753 0302 0D68     		ldr	r5, [r1]
 3754 0304 3B68     		ldr	r3, [r7]
 3755 0306 621B     		sub	r2, r4, r5
 3756 0308 9A42     		cmp	r2, r3
 3757 030a 00D2     		bcs	.LCB3302
 3758 030c B9E6     		b	.L425	@long jump
 3759              	.LCB3302:
 3760              	.LBB42:
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3761              		.loc 1 348 0
 3762 030e 0020     		mov	r0, #0
 3763 0310 FFF7FEFF 		bl	getSpeed
 3764              	.LVL521:
 3765 0314 061C     		add	r6, r0, #0
 3766              	.LVL522:
 3767 0316 0120     		mov	r0, #1
 3768              	.LVL523:
 3769 0318 FFF7FEFF 		bl	getSpeed
 3770              	.LVL524:
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3771              		.loc 1 350 0
 3772 031c 8021     		mov	r1, #128
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3773              		.loc 1 348 0
 3774 031e 041C     		add	r4, r0, #0
 3775              	.LVL525:
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3776              		.loc 1 350 0
 3777 0320 C905     		lsl	r1, r1, #23
 3778 0322 301C     		add	r0, r6, #0
 3779              	.LVL526:
 3780 0324 FFF7FEFF 		bl	__aeabi_fcmpgt
 3781              	.LVL527:
 3782 0328 0028     		cmp	r0, #0
 3783 032a 06D1     		bne	.L449
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3784              		.loc 1 350 0 is_stmt 0
 3785 032c 8025     		mov	r5, #128
 3786 032e 201C     		add	r0, r4, #0
 3787 0330 E905     		lsl	r1, r5, #23
 3788 0332 FFF7FEFF 		bl	__aeabi_fcmpgt
 3789              	.LVL528:
 3790 0336 0028     		cmp	r0, #0
 3791 0338 75D0     		beq	.L453
 3792              	.L449:
 352:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 3793              		.loc 1 352 0 is_stmt 1
 3794 033a BF20     		mov	r0, #191
 3795 033c 0006     		lsl	r0, r0, #24
 3796 033e 011C     		add	r1, r0, #0
 3797 0340 FFF7FEFF 		bl	TFC_SetMotorPWM
 3798              	.LVL529:
 3799 0344 9DE6     		b	.L425
 3800              	.LVL530:
 3801              	.L463:
 3802              	.LBE42:
 3803              	.LBB43:
 336:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 3804              		.loc 1 336 0
 3805 0346 284D     		ldr	r5, .L466+152
 3806 0348 C0E6     		b	.L448
 3807              	.L467:
 3808 034a C046C046 		.align	3
 3808      C046
 3809              	.L466:
 3810 0350 9A999999 		.word	-1717986918
 3811 0354 9999B93F 		.word	1069128089
 3812 0358 00000000 		.word	TFC_Ticker
 3813 035c E7030000 		.word	999
 3814 0360 00000000 		.word	.LANCHOR7
 3815 0364 00000000 		.word	incline_speed
 3816 0368 00000000 		.word	.LANCHOR16
 3817 036c 00000000 		.word	LineScanImage0
 3818 0370 00000000 		.word	.LANCHOR17
 3819 0374 E0930400 		.word	300000
 3820 0378 00000000 		.word	.LANCHOR11
 3821 037c 00000000 		.word	.LANCHOR21
 3822 0380 00000000 		.word	.LANCHOR20
 3823 0384 00000000 		.word	.LANCHOR19
 3824 0388 00002041 		.word	1092616192
 3825 038c 6666263F 		.word	1059481190
 3826 0390 F90F4940 		.word	1078530041
 3827 0394 0000A041 		.word	1101004800
 3828 0398 00401C46 		.word	1176256512
 3829 039c 00000000 		.word	.LANCHOR22
 3830 03a0 00000000 		.word	.LANCHOR12
 3831 03a4 9A99993E 		.word	1050253722
 3832 03a8 F628DC3E 		.word	1054615798
 3833 03ac 00000000 		.word	.LANCHOR5
 3834 03b0 00000000 		.word	.LANCHOR15
 3835 03b4 CDCC4C3F 		.word	1061997773
 3836 03b8 CCCC4C3E 		.word	1045220556
 3837 03bc 00000000 		.word	LineScanImage1
 3838 03c0 00000000 		.word	.LANCHOR13
 3839 03c4 00000000 		.word	.LANCHOR14
 3840 03c8 00000000 		.word	.LANCHOR2
 3841 03cc 94110000 		.word	4500
 3842 03d0 00807A43 		.word	1132101632
 3843 03d4 00000000 		.word	.LANCHOR18
 3844 03d8 6666663F 		.word	1063675494
 3845 03dc 00000000 		.word	.LANCHOR4
 3846 03e0 0000C842 		.word	1120403456
 3847 03e4 00F10F40 		.word	1074786560
 3848 03e8 CDCCCC3E 		.word	1053609165
 3849              	.LVL531:
 3850              	.L465:
 3851 03ec 5DB2     		sxtb	r5, r3
 3852              	.L434:
 3853              	.LBE43:
 3854              	.LBE61:
 3855              	.LBB62:
 3856              	.LBB51:
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3857              		.loc 1 711 0
 3858 03ee 104E     		ldr	r6, .L468
 3859 03f0 1049     		ldr	r1, .L468+4
 3860 03f2 3068     		ldr	r0, [r6]
 3861 03f4 FFF7FEFF 		bl	__aeabi_fmul
 3862              	.LVL532:
 3863 03f8 8046     		mov	r8, r0
 3864 03fa 281C     		mov	r0, r5
 3865 03fc FFF7FEFF 		bl	__aeabi_i2f
 3866              	.LVL533:
 3867 0400 0D49     		ldr	r1, .L468+8
 3868 0402 FFF7FEFF 		bl	__aeabi_fmul
 3869              	.LVL534:
 3870 0406 011C     		add	r1, r0, #0
 3871 0408 4046     		mov	r0, r8
 3872 040a FFF7FEFF 		bl	__aeabi_fadd
 3873              	.LVL535:
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3874              		.loc 1 712 0
 3875 040e FC21     		mov	r1, #252
 3876 0410 8905     		lsl	r1, r1, #22
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3877              		.loc 1 711 0
 3878 0412 3060     		str	r0, [r6]
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3879              		.loc 1 712 0
 3880 0414 FFF7FEFF 		bl	__aeabi_fadd
 3881              	.LVL536:
 3882 0418 FFF7FEFF 		bl	__aeabi_f2uiz
 3883              	.LVL537:
 3884 041c F872     		strb	r0, [r7, #11]
 3885 041e 0FE6     		b	.L429
 3886              	.L433:
 697:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 3887              		.loc 1 697 0
 3888 0420 0120     		mov	r0, #1
 3889 0422 7872     		strb	r0, [r7, #9]
 3890 0424 E3E7     		b	.L434
 3891              	.LVL538:
 3892              	.L453:
 3893              	.LBE51:
 3894              	.LBE62:
 3895              	.LBB63:
 3896              	.LBB44:
 356:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 3897              		.loc 1 356 0
 3898 0426 0020     		mov	r0, #0
 3899 0428 011C     		add	r1, r0, #0
 3900 042a FFF7FEFF 		bl	TFC_SetMotorPWM
 3901              	.LVL539:
 3902 042e 28E6     		b	.L425
 3903              	.L469:
 3904              		.align	2
 3905              	.L468:
 3906 0430 00000000 		.word	.LANCHOR14
 3907 0434 6666663F 		.word	1063675494
 3908 0438 D0CCCC3D 		.word	1036831952
 3909              	.LBE44:
 3910              	.LBE63:
 3911              		.cfi_endproc
 3912              	.LFE1:
 3914 043c C046C046 		.section	.text.startup.main,"ax",%progbits
 3915              		.align	2
 3916              		.global	main
 3917              		.code	16
 3918              		.thumb_func
 3920              	main:
 3921              	.LFB0:
 121:../Sources/main.c **** {
 3922              		.loc 1 121 0
 3923              		.cfi_startproc
 3924 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3925              	.LCFI17:
 3926              		.cfi_def_cfa_offset 20
 3927              		.cfi_offset 4, -20
 3928              		.cfi_offset 5, -16
 3929              		.cfi_offset 6, -12
 3930              		.cfi_offset 7, -8
 3931              		.cfi_offset 14, -4
 3932 0002 5F46     		mov	r7, fp
 3933 0004 4D46     		mov	r5, r9
 3934 0006 5646     		mov	r6, sl
 3935 0008 4446     		mov	r4, r8
 3936 000a F0B4     		push	{r4, r5, r6, r7}
 3937              	.LCFI18:
 3938              		.cfi_def_cfa_offset 36
 3939              		.cfi_offset 8, -36
 3940              		.cfi_offset 9, -32
 3941              		.cfi_offset 10, -28
 3942              		.cfi_offset 11, -24
 122:../Sources/main.c **** 	TFC_Init(&carState);
 3943              		.loc 1 122 0
 3944 000c DD49     		ldr	r1, .L563
 121:../Sources/main.c **** {
 3945              		.loc 1 121 0
 3946 000e CDB0     		sub	sp, sp, #308
 3947              	.LCFI19:
 3948              		.cfi_def_cfa_offset 344
 122:../Sources/main.c **** 	TFC_Init(&carState);
 3949              		.loc 1 122 0
 3950 0010 081C     		mov	r0, r1
 3951 0012 8B46     		mov	fp, r1
 3952 0014 FFF7FEFF 		bl	TFC_Init
 3953              	.LVL540:
 3954 0018 DB4A     		ldr	r2, .L563+4
 3955 001a DC4B     		ldr	r3, .L563+8
 3956 001c 9146     		mov	r9, r2
 3957 001e DC4E     		ldr	r6, .L563+12
 3958 0020 DC4F     		ldr	r7, .L563+16
 3959 0022 9846     		mov	r8, r3
 3960 0024 DC4D     		ldr	r5, .L563+20
 3961 0026 71E0     		b	.L521
 3962              	.LVL541:
 3963              	.L550:
 3964              	.LBB94:
 3965              	.LBB95:
 479:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 3966              		.loc 1 479 0
 3967 0028 DC4D     		ldr	r5, .L563+24
 3968 002a A968     		ldr	r1, [r5, #8]
 3969 002c 4A05     		lsl	r2, r1, #21
 3970 002e 530F     		lsr	r3, r2, #29
 3971 0030 022B     		cmp	r3, #2
 3972 0032 76D0     		beq	.L471
 3973              	.L472:
 481:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 3974              		.loc 1 481 0
 3975 0034 D94B     		ldr	r3, .L563+24
 3976 0036 DA4A     		ldr	r2, .L563+28
 3977 0038 9868     		ldr	r0, [r3, #8]
 482:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 3978              		.loc 1 482 0
 3979 003a 8025     		mov	r5, #128
 481:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 3980              		.loc 1 481 0
 3981 003c 0240     		and	r2, r0
 3982 003e 9A60     		str	r2, [r3, #8]
 482:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 3983              		.loc 1 482 0
 3984 0040 9C68     		ldr	r4, [r3, #8]
 3985 0042 A900     		lsl	r1, r5, #2
 3986 0044 2143     		orr	r1, r4
 3987 0046 9960     		str	r1, [r3, #8]
 483:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 3988              		.loc 1 483 0
 3989 0048 0C20     		mov	r0, #12
 3990 004a FFF7FEFF 		bl	enable_irq
 3991              	.LVL542:
 484:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 3992              		.loc 1 484 0
 3993 004e 0023     		mov	r3, #0
 3994 0050 5846     		mov	r0, fp
 3995 0052 4370     		strb	r3, [r0, #1]
 3996              	.L474:
 3997              	.LVL543:
 3998              	.LBE95:
 3999              	.LBE94:
 4000              	.LBB98:
 4001              	.LBB99:
 465:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 4002              		.loc 1 465 0
 4003 0054 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4004              	.LVL544:
 4005              	.LBE99:
 4006 0058 0124     		mov	r4, #1
 4007              	.LBB100:
 4008 005a 0442     		tst	r4, r0
 4009 005c 00D1     		bne	.LCB3575
 4010 005e 84E0     		b	.L477	@long jump
 4011              	.LCB3575:
 4012              	.L551:
 467:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 4013              		.loc 1 467 0
 4014 0060 8023     		mov	r3, #128
 4015 0062 D04A     		ldr	r2, .L563+32
 4016 0064 9803     		lsl	r0, r3, #14
 468:../Sources/main.c **** 		carState->motorState = RUNNING;
 4017              		.loc 1 468 0
 4018 0066 5D46     		mov	r5, fp
 467:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 4019              		.loc 1 467 0
 4020 0068 5060     		str	r0, [r2, #4]
 468:../Sources/main.c **** 		carState->motorState = RUNNING;
 4021              		.loc 1 468 0
 4022 006a 2C70     		strb	r4, [r5]
 4023              	.L478:
 4024              	.LVL545:
 4025              	.LBE100:
 4026              	.LBE98:
 4027              	.LBB103:
 4028              	.LBB104:
 498:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 4029              		.loc 1 498 0
 4030 006c CE4C     		ldr	r4, .L563+36
 4031 006e CF49     		ldr	r1, .L563+40
 4032 0070 2068     		ldr	r0, [r4]
 4033 0072 FFF7FEFF 		bl	__aeabi_fcmpgt
 4034              	.LVL546:
 4035 0076 0028     		cmp	r0, #0
 4036 0078 00D1     		bne	.LCB3596
 4037 007a 8BE0     		b	.L531	@long jump
 4038              	.LCB3596:
 4039              	.L552:
 500:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 4040              		.loc 1 500 0
 4041 007c 5B46     		mov	r3, fp
 4042 007e 9878     		ldrb	r0, [r3, #2]
 4043 0080 0228     		cmp	r0, #2
 4044 0082 00D1     		bne	.LCB3601
 4045 0084 71E1     		b	.L541	@long jump
 4046              	.LCB3601:
 508:../Sources/main.c **** 		else if(carState->crossSection == YES)
 4047              		.loc 1 508 0
 4048 0086 9D79     		ldrb	r5, [r3, #6]
 4049 0088 5A46     		mov	r2, fp
 4050 008a 012D     		cmp	r5, #1
 4051 008c 00D1     		bne	.LCB3605
 4052 008e BBE1     		b	.L542	@long jump
 4053              	.LCB3605:
 516:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 4054              		.loc 1 516 0
 4055 0090 597A     		ldrb	r1, [r3, #9]
 4056 0092 5C46     		mov	r4, fp
 4057 0094 0129     		cmp	r1, #1
 4058 0096 00D1     		bne	.LCB3609
 4059 0098 34E2     		b	.L543	@long jump
 4060              	.LCB3609:
 523:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 4061              		.loc 1 523 0
 4062 009a 1279     		ldrb	r2, [r2, #4]
 4063 009c 022A     		cmp	r2, #2
 4064 009e 00D1     		bne	.LCB3612
 4065 00a0 7AE2     		b	.L544	@long jump
 4066              	.LCB3612:
 530:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 4067              		.loc 1 530 0
 4068 00a2 6479     		ldrb	r4, [r4, #5]
 4069 00a4 012C     		cmp	r4, #1
 4070 00a6 00D1     		bne	.LCB3615
 4071 00a8 87E2     		b	.L545	@long jump
 4072              	.LCB3615:
 537:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 4073              		.loc 1 537 0
 4074 00aa 022C     		cmp	r4, #2
 4075 00ac 00D1     		bne	.LCB3617
 4076 00ae C4E2     		b	.L546	@long jump
 4077              	.LCB3617:
 544:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 4078              		.loc 1 544 0
 4079 00b0 0128     		cmp	r0, #1
 4080 00b2 00D1     		bne	.LCB3619
 4081 00b4 5CE3     		b	.L547	@long jump
 4082              	.LCB3619:
 551:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 4083              		.loc 1 551 0
 4084 00b6 0328     		cmp	r0, #3
 4085 00b8 00D1     		bne	.LCB3621
 4086 00ba 4EE3     		b	.L548	@long jump
 4087              	.LCB3621:
 4088              	.L482:
 4089              	.LBE104:
 4090              	.LBE103:
 144:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 4091              		.loc 1 144 0
 4092 00bc 0120     		mov	r0, #1
 4093 00be FFF7FEFF 		bl	getSpeed
 4094              	.LVL547:
 4095 00c2 FFF7FEFF 		bl	__aeabi_f2d
 4096              	.LVL548:
 4097 00c6 0B1C     		mov	r3, r1
 4098 00c8 021C     		mov	r2, r0
 4099 00ca 391C     		mov	r1, r7
 4100 00cc 301C     		mov	r0, r6
 4101 00ce FFF7FEFF 		bl	Qprintf
 4102              	.LVL549:
 147:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 4103              		.loc 1 147 0
 4104 00d2 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4105              	.LVL550:
 4106 00d6 4307     		lsl	r3, r0, #29
 4107 00d8 9D0F     		lsr	r5, r3, #30
 4108 00da 022D     		cmp	r5, #2
 4109 00dc 00D1     		bne	.LCB3643
 4110 00de F5E0     		b	.L491	@long jump
 4111              	.LCB3643:
 4112 00e0 032D     		cmp	r5, #3
 4113 00e2 73D0     		beq	.L492
 4114 00e4 012D     		cmp	r5, #1
 4115 00e6 00D1     		bne	.LCB3647
 4116 00e8 E4E0     		b	.L490	@long jump
 4117              	.LCB3647:
 4118              	.LVL551:
 4119              	.LBB112:
 4120              	.LBB113:
 365:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 4121              		.loc 1 365 0
 4122 00ea 4A46     		mov	r2, r9
 4123 00ec 1468     		ldr	r4, [r2]
 4124 00ee C72C     		cmp	r4, #199
 4125 00f0 04D9     		bls	.L494
 4126 00f2 5846     		mov	r0, fp
 4127 00f4 C178     		ldrb	r1, [r0, #3]
 4128 00f6 0029     		cmp	r1, #0
 4129 00f8 00D1     		bne	.LCB3658
 4130 00fa 19E2     		b	.L549	@long jump
 4131              	.LCB3658:
 4132              	.LVL552:
 4133              	.L494:
 4134              	.LBE113:
 4135              	.LBE112:
 190:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 4136              		.loc 1 190 0
 4137 00fc A649     		ldr	r1, .L563+20
 4138 00fe 4D46     		mov	r5, r9
 4139 0100 6A69     		ldr	r2, [r5, #20]
 4140 0102 0B88     		ldrh	r3, [r1]
 4141 0104 AA48     		ldr	r0, .L563+44
 4142 0106 D41A     		sub	r4, r2, r3
 4143 0108 0480     		strh	r4, [r0]
 4144 010a 0D1C     		mov	r5, r1
 4145              	.LVL553:
 4146              	.L521:
 131:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 4147              		.loc 1 131 0
 4148 010c 4846     		mov	r0, r9
 4149 010e 4469     		ldr	r4, [r0, #20]
 4150 0110 2C80     		strh	r4, [r5]
 4151              	.LBB117:
 4152              	.LBB118:
 458:../Sources/main.c **** 	TFC_UART_Process();
 4153              		.loc 1 458 0
 4154 0112 FFF7FEFF 		bl	TFC_UART_Process
 4155              	.LVL554:
 460:../Sources/main.c **** 	TFC_ProcessTerminal();
 4156              		.loc 1 460 0
 4157 0116 FFF7FEFF 		bl	TFC_ProcessTerminal
 4158              	.LVL555:
 4159              	.LBE118:
 4160              	.LBE117:
 4161              	.LBB119:
 4162              	.LBB96:
 479:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 4163              		.loc 1 479 0
 4164 011a FFF7FEFF 		bl	TFC_GetDIP_Switch
 4165              	.LVL556:
 4166 011e 0307     		lsl	r3, r0, #28
 4167 0120 82D5     		bpl	.L550
 4168              	.L471:
 4169 0122 5846     		mov	r0, fp
 4170 0124 4478     		ldrb	r4, [r0, #1]
 4171 0126 022C     		cmp	r4, #2
 4172 0128 84D0     		beq	.L472
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 4173              		.loc 1 487 0
 4174 012a FFF7FEFF 		bl	TFC_GetDIP_Switch
 4175              	.LVL557:
 4176 012e 0307     		lsl	r3, r0, #28
 4177 0130 46D5     		bpl	.L475
 4178 0132 9A4D     		ldr	r5, .L563+24
 4179 0134 A968     		ldr	r1, [r5, #8]
 4180 0136 4A05     		lsl	r2, r1, #21
 4181 0138 530F     		lsr	r3, r2, #29
 4182 013a 032B     		cmp	r3, #3
 4183 013c 40D0     		beq	.L475
 4184              	.L476:
 489:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4185              		.loc 1 489 0
 4186 013e 974D     		ldr	r5, .L563+24
 4187 0140 974A     		ldr	r2, .L563+28
 4188 0142 A968     		ldr	r1, [r5, #8]
 490:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 4189              		.loc 1 490 0
 4190 0144 C020     		mov	r0, #192
 489:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4191              		.loc 1 489 0
 4192 0146 0A40     		and	r2, r1
 4193 0148 AA60     		str	r2, [r5, #8]
 490:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 4194              		.loc 1 490 0
 4195 014a AB68     		ldr	r3, [r5, #8]
 4196 014c 8400     		lsl	r4, r0, #2
 4197 014e 1C43     		orr	r4, r3
 4198 0150 AC60     		str	r4, [r5, #8]
 491:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 4199              		.loc 1 491 0
 4200 0152 0C20     		mov	r0, #12
 4201 0154 FFF7FEFF 		bl	disable_irq
 4202              	.LVL558:
 492:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 4203              		.loc 1 492 0
 4204 0158 0125     		mov	r5, #1
 4205 015a 5946     		mov	r1, fp
 4206 015c 4D70     		strb	r5, [r1, #1]
 4207              	.LVL559:
 4208              	.LBE96:
 4209              	.LBE119:
 4210              	.LBB120:
 4211              	.LBB101:
 465:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 4212              		.loc 1 465 0
 4213 015e FFF7FEFF 		bl	TFC_GetDIP_Switch
 4214              	.LVL560:
 4215              	.LBE101:
 4216 0162 0124     		mov	r4, #1
 4217              	.LBB102:
 4218 0164 0442     		tst	r4, r0
 4219 0166 00D0     		beq	.LCB3746
 4220 0168 7AE7     		b	.L551	@long jump
 4221              	.LCB3746:
 4222              	.L477:
 470:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 4223              		.loc 1 470 0
 4224 016a FFF7FEFF 		bl	TFC_GetDIP_Switch
 4225              	.LVL561:
 4226 016e 0442     		tst	r4, r0
 4227 0170 00D0     		beq	.LCB3754
 4228 0172 7BE7     		b	.L478	@long jump
 4229              	.LCB3754:
 472:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4230              		.loc 1 472 0
 4231 0174 8022     		mov	r2, #128
 4232 0176 8B49     		ldr	r1, .L563+32
 473:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4233              		.loc 1 473 0
 4234 0178 0020     		mov	r0, #0
 472:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4235              		.loc 1 472 0
 4236 017a 9503     		lsl	r5, r2, #14
 4237 017c 8D60     		str	r5, [r1, #8]
 473:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4238              		.loc 1 473 0
 4239 017e 011C     		add	r1, r0, #0
 4240 0180 FFF7FEFF 		bl	TFC_SetMotorPWM
 4241              	.LVL562:
 4242              	.LBE102:
 4243              	.LBE120:
 4244              	.LBB121:
 4245              	.LBB105:
 498:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 4246              		.loc 1 498 0
 4247 0184 884C     		ldr	r4, .L563+36
 4248 0186 8949     		ldr	r1, .L563+40
 4249 0188 2068     		ldr	r0, [r4]
 4250 018a FFF7FEFF 		bl	__aeabi_fcmpgt
 4251              	.LVL563:
 4252 018e 0028     		cmp	r0, #0
 4253 0190 00D0     		beq	.LCB3774
 4254 0192 73E7     		b	.L552	@long jump
 4255              	.LCB3774:
 4256              	.L531:
 561:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 4257              		.loc 1 561 0
 4258 0194 874B     		ldr	r3, .L563+48
 4259 0196 8020     		mov	r0, #128
 4260 0198 5968     		ldr	r1, [r3, #4]
 4261 019a 4200     		lsl	r2, r0, #1
 4262 019c 0A43     		orr	r2, r1
 4263 019e 5A60     		str	r2, [r3, #4]
 562:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 4264              		.loc 1 562 0
 4265 01a0 5D68     		ldr	r5, [r3, #4]
 4266 01a2 8024     		mov	r4, #128
 4267 01a4 A100     		lsl	r1, r4, #2
 4268 01a6 2943     		orr	r1, r5
 4269 01a8 5960     		str	r1, [r3, #4]
 4270              	.L533:
 563:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 4271              		.loc 1 563 0
 4272 01aa 5968     		ldr	r1, [r3, #4]
 4273 01ac 8022     		mov	r2, #128
 4274 01ae D500     		lsl	r5, r2, #3
 4275 01b0 0D43     		orr	r5, r1
 4276 01b2 5D60     		str	r5, [r3, #4]
 4277              	.L534:
 564:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 4278              		.loc 1 564 0
 4279 01b4 5C68     		ldr	r4, [r3, #4]
 4280 01b6 8020     		mov	r0, #128
 4281 01b8 0101     		lsl	r1, r0, #4
 4282 01ba 2143     		orr	r1, r4
 4283 01bc 5960     		str	r1, [r3, #4]
 4284 01be 7DE7     		b	.L482
 4285              	.LVL564:
 4286              	.L475:
 4287              	.LBE105:
 4288              	.LBE121:
 4289              	.LBB122:
 4290              	.LBB97:
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 4291              		.loc 1 487 0
 4292 01c0 5846     		mov	r0, fp
 4293 01c2 4478     		ldrb	r4, [r0, #1]
 4294 01c4 022C     		cmp	r4, #2
 4295 01c6 00D0     		beq	.LCB3814
 4296 01c8 44E7     		b	.L474	@long jump
 4297              	.LCB3814:
 4298 01ca B8E7     		b	.L476
 4299              	.LVL565:
 4300              	.L492:
 4301              	.LBE97:
 4302              	.LBE122:
 4303              	.LBB123:
 4304              	.LBB124:
 202:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 4305              		.loc 1 202 0
 4306 01cc 0120     		mov	r0, #1
 4307 01ce FFF7FEFF 		bl	TFC_GetPush_Button
 4308              	.LVL566:
 4309 01d2 0128     		cmp	r0, #1
 4310 01d4 00D1     		bne	.LCB3830
 4311 01d6 8FE1     		b	.L553	@long jump
 4312              	.LCB3830:
 4313              	.L498:
 208:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 4314              		.loc 1 208 0
 4315 01d8 4C46     		mov	r4, r9
 4316 01da A569     		ldr	r5, [r4, #24]
 4317 01dc 7648     		ldr	r0, .L563+52
 4318 01de 8542     		cmp	r5, r0
 4319 01e0 00D9     		bls	.LCB3836
 4320 01e2 82E1     		b	.L554	@long jump
 4321              	.LCB3836:
 4322              	.L499:
 215:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 4323              		.loc 1 215 0
 4324 01e4 4A46     		mov	r2, r9
 4325 01e6 1469     		ldr	r4, [r2, #16]
 4326 01e8 312C     		cmp	r4, #49
 4327 01ea 00D9     		bls	.LCB3841
 4328 01ec 76E1     		b	.L555	@long jump
 4329              	.LCB3841:
 4330              	.L500:
 236:../Sources/main.c **** 		incline_speed=max_speed_percent;
 4331              		.loc 1 236 0
 4332 01ee 7348     		ldr	r0, .L563+56
 4333 01f0 734B     		ldr	r3, .L563+60
 4334 01f2 0168     		ldr	r1, [r0]
 239:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 4335              		.loc 1 239 0
 4336 01f4 5A46     		mov	r2, fp
 236:../Sources/main.c **** 		incline_speed=max_speed_percent;
 4337              		.loc 1 236 0
 4338 01f6 1960     		str	r1, [r3]
 239:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 4339              		.loc 1 239 0
 4340 01f8 D478     		ldrb	r4, [r2, #3]
 4341 01fa 002C     		cmp	r4, #0
 4342 01fc 00D1     		bne	.LCB3850
 4343 01fe 4EE1     		b	.L556	@long jump
 4344              	.LCB3850:
 4345              	.L501:
 248:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 4346              		.loc 1 248 0
 4347 0200 4846     		mov	r0, r9
 4348 0202 0268     		ldr	r2, [r0]
 4349 0204 632A     		cmp	r2, #99
 4350 0206 00D9     		bls	.LCB3855
 4351 0208 0FE1     		b	.L557	@long jump
 4352              	.LCB3855:
 4353              	.L508:
 266:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 4354              		.loc 1 266 0
 4355 020a 5846     		mov	r0, fp
 4356 020c C378     		ldrb	r3, [r0, #3]
 4357 020e 002B     		cmp	r3, #0
 4358 0210 11D1     		bne	.L512
 269:../Sources/main.c **** 		if(stopline_enable == 1)
 4359              		.loc 1 269 0
 4360 0212 6C49     		ldr	r1, .L563+64
 268:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4361              		.loc 1 268 0
 4362 0214 0125     		mov	r5, #1
 269:../Sources/main.c **** 		if(stopline_enable == 1)
 4363              		.loc 1 269 0
 4364 0216 0A78     		ldrb	r2, [r1]
 268:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4365              		.loc 1 268 0
 4366 0218 C570     		strb	r5, [r0, #3]
 269:../Sources/main.c **** 		if(stopline_enable == 1)
 4367              		.loc 1 269 0
 4368 021a 012A     		cmp	r2, #1
 4369 021c 00D1     		bne	.LCB3866
 4370 021e BFE2     		b	.L558	@long jump
 4371              	.LCB3866:
 4372              	.L513:
 273:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 4373              		.loc 1 273 0
 4374 0220 4446     		mov	r4, r8
 4375 0222 2068     		ldr	r0, [r4]
 4376 0224 FFF7FEFF 		bl	getTotalIntensity
 4377              	.LVL567:
 4378 0228 674B     		ldr	r3, .L563+68
 274:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 4379              		.loc 1 274 0
 4380 022a 6849     		ldr	r1, .L563+72
 273:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 4381              		.loc 1 273 0
 4382 022c 1860     		str	r0, [r3]
 274:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 4383              		.loc 1 274 0
 4384 022e FFF7FEFF 		bl	calculateNewExposure
 4385              	.LVL568:
 4386 0232 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4387              	.LVL569:
 4388              	.L512:
 277:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 4389              		.loc 1 277 0
 4390 0236 5846     		mov	r0, fp
 4391 0238 8578     		ldrb	r5, [r0, #2]
 4392 023a 012D     		cmp	r5, #1
 4393 023c 00D8     		bhi	.LCB3885
 4394 023e 03E2     		b	.L559	@long jump
 4395              	.LCB3885:
 319:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 4396              		.loc 1 319 0
 4397 0240 032D     		cmp	r5, #3
 4398 0242 00D1     		bne	.LCB3887
 4399 0244 A0E2     		b	.L560	@long jump
 4400              	.LCB3887:
 324:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 4401              		.loc 1 324 0
 4402 0246 022D     		cmp	r5, #2
 4403 0248 00D0     		beq	.LCB3889
 4404 024a 57E7     		b	.L494	@long jump
 4405              	.LCB3889:
 326:../Sources/main.c **** 		if(stopline_enable == 1)
 4406              		.loc 1 326 0
 4407 024c 5D49     		ldr	r1, .L563+64
 4408 024e 0C78     		ldrb	r4, [r1]
 4409 0250 012C     		cmp	r4, #1
 4410 0252 00D0     		beq	.LCB3893
 4411 0254 52E7     		b	.L494	@long jump
 4412              	.LCB3893:
 4413              	.LBB125:
 331:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 4414              		.loc 1 331 0
 4415 0256 5E4B     		ldr	r3, .L563+76
 4416 0258 1A78     		ldrb	r2, [r3]
 4417 025a 002A     		cmp	r2, #0
 4418 025c 00D0     		beq	.LCB3898
 4419 025e DBE2     		b	.L516	@long jump
 4420              	.LCB3898:
 4421              	.LBB126:
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4422              		.loc 1 334 0
 4423 0260 4846     		mov	r0, r9
 333:../Sources/main.c **** 				stoplineJustDetected = 1;
 4424              		.loc 1 333 0
 4425 0262 1C70     		strb	r4, [r3]
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4426              		.loc 1 334 0
 4427 0264 4569     		ldr	r5, [r0, #20]
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4428              		.loc 1 337 0
 4429 0266 5B4B     		ldr	r3, .L563+80
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4430              		.loc 1 334 0
 4431 0268 5B4C     		ldr	r4, .L563+84
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4432              		.loc 1 337 0
 4433 026a 5C49     		ldr	r1, .L563+88
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4434              		.loc 1 334 0
 4435 026c 2560     		str	r5, [r4]
 4436              	.LVL570:
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4437              		.loc 1 337 0
 4438 026e 0868     		ldr	r0, [r1]
 4439 0270 1968     		ldr	r1, [r3]
 4440 0272 FFF7FEFF 		bl	__aeabi_fadd
 4441              	.LVL571:
 4442 0276 FC22     		mov	r2, #252
 4443 0278 9105     		lsl	r1, r2, #22
 4444 027a FFF7FEFF 		bl	__aeabi_fmul
 4445              	.LVL572:
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 4446              		.loc 1 339 0
 4447 027e 5849     		ldr	r1, .L563+92
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4448              		.loc 1 337 0
 4449 0280 041C     		add	r4, r0, #0
 4450              	.LVL573:
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 4451              		.loc 1 339 0
 4452 0282 FFF7FEFF 		bl	__aeabi_fcmplt
 4453              	.LVL574:
 4454 0286 0028     		cmp	r0, #0
 4455 0288 00D1     		bne	.LCB3923
 4456 028a EBE2     		b	.L561	@long jump
 4457              	.LCB3923:
 341:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 4458              		.loc 1 341 0
 4459 028c 554D     		ldr	r5, .L563+96
 4460              	.L517:
 4461              	.LVL575:
 344:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 4462              		.loc 1 344 0
 4463 028e 5649     		ldr	r1, .L563+100
 4464 0290 201C     		add	r0, r4, #0
 4465 0292 FFF7FEFF 		bl	__aeabi_fmul
 4466              	.LVL576:
 4467 0296 5549     		ldr	r1, .L563+104
 4468 0298 FFF7FEFF 		bl	__aeabi_fdiv
 4469              	.LVL577:
 4470 029c 011C     		add	r1, r0, #0
 4471 029e 281C     		add	r0, r5, #0
 4472 02a0 FFF7FEFF 		bl	__aeabi_fdiv
 4473              	.LVL578:
 4474 02a4 5249     		ldr	r1, .L563+108
 4475 02a6 FFF7FEFF 		bl	__aeabi_fmul
 4476              	.LVL579:
 4477 02aa FFF7FEFF 		bl	__aeabi_f2uiz
 4478              	.LVL580:
 4479 02ae 5149     		ldr	r1, .L563+112
 4480 02b0 0860     		str	r0, [r1]
 4481 02b2 23E7     		b	.L494
 4482              	.LVL581:
 4483              	.L490:
 4484              	.LBE126:
 4485              	.LBE125:
 4486              	.LBE124:
 4487              	.LBE123:
 4488              	.LBB158:
 4489              	.LBB159:
 570:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 4490              		.loc 1 570 0
 4491 02b4 4C46     		mov	r4, r9
 4492 02b6 2568     		ldr	r5, [r4]
 4493 02b8 C72D     		cmp	r5, #199
 4494 02ba 00D8     		bhi	.LCB3962
 4495 02bc 1EE7     		b	.L494	@long jump
 4496              	.LCB3962:
 4497              	.LBB160:
 572:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4498              		.loc 1 572 0
 4499 02be 0020     		mov	r0, #0
 4500 02c0 2060     		str	r0, [r4]
 4501              	.LVL582:
 574:../Sources/main.c **** 		TFC_SetServo(0, offset);
 4502              		.loc 1 574 0
 4503 02c2 4D49     		ldr	r1, .L563+116
 4504 02c4 0020     		mov	r0, #0
 4505 02c6 FFF7FEFF 		bl	TFC_SetServo
 4506              	.LVL583:
 4507 02ca 17E7     		b	.L494
 4508              	.LVL584:
 4509              	.L491:
 4510              	.LBE160:
 4511              	.LBE159:
 4512              	.LBE158:
 4513              	.LBB161:
 4514              	.LBB162:
 388:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 4515              		.loc 1 388 0
 4516 02cc 4846     		mov	r0, r9
 4517 02ce 0368     		ldr	r3, [r0]
 4518 02d0 C72B     		cmp	r3, #199
 4519 02d2 00D8     		bhi	.LCB3985
 4520 02d4 12E7     		b	.L494	@long jump
 4521              	.LCB3985:
 4522 02d6 5946     		mov	r1, fp
 4523 02d8 CD78     		ldrb	r5, [r1, #3]
 4524 02da 002D     		cmp	r5, #0
 4525 02dc 00D0     		beq	.LCB3989
 4526 02de 0DE7     		b	.L494	@long jump
 4527              	.LCB3989:
 4528              	.LBB163:
 391:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4529              		.loc 1 391 0
 4530 02e0 0122     		mov	r2, #1
 4531 02e2 CA70     		strb	r2, [r1, #3]
 390:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4532              		.loc 1 390 0
 4533 02e4 0560     		str	r5, [r0]
 393:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4534              		.loc 1 393 0
 4535 02e6 0021     		mov	r1, #0
 4536 02e8 0020     		mov	r0, #0
 4537 02ea FFF7FEFF 		bl	TFC_SetServo
 4538              	.LVL585:
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4539              		.loc 1 394 0
 4540 02ee 8024     		mov	r4, #128
 4541 02f0 2C4B     		ldr	r3, .L563+32
 4542 02f2 A003     		lsl	r0, r4, #14
 4543 02f4 9860     		str	r0, [r3, #8]
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4544              		.loc 1 395 0
 4545 02f6 0020     		mov	r0, #0
 4546 02f8 011C     		add	r1, r0, #0
 4547 02fa FFF7FEFF 		bl	TFC_SetMotorPWM
 4548              	.LVL586:
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4549              		.loc 1 397 0
 4550 02fe 4146     		mov	r1, r8
 4551 0300 0868     		ldr	r0, [r1]
 4552 0302 FFF7FEFF 		bl	getTotalIntensity
 4553              	.LVL587:
 4554 0306 3149     		ldr	r1, .L563+72
 4555 0308 FFF7FEFF 		bl	calculateNewExposure
 4556              	.LVL588:
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4557              		.loc 1 400 0
 4558 030c 4D46     		mov	r5, r9
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4559              		.loc 1 397 0
 4560 030e FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4561              	.LVL589:
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4562              		.loc 1 400 0
 4563 0312 6A69     		ldr	r2, [r5, #20]
 4564 0314 394C     		ldr	r4, .L563+120
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 4565              		.loc 1 401 0
 4566 0316 4046     		mov	r0, r8
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4567              		.loc 1 400 0
 4568 0318 2260     		str	r2, [r4]
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 4569              		.loc 1 401 0
 4570 031a 0068     		ldr	r0, [r0]
 4571 031c 0CA9     		add	r1, sp, #48
 4572 031e 8022     		mov	r2, #128
 4573 0320 FFF7FEFF 		bl	edgeDetection
 4574              	.LVL590:
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 4575              		.loc 1 402 0
 4576 0324 6969     		ldr	r1, [r5, #20]
 4577 0326 354D     		ldr	r5, .L563+120
 4578 0328 3548     		ldr	r0, .L563+124
 4579 032a 2A68     		ldr	r2, [r5]
 120:../Sources/main.c **** int main(void)
 4580              		.loc 1 120 0
 4581 032c 4CAB     		add	r3, sp, #304
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 4582              		.loc 1 402 0
 4583 032e 8C1A     		sub	r4, r1, r2
 4584 0330 0460     		str	r4, [r0]
 4585              	.LVL591:
 4586 0332 0CAD     		add	r5, sp, #48
 120:../Sources/main.c **** int main(void)
 4587              		.loc 1 120 0
 4588 0334 9A46     		mov	sl, r3
 4589              	.LVL592:
 4590              	.L497:
 4591              	.LBB164:
 407:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 4592              		.loc 1 407 0
 4593 0336 0023     		mov	r3, #0
 4594 0338 EA5E     		ldrsh	r2, [r5, r3]
 4595 033a 301C     		mov	r0, r6
 4596 033c D117     		asr	r1, r2, #31
 4597 033e 5218     		add	r2, r2, r1
 4598 0340 4A40     		eor	r2, r1
 4599 0342 391C     		mov	r1, r7
 4600 0344 FFF7FEFF 		bl	Qprintf
 4601              	.LVL593:
 4602 0348 0223     		mov	r3, #2
 4603 034a EC5E     		ldrsh	r4, [r5, r3]
 4604 034c 391C     		mov	r1, r7
 4605 034e E017     		asr	r0, r4, #31
 4606 0350 2218     		add	r2, r4, r0
 4607 0352 4240     		eor	r2, r0
 4608 0354 0435     		add	r5, r5, #4
 4609 0356 301C     		mov	r0, r6
 4610 0358 FFF7FEFF 		bl	Qprintf
 4611              	.LVL594:
 405:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4612              		.loc 1 405 0
 4613 035c 5545     		cmp	r5, sl
 4614 035e EAD1     		bne	.L497
 4615              	.LBE164:
 409:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 4616              		.loc 1 409 0
 4617 0360 301C     		mov	r0, r6
 4618 0362 2849     		ldr	r1, .L563+128
 4619 0364 FFF7FEFF 		bl	Qprintf
 4620              	.LVL595:
 4621 0368 C8E6     		b	.L494
 4622              	.LVL596:
 4623              	.L541:
 4624              	.LBE163:
 4625              	.LBE162:
 4626              	.LBE161:
 4627              	.LBB167:
 4628              	.LBB106:
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 4629              		.loc 1 502 0
 4630 036a 124B     		ldr	r3, .L563+48
 4631 036c 8022     		mov	r2, #128
 4632 036e 9868     		ldr	r0, [r3, #8]
 4633 0370 5100     		lsl	r1, r2, #1
 4634 0372 0143     		orr	r1, r0
 4635 0374 9960     		str	r1, [r3, #8]
 503:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 4636              		.loc 1 503 0
 4637 0376 9D68     		ldr	r5, [r3, #8]
 4638 0378 8024     		mov	r4, #128
 4639 037a A000     		lsl	r0, r4, #2
 4640 037c 2843     		orr	r0, r5
 4641 037e 9860     		str	r0, [r3, #8]
 4642 0380 13E7     		b	.L533
 4643              	.L564:
 4644 0382 C046     		.align	2
 4645              	.L563:
 4646 0384 00000000 		.word	.LANCHOR3
 4647 0388 00000000 		.word	TFC_Ticker
 4648 038c 00000000 		.word	LineScanImage0
 4649 0390 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 4650 0394 00000000 		.word	.LC3
 4651 0398 00000000 		.word	.LANCHOR23
 4652 039c 00900440 		.word	1074040832
 4653 03a0 FFF8FFFF 		.word	-1793
 4654 03a4 00F10F40 		.word	1074786560
 4655 03a8 00000000 		.word	.LANCHOR2
 4656 03ac 0000F040 		.word	1089470464
 4657 03b0 00000000 		.word	.LANCHOR6
 4658 03b4 40F00F40 		.word	1074786368
 4659 03b8 E7030000 		.word	999
 4660 03bc 00000000 		.word	.LANCHOR7
 4661 03c0 00000000 		.word	incline_speed
 4662 03c4 00000000 		.word	.LANCHOR16
 4663 03c8 00000000 		.word	.LANCHOR17
 4664 03cc E0930400 		.word	300000
 4665 03d0 00000000 		.word	.LANCHOR11
 4666 03d4 00000000 		.word	.LANCHOR19
 4667 03d8 00000000 		.word	.LANCHOR21
 4668 03dc 00000000 		.word	.LANCHOR20
 4669 03e0 00002041 		.word	1092616192
 4670 03e4 6666263F 		.word	1059481190
 4671 03e8 F90F4940 		.word	1078530041
 4672 03ec 0000A041 		.word	1101004800
 4673 03f0 00401C46 		.word	1176256512
 4674 03f4 00000000 		.word	.LANCHOR22
 4675 03f8 00A08C45 		.word	1166843904
 4676 03fc 00000000 		.word	.LANCHOR0
 4677 0400 00000000 		.word	.LANCHOR1
 4678 0404 04000000 		.word	.LC5
 4679              	.L542:
 510:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 4680              		.loc 1 510 0
 4681 0408 E94B     		ldr	r3, .L565+8
 4682 040a 8021     		mov	r1, #128
 4683 040c 5868     		ldr	r0, [r3, #4]
 4684 040e 4D00     		lsl	r5, r1, #1
 4685 0410 0543     		orr	r5, r0
 4686 0412 5D60     		str	r5, [r3, #4]
 4687              	.L539:
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 4688              		.loc 1 554 0
 4689 0414 9C68     		ldr	r4, [r3, #8]
 4690 0416 8022     		mov	r2, #128
 4691 0418 9000     		lsl	r0, r2, #2
 4692 041a 2043     		orr	r0, r4
 4693 041c 9860     		str	r0, [r3, #8]
 555:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 4694              		.loc 1 555 0
 4695 041e 9968     		ldr	r1, [r3, #8]
 4696 0420 8025     		mov	r5, #128
 4697 0422 EC00     		lsl	r4, r5, #3
 4698 0424 0C43     		orr	r4, r1
 4699 0426 9C60     		str	r4, [r3, #8]
 4700 0428 C4E6     		b	.L534
 4701              	.LVL597:
 4702              	.L557:
 4703              	.LBE106:
 4704              	.LBE167:
 4705              	.LBB168:
 4706              	.LBB153:
 250:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4707              		.loc 1 250 0
 4708 042a 0025     		mov	r5, #0
 4709 042c 0560     		str	r5, [r0]
 251:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 4710              		.loc 1 251 0
 4711 042e 5C46     		mov	r4, fp
 4712 0430 0B23     		mov	r3, #11
 4713 0432 E056     		ldrsb	r0, [r4, r3]
 4714 0434 0021     		mov	r1, #0
 4715 0436 DF4A     		ldr	r2, .L565+12
 4716 0438 FFF7FEFF 		bl	getDesiredServoValue
 4717              	.LVL598:
 253:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 4718              		.loc 1 253 0
 4719 043c 0021     		mov	r1, #0
 251:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 4720              		.loc 1 251 0
 4721 043e 041C     		add	r4, r0, #0
 253:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 4722              		.loc 1 253 0
 4723 0440 FFF7FEFF 		bl	__aeabi_fcmpgt
 4724              	.LVL599:
 4725 0444 0028     		cmp	r0, #0
 4726 0446 00D1     		bne	.LCB4172
 4727 0448 A7E1     		b	.L562	@long jump
 4728              	.LCB4172:
 254:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 4729              		.loc 1 254 0
 4730 044a 201C     		add	r0, r4, #0
 4731 044c DA49     		ldr	r1, .L565+16
 4732 044e FFF7FEFF 		bl	__aeabi_fmul
 4733              	.LVL600:
 4734 0452 011C     		add	r1, r0, #0
 4735 0454 201C     		add	r0, r4, #0
 4736 0456 FFF7FEFF 		bl	__aeabi_fadd
 4737              	.LVL601:
 255:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 4738              		.loc 1 255 0
 4739 045a D84D     		ldr	r5, .L565+20
 254:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 4740              		.loc 1 254 0
 4741 045c 041C     		add	r4, r0, #0
 255:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 4742              		.loc 1 255 0
 4743 045e 291C     		add	r1, r5, #0
 4744 0460 FFF7FEFF 		bl	__aeabi_fcmpgt
 4745              	.LVL602:
 4746 0464 0028     		cmp	r0, #0
 4747 0466 00D0     		beq	.LCB4187
 4748 0468 7EE1     		b	.L511	@long jump
 4749              	.LCB4187:
 254:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 4750              		.loc 1 254 0
 4751 046a D548     		ldr	r0, .L565+24
 4752 046c 0460     		str	r4, [r0]
 4753              	.L510:
 262:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4754              		.loc 1 262 0
 4755 046e 211C     		add	r1, r4, #0
 4756 0470 0020     		mov	r0, #0
 4757 0472 FFF7FEFF 		bl	TFC_SetServo
 4758              	.LVL603:
 4759              	.LBB130:
 4760              	.LBB131:
 4761              		.loc 1 731 0
 4762 0476 D34B     		ldr	r3, .L565+28
 4763 0478 D349     		ldr	r1, .L565+32
 4764 047a 1868     		ldr	r0, [r3]
 4765 047c FFF7FEFF 		bl	__aeabi_fmul
 4766              	.LVL604:
 4767 0480 CF49     		ldr	r1, .L565+24
 4768 0482 051C     		add	r5, r0, #0
 4769 0484 0868     		ldr	r0, [r1]
 4770              	.LVL605:
 4771 0486 D149     		ldr	r1, .L565+36
 4772 0488 FFF7FEFF 		bl	__aeabi_fmul
 4773              	.LVL606:
 4774 048c 011C     		add	r1, r0, #0
 4775 048e 281C     		add	r0, r5, #0
 4776 0490 FFF7FEFF 		bl	__aeabi_fadd
 4777              	.LVL607:
 4778 0494 CB4A     		ldr	r2, .L565+28
 4779              	.LBE131:
 4780              	.LBE130:
 263:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 4781              		.loc 1 263 0
 4782 0496 CA4C     		ldr	r4, .L565+24
 4783              	.LBB133:
 4784              	.LBB132:
 4785              		.loc 1 731 0
 4786 0498 1060     		str	r0, [r2]
 4787              	.LBE132:
 4788              	.LBE133:
 263:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 4789              		.loc 1 263 0
 4790 049a 2060     		str	r0, [r4]
 4791 049c B5E6     		b	.L508
 4792              	.L556:
 243:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4793              		.loc 1 243 0
 4794 049e CC48     		ldr	r0, .L565+40
 241:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 4795              		.loc 1 241 0
 4796 04a0 C44D     		ldr	r5, .L565+12
 243:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4797              		.loc 1 243 0
 4798 04a2 0368     		ldr	r3, [r0]
 4799 04a4 4146     		mov	r1, r8
 4800 04a6 0868     		ldr	r0, [r1]
 4801 04a8 5A46     		mov	r2, fp
 4802 04aa 191C     		mov	r1, r3
 241:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 4803              		.loc 1 241 0
 4804 04ac 2C70     		strb	r4, [r5]
 243:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4805              		.loc 1 243 0
 4806 04ae 0693     		str	r3, [sp, #24]
 4807 04b0 FFF7FEFF 		bl	findLine
 4808              	.LVL608:
 4809              	.LBB134:
 4810              	.LBB135:
 689:../Sources/main.c **** 	if(s_mode_enable)
 4811              		.loc 1 689 0
 4812 04b4 C74A     		ldr	r2, .L565+44
 4813 04b6 1478     		ldrb	r4, [r2]
 4814 04b8 002C     		cmp	r4, #0
 4815 04ba 00D0     		beq	.LCB4250
 4816 04bc 89E0     		b	.L502	@long jump
 4817              	.LCB4250:
 4818 04be 5D46     		mov	r5, fp
 4819 04c0 AB7A     		ldrb	r3, [r5, #10]
 4820 04c2 6A7A     		ldrb	r2, [r5, #9]
 4821 04c4 5CB2     		sxtb	r4, r3
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 4822              		.loc 1 709 0
 4823 04c6 012A     		cmp	r2, #1
 4824 04c8 00D1     		bne	.LCB4256
 4825 04ca 9BE0     		b	.L506	@long jump
 4826              	.LCB4256:
 4827              	.L507:
 716:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 4828              		.loc 1 716 0
 4829 04cc 5D46     		mov	r5, fp
 4830 04ce EB72     		strb	r3, [r5, #11]
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 4831              		.loc 1 717 0
 4832 04d0 201C     		mov	r0, r4
 4833 04d2 FFF7FEFF 		bl	__aeabi_i2f
 4834              	.LVL609:
 4835 04d6 C04B     		ldr	r3, .L565+48
 4836 04d8 1860     		str	r0, [r3]
 4837 04da 91E6     		b	.L501
 4838              	.LVL610:
 4839              	.L555:
 4840              	.LBE135:
 4841              	.LBE134:
 217:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 4842              		.loc 1 217 0
 4843 04dc 0025     		mov	r5, #0
 4844 04de 1561     		str	r5, [r2, #16]
 218:../Sources/main.c **** 		telemetrySendData();
 4845              		.loc 1 218 0
 4846 04e0 FFF7FEFF 		bl	telemetrySendData
 4847              	.LVL611:
 219:../Sources/main.c **** 		telemetryReadData();
 4848              		.loc 1 219 0
 4849 04e4 FFF7FEFF 		bl	telemetryReadData
 4850              	.LVL612:
 4851 04e8 81E6     		b	.L500
 4852              	.L554:
 210:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 4853              		.loc 1 210 0
 4854 04ea 0021     		mov	r1, #0
 4855 04ec A161     		str	r1, [r4, #24]
 211:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 4856              		.loc 1 211 0
 4857 04ee FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 4858              	.LVL613:
 4859 04f2 BA4B     		ldr	r3, .L565+52
 4860 04f4 1860     		str	r0, [r3]
 4861 04f6 75E6     		b	.L499
 4862              	.L553:
 204:../Sources/main.c **** 		stoplineJustDetected = 0;
 4863              		.loc 1 204 0
 4864 04f8 B94B     		ldr	r3, .L565+56
 4865 04fa 0021     		mov	r1, #0
 205:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 4866              		.loc 1 205 0
 4867 04fc 5A46     		mov	r2, fp
 204:../Sources/main.c **** 		stoplineJustDetected = 0;
 4868              		.loc 1 204 0
 4869 04fe 1970     		strb	r1, [r3]
 205:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 4870              		.loc 1 205 0
 4871 0500 9570     		strb	r5, [r2, #2]
 4872 0502 69E6     		b	.L498
 4873              	.LVL614:
 4874              	.L543:
 4875              	.LBE153:
 4876              	.LBE168:
 4877              	.LBB169:
 4878              	.LBB107:
 518:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 4879              		.loc 1 518 0
 4880 0504 AA4B     		ldr	r3, .L565+8
 4881 0506 8024     		mov	r4, #128
 4882 0508 9D68     		ldr	r5, [r3, #8]
 4883 050a 6000     		lsl	r0, r4, #1
 4884 050c 2843     		orr	r0, r5
 4885 050e 9860     		str	r0, [r3, #8]
 519:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 4886              		.loc 1 519 0
 4887 0510 5968     		ldr	r1, [r3, #4]
 4888 0512 8022     		mov	r2, #128
 4889 0514 9500     		lsl	r5, r2, #2
 4890 0516 0D43     		orr	r5, r1
 4891 0518 5D60     		str	r5, [r3, #4]
 4892              	.L535:
 548:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 4893              		.loc 1 548 0
 4894 051a 5C68     		ldr	r4, [r3, #4]
 4895 051c 8020     		mov	r0, #128
 4896 051e C100     		lsl	r1, r0, #3
 4897 0520 2143     		orr	r1, r4
 4898 0522 5960     		str	r1, [r3, #4]
 4899              	.L536:
 549:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 4900              		.loc 1 549 0
 4901 0524 9D68     		ldr	r5, [r3, #8]
 4902 0526 8022     		mov	r2, #128
 4903 0528 1401     		lsl	r4, r2, #4
 4904 052a 2C43     		orr	r4, r5
 4905 052c 9C60     		str	r4, [r3, #8]
 4906 052e C5E5     		b	.L482
 4907              	.LVL615:
 4908              	.L549:
 4909              	.LBE107:
 4910              	.LBE169:
 4911              	.LBB170:
 4912              	.LBB116:
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4913              		.loc 1 368 0
 4914 0530 0123     		mov	r3, #1
 4915 0532 C370     		strb	r3, [r0, #3]
 367:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4916              		.loc 1 367 0
 4917 0534 1160     		str	r1, [r2]
 370:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4918              		.loc 1 370 0
 4919 0536 0020     		mov	r0, #0
 4920 0538 0021     		mov	r1, #0
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4921              		.loc 1 371 0
 4922 053a 8025     		mov	r5, #128
 4923 053c A94C     		ldr	r4, .L565+60
 370:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4924              		.loc 1 370 0
 4925 053e FFF7FEFF 		bl	TFC_SetServo
 4926              	.LVL616:
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4927              		.loc 1 371 0
 4928 0542 AA03     		lsl	r2, r5, #14
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4929              		.loc 1 372 0
 4930 0544 0020     		mov	r0, #0
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4931              		.loc 1 371 0
 4932 0546 A260     		str	r2, [r4, #8]
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4933              		.loc 1 372 0
 4934 0548 011C     		add	r1, r0, #0
 4935 054a FFF7FEFF 		bl	TFC_SetMotorPWM
 4936              	.LVL617:
 374:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4937              		.loc 1 374 0
 4938 054e 4046     		mov	r0, r8
 4939 0550 0068     		ldr	r0, [r0]
 4940 0552 FFF7FEFF 		bl	getTotalIntensity
 4941              	.LVL618:
 4942 0556 A449     		ldr	r1, .L565+64
 4943 0558 FFF7FEFF 		bl	calculateNewExposure
 4944              	.LVL619:
 4945 055c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4946              	.LVL620:
 4947              	.LBB114:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4948              		.loc 1 377 0
 4949 0560 8021     		mov	r1, #128
 4950              	.LBE114:
 374:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4951              		.loc 1 374 0
 4952 0562 0024     		mov	r4, #0
 4953              	.LBB115:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4954              		.loc 1 377 0
 4955 0564 4D00     		lsl	r5, r1, #1
 4956              	.LVL621:
 4957              	.L496:
 379:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 4958              		.loc 1 379 0
 4959 0566 4346     		mov	r3, r8
 4960 0568 1A68     		ldr	r2, [r3]
 4961 056a 391C     		mov	r1, r7
 4962 056c 1019     		add	r0, r2, r4
 4963 056e 0288     		ldrh	r2, [r0]
 4964 0570 301C     		mov	r0, r6
 4965 0572 FFF7FEFF 		bl	Qprintf
 4966              	.LVL622:
 4967 0576 4146     		mov	r1, r8
 4968 0578 0B68     		ldr	r3, [r1]
 4969 057a 0234     		add	r4, r4, #2
 4970 057c 1A19     		add	r2, r3, r4
 4971 057e 1288     		ldrh	r2, [r2]
 4972 0580 301C     		mov	r0, r6
 4973 0582 391C     		mov	r1, r7
 4974 0584 0234     		add	r4, r4, #2
 4975 0586 FFF7FEFF 		bl	Qprintf
 4976              	.LVL623:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4977              		.loc 1 377 0
 4978 058a AC42     		cmp	r4, r5
 4979 058c EBD1     		bne	.L496
 4980              	.LBE115:
 4981              	.LBE116:
 4982              	.LBE170:
 4983              	.LBB171:
 4984              	.LBB166:
 4985              	.LBB165:
 409:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 4986              		.loc 1 409 0
 4987 058e 301C     		mov	r0, r6
 4988 0590 9649     		ldr	r1, .L565+68
 4989 0592 FFF7FEFF 		bl	Qprintf
 4990              	.LVL624:
 4991 0596 B1E5     		b	.L494
 4992              	.LVL625:
 4993              	.L544:
 4994              	.LBE165:
 4995              	.LBE166:
 4996              	.LBE171:
 4997              	.LBB172:
 4998              	.LBB108:
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 4999              		.loc 1 525 0
 5000 0598 854B     		ldr	r3, .L565+8
 5001 059a 8022     		mov	r2, #128
 5002 059c 5C68     		ldr	r4, [r3, #4]
 5003 059e 5000     		lsl	r0, r2, #1
 5004 05a0 2043     		orr	r0, r4
 5005 05a2 5860     		str	r0, [r3, #4]
 5006              	.L540:
 540:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 5007              		.loc 1 540 0
 5008 05a4 5968     		ldr	r1, [r3, #4]
 5009 05a6 8025     		mov	r5, #128
 5010 05a8 AC00     		lsl	r4, r5, #2
 5011 05aa 0C43     		orr	r4, r1
 5012 05ac 5C60     		str	r4, [r3, #4]
 5013              	.L538:
 534:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 5014              		.loc 1 534 0
 5015 05ae 9868     		ldr	r0, [r3, #8]
 5016 05b0 8022     		mov	r2, #128
 5017 05b2 D100     		lsl	r1, r2, #3
 5018 05b4 0143     		orr	r1, r0
 5019 05b6 9960     		str	r1, [r3, #8]
 5020 05b8 B4E7     		b	.L536
 5021              	.L545:
 532:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 5022              		.loc 1 532 0
 5023 05ba 7D4B     		ldr	r3, .L565+8
 5024 05bc 8022     		mov	r2, #128
 5025 05be 5D68     		ldr	r5, [r3, #4]
 5026 05c0 5400     		lsl	r4, r2, #1
 5027 05c2 2C43     		orr	r4, r5
 5028 05c4 5C60     		str	r4, [r3, #4]
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 5029              		.loc 1 533 0
 5030 05c6 9868     		ldr	r0, [r3, #8]
 5031 05c8 8021     		mov	r1, #128
 5032 05ca 8D00     		lsl	r5, r1, #2
 5033 05cc 0543     		orr	r5, r0
 5034 05ce 9D60     		str	r5, [r3, #8]
 5035 05d0 EDE7     		b	.L538
 5036              	.LVL626:
 5037              	.L502:
 5038              	.LBE108:
 5039              	.LBE172:
 5040              	.LBB173:
 5041              	.LBB154:
 5042              	.LBB139:
 5043              	.LBB136:
 691:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 5044              		.loc 1 691 0
 5045 05d2 5846     		mov	r0, fp
 5046 05d4 837A     		ldrb	r3, [r0, #10]
 5047 05d6 5CB2     		sxtb	r4, r3
 5048 05d8 092C     		cmp	r4, #9
 5049 05da 00DD     		ble	.LCB4473
 5050 05dc B7E0     		b	.L504	@long jump
 5051              	.LCB4473:
 692:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 5052              		.loc 1 692 0
 5053 05de 017B     		ldrb	r1, [r0, #12]
 5054 05e0 4629     		cmp	r1, #70
 5055 05e2 00D8     		bhi	.LCB4476
 5056 05e4 B3E0     		b	.L504	@long jump
 5057              	.LCB4476:
 693:../Sources/main.c **** 				&& carState->crossSection == NO)
 5058              		.loc 1 693 0
 5059 05e6 8279     		ldrb	r2, [r0, #6]
 5060 05e8 002A     		cmp	r2, #0
 5061 05ea 00D0     		beq	.LCB4479
 5062 05ec AFE0     		b	.L504	@long jump
 5063              	.LCB4479:
 695:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 5064              		.loc 1 695 0
 5065 05ee 4A46     		mov	r2, r9
 5066 05f0 D569     		ldr	r5, [r2, #28]
 5067 05f2 7F48     		ldr	r0, .L565+72
 5068 05f4 8542     		cmp	r5, r0
 5069 05f6 00D9     		bls	.LCB4484
 5070 05f8 36E1     		b	.L505	@long jump
 5071              	.LCB4484:
 5072 05fa 5946     		mov	r1, fp
 5073 05fc 4A7A     		ldrb	r2, [r1, #9]
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 5074              		.loc 1 709 0
 5075 05fe 012A     		cmp	r2, #1
 5076 0600 00D0     		beq	.LCB4488
 5077 0602 63E7     		b	.L507	@long jump
 5078              	.LCB4488:
 5079              	.L506:
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5080              		.loc 1 711 0
 5081 0604 744A     		ldr	r2, .L565+48
 5082 0606 7B49     		ldr	r1, .L565+76
 5083 0608 1068     		ldr	r0, [r2]
 5084 060a FFF7FEFF 		bl	__aeabi_fmul
 5085              	.LVL627:
 5086 060e 051C     		add	r5, r0, #0
 5087 0610 201C     		mov	r0, r4
 5088 0612 FFF7FEFF 		bl	__aeabi_i2f
 5089              	.LVL628:
 5090 0616 7849     		ldr	r1, .L565+80
 5091 0618 FFF7FEFF 		bl	__aeabi_fmul
 5092              	.LVL629:
 5093 061c 011C     		add	r1, r0, #0
 5094 061e 281C     		add	r0, r5, #0
 5095 0620 FFF7FEFF 		bl	__aeabi_fadd
 5096              	.LVL630:
 5097 0624 6C4C     		ldr	r4, .L565+48
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5098              		.loc 1 712 0
 5099 0626 FC23     		mov	r3, #252
 5100 0628 9905     		lsl	r1, r3, #22
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5101              		.loc 1 711 0
 5102 062a 2060     		str	r0, [r4]
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5103              		.loc 1 712 0
 5104 062c FFF7FEFF 		bl	__aeabi_fadd
 5105              	.LVL631:
 5106 0630 FFF7FEFF 		bl	__aeabi_f2uiz
 5107              	.LVL632:
 5108 0634 5946     		mov	r1, fp
 5109 0636 C872     		strb	r0, [r1, #11]
 5110 0638 E2E5     		b	.L501
 5111              	.LVL633:
 5112              	.L546:
 5113              	.LBE136:
 5114              	.LBE139:
 5115              	.LBE154:
 5116              	.LBE173:
 5117              	.LBB174:
 5118              	.LBB109:
 539:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5119              		.loc 1 539 0
 5120 063a 5D4B     		ldr	r3, .L565+8
 5121 063c 8020     		mov	r0, #128
 5122 063e 9C68     		ldr	r4, [r3, #8]
 5123 0640 4100     		lsl	r1, r0, #1
 5124 0642 2143     		orr	r1, r4
 5125 0644 9960     		str	r1, [r3, #8]
 5126 0646 ADE7     		b	.L540
 5127              	.LVL634:
 5128              	.L559:
 5129              	.LBE109:
 5130              	.LBE174:
 5131              	.LBB175:
 5132              	.LBB155:
 5133              	.LBB140:
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5134              		.loc 1 279 0
 5135 0648 5D4C     		ldr	r4, .L565+24
 5136 064a 2568     		ldr	r5, [r4]
 5137 064c 281C     		add	r0, r5, #0
 5138 064e 0595     		str	r5, [sp, #20]
 5139 0650 FFF7FEFF 		bl	getRadiusRoot
 5140              	.LVL635:
 5141 0654 6949     		ldr	r1, .L565+84
 5142 0656 021C     		add	r2, r0, #0
 5143 0658 5846     		mov	r0, fp
 5144 065a FFF7FEFF 		bl	getDesiredSpeed
 5145              	.LVL636:
 5146              	.LBB141:
 5147              	.LBB142:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5148              		.loc 1 724 0
 5149 065e 6849     		ldr	r1, .L565+88
 5150              	.LBE142:
 5151              	.LBE141:
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5152              		.loc 1 279 0
 5153 0660 8246     		mov	sl, r0
 5154              	.LVL637:
 5155              	.LBB146:
 5156              	.LBB143:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5157              		.loc 1 724 0
 5158 0662 0868     		ldr	r0, [r1]
 5159              	.LVL638:
 5160 0664 6349     		ldr	r1, .L565+76
 5161 0666 FFF7FEFF 		bl	__aeabi_fmul
 5162              	.LVL639:
 5163 066a FFF7FEFF 		bl	__aeabi_f2d
 5164              	.LVL640:
 5165 066e 041C     		mov	r4, r0
 5166 0670 5046     		mov	r0, sl
 5167 0672 0D1C     		mov	r5, r1
 5168 0674 FFF7FEFF 		bl	__aeabi_f2d
 5169              	.LVL641:
 5170 0678 4C4B     		ldr	r3, .L565+4
 5171 067a 4B4A     		ldr	r2, .L565
 5172 067c FFF7FEFF 		bl	__aeabi_dmul
 5173              	.LVL642:
 5174 0680 021C     		mov	r2, r0
 5175 0682 0B1C     		mov	r3, r1
 5176 0684 201C     		mov	r0, r4
 5177 0686 291C     		mov	r1, r5
 5178 0688 FFF7FEFF 		bl	__aeabi_dadd
 5179              	.LVL643:
 5180 068c FFF7FEFF 		bl	__aeabi_d2f
 5181              	.LVL644:
 5182              	.LBE143:
 5183              	.LBE146:
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5184              		.loc 1 279 0
 5185 0690 5C4B     		ldr	r3, .L565+92
 5186              	.LBB147:
 5187              	.LBB144:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5188              		.loc 1 724 0
 5189 0692 5B4A     		ldr	r2, .L565+88
 5190              	.LBE144:
 5191              	.LBE147:
 279:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5192              		.loc 1 279 0
 5193 0694 1860     		str	r0, [r3]
 5194              	.LBB148:
 5195              	.LBB145:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5196              		.loc 1 724 0
 5197 0696 1060     		str	r0, [r2]
 5198              	.LBE145:
 5199              	.LBE148:
 282:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 5200              		.loc 1 282 0
 5201 0698 4948     		ldr	r0, .L565+24
 5202 069a 0168     		ldr	r1, [r0]
 5203 069c 0491     		str	r1, [sp, #16]
 5204 069e 081C     		add	r0, r1, #0
 5205 06a0 0021     		mov	r1, #0
 5206 06a2 FFF7FEFF 		bl	getActiveDifferentialModifier
 5207              	.LVL645:
 5208 06a6 464C     		ldr	r4, .L565+24
 5209 06a8 0121     		mov	r1, #1
 5210 06aa 2268     		ldr	r2, [r4]
 5211 06ac 051C     		add	r5, r0, #0
 5212              	.LVL646:
 5213 06ae 101C     		add	r0, r2, #0
 5214              	.LVL647:
 5215 06b0 0392     		str	r2, [sp, #12]
 5216 06b2 FFF7FEFF 		bl	getActiveDifferentialModifier
 5217              	.LVL648:
 5218 06b6 041C     		add	r4, r0, #0
 5219              	.LVL649:
 286:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 5220              		.loc 1 286 0
 5221 06b8 0020     		mov	r0, #0
 5222              	.LVL650:
 5223 06ba FFF7FEFF 		bl	getSpeed
 5224              	.LVL651:
 5225 06be 524B     		ldr	r3, .L565+96
 5226 06c0 1860     		str	r0, [r3]
 287:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 5227              		.loc 1 287 0
 5228 06c2 0120     		mov	r0, #1
 5229 06c4 FFF7FEFF 		bl	getSpeed
 5230              	.LVL652:
 5231 06c8 5049     		ldr	r1, .L565+100
 5232 06ca 0860     		str	r0, [r1]
 299:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 5233              		.loc 1 299 0
 5234 06cc 5846     		mov	r0, fp
 5235 06ce 4278     		ldrb	r2, [r0, #1]
 5236 06d0 012A     		cmp	r2, #1
 5237 06d2 00D0     		beq	.LCB4634
 5238 06d4 12E5     		b	.L494	@long jump
 5239              	.LCB4634:
 310:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 5240              		.loc 1 310 0
 5241 06d6 4E4B     		ldr	r3, .L565+104
 5242 06d8 4E49     		ldr	r1, .L565+108
 5243 06da 1868     		ldr	r0, [r3]
 5244 06dc FFF7FEFF 		bl	__aeabi_fdiv
 5245              	.LVL653:
 5246 06e0 0B90     		str	r0, [sp, #44]
 5247 06e2 281C     		add	r0, r5, #0
 5248 06e4 474D     		ldr	r5, .L565+92
 5249              	.LVL654:
 5250 06e6 2968     		ldr	r1, [r5]
 5251 06e8 FFF7FEFF 		bl	__aeabi_fmul
 5252              	.LVL655:
 5253 06ec 4649     		ldr	r1, .L565+96
 5254 06ee 8246     		mov	sl, r0
 5255              	.LVL656:
 5256 06f0 0020     		mov	r0, #0
 5257 06f2 0D68     		ldr	r5, [r1]
 5258 06f4 FFF7FEFF 		bl	isANewmeasurementAvailable
 5259              	.LVL657:
 5260 06f8 0023     		mov	r3, #0
 5261 06fa 021C     		mov	r2, r0
 5262 06fc 291C     		add	r1, r5, #0
 5263 06fe 5046     		mov	r0, sl
 5264 0700 FFF7FEFF 		bl	getDesiredMotorPWM
 5265              	.LVL658:
 5266 0704 011C     		add	r1, r0, #0
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 5267              		.loc 1 309 0
 5268 0706 0B98     		ldr	r0, [sp, #44]
 5269 0708 FFF7FEFF 		bl	__aeabi_fmul
 5270              	.LVL659:
 5271 070c 0B90     		str	r0, [sp, #44]
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 5272              		.loc 1 311 0
 5273 070e 4048     		ldr	r0, .L565+104
 5274 0710 4049     		ldr	r1, .L565+108
 5275 0712 0068     		ldr	r0, [r0]
 5276 0714 FFF7FEFF 		bl	__aeabi_fdiv
 5277              	.LVL660:
 5278 0718 051C     		add	r5, r0, #0
 5279 071a 201C     		add	r0, r4, #0
 5280 071c 394C     		ldr	r4, .L565+92
 5281              	.LVL661:
 5282 071e 2168     		ldr	r1, [r4]
 5283 0720 FFF7FEFF 		bl	__aeabi_fmul
 5284              	.LVL662:
 5285 0724 394A     		ldr	r2, .L565+100
 5286 0726 8246     		mov	sl, r0
 5287 0728 0120     		mov	r0, #1
 5288 072a 1468     		ldr	r4, [r2]
 5289 072c FFF7FEFF 		bl	isANewmeasurementAvailable
 5290              	.LVL663:
 5291 0730 211C     		add	r1, r4, #0
 5292 0732 021C     		mov	r2, r0
 5293 0734 0123     		mov	r3, #1
 5294 0736 5046     		mov	r0, sl
 5295 0738 FFF7FEFF 		bl	getDesiredMotorPWM
 5296              	.LVL664:
 5297 073c 011C     		add	r1, r0, #0
 309:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 5298              		.loc 1 309 0
 5299 073e 281C     		add	r0, r5, #0
 5300 0740 FFF7FEFF 		bl	__aeabi_fmul
 5301              	.LVL665:
 5302 0744 011C     		add	r1, r0, #0
 5303 0746 0B98     		ldr	r0, [sp, #44]
 5304 0748 FFF7FEFF 		bl	TFC_SetMotorPWM
 5305              	.LVL666:
 5306 074c D6E4     		b	.L494
 5307              	.LVL667:
 5308              	.L504:
 5309              	.LBE140:
 5310              	.LBB149:
 5311              	.LBB137:
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5312              		.loc 1 702 0
 5313 074e 0025     		mov	r5, #0
 5314 0750 5846     		mov	r0, fp
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5315              		.loc 1 703 0
 5316 0752 4946     		mov	r1, r9
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5317              		.loc 1 702 0
 5318 0754 4572     		strb	r5, [r0, #9]
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5319              		.loc 1 703 0
 5320 0756 CD61     		str	r5, [r1, #28]
 5321 0758 B8E6     		b	.L507
 5322              	.LVL668:
 5323              	.L548:
 5324              	.LBE137:
 5325              	.LBE149:
 5326              	.LBE155:
 5327              	.LBE175:
 5328              	.LBB176:
 5329              	.LBB110:
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5330              		.loc 1 553 0
 5331 075a 154B     		ldr	r3, .L565+8
 5332 075c 8021     		mov	r1, #128
 5333 075e 9868     		ldr	r0, [r3, #8]
 5334 0760 4A00     		lsl	r2, r1, #1
 5335 0762 0243     		orr	r2, r0
 5336 0764 9A60     		str	r2, [r3, #8]
 5337 0766 55E6     		b	.L539
 5338              	.LVL669:
 5339              	.L511:
 5340              	.LBE110:
 5341              	.LBE176:
 5342              	.LBB177:
 5343              	.LBB156:
 257:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 5344              		.loc 1 257 0
 5345 0768 154A     		ldr	r2, .L565+24
 5346 076a 2C1C     		add	r4, r5, #0
 5347 076c 1560     		str	r5, [r2]
 5348 076e 7EE6     		b	.L510
 5349              	.LVL670:
 5350              	.L547:
 5351              	.LBE156:
 5352              	.LBE177:
 5353              	.LBB178:
 5354              	.LBB111:
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5355              		.loc 1 546 0
 5356 0770 0F4B     		ldr	r3, .L565+8
 5357 0772 8024     		mov	r4, #128
 5358 0774 9D68     		ldr	r5, [r3, #8]
 5359 0776 6000     		lsl	r0, r4, #1
 5360 0778 2843     		orr	r0, r5
 5361 077a 9860     		str	r0, [r3, #8]
 547:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 5362              		.loc 1 547 0
 5363 077c 9968     		ldr	r1, [r3, #8]
 5364 077e 8022     		mov	r2, #128
 5365 0780 9500     		lsl	r5, r2, #2
 5366 0782 0D43     		orr	r5, r1
 5367 0784 9D60     		str	r5, [r3, #8]
 5368 0786 C8E6     		b	.L535
 5369              	.LVL671:
 5370              	.L560:
 5371              	.LBE111:
 5372              	.LBE178:
 5373              	.LBB179:
 5374              	.LBB157:
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 5375              		.loc 1 321 0
 5376 0788 8020     		mov	r0, #128
 5377 078a 164B     		ldr	r3, .L565+60
 5378 078c 8203     		lsl	r2, r0, #14
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 5379              		.loc 1 322 0
 5380 078e 0020     		mov	r0, #0
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 5381              		.loc 1 321 0
 5382 0790 9A60     		str	r2, [r3, #8]
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 5383              		.loc 1 322 0
 5384 0792 011C     		add	r1, r0, #0
 5385 0794 FFF7FEFF 		bl	TFC_SetMotorPWM
 5386              	.LVL672:
 5387 0798 B0E4     		b	.L494
 5388              	.L562:
 251:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 5389              		.loc 1 251 0
 5390 079a 0949     		ldr	r1, .L565+24
 5391 079c 0C60     		str	r4, [r1]
 5392 079e 66E6     		b	.L510
 5393              	.L558:
 271:../Sources/main.c **** 			findStop(carState);
 5394              		.loc 1 271 0
 5395 07a0 5846     		mov	r0, fp
 5396 07a2 FFF7FEFF 		bl	findStop
 5397              	.LVL673:
 5398 07a6 3BE5     		b	.L513
 5399              	.L566:
 5400              		.align	3
 5401              	.L565:
 5402 07a8 9A999999 		.word	-1717986918
 5403 07ac 9999B93F 		.word	1069128089
 5404 07b0 40F00F40 		.word	1074786368
 5405 07b4 00000000 		.word	.LANCHOR12
 5406 07b8 9A99993E 		.word	1050253722
 5407 07bc F628DC3E 		.word	1054615798
 5408 07c0 00000000 		.word	.LANCHOR5
 5409 07c4 00000000 		.word	.LANCHOR15
 5410 07c8 CDCC4C3F 		.word	1061997773
 5411 07cc CCCC4C3E 		.word	1045220556
 5412 07d0 00000000 		.word	LineScanImage1
 5413 07d4 00000000 		.word	.LANCHOR13
 5414 07d8 00000000 		.word	.LANCHOR14
 5415 07dc 00000000 		.word	.LANCHOR2
 5416 07e0 00000000 		.word	.LANCHOR11
 5417 07e4 00F10F40 		.word	1074786560
 5418 07e8 E0930400 		.word	300000
 5419 07ec 04000000 		.word	.LC5
 5420 07f0 94110000 		.word	4500
 5421 07f4 6666663F 		.word	1063675494
 5422 07f8 D0CCCC3D 		.word	1036831952
 5423 07fc 00807A43 		.word	1132101632
 5424 0800 00000000 		.word	.LANCHOR18
 5425 0804 00000000 		.word	.LANCHOR4
 5426 0808 00000000 		.word	.LANCHOR19
 5427 080c 00000000 		.word	.LANCHOR20
 5428 0810 00000000 		.word	incline_speed
 5429 0814 0000C842 		.word	1120403456
 5430              	.L516:
 5431              	.LBB150:
 346:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 5432              		.loc 1 346 0
 5433 0818 1849     		ldr	r1, .L567
 5434 081a 194A     		ldr	r2, .L567+4
 5435 081c 4846     		mov	r0, r9
 5436 081e 4569     		ldr	r5, [r0, #20]
 5437 0820 0C68     		ldr	r4, [r1]
 5438 0822 1068     		ldr	r0, [r2]
 5439 0824 2B1B     		sub	r3, r5, r4
 5440 0826 8342     		cmp	r3, r0
 5441 0828 00D2     		bcs	.LCB4840
 5442 082a 67E4     		b	.L494	@long jump
 5443              	.LCB4840:
 5444              	.LBB127:
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 5445              		.loc 1 348 0
 5446 082c 0020     		mov	r0, #0
 5447 082e FFF7FEFF 		bl	getSpeed
 5448              	.LVL674:
 5449 0832 051C     		add	r5, r0, #0
 5450              	.LVL675:
 5451 0834 0120     		mov	r0, #1
 5452              	.LVL676:
 5453 0836 FFF7FEFF 		bl	getSpeed
 5454              	.LVL677:
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 5455              		.loc 1 350 0
 5456 083a 8021     		mov	r1, #128
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 5457              		.loc 1 348 0
 5458 083c 041C     		add	r4, r0, #0
 5459              	.LVL678:
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 5460              		.loc 1 350 0
 5461 083e C905     		lsl	r1, r1, #23
 5462 0840 281C     		add	r0, r5, #0
 5463              	.LVL679:
 5464 0842 FFF7FEFF 		bl	__aeabi_fcmpgt
 5465              	.LVL680:
 5466 0846 0028     		cmp	r0, #0
 5467 0848 06D1     		bne	.L518
 5468 084a 8023     		mov	r3, #128
 5469 084c 201C     		add	r0, r4, #0
 5470 084e D905     		lsl	r1, r3, #23
 5471 0850 FFF7FEFF 		bl	__aeabi_fcmpgt
 5472              	.LVL681:
 5473 0854 0028     		cmp	r0, #0
 5474 0856 0BD0     		beq	.L532
 5475              	.L518:
 352:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 5476              		.loc 1 352 0
 5477 0858 BF22     		mov	r2, #191
 5478 085a 1006     		lsl	r0, r2, #24
 5479 085c 011C     		add	r1, r0, #0
 5480 085e FFF7FEFF 		bl	TFC_SetMotorPWM
 5481              	.LVL682:
 5482 0862 4BE4     		b	.L494
 5483              	.LVL683:
 5484              	.L561:
 5485              	.LBE127:
 5486              	.LBB128:
 336:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 5487              		.loc 1 336 0
 5488 0864 074D     		ldr	r5, .L567+8
 5489 0866 12E5     		b	.L517
 5490              	.LVL684:
 5491              	.L505:
 5492              	.LBE128:
 5493              	.LBE150:
 5494              	.LBB151:
 5495              	.LBB138:
 697:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 5496              		.loc 1 697 0
 5497 0868 0120     		mov	r0, #1
 5498 086a 5946     		mov	r1, fp
 5499 086c 4872     		strb	r0, [r1, #9]
 5500 086e C9E6     		b	.L506
 5501              	.LVL685:
 5502              	.L532:
 5503              	.LBE138:
 5504              	.LBE151:
 5505              	.LBB152:
 5506              	.LBB129:
 356:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 5507              		.loc 1 356 0
 5508 0870 0020     		mov	r0, #0
 5509 0872 011C     		add	r1, r0, #0
 5510 0874 FFF7FEFF 		bl	TFC_SetMotorPWM
 5511              	.LVL686:
 5512 0878 40E4     		b	.L494
 5513              	.L568:
 5514 087a C046     		.align	2
 5515              	.L567:
 5516 087c 00000000 		.word	.LANCHOR21
 5517 0880 00000000 		.word	.LANCHOR22
 5518 0884 CDCCCC3E 		.word	1053609165
 5519              	.LBE129:
 5520              	.LBE152:
 5521              	.LBE157:
 5522              	.LBE179:
 5523              		.cfi_endproc
 5524              	.LFE0:
 5526              		.section	.text.processRaceLine,"ax",%progbits
 5527              		.align	2
 5528              		.global	processRaceLine
 5529              		.code	16
 5530              		.thumb_func
 5532              	processRaceLine:
 5533              	.LFB14:
 688:../Sources/main.c **** {
 5534              		.loc 1 688 0
 5535              		.cfi_startproc
 5536              	.LVL687:
 5537 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5538              	.LCFI20:
 5539              		.cfi_def_cfa_offset 24
 5540              		.cfi_offset 3, -24
 5541              		.cfi_offset 4, -20
 5542              		.cfi_offset 5, -16
 5543              		.cfi_offset 6, -12
 5544              		.cfi_offset 7, -8
 5545              		.cfi_offset 14, -4
 689:../Sources/main.c **** 	if(s_mode_enable)
 5546              		.loc 1 689 0
 5547 0002 234B     		ldr	r3, .L579
 688:../Sources/main.c **** {
 5548              		.loc 1 688 0
 5549 0004 041C     		mov	r4, r0
 689:../Sources/main.c **** 	if(s_mode_enable)
 5550              		.loc 1 689 0
 5551 0006 1878     		ldrb	r0, [r3]
 5552              	.LVL688:
 5553 0008 0028     		cmp	r0, #0
 5554 000a 0CD1     		bne	.L570
 5555 000c 617A     		ldrb	r1, [r4, #9]
 5556 000e A67A     		ldrb	r6, [r4, #10]
 5557              	.L571:
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 5558              		.loc 1 709 0
 5559 0010 0129     		cmp	r1, #1
 5560 0012 20D0     		beq	.L577
 5561              	.L575:
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 5562              		.loc 1 717 0
 5563 0014 70B2     		sxtb	r0, r6
 5564 0016 FFF7FEFF 		bl	__aeabi_i2f
 5565              	.LVL689:
 716:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 5566              		.loc 1 716 0
 5567 001a 351C     		mov	r5, r6
 5568 001c 1D4E     		ldr	r6, .L579+4
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 5569              		.loc 1 717 0
 5570 001e 071C     		add	r7, r0, #0
 5571              	.L576:
 5572 0020 3760     		str	r7, [r6]
 5573 0022 E572     		strb	r5, [r4, #11]
 719:../Sources/main.c **** }
 5574              		.loc 1 719 0
 5575              		@ sp needed for prologue
 5576              	.LVL690:
 5577 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5578              	.LVL691:
 5579              	.L570:
 691:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 5580              		.loc 1 691 0
 5581 0026 A67A     		ldrb	r6, [r4, #10]
 5582 0028 75B2     		sxtb	r5, r6
 5583 002a 092D     		cmp	r5, #9
 5584 002c 0DDC     		bgt	.L572
 692:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 5585              		.loc 1 692 0
 5586 002e 227B     		ldrb	r2, [r4, #12]
 5587 0030 462A     		cmp	r2, #70
 5588 0032 0AD9     		bls	.L572
 693:../Sources/main.c **** 				&& carState->crossSection == NO)
 5589              		.loc 1 693 0
 5590 0034 A179     		ldrb	r1, [r4, #6]
 5591 0036 0029     		cmp	r1, #0
 5592 0038 07D1     		bne	.L572
 695:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 5593              		.loc 1 695 0
 5594 003a 174B     		ldr	r3, .L579+8
 5595 003c 174A     		ldr	r2, .L579+12
 5596 003e D869     		ldr	r0, [r3, #28]
 5597 0040 9042     		cmp	r0, r2
 5598 0042 22D9     		bls	.L578
 697:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 5599              		.loc 1 697 0
 5600 0044 0123     		mov	r3, #1
 5601 0046 6372     		strb	r3, [r4, #9]
 5602 0048 06E0     		b	.L574
 5603              	.L572:
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5604              		.loc 1 703 0
 5605 004a 134F     		ldr	r7, .L579+8
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5606              		.loc 1 702 0
 5607 004c 0025     		mov	r5, #0
 5608 004e 6572     		strb	r5, [r4, #9]
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5609              		.loc 1 703 0
 5610 0050 FD61     		str	r5, [r7, #28]
 5611 0052 A67A     		ldrb	r6, [r4, #10]
 5612 0054 DEE7     		b	.L575
 5613              	.L577:
 5614 0056 75B2     		sxtb	r5, r6
 5615              	.L574:
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5616              		.loc 1 711 0
 5617 0058 0E4E     		ldr	r6, .L579+4
 5618 005a 1149     		ldr	r1, .L579+16
 5619 005c 3068     		ldr	r0, [r6]
 5620 005e FFF7FEFF 		bl	__aeabi_fmul
 5621              	.LVL692:
 5622 0062 071C     		add	r7, r0, #0
 5623 0064 281C     		mov	r0, r5
 5624 0066 FFF7FEFF 		bl	__aeabi_i2f
 5625              	.LVL693:
 5626 006a 0E49     		ldr	r1, .L579+20
 5627 006c FFF7FEFF 		bl	__aeabi_fmul
 5628              	.LVL694:
 5629 0070 011C     		add	r1, r0, #0
 5630 0072 381C     		add	r0, r7, #0
 5631 0074 FFF7FEFF 		bl	__aeabi_fadd
 5632              	.LVL695:
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5633              		.loc 1 712 0
 5634 0078 FC22     		mov	r2, #252
 5635 007a 9105     		lsl	r1, r2, #22
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5636              		.loc 1 711 0
 5637 007c 071C     		add	r7, r0, #0
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5638              		.loc 1 712 0
 5639 007e FFF7FEFF 		bl	__aeabi_fadd
 5640              	.LVL696:
 5641 0082 FFF7FEFF 		bl	__aeabi_f2uiz
 5642              	.LVL697:
 5643 0086 C5B2     		uxtb	r5, r0
 5644 0088 CAE7     		b	.L576
 5645              	.L578:
 5646 008a 617A     		ldrb	r1, [r4, #9]
 5647 008c C0E7     		b	.L571
 5648              	.L580:
 5649 008e C046     		.align	2
 5650              	.L579:
 5651 0090 00000000 		.word	.LANCHOR13
 5652 0094 00000000 		.word	.LANCHOR14
 5653 0098 00000000 		.word	TFC_Ticker
 5654 009c 94110000 		.word	4500
 5655 00a0 6666663F 		.word	1063675494
 5656 00a4 D0CCCC3D 		.word	1036831952
 5657              		.cfi_endproc
 5658              	.LFE14:
 5660              		.section	.text.targetSpeedAverage,"ax",%progbits
 5661              		.align	2
 5662              		.global	targetSpeedAverage
 5663              		.code	16
 5664              		.thumb_func
 5666              	targetSpeedAverage:
 5667              	.LFB15:
 722:../Sources/main.c **** {
 5668              		.loc 1 722 0
 5669              		.cfi_startproc
 5670              	.LVL698:
 5671 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5672              	.LCFI21:
 5673              		.cfi_def_cfa_offset 24
 5674              		.cfi_offset 3, -24
 5675              		.cfi_offset 4, -20
 5676              		.cfi_offset 5, -16
 5677              		.cfi_offset 6, -12
 5678              		.cfi_offset 7, -8
 5679              		.cfi_offset 14, -4
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5680              		.loc 1 724 0
 5681 0002 0F4E     		ldr	r6, .L582+8
 722:../Sources/main.c **** {
 5682              		.loc 1 722 0
 5683 0004 071C     		add	r7, r0, #0
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5684              		.loc 1 724 0
 5685 0006 0F49     		ldr	r1, .L582+12
 5686 0008 3068     		ldr	r0, [r6]
 5687              	.LVL699:
 5688 000a FFF7FEFF 		bl	__aeabi_fmul
 5689              	.LVL700:
 5690 000e FFF7FEFF 		bl	__aeabi_f2d
 5691              	.LVL701:
 5692 0012 041C     		mov	r4, r0
 5693 0014 381C     		add	r0, r7, #0
 5694 0016 0D1C     		mov	r5, r1
 5695 0018 FFF7FEFF 		bl	__aeabi_f2d
 5696              	.LVL702:
 5697 001c 074B     		ldr	r3, .L582+4
 5698 001e 064A     		ldr	r2, .L582
 5699 0020 FFF7FEFF 		bl	__aeabi_dmul
 5700              	.LVL703:
 5701 0024 021C     		mov	r2, r0
 5702 0026 0B1C     		mov	r3, r1
 5703 0028 201C     		mov	r0, r4
 5704 002a 291C     		mov	r1, r5
 5705 002c FFF7FEFF 		bl	__aeabi_dadd
 5706              	.LVL704:
 5707 0030 FFF7FEFF 		bl	__aeabi_d2f
 5708              	.LVL705:
 5709 0034 3060     		str	r0, [r6]
 726:../Sources/main.c **** }
 5710              		.loc 1 726 0
 5711              		@ sp needed for prologue
 5712              	.LVL706:
 5713 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5714              	.L583:
 5715              		.align	3
 5716              	.L582:
 5717 0038 9A999999 		.word	-1717986918
 5718 003c 9999B93F 		.word	1069128089
 5719 0040 00000000 		.word	.LANCHOR18
 5720 0044 6666663F 		.word	1063675494
 5721              		.cfi_endproc
 5722              	.LFE15:
 5724              		.section	.text.servoValueAverage,"ax",%progbits
 5725              		.align	2
 5726              		.global	servoValueAverage
 5727              		.code	16
 5728              		.thumb_func
 5730              	servoValueAverage:
 5731              	.LFB16:
 729:../Sources/main.c **** {
 5732              		.loc 1 729 0
 5733              		.cfi_startproc
 5734              	.LVL707:
 5735 0000 70B5     		push	{r4, r5, r6, lr}
 5736              	.LCFI22:
 5737              		.cfi_def_cfa_offset 16
 5738              		.cfi_offset 4, -16
 5739              		.cfi_offset 5, -12
 5740              		.cfi_offset 6, -8
 5741              		.cfi_offset 14, -4
 5742              		.loc 1 731 0
 5743 0002 084C     		ldr	r4, .L585
 729:../Sources/main.c **** {
 5744              		.loc 1 729 0
 5745 0004 061C     		add	r6, r0, #0
 5746              		.loc 1 731 0
 5747 0006 0849     		ldr	r1, .L585+4
 5748 0008 2068     		ldr	r0, [r4]
 5749              	.LVL708:
 5750 000a FFF7FEFF 		bl	__aeabi_fmul
 5751              	.LVL709:
 5752 000e 0749     		ldr	r1, .L585+8
 5753 0010 051C     		add	r5, r0, #0
 5754 0012 301C     		add	r0, r6, #0
 5755 0014 FFF7FEFF 		bl	__aeabi_fmul
 5756              	.LVL710:
 5757 0018 011C     		add	r1, r0, #0
 5758 001a 281C     		add	r0, r5, #0
 5759 001c FFF7FEFF 		bl	__aeabi_fadd
 5760              	.LVL711:
 5761 0020 2060     		str	r0, [r4]
 732:../Sources/main.c **** 	return previousServoValue;
 733:../Sources/main.c **** }
 5762              		.loc 1 733 0
 5763              		@ sp needed for prologue
 5764              	.LVL712:
 5765 0022 70BD     		pop	{r4, r5, r6, pc}
 5766              	.L586:
 5767              		.align	2
 5768              	.L585:
 5769 0024 00000000 		.word	.LANCHOR15
 5770 0028 CDCC4C3F 		.word	1061997773
 5771 002c CCCC4C3E 		.word	1045220556
 5772              		.cfi_endproc
 5773              	.LFE16:
 5775              		.global	test_time
 5776              		.global	test_begin
 5777              		.global	stopline_enable
 5778              		.global	cross_section_enable
 5779              		.global	s_mode_enable
 5780              		.comm	camera_output,128,4
 5781              		.global	i
 5782              		.global	friction_correct
 5783              		.global	count
 5784              		.global	received_byte2
 5785              		.global	received_byte1
 5786              		.global	max_speed_percent
 5787              		.global	speedR
 5788              		.global	speedL
 5789              		.comm	incline_speed,4,4
 5790              		.global	batteryLevel
 5791              		.global	loop_begin
 5792              		.global	loop_time
 5793              		.section	.bss.count,"aw",%nobits
 5794              		.set	.LANCHOR8,. + 0
 5797              	count:
 5798 0000 00       		.space	1
 5799              		.section	.bss.stopDelayTime.6148,"aw",%nobits
 5800              		.align	2
 5801              		.set	.LANCHOR22,. + 0
 5804              	stopDelayTime.6148:
 5805 0000 00000000 		.space	4
 5806              		.section	.bss.totalIntensity.6145,"aw",%nobits
 5807              		.align	2
 5808              		.set	.LANCHOR17,. + 0
 5811              	totalIntensity.6145:
 5812 0000 00000000 		.space	4
 5813              		.section	.bss.previousTargetSpeed.6210,"aw",%nobits
 5814              		.align	2
 5815              		.set	.LANCHOR18,. + 0
 5818              	previousTargetSpeed.6210:
 5819 0000 00000000 		.space	4
 5820              		.section	.bss.loop_begin,"aw",%nobits
 5821              		.align	1
 5822              		.set	.LANCHOR23,. + 0
 5825              	loop_begin:
 5826 0000 0000     		.space	2
 5827              		.section	.bss.servoValue,"aw",%nobits
 5828              		.align	2
 5829              		.set	.LANCHOR5,. + 0
 5832              	servoValue:
 5833 0000 00000000 		.space	4
 5834              		.section	.bss.speedL,"aw",%nobits
 5835              		.align	2
 5836              		.set	.LANCHOR20,. + 0
 5839              	speedL:
 5840 0000 00000000 		.space	4
 5841              		.section	.bss.stopline_enable,"aw",%nobits
 5842              		.set	.LANCHOR16,. + 0
 5845              	stopline_enable:
 5846 0000 00       		.space	1
 5847              		.section	.bss.batteryLevel,"aw",%nobits
 5848              		.align	2
 5849              		.set	.LANCHOR2,. + 0
 5852              	batteryLevel:
 5853 0000 00000000 		.space	4
 5854              		.section	.bss.test_begin,"aw",%nobits
 5855              		.align	2
 5856              		.set	.LANCHOR0,. + 0
 5859              	test_begin:
 5860 0000 00000000 		.space	4
 5861              		.section	.bss.speedR,"aw",%nobits
 5862              		.align	2
 5863              		.set	.LANCHOR19,. + 0
 5866              	speedR:
 5867 0000 00000000 		.space	4
 5868              		.section	.bss.received_byte1,"aw",%nobits
 5869              		.set	.LANCHOR9,. + 0
 5872              	received_byte1:
 5873 0000 00       		.space	1
 5874              		.section	.bss.received_byte2,"aw",%nobits
 5875              		.set	.LANCHOR10,. + 0
 5878              	received_byte2:
 5879 0000 00       		.space	1
 5880              		.section	.rodata.str1.4,"aMS",%progbits,1
 5881              		.align	2
 5882              	.LC3:
 5883 0000 25582C00 		.ascii	"%X,\000"
 5884              	.LC5:
 5885 0004 0D0A00   		.ascii	"\015\012\000"
 5886 0007 00       		.section	.bss.test_time,"aw",%nobits
 5887              		.align	2
 5888              		.set	.LANCHOR1,. + 0
 5891              	test_time:
 5892 0000 00000000 		.space	4
 5893              		.section	.bss.i,"aw",%nobits
 5894              		.align	2
 5897              	i:
 5898 0000 00000000 		.space	4
 5899              		.section	.data.max_speed_percent,"aw",%progbits
 5900              		.align	2
 5901              		.set	.LANCHOR7,. + 0
 5904              	max_speed_percent:
 5905 0000 0000F041 		.word	1106247680
 5906              		.section	.bss.stoplineJustDetected,"aw",%nobits
 5907              		.set	.LANCHOR11,. + 0
 5910              	stoplineJustDetected:
 5911 0000 00       		.space	1
 5912              		.section	.bss.friction_correct,"aw",%nobits
 5913              		.align	2
 5916              	friction_correct:
 5917 0000 00000000 		.space	4
 5918              		.section	.bss.previousRaceLine.6206,"aw",%nobits
 5919              		.align	2
 5920              		.set	.LANCHOR14,. + 0
 5923              	previousRaceLine.6206:
 5924 0000 00000000 		.space	4
 5925              		.section	.bss.stoplineDetectedMoment.6147,"aw",%nobits
 5926              		.align	2
 5927              		.set	.LANCHOR21,. + 0
 5930              	stoplineDetectedMoment.6147:
 5931 0000 00000000 		.space	4
 5932              		.section	.data.cross_section_enable,"aw",%progbits
 5935              	cross_section_enable:
 5936 0000 01       		.byte	1
 5937              		.section	.bss.s_mode_enable,"aw",%nobits
 5938              		.set	.LANCHOR13,. + 0
 5941              	s_mode_enable:
 5942 0000 00       		.space	1
 5943              		.section	.bss.previousServoValue.6214,"aw",%nobits
 5944              		.align	2
 5945              		.set	.LANCHOR15,. + 0
 5948              	previousServoValue.6214:
 5949 0000 00000000 		.space	4
 5950              		.section	.bss.loop_time,"aw",%nobits
 5951              		.align	1
 5952              		.set	.LANCHOR6,. + 0
 5955              	loop_time:
 5956 0000 0000     		.space	2
 5957              		.section	.bss.steeringControlUpdate.6144,"aw",%nobits
 5958              		.set	.LANCHOR12,. + 0
 5961              	steeringControlUpdate.6144:
 5962 0000 00       		.space	1
 5963              		.section	.bss.targetSpeed,"aw",%nobits
 5964              		.align	2
 5965              		.set	.LANCHOR4,. + 0
 5968              	targetSpeed:
 5969 0000 00000000 		.space	4
 5970              		.section	.data.carState,"aw",%progbits
 5971              		.align	2
 5972              		.set	.LANCHOR3,. + 0
 5975              	carState:
 5976 0000 00       		.byte	0
 5977 0001 02       		.byte	2
 5978 0002 03       		.byte	3
 5979 0003 01       		.byte	1
 5980 0004 00       		.byte	0
 5981 0005 00       		.byte	0
 5982 0006 00       		.byte	0
 5983 0007 00       		.byte	0
 5984 0008 00       		.byte	0
 5985 0009 00       		.byte	0
 5986 000a 0000     		.space	2
 5987 000c 78       		.byte	120
 5988 000d 000000   		.text
 5989              	.Letext0:
 5990              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 5991              		.file 3 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 5992              		.file 4 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 5993              		.file 5 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 5994              		.file 6 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 5995              		.file 7 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 5996              		.file 8 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:18     .text.rawFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:23     .text.rawFocussingMode:00000000 rawFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:138    .text.rawFocussingMode:00000084 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:149    .text.derivativeFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:154    .text.derivativeFocussingMode:00000000 derivativeFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:295    .text.derivativeFocussingMode:000000a8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:309    .text.TFC_Init:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:314    .text.TFC_Init:00000000 TFC_Init
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:391    .text.TFC_Init:00000058 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:396    .text.TFC_Task:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:401    .text.TFC_Task:00000000 TFC_Task
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:424    .text.evaluateMotorState:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:429    .text.evaluateMotorState:00000000 evaluateMotorState
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:482    .text.evaluateMotorState:00000034 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:487    .text.evaluateUARTorSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:492    .text.evaluateUARTorSpeed:00000000 evaluateUARTorSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:589    .text.evaluateUARTorSpeed:0000007c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:596    .text.LEDfeedback:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:601    .text.LEDfeedback:00000000 LEDfeedback
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:840    .text.LEDfeedback:00000140 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:847    .text.servoAlignment:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:852    .text.servoAlignment:00000000 servoAlignment
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:884    .text.servoAlignment:00000018 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:900    .text.telemetrySendData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:905    .text.telemetrySendData:00000000 telemetrySendData
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:1454   .text.telemetrySendData:00000390 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:1463   .text.telemetrySendData:000003ac $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:1821   .text.telemetrySendData:00000608 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:1832   .text.telemetrySendData:0000062c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2330   .text.telemetrySendData:00000968 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2345   .text.telemetrySendData:0000099c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2780   .text.telemetrySendData:00000c70 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2791   .text.BluetoothSetSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2796   .text.BluetoothSetSpeed:00000000 BluetoothSetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2837   .text.BluetoothSetSpeed:00000020 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2843   .text.BluetoothSetLED:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2848   .text.BluetoothSetLED:00000000 BluetoothSetLED
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2986   .text.BluetoothSetLED:000000b4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2991   .text.telemetryReadData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:2996   .text.telemetryReadData:00000000 telemetryReadData
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3133   .text.telemetryReadData:000000a4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3150   .text.lineFollowingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3155   .text.lineFollowingMode:00000000 lineFollowingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3810   .text.lineFollowingMode:00000350 $d
                            *COM*:00000004 incline_speed
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3851   .text.lineFollowingMode:000003ec $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3906   .text.lineFollowingMode:00000430 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3915   .text.startup.main:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3920   .text.startup.main:00000000 main
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:4646   .text.startup.main:00000384 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:4681   .text.startup.main:00000408 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5402   .text.startup.main:000007a8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5433   .text.startup.main:00000818 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5516   .text.startup.main:0000087c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5527   .text.processRaceLine:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5532   .text.processRaceLine:00000000 processRaceLine
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5651   .text.processRaceLine:00000090 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5661   .text.targetSpeedAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5666   .text.targetSpeedAverage:00000000 targetSpeedAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5717   .text.targetSpeedAverage:00000038 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5725   .text.servoValueAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5730   .text.servoValueAverage:00000000 servoValueAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5769   .text.servoValueAverage:00000024 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5891   .bss.test_time:00000000 test_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5859   .bss.test_begin:00000000 test_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5845   .bss.stopline_enable:00000000 stopline_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5935   .data.cross_section_enable:00000000 cross_section_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5941   .bss.s_mode_enable:00000000 s_mode_enable
                            *COM*:00000080 camera_output
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5897   .bss.i:00000000 i
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5916   .bss.friction_correct:00000000 friction_correct
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5797   .bss.count:00000000 count
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5878   .bss.received_byte2:00000000 received_byte2
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5872   .bss.received_byte1:00000000 received_byte1
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5904   .data.max_speed_percent:00000000 max_speed_percent
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5866   .bss.speedR:00000000 speedR
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5839   .bss.speedL:00000000 speedL
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5852   .bss.batteryLevel:00000000 batteryLevel
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5825   .bss.loop_begin:00000000 loop_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5955   .bss.loop_time:00000000 loop_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5798   .bss.count:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5800   .bss.stopDelayTime.6148:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5804   .bss.stopDelayTime.6148:00000000 stopDelayTime.6148
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5807   .bss.totalIntensity.6145:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5811   .bss.totalIntensity.6145:00000000 totalIntensity.6145
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5814   .bss.previousTargetSpeed.6210:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5818   .bss.previousTargetSpeed.6210:00000000 previousTargetSpeed.6210
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5821   .bss.loop_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5828   .bss.servoValue:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5832   .bss.servoValue:00000000 servoValue
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5835   .bss.speedL:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5846   .bss.stopline_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5848   .bss.batteryLevel:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5855   .bss.test_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5862   .bss.speedR:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5873   .bss.received_byte1:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5879   .bss.received_byte2:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5881   .rodata.str1.4:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5887   .bss.test_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5894   .bss.i:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5900   .data.max_speed_percent:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5910   .bss.stoplineJustDetected:00000000 stoplineJustDetected
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5911   .bss.stoplineJustDetected:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5913   .bss.friction_correct:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5919   .bss.previousRaceLine.6206:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5923   .bss.previousRaceLine.6206:00000000 previousRaceLine.6206
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5926   .bss.stoplineDetectedMoment.6147:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5930   .bss.stoplineDetectedMoment.6147:00000000 stoplineDetectedMoment.6147
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5942   .bss.s_mode_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5944   .bss.previousServoValue.6214:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5948   .bss.previousServoValue.6214:00000000 previousServoValue.6214
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5951   .bss.loop_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5961   .bss.steeringControlUpdate.6144:00000000 steeringControlUpdate.6144
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5962   .bss.steeringControlUpdate.6144:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5964   .bss.targetSpeed:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5968   .bss.targetSpeed:00000000 targetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5971   .data.carState:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:5975   .data.carState:00000000 carState
                     .debug_frame:00000010 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccbRn9Kx.s:3914   .text.lineFollowingMode:0000043c $t

UNDEFINED SYMBOLS
TFC_SetServo
TFC_SetMotorPWM
getTotalIntensity
calculateNewExposure
TFC_SetLineScanExposureTime
Qprintf
TFC_Ticker
LineScanImage0
SDA_SERIAL_OUTGOING_QUEUE
edgeDetection
TFC_InitClock
TFC_InitSysTick
TFC_InitGPIO
TFC_InitServos
TFC_InitMotorPWM
TFC_InitADCs
TFC_InitLineScanCamera
TFC_InitUARTs
TFC_InitTerminal
TFC_InitSpeedSensor
preloadProbabilityTables
generateKernel
TFC_UART_Process
TFC_ProcessTerminal
TFC_GetDIP_Switch
enable_irq
disable_irq
__aeabi_fcmpgt
__aeabi_fmul
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_f2iz
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dadd
__aeabi_d2iz
__aeabi_dsub
__aeabi_i2f
uart_putchar
getSpeed
TFC_GetMotorPWM
TFC_ReadMotorCurrent
newExposure
__aeabi_ui2f
uart_getchar_present
uart_getchar
__aeabi_fadd
__aeabi_f2uiz
__aeabi_dmul
__aeabi_d2f
__aeabi_fdiv
__aeabi_fcmplt
TFC_GetPush_Button
getDesiredServoValue
findLine
TFC_ReadBatteryVoltage
findStop
getRadiusRoot
getDesiredSpeed
getActiveDifferentialModifier
isANewmeasurementAvailable
getDesiredMotorPWM
LineScanImage1
