   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.rawFocussingMode,"ax",%progbits
  18              		.align	2
  19              		.global	rawFocussingMode
  20              		.code	16
  21              		.thumb_func
  23              	rawFocussingMode:
  24              	.LFB2:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** 
   2:../Sources/main.c **** /*************************************
   3:../Sources/main.c **** //// Shield Interfaces Description /////////////////
   4:../Sources/main.c **** 
   5:../Sources/main.c **** //// DIP /////////////////
   6:../Sources/main.c **** 
   7:../Sources/main.c **** Standard Mode:
   8:../Sources/main.c **** 
   9:../Sources/main.c **** 1	2	3	4
  10:../Sources/main.c **** X	0  	0	X	Raw Focusing Mode
  11:../Sources/main.c **** X	1	0	X	Servo Alignment
  12:../Sources/main.c **** X	0	1	X	Derivative Focusing Mode
  13:../Sources/main.c **** X	1	1	X	Line Following Mode
  14:../Sources/main.c **** Pin 1:	1 HBRIDGE enabled, RunningState;	0 HBRIDGE DISSABLED;
  15:../Sources/main.c **** Pin 4:	0 SingleSpeed_SingleUart;	1 DualSpeed_NoUart
  16:../Sources/main.c **** 
  17:../Sources/main.c **** Race Mode:
  18:../Sources/main.c **** 
  19:../Sources/main.c **** Pin 1: HBRIDGE enabled
  20:../Sources/main.c **** Pin 2: S-Mode enabled
  21:../Sources/main.c **** Pin 3: Cross Detection enabled
  22:../Sources/main.c **** Pin 4: Stopline Detection enabled
  23:../Sources/main.c **** 
  24:../Sources/main.c **** 
  25:../Sources/main.c **** //// LEDs /////////////////		0 LED_ON	x LED_OFF
  26:../Sources/main.c **** 
  27:../Sources/main.c **** 0xxx	Line lost
  28:../Sources/main.c **** x0xx	Line temporarily lost
  29:../Sources/main.c **** xx0x	Right edge following
  30:../Sources/main.c **** xxx0	Left edge following
  31:../Sources/main.c **** xx00	Double line following
  32:../Sources/main.c **** 0xx0	Cross Section detected
  33:../Sources/main.c **** 00xx	Stop Line detected
  34:../Sources/main.c **** x00x	S-Mode active
  35:../Sources/main.c **** 0000	Low battery
  36:../Sources/main.c **** 
  37:../Sources/main.c **** 
  38:../Sources/main.c **** //// Pots ///////////
  39:../Sources/main.c **** 
  40:../Sources/main.c **** Standard mode:
  41:../Sources/main.c **** Pot_1	Max Speed percent
  42:../Sources/main.c **** Pot_2	No Function
  43:../Sources/main.c **** 
  44:../Sources/main.c **** Race mode:
  45:../Sources/main.c **** Pot_1	Max Speed percent
  46:../Sources/main.c **** Pot_2	Friction Coefficient Correction - rotate clockwise to decrease friction coefficient
  47:../Sources/main.c **** 
  48:../Sources/main.c **** 
  49:../Sources/main.c **** //// Push Buttons ///////////
  50:../Sources/main.c **** 
  51:../Sources/main.c **** Switch_1	Stop Line reset
  52:../Sources/main.c **** 
  53:../Sources/main.c **** **************************************/
  54:../Sources/main.c **** 
  55:../Sources/main.c **** #include "main.h"
  56:../Sources/main.c **** 
  57:../Sources/main.c **** #define CHANNEL_0 0
  58:../Sources/main.c **** #define CHANNEL_1 1
  59:../Sources/main.c **** #define PUSH_BUTTON_1 1
  60:../Sources/main.c **** #define PUSH_BUTTON_2 2
  61:../Sources/main.c **** 
  62:../Sources/main.c **** 
  63:../Sources/main.c **** 
  64:../Sources/main.c **** #define BLUETOOTH_FLAG	-128
  65:../Sources/main.c **** 
  66:../Sources/main.c **** #define FLOAT_TO_CHAR(x)	(x >= 0.0) ? (signed char)(x + 0.5) : (signed char)(x - 0.5)		
  67:../Sources/main.c **** #define LIMIT_255(x)		(x <= 254.5f && x >= 0.0f && !(x >= 127.5f && x <= 128.5f)) ? x : ((x > 255.0
  68:../Sources/main.c **** #define LIMIT_ABS_127(x)	(x <= 126.9f && x >= -126.9f) ? x : ((x > 126.9f) ? 126.9f : -126.9f)
  69:../Sources/main.c **** 
  70:../Sources/main.c **** #define LINE_SCAN_IMAGE(x)	LINE_SCAN_IMAGE_EXAPND(x)	// Second level of indirection needed to expan
  71:../Sources/main.c **** #define LINE_SCAN_IMAGE_EXAPND(x)	LineScanImage##x
  72:../Sources/main.c **** 
  73:../Sources/main.c **** // carState struct initialization - keeps the main parameters of the car state
  74:../Sources/main.c **** static carState_s carState =
  75:../Sources/main.c **** {   .motorState = FORCED_DISABLED, .UARTSpeedState = UNDEFINED, 
  76:../Sources/main.c ****     .lineDetectionState = LINE_LOST, .lineScanState = NO_NEW_LINESCAN_IMAGE, 
  77:../Sources/main.c **** 	.detectedType = NONE, .edge = NO_EDGE, .crossSection = NO, .crossSectionPosition = NO_CROSS,
  78:../Sources/main.c **** 	.lineDistance = STRAIGHT_DISTANCE_DEFAULT, .carMode = NORMAL_MODE, .sMode = S_MODE_OFF};
  79:../Sources/main.c **** 
  80:../Sources/main.c **** uint16_t loop_time = 0, loop_begin = 0;
  81:../Sources/main.c **** float batteryLevel = 0;
  82:../Sources/main.c **** static float targetSpeed = 0;
  83:../Sources/main.c **** float incline_speed;
  84:../Sources/main.c **** float speedL = 0;
  85:../Sources/main.c **** float speedR = 0;
  86:../Sources/main.c **** static float servoValue = 0;
  87:../Sources/main.c **** extern int32_t newExposure;
  88:../Sources/main.c **** float max_speed_percent = 50;
  89:../Sources/main.c **** uint8_t received_byte1 = 0; //received byte from bluetooth 0 to 255
  90:../Sources/main.c **** uint8_t received_byte2 = 0;
  91:../Sources/main.c **** uint8_t count = 0; //bluetooth count
  92:../Sources/main.c **** static uint8_t stoplineJustDetected = 0;
  93:../Sources/main.c **** float friction_correct = 0;
  94:../Sources/main.c **** 
  95:../Sources/main.c **** #ifdef S_MODE_ENABLE
  96:../Sources/main.c **** uint8_t s_mode_enable = 1;
  97:../Sources/main.c **** #else
  98:../Sources/main.c **** uint8_t s_mode_enable = 0;
  99:../Sources/main.c **** #endif
 100:../Sources/main.c **** 
 101:../Sources/main.c **** #ifdef CROSS_DETECTION_ENABLE
 102:../Sources/main.c **** uint8_t cross_section_enable = 1;
 103:../Sources/main.c **** #else
 104:../Sources/main.c **** uint8_t cross_section_enable = 0;
 105:../Sources/main.c **** #endif
 106:../Sources/main.c **** 
 107:../Sources/main.c **** #ifdef STOPLINE_ENABLE
 108:../Sources/main.c **** uint8_t stopline_enable = 1;
 109:../Sources/main.c **** #else
 110:../Sources/main.c **** uint8_t stopline_enable = 0;
 111:../Sources/main.c **** #endif
 112:../Sources/main.c **** 
 113:../Sources/main.c **** // Test timer ////////////////////
 114:../Sources/main.c **** uint32_t test_begin = 0;
 115:../Sources/main.c **** uint32_t test_time  = 0;
 116:../Sources/main.c **** //////////////////////////////////
 117:../Sources/main.c **** 
 118:../Sources/main.c **** 
 119:../Sources/main.c **** int main(void)
 120:../Sources/main.c **** {
 121:../Sources/main.c **** 	TFC_Init(&carState);
 122:../Sources/main.c **** 	
 123:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 124:../Sources/main.c **** 		Init_I2C();
 125:../Sources/main.c **** 		Init_MMA8451Q();
 126:../Sources/main.c **** 	#endif
 127:../Sources/main.c **** 		
 128:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 129:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 130:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 131:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);		
 132:../Sources/main.c **** 		
 133:../Sources/main.c **** 	while (1)
 134:../Sources/main.c **** 	{
 135:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 136:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 137:../Sources/main.c **** 			TFC_Task();
 138:../Sources/main.c **** 		#endif
 139:../Sources/main.c **** 		
 140:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS	
 141:../Sources/main.c **** 			evaluateUARTorSpeed(&carState);		// Checks DIP switch
 142:../Sources/main.c **** 		#endif
 143:../Sources/main.c **** 		
 144:../Sources/main.c **** 		evaluateMotorState(&carState);		// Checks DIP switch
 145:../Sources/main.c **** 		
 146:../Sources/main.c **** 		LEDfeedback(&carState);				// Gives feedback for car state by the 4 LEDs
 147:../Sources/main.c **** 		
 148:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 149:../Sources/main.c **** 		
 150:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS
 151:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 152:../Sources/main.c **** 			{
 153:../Sources/main.c **** 			default:
 154:../Sources/main.c **** 			case 0:
 155:../Sources/main.c **** 				rawFocussingMode(&carState);
 156:../Sources/main.c **** 				break;
 157:../Sources/main.c **** 	
 158:../Sources/main.c **** 			case 1:
 159:../Sources/main.c **** 				servoAlignment();
 160:../Sources/main.c **** 				break;
 161:../Sources/main.c **** 	
 162:../Sources/main.c **** 			case 2:
 163:../Sources/main.c **** 				derivativeFocussingMode(&carState);
 164:../Sources/main.c **** 				break;
 165:../Sources/main.c **** 	
 166:../Sources/main.c **** 			case 3:
 167:../Sources/main.c **** 				lineFollowingMode(&carState);
 168:../Sources/main.c **** 				break;
 169:../Sources/main.c **** 			}
 170:../Sources/main.c **** 		#else
 171:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 1) & 0x01) == 1)
 172:../Sources/main.c **** 				s_mode_enable = 1;
 173:../Sources/main.c **** 			else
 174:../Sources/main.c **** 				s_mode_enable = 0;
 175:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 2) & 0x01) == 1)
 176:../Sources/main.c **** 				cross_section_enable = 1;
 177:../Sources/main.c **** 			else
 178:../Sources/main.c **** 				cross_section_enable = 0;
 179:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 3) & 0x01) == 1)
 180:../Sources/main.c **** 			{
 181:../Sources/main.c **** 				stopline_enable = 1;
 182:../Sources/main.c **** 			}
 183:../Sources/main.c **** 			else
 184:../Sources/main.c **** 			{
 185:../Sources/main.c **** 				stopline_enable = 0;
 186:../Sources/main.c **** 			}
 187:../Sources/main.c **** 			
 188:../Sources/main.c **** 			friction_correct = ((0 + 1.0f)/2)*MAX_FRICTION_CORRECT;
 189:../Sources/main.c **** 			
 190:../Sources/main.c **** 			lineFollowingMode(&carState);
 191:../Sources/main.c **** 		#endif
 192:../Sources/main.c **** 		
 193:../Sources/main.c **** 		
 194:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 195:../Sources/main.c **** 	}
 196:../Sources/main.c **** 	
 197:../Sources/main.c **** 	return 0;
 198:../Sources/main.c **** }
 199:../Sources/main.c **** 
 200:../Sources/main.c **** 
 201:../Sources/main.c **** void lineFollowingMode(carState_s* carState)
 202:../Sources/main.c **** {
 203:../Sources/main.c **** 	static lineScanState_t steeringControlUpdate;
 204:../Sources/main.c **** 	static uint32_t totalIntensity = 0;
 205:../Sources/main.c **** 	
 206:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 207:../Sources/main.c **** 	{
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 210:../Sources/main.c **** 	}
 211:../Sources/main.c **** 
 212:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 213:../Sources/main.c **** 	{
 214:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 215:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 216:../Sources/main.c **** 	}
 217:../Sources/main.c **** 	
 218:../Sources/main.c **** 	#ifdef TELEMETRY_ENABLE
 219:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 220:../Sources/main.c **** 	{
 221:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 222:../Sources/main.c **** 		telemetrySendData();
 223:../Sources/main.c **** 		telemetryReadData();
 224:../Sources/main.c **** 	}
 225:../Sources/main.c **** 	#endif
 226:../Sources/main.c **** 	
 227:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 228:../Sources/main.c **** 		if(TFC_Ticker[8]>=1000){
 229:../Sources/main.c **** 			TFC_Ticker[8]=0;
 230:../Sources/main.c **** 			//accel_z=getZAcc();
 231:../Sources/main.c **** 			if(getZAcc<-1){
 232:../Sources/main.c **** 				incline_speed=max_speed_percent-25;
 233:../Sources/main.c **** 			}
 234:../Sources/main.c **** 			else{
 235:../Sources/main.c **** 				incline_speed=max_speed_percent;
 236:../Sources/main.c **** 				}
 237:../Sources/main.c **** 		}
 238:../Sources/main.c **** 	#endif
 239:../Sources/main.c **** 	#ifndef ACCELEROMETER_ENABLE
 240:../Sources/main.c **** 		incline_speed=max_speed_percent;
 241:../Sources/main.c **** 	#endif
 242:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 243:../Sources/main.c **** 	{
 244:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 245:../Sources/main.c **** 	//	test_begin = TFC_Ticker[5];
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 247:../Sources/main.c **** 	//	test_time = TFC_Ticker[5] - test_begin;
 248:../Sources/main.c **** 		processRaceLine(carState);
 249:../Sources/main.c **** 	}
 250:../Sources/main.c **** 		
 251:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 252:../Sources/main.c **** 	{
 253:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 255:../Sources/main.c **** 		
 256:../Sources/main.c **** 		//to make up for vehicle not turning left enough
 257:../Sources/main.c **** 		if(servoValue>0){
 258:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 259:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 260:../Sources/main.c **** 					{
 261:../Sources/main.c **** 						servoValue=STEERING_LIMIT_UPPER;
 262:../Sources/main.c **** 					}
 263:../Sources/main.c **** 				
 264:../Sources/main.c **** 				}
 265:../Sources/main.c **** 		
 266:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 267:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 268:../Sources/main.c **** 	}
 269:../Sources/main.c **** 
 270:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 271:../Sources/main.c **** 	{
 272:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 273:../Sources/main.c **** 		if(stopline_enable == 1)
 274:../Sources/main.c **** 		{
 275:../Sources/main.c **** 			findStop(carState);
 276:../Sources/main.c **** 		}
 277:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 278:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 279:../Sources/main.c **** 	}
 280:../Sources/main.c **** 
 281:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 282:../Sources/main.c **** 	{
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 284:../Sources/main.c **** 		
 285:../Sources/main.c **** 		float activeDifferentialModifier[] =
 286:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 287:../Sources/main.c **** 		
 288:../Sources/main.c **** 		// Speed measurement depending on the particular mode which is used
 289:../Sources/main.c **** 		#if (SPEED_DETECTION_MODE == 0)
 290:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 291:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 292:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 1)
 293:../Sources/main.c **** 			speedR = (getSpeed(CHANNEL_0) + getSpeed(CHANNEL_1))/2;
 294:../Sources/main.c **** 			speedL = speedR;
 295:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 2)
 296:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 297:../Sources/main.c **** 			speedL = speedR;
 298:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 3)
 299:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 300:../Sources/main.c **** 			speedR = speedL;
 301:../Sources/main.c **** 		#endif
 302:../Sources/main.c **** 
 303:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 304:../Sources/main.c **** 		{
 305:../Sources/main.c **** 			
 306:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 307:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 308:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 309:../Sources/main.c **** 		}
 310:../Sources/main.c **** 		else if (carState->UARTSpeedState == SINGLE_SPEED_SINGLE_UART)
 311:../Sources/main.c **** 		{
 312:../Sources/main.c **** 			// Missing setup - Normally this mode is not used
 313:../Sources/main.c **** 		}
 314:../Sources/main.c **** 	}
 315:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 316:../Sources/main.c **** 	{
 317:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 318:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 319:../Sources/main.c **** 	}
 320:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 321:../Sources/main.c **** 	{
 322:../Sources/main.c **** 		if(stopline_enable == 1)
 323:../Sources/main.c **** 		{	
 324:../Sources/main.c **** 			static uint32_t stoplineDetectedMoment = 0;
 325:../Sources/main.c **** 			static uint32_t stopDelayTime = 0;
 326:../Sources/main.c **** 			
 327:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 328:../Sources/main.c **** 			{
 329:../Sources/main.c **** 				stoplineJustDetected = 1;
 330:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 331:../Sources/main.c **** 				
 332:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 333:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 334:../Sources/main.c **** 				
 335:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 336:../Sources/main.c **** 				{
 337:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 338:../Sources/main.c **** 				}
 339:../Sources/main.c **** 				
 340:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 341:../Sources/main.c **** 			}
 342:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 343:../Sources/main.c **** 			{
 344:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 345:../Sources/main.c **** 				
 346:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 347:../Sources/main.c **** 				{
 348:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 349:../Sources/main.c **** 				}
 350:../Sources/main.c **** 				else
 351:../Sources/main.c **** 				{
 352:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 353:../Sources/main.c **** 				}
 354:../Sources/main.c **** 			}
 355:../Sources/main.c **** 		}	
 356:../Sources/main.c **** 	}
 357:../Sources/main.c **** }
 358:../Sources/main.c **** 
 359:../Sources/main.c **** void rawFocussingMode(carState_s* carState)
 360:../Sources/main.c **** {
  26              		.loc 1 360 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
 361:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
  37              		.loc 1 361 0
  38 0002 204B     		ldr	r3, .L8
 360:../Sources/main.c **** {
  39              		.loc 1 360 0
  40 0004 4746     		mov	r7, r8
  41              		.loc 1 361 0
  42 0006 1A68     		ldr	r2, [r3]
 360:../Sources/main.c **** {
  43              		.loc 1 360 0
  44 0008 80B4     		push	{r7}
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47              		.cfi_offset 8, -24
  48              		.loc 1 361 0
  49 000a C72A     		cmp	r2, #199
  50 000c 02D9     		bls	.L1
  51              		.loc 1 361 0 is_stmt 0
  52 000e C178     		ldrb	r1, [r0, #3]
  53 0010 0029     		cmp	r1, #0
  54 0012 02D0     		beq	.L7
  55              	.LVL1:
  56              	.L1:
 362:../Sources/main.c **** 	{
 363:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 364:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 365:../Sources/main.c **** 
 366:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 367:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 368:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 369:../Sources/main.c **** 
 370:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 371:../Sources/main.c **** 		
 372:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 373:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 374:../Sources/main.c **** 			{
 375:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 376:../Sources/main.c **** 			}
 377:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 378:../Sources/main.c **** 		#endif		
 379:../Sources/main.c **** 	}
 380:../Sources/main.c **** }
  57              		.loc 1 380 0 is_stmt 1
  58              		@ sp needed for prologue
  59 0014 04BC     		pop	{r2}
  60 0016 9046     		mov	r8, r2
  61 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
  62              	.LVL2:
  63              	.L7:
 364:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  64              		.loc 1 364 0
  65 001a 0124     		mov	r4, #1
 363:../Sources/main.c **** 		TFC_Ticker[0] = 0;
  66              		.loc 1 363 0
  67 001c 1960     		str	r1, [r3]
 364:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  68              		.loc 1 364 0
  69 001e C470     		strb	r4, [r0, #3]
 366:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
  70              		.loc 1 366 0
  71 0020 1949     		ldr	r1, .L8+4
  72 0022 0020     		mov	r0, #0
  73              	.LVL3:
  74 0024 FFF7FEFF 		bl	TFC_SetServo
  75              	.LVL4:
 367:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  76              		.loc 1 367 0
  77 0028 184E     		ldr	r6, .L8+8
  78 002a 8020     		mov	r0, #128
  79 002c 8503     		lsl	r5, r0, #14
 368:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  80              		.loc 1 368 0
  81 002e 0020     		mov	r0, #0
  82 0030 011C     		add	r1, r0, #0
 367:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  83              		.loc 1 367 0
  84 0032 B560     		str	r5, [r6, #8]
 368:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  85              		.loc 1 368 0
  86 0034 FFF7FEFF 		bl	TFC_SetMotorPWM
  87              	.LVL5:
 370:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
  88              		.loc 1 370 0
  89 0038 154E     		ldr	r6, .L8+12
  90 003a 0024     		mov	r4, #0
  91 003c 3068     		ldr	r0, [r6]
  92 003e FFF7FEFF 		bl	getTotalIntensity
  93              	.LVL6:
  94 0042 1449     		ldr	r1, .L8+16
  95 0044 FFF7FEFF 		bl	calculateNewExposure
  96              	.LVL7:
  97 0048 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
  98              	.LVL8:
  99              	.LBB23:
 373:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 100              		.loc 1 373 0
 101 004c 8023     		mov	r3, #128
 102 004e 5A00     		lsl	r2, r3, #1
 103 0050 114D     		ldr	r5, .L8+20
 104 0052 124F     		ldr	r7, .L8+24
 105 0054 9046     		mov	r8, r2
 106              	.LVL9:
 107              	.L3:
 375:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 108              		.loc 1 375 0
 109 0056 3168     		ldr	r1, [r6]
 110 0058 0819     		add	r0, r1, r4
 111 005a 0288     		ldrh	r2, [r0]
 112 005c 391C     		mov	r1, r7
 113 005e 281C     		mov	r0, r5
 114 0060 FFF7FEFF 		bl	Qprintf
 115              	.LVL10:
 116 0064 3368     		ldr	r3, [r6]
 117 0066 0234     		add	r4, r4, #2
 118 0068 1A19     		add	r2, r3, r4
 119 006a 1288     		ldrh	r2, [r2]
 120 006c 281C     		mov	r0, r5
 121 006e 391C     		mov	r1, r7
 122 0070 0234     		add	r4, r4, #2
 123 0072 FFF7FEFF 		bl	Qprintf
 124              	.LVL11:
 373:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 125              		.loc 1 373 0
 126 0076 4445     		cmp	r4, r8
 127 0078 EDD1     		bne	.L3
 128              	.LBE23:
 377:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 129              		.loc 1 377 0
 130 007a 281C     		mov	r0, r5
 131 007c 0849     		ldr	r1, .L8+28
 132 007e FFF7FEFF 		bl	Qprintf
 133              	.LVL12:
 134 0082 C7E7     		b	.L1
 135              	.L9:
 136              		.align	2
 137              	.L8:
 138 0084 00000000 		.word	TFC_Ticker
 139 0088 CDCC4C3D 		.word	1028443341
 140 008c 00F10F40 		.word	1074786560
 141 0090 00000000 		.word	LineScanImage0
 142 0094 E0930400 		.word	300000
 143 0098 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 144 009c 00000000 		.word	.LC3
 145 00a0 04000000 		.word	.LC5
 146              		.cfi_endproc
 147              	.LFE2:
 149              		.section	.text.derivativeFocussingMode,"ax",%progbits
 150              		.align	2
 151              		.global	derivativeFocussingMode
 152              		.code	16
 153              		.thumb_func
 155              	derivativeFocussingMode:
 156              	.LFB3:
 381:../Sources/main.c **** 
 382:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 383:../Sources/main.c **** {
 157              		.loc 1 383 0
 158              		.cfi_startproc
 159              	.LVL13:
 160 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 20
 163              		.cfi_offset 4, -20
 164              		.cfi_offset 5, -16
 165              		.cfi_offset 6, -12
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 4746     		mov	r7, r8
 169 0004 80B4     		push	{r7}
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 24
 172              		.cfi_offset 8, -24
 384:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 173              		.loc 1 384 0
 174 0006 284C     		ldr	r4, .L16
 383:../Sources/main.c **** {
 175              		.loc 1 383 0
 176 0008 C0B0     		sub	sp, sp, #256
 177              	.LCFI4:
 178              		.cfi_def_cfa_offset 280
 179              		.loc 1 384 0
 180 000a 2368     		ldr	r3, [r4]
 181 000c C72B     		cmp	r3, #199
 182 000e 02D9     		bls	.L10
 183              		.loc 1 384 0 is_stmt 0
 184 0010 C178     		ldrb	r1, [r0, #3]
 185 0012 0029     		cmp	r1, #0
 186 0014 03D0     		beq	.L15
 187              	.LVL14:
 188              	.L10:
 385:../Sources/main.c **** 	{
 386:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 387:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 388:../Sources/main.c **** 
 389:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 390:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 391:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 392:../Sources/main.c **** 
 393:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 394:../Sources/main.c **** 		int16_t temp[128];
 395:../Sources/main.c **** 		
 396:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 397:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 398:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 399:../Sources/main.c **** 		
 400:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 401:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 402:../Sources/main.c **** 			{
 403:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 404:../Sources/main.c **** 			}
 405:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 406:../Sources/main.c **** 		#endif	
 407:../Sources/main.c **** 	}
 408:../Sources/main.c **** }
 189              		.loc 1 408 0 is_stmt 1
 190 0016 40B0     		add	sp, sp, #256
 191              		@ sp needed for prologue
 192 0018 04BC     		pop	{r2}
 193 001a 9046     		mov	r8, r2
 194 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 195              	.LVL15:
 196              	.L15:
 197              	.LBB24:
 387:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 198              		.loc 1 387 0
 199 001e 0122     		mov	r2, #1
 386:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 200              		.loc 1 386 0
 201 0020 2160     		str	r1, [r4]
 387:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 202              		.loc 1 387 0
 203 0022 C270     		strb	r2, [r0, #3]
 389:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 204              		.loc 1 389 0
 205 0024 2149     		ldr	r1, .L16+4
 206 0026 0020     		mov	r0, #0
 207              	.LVL16:
 208 0028 FFF7FEFF 		bl	TFC_SetServo
 209              	.LVL17:
 390:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 210              		.loc 1 390 0
 211 002c 204E     		ldr	r6, .L16+8
 212 002e 8020     		mov	r0, #128
 213 0030 8503     		lsl	r5, r0, #14
 391:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 214              		.loc 1 391 0
 215 0032 0020     		mov	r0, #0
 216 0034 011C     		add	r1, r0, #0
 390:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 217              		.loc 1 390 0
 218 0036 B560     		str	r5, [r6, #8]
 391:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 219              		.loc 1 391 0
 220 0038 FFF7FEFF 		bl	TFC_SetMotorPWM
 221              	.LVL18:
 393:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 222              		.loc 1 393 0
 223 003c 1D4F     		ldr	r7, .L16+12
 382:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 224              		.loc 1 382 0
 225 003e 40AE     		add	r6, sp, #256
 393:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 226              		.loc 1 393 0
 227 0040 3868     		ldr	r0, [r7]
 228 0042 FFF7FEFF 		bl	getTotalIntensity
 229              	.LVL19:
 230 0046 1C49     		ldr	r1, .L16+16
 231 0048 FFF7FEFF 		bl	calculateNewExposure
 232              	.LVL20:
 233 004c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 234              	.LVL21:
 396:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 235              		.loc 1 396 0
 236 0050 1A4D     		ldr	r5, .L16+20
 237 0052 6369     		ldr	r3, [r4, #20]
 397:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 238              		.loc 1 397 0
 239 0054 3868     		ldr	r0, [r7]
 240 0056 6946     		mov	r1, sp
 241 0058 8022     		mov	r2, #128
 396:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 242              		.loc 1 396 0
 243 005a 2B60     		str	r3, [r5]
 397:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 244              		.loc 1 397 0
 245 005c FFF7FEFF 		bl	edgeDetection
 246              	.LVL22:
 398:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 247              		.loc 1 398 0
 248 0060 6469     		ldr	r4, [r4, #20]
 249 0062 2968     		ldr	r1, [r5]
 250 0064 1648     		ldr	r0, .L16+24
 251 0066 621A     		sub	r2, r4, r1
 382:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 252              		.loc 1 382 0
 253 0068 B046     		mov	r8, r6
 254 006a 164D     		ldr	r5, .L16+28
 255 006c 164E     		ldr	r6, .L16+32
 398:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 256              		.loc 1 398 0
 257 006e 0260     		str	r2, [r0]
 258              	.LVL23:
 259 0070 6C46     		mov	r4, sp
 260              	.LVL24:
 261              	.L12:
 262              	.LBB25:
 403:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 263              		.loc 1 403 0
 264 0072 0023     		mov	r3, #0
 265 0074 E75E     		ldrsh	r7, [r4, r3]
 266 0076 311C     		mov	r1, r6
 267 0078 FB17     		asr	r3, r7, #31
 268 007a FA18     		add	r2, r7, r3
 269 007c 5A40     		eor	r2, r3
 270 007e 281C     		mov	r0, r5
 271 0080 FFF7FEFF 		bl	Qprintf
 272              	.LVL25:
 273 0084 0223     		mov	r3, #2
 274 0086 E15E     		ldrsh	r1, [r4, r3]
 275 0088 0434     		add	r4, r4, #4
 276 008a C817     		asr	r0, r1, #31
 277 008c 0A18     		add	r2, r1, r0
 278 008e 4240     		eor	r2, r0
 279 0090 311C     		mov	r1, r6
 280 0092 281C     		mov	r0, r5
 281 0094 FFF7FEFF 		bl	Qprintf
 282              	.LVL26:
 401:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 283              		.loc 1 401 0
 284 0098 4445     		cmp	r4, r8
 285 009a EAD1     		bne	.L12
 286              	.LBE25:
 405:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 287              		.loc 1 405 0
 288 009c 281C     		mov	r0, r5
 289 009e 0B49     		ldr	r1, .L16+36
 290 00a0 FFF7FEFF 		bl	Qprintf
 291              	.LVL27:
 292 00a4 B7E7     		b	.L10
 293              	.L17:
 294 00a6 C046     		.align	2
 295              	.L16:
 296 00a8 00000000 		.word	TFC_Ticker
 297 00ac CDCC4C3D 		.word	1028443341
 298 00b0 00F10F40 		.word	1074786560
 299 00b4 00000000 		.word	LineScanImage0
 300 00b8 E0930400 		.word	300000
 301 00bc 00000000 		.word	.LANCHOR0
 302 00c0 00000000 		.word	.LANCHOR1
 303 00c4 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 304 00c8 00000000 		.word	.LC3
 305 00cc 04000000 		.word	.LC5
 306              	.LBE24:
 307              		.cfi_endproc
 308              	.LFE3:
 310              		.section	.text.TFC_Init,"ax",%progbits
 311              		.align	2
 312              		.global	TFC_Init
 313              		.code	16
 314              		.thumb_func
 316              	TFC_Init:
 317              	.LFB4:
 409:../Sources/main.c **** 
 410:../Sources/main.c **** 
 411:../Sources/main.c **** void TFC_Init(carState_s* carState)
 412:../Sources/main.c **** {
 318              		.loc 1 412 0
 319              		.cfi_startproc
 320              	.LVL28:
 321 0000 10B5     		push	{r4, lr}
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 4, -8
 325              		.cfi_offset 14, -4
 326              		.loc 1 412 0
 327 0002 041C     		mov	r4, r0
 413:../Sources/main.c **** 	TFC_InitClock();
 328              		.loc 1 413 0
 329 0004 FFF7FEFF 		bl	TFC_InitClock
 330              	.LVL29:
 414:../Sources/main.c **** 	TFC_InitSysTick();
 331              		.loc 1 414 0
 332 0008 FFF7FEFF 		bl	TFC_InitSysTick
 333              	.LVL30:
 415:../Sources/main.c **** 	TFC_InitGPIO();
 334              		.loc 1 415 0
 335 000c FFF7FEFF 		bl	TFC_InitGPIO
 336              	.LVL31:
 416:../Sources/main.c **** 	TFC_InitServos();
 337              		.loc 1 416 0
 338 0010 FFF7FEFF 		bl	TFC_InitServos
 339              	.LVL32:
 417:../Sources/main.c **** 	TFC_InitMotorPWM();
 340              		.loc 1 417 0
 341 0014 FFF7FEFF 		bl	TFC_InitMotorPWM
 342              	.LVL33:
 418:../Sources/main.c **** 	TFC_InitADCs(carState);
 343              		.loc 1 418 0
 344 0018 201C     		mov	r0, r4
 345 001a FFF7FEFF 		bl	TFC_InitADCs
 346              	.LVL34:
 419:../Sources/main.c **** 	TFC_InitLineScanCamera();
 347              		.loc 1 419 0
 348 001e FFF7FEFF 		bl	TFC_InitLineScanCamera
 349              	.LVL35:
 420:../Sources/main.c **** 	
 421:../Sources/main.c **** 	#ifdef CHANGE_BLUETOOTH_BAUD_RATE
 422:../Sources/main.c **** 		TFC_InitUARTs(SDA_SERIAL_BAUD, 38400);	// 38400 is default for the BL module in AT mode 2
 423:../Sources/main.c **** 		int dummy_timee = TFC_Ticker[0];
 424:../Sources/main.c **** 		while(TFC_Ticker[0] - dummy_timee < 30000)
 425:../Sources/main.c **** 		{}
 426:../Sources/main.c **** 		TFC_BluetoothModuleSetBaud(BLUETOOTH_BAUD);		// Need to manually power the AT pin on the module
 427:../Sources/main.c **** 	#endif
 428:../Sources/main.c **** 	
 429:../Sources/main.c **** 	TFC_InitUARTs(SDA_SERIAL_BAUD, BLUETOOTH_BAUD);
 350              		.loc 1 429 0
 351 0022 E121     		mov	r1, #225
 352 0024 4902     		lsl	r1, r1, #9
 353 0026 081C     		mov	r0, r1
 354 0028 FFF7FEFF 		bl	TFC_InitUARTs
 355              	.LVL36:
 430:../Sources/main.c **** 	
 431:../Sources/main.c **** 	#ifdef TERMINAL_ENABLED
 432:../Sources/main.c **** 		TFC_InitTerminal();
 356              		.loc 1 432 0
 357 002c FFF7FEFF 		bl	TFC_InitTerminal
 358              	.LVL37:
 433:../Sources/main.c **** 	#endif
 434:../Sources/main.c **** 		
 435:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 359              		.loc 1 435 0
 360 0030 8022     		mov	r2, #128
 361 0032 094B     		ldr	r3, .L19
 362 0034 9003     		lsl	r0, r2, #14
 436:../Sources/main.c **** 	TFC_SetMotorPWM(0, 0);
 363              		.loc 1 436 0
 364 0036 0021     		mov	r1, #0
 435:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 365              		.loc 1 435 0
 366 0038 9860     		str	r0, [r3, #8]
 367              		.loc 1 436 0
 368 003a 081C     		add	r0, r1, #0
 369 003c FFF7FEFF 		bl	TFC_SetMotorPWM
 370              	.LVL38:
 437:../Sources/main.c **** 	TFC_InitSpeedSensor();
 371              		.loc 1 437 0
 372 0040 FFF7FEFF 		bl	TFC_InitSpeedSensor
 373              	.LVL39:
 438:../Sources/main.c **** 	preloadProbabilityTables(); //Prevents probability tables for stop line evaluation from being crea
 374              		.loc 1 438 0
 375 0044 FFF7FEFF 		bl	preloadProbabilityTables
 376              	.LVL40:
 439:../Sources/main.c **** 	generateKernel();
 377              		.loc 1 439 0
 378 0048 FFF7FEFF 		bl	generateKernel
 379              	.LVL41:
 440:../Sources/main.c **** 	
 441:../Sources/main.c **** 	#ifdef RACE_MODE_CONTROLS
 442:../Sources/main.c **** 	PORTA_PCR2 &= 0xFFFFF8FF;
 443:../Sources/main.c **** 	PORTA_PCR2 |= 0x00000300;
 444:../Sources/main.c **** 	disable_irq(INT_UART0-16);
 445:../Sources/main.c **** 	carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 446:../Sources/main.c **** 	#endif
 447:../Sources/main.c **** 	
 448:../Sources/main.c **** 	TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 380              		.loc 1 448 0
 381 004c 0020     		mov	r0, #0
 382 004e 0349     		ldr	r1, .L19+4
 383 0050 FFF7FEFF 		bl	TFC_SetServo
 384              	.LVL42:
 449:../Sources/main.c **** }
 385              		.loc 1 449 0
 386              		@ sp needed for prologue
 387              	.LVL43:
 388 0054 10BD     		pop	{r4, pc}
 389              	.L20:
 390 0056 C046     		.align	2
 391              	.L19:
 392 0058 00F10F40 		.word	1074786560
 393 005c CDCC4C3D 		.word	1028443341
 394              		.cfi_endproc
 395              	.LFE4:
 397              		.section	.text.TFC_Task,"ax",%progbits
 398              		.align	2
 399              		.global	TFC_Task
 400              		.code	16
 401              		.thumb_func
 403              	TFC_Task:
 404              	.LFB5:
 450:../Sources/main.c **** 
 451:../Sources/main.c **** void TFC_Task()
 452:../Sources/main.c **** {
 405              		.loc 1 452 0
 406              		.cfi_startproc
 407 0000 08B5     		push	{r3, lr}
 408              	.LCFI6:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 3, -8
 411              		.cfi_offset 14, -4
 453:../Sources/main.c **** #if defined(TERMINAL_USE_SDA_SERIAL)
 454:../Sources/main.c **** 	TFC_UART_Process();
 412              		.loc 1 454 0
 413 0002 FFF7FEFF 		bl	TFC_UART_Process
 414              	.LVL44:
 455:../Sources/main.c **** #endif
 456:../Sources/main.c **** 	TFC_ProcessTerminal();
 457:../Sources/main.c **** }
 415              		.loc 1 457 0
 416              		@ sp needed for prologue
 456:../Sources/main.c **** 	TFC_ProcessTerminal();
 417              		.loc 1 456 0
 418 0006 FFF7FEFF 		bl	TFC_ProcessTerminal
 419              	.LVL45:
 420              		.loc 1 457 0
 421 000a 08BD     		pop	{r3, pc}
 422              		.cfi_endproc
 423              	.LFE5:
 425              		.section	.text.evaluateMotorState,"ax",%progbits
 426              		.align	2
 427              		.global	evaluateMotorState
 428              		.code	16
 429              		.thumb_func
 431              	evaluateMotorState:
 432              	.LFB6:
 458:../Sources/main.c **** 
 459:../Sources/main.c **** void evaluateMotorState(carState_s* carState)
 460:../Sources/main.c **** {
 433              		.loc 1 460 0
 434              		.cfi_startproc
 435              	.LVL46:
 436 0000 38B5     		push	{r3, r4, r5, lr}
 437              	.LCFI7:
 438              		.cfi_def_cfa_offset 16
 439              		.cfi_offset 3, -16
 440              		.cfi_offset 4, -12
 441              		.cfi_offset 5, -8
 442              		.cfi_offset 14, -4
 443              		.loc 1 460 0
 444 0002 051C     		mov	r5, r0
 461:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 445              		.loc 1 461 0
 446 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 447              	.LVL47:
 448 0008 0124     		mov	r4, #1
 449 000a 0442     		tst	r4, r0
 450 000c 05D0     		beq	.L23
 462:../Sources/main.c **** 	{
 463:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 451              		.loc 1 463 0
 452 000e 8021     		mov	r1, #128
 453 0010 0848     		ldr	r0, .L25
 454 0012 8A03     		lsl	r2, r1, #14
 455 0014 4260     		str	r2, [r0, #4]
 464:../Sources/main.c **** 		carState->motorState = RUNNING;
 456              		.loc 1 464 0
 457 0016 2C70     		strb	r4, [r5]
 458              	.L22:
 465:../Sources/main.c **** 	}
 466:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 467:../Sources/main.c **** 	{
 468:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 469:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 470:../Sources/main.c **** 	}
 471:../Sources/main.c **** }
 459              		.loc 1 471 0
 460              		@ sp needed for prologue
 461              	.LVL48:
 462 0018 38BD     		pop	{r3, r4, r5, pc}
 463              	.LVL49:
 464              	.L23:
 466:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 465              		.loc 1 466 0
 466 001a FFF7FEFF 		bl	TFC_GetDIP_Switch
 467              	.LVL50:
 468 001e 0442     		tst	r4, r0
 469 0020 FAD1     		bne	.L22
 468:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 470              		.loc 1 468 0
 471 0022 8022     		mov	r2, #128
 472 0024 034B     		ldr	r3, .L25
 473 0026 9003     		lsl	r0, r2, #14
 474 0028 9860     		str	r0, [r3, #8]
 469:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 475              		.loc 1 469 0
 476 002a 0020     		mov	r0, #0
 477 002c 011C     		add	r1, r0, #0
 478 002e FFF7FEFF 		bl	TFC_SetMotorPWM
 479              	.LVL51:
 480 0032 F1E7     		b	.L22
 481              	.L26:
 482              		.align	2
 483              	.L25:
 484 0034 00F10F40 		.word	1074786560
 485              		.cfi_endproc
 486              	.LFE6:
 488              		.section	.text.evaluateUARTorSpeed,"ax",%progbits
 489              		.align	2
 490              		.global	evaluateUARTorSpeed
 491              		.code	16
 492              		.thumb_func
 494              	evaluateUARTorSpeed:
 495              	.LFB7:
 472:../Sources/main.c **** 
 473:../Sources/main.c **** void evaluateUARTorSpeed(carState_s* carState)
 474:../Sources/main.c **** {
 496              		.loc 1 474 0
 497              		.cfi_startproc
 498              	.LVL52:
 499 0000 10B5     		push	{r4, lr}
 500              	.LCFI8:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 4, -8
 503              		.cfi_offset 14, -4
 504              		.loc 1 474 0
 505 0002 041C     		mov	r4, r0
 475:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 506              		.loc 1 475 0
 507 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 508              	.LVL53:
 509 0008 0307     		lsl	r3, r0, #28
 510 000a 15D4     		bmi	.L28
 511              		.loc 1 475 0 is_stmt 0
 512 000c 1B4B     		ldr	r3, .L37
 513 000e 9868     		ldr	r0, [r3, #8]
 514 0010 4105     		lsl	r1, r0, #21
 515 0012 4A0F     		lsr	r2, r1, #29
 516 0014 022A     		cmp	r2, #2
 517 0016 0FD0     		beq	.L28
 518              	.L29:
 476:../Sources/main.c **** 	{
 477:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 519              		.loc 1 477 0 is_stmt 1
 520 0018 1848     		ldr	r0, .L37
 521 001a 194A     		ldr	r2, .L37+4
 522 001c 8168     		ldr	r1, [r0, #8]
 523 001e 0A40     		and	r2, r1
 524 0020 8260     		str	r2, [r0, #8]
 478:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 525              		.loc 1 478 0
 526 0022 8368     		ldr	r3, [r0, #8]
 527 0024 8021     		mov	r1, #128
 528 0026 8A00     		lsl	r2, r1, #2
 529 0028 1A43     		orr	r2, r3
 530 002a 8260     		str	r2, [r0, #8]
 479:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 531              		.loc 1 479 0
 532 002c 0C20     		mov	r0, #12
 533 002e FFF7FEFF 		bl	enable_irq
 534              	.LVL54:
 480:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 535              		.loc 1 480 0
 536 0032 0020     		mov	r0, #0
 537 0034 6070     		strb	r0, [r4, #1]
 538              	.L27:
 481:../Sources/main.c **** 	}
 482:../Sources/main.c **** 
 483:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 484:../Sources/main.c **** 	{
 485:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 486:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 487:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 488:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 489:../Sources/main.c **** 	}
 490:../Sources/main.c **** }
 539              		.loc 1 490 0
 540              		@ sp needed for prologue
 541              	.LVL55:
 542 0036 10BD     		pop	{r4, pc}
 543              	.LVL56:
 544              	.L28:
 475:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 545              		.loc 1 475 0
 546 0038 6378     		ldrb	r3, [r4, #1]
 547 003a 022B     		cmp	r3, #2
 548 003c ECD0     		beq	.L29
 483:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 549              		.loc 1 483 0
 550 003e FFF7FEFF 		bl	TFC_GetDIP_Switch
 551              	.LVL57:
 552 0042 0307     		lsl	r3, r0, #28
 553 0044 15D5     		bpl	.L32
 483:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 554              		.loc 1 483 0 is_stmt 0
 555 0046 0D48     		ldr	r0, .L37
 556 0048 8168     		ldr	r1, [r0, #8]
 557 004a 4A05     		lsl	r2, r1, #21
 558 004c 530F     		lsr	r3, r2, #29
 559 004e 032B     		cmp	r3, #3
 560 0050 0FD0     		beq	.L32
 561              	.L33:
 485:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 562              		.loc 1 485 0 is_stmt 1
 563 0052 0A4B     		ldr	r3, .L37
 564 0054 0A4A     		ldr	r2, .L37+4
 565 0056 9968     		ldr	r1, [r3, #8]
 566 0058 0A40     		and	r2, r1
 567 005a 9A60     		str	r2, [r3, #8]
 486:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 568              		.loc 1 486 0
 569 005c 9868     		ldr	r0, [r3, #8]
 570 005e C021     		mov	r1, #192
 571 0060 8A00     		lsl	r2, r1, #2
 572 0062 0243     		orr	r2, r0
 573 0064 9A60     		str	r2, [r3, #8]
 487:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 574              		.loc 1 487 0
 575 0066 0C20     		mov	r0, #12
 576 0068 FFF7FEFF 		bl	disable_irq
 577              	.LVL58:
 488:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 578              		.loc 1 488 0
 579 006c 0123     		mov	r3, #1
 580 006e 6370     		strb	r3, [r4, #1]
 581 0070 E1E7     		b	.L27
 582              	.L32:
 483:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 583              		.loc 1 483 0
 584 0072 6078     		ldrb	r0, [r4, #1]
 585 0074 0228     		cmp	r0, #2
 586 0076 DED1     		bne	.L27
 587 0078 EBE7     		b	.L33
 588              	.L38:
 589 007a C046     		.align	2
 590              	.L37:
 591 007c 00900440 		.word	1074040832
 592 0080 FFF8FFFF 		.word	-1793
 593              		.cfi_endproc
 594              	.LFE7:
 596              		.global	__aeabi_fcmpgt
 597              		.section	.text.LEDfeedback,"ax",%progbits
 598              		.align	2
 599              		.global	LEDfeedback
 600              		.code	16
 601              		.thumb_func
 603              	LEDfeedback:
 604              	.LFB8:
 491:../Sources/main.c **** 
 492:../Sources/main.c **** void LEDfeedback(carState_s* carState)
 493:../Sources/main.c **** {
 605              		.loc 1 493 0
 606              		.cfi_startproc
 607              	.LVL59:
 494:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 608              		.loc 1 494 0
 609 0000 4F4B     		ldr	r3, .L66
 493:../Sources/main.c **** {
 610              		.loc 1 493 0
 611 0002 10B5     		push	{r4, lr}
 612              	.LCFI9:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 4, -8
 615              		.cfi_offset 14, -4
 616              		.loc 1 494 0
 617 0004 4F49     		ldr	r1, .L66+4
 493:../Sources/main.c **** {
 618              		.loc 1 493 0
 619 0006 041C     		mov	r4, r0
 620              		.loc 1 494 0
 621 0008 1868     		ldr	r0, [r3]
 622              	.LVL60:
 623 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 624              	.LVL61:
 625 000e 0028     		cmp	r0, #0
 626 0010 1DD0     		beq	.L51
 495:../Sources/main.c **** 	{
 496:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 627              		.loc 1 496 0
 628 0012 A078     		ldrb	r0, [r4, #2]
 629 0014 0228     		cmp	r0, #2
 630 0016 30D0     		beq	.L59
 497:../Sources/main.c **** 		{
 498:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 499:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 500:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 501:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 502:../Sources/main.c **** 		}
 503:../Sources/main.c **** 		#ifdef CROSS_DETECTION_ENABLE
 504:../Sources/main.c **** 		else if(carState->crossSection == YES)
 631              		.loc 1 504 0
 632 0018 A379     		ldrb	r3, [r4, #6]
 633 001a 012B     		cmp	r3, #1
 634 001c 39D0     		beq	.L60
 505:../Sources/main.c **** 		{
 506:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 507:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 508:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 509:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 510:../Sources/main.c **** 		}
 511:../Sources/main.c **** 		#endif
 512:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 635              		.loc 1 512 0
 636 001e 617A     		ldrb	r1, [r4, #9]
 637 0020 0129     		cmp	r1, #1
 638 0022 47D0     		beq	.L61
 513:../Sources/main.c **** 		{
 514:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 515:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 516:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 517:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 518:../Sources/main.c **** 		}
 519:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 639              		.loc 1 519 0
 640 0024 2279     		ldrb	r2, [r4, #4]
 641 0026 022A     		cmp	r2, #2
 642 0028 5AD0     		beq	.L62
 520:../Sources/main.c **** 		{
 521:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 522:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 523:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 524:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 525:../Sources/main.c **** 		}
 526:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 643              		.loc 1 526 0
 644 002a 6479     		ldrb	r4, [r4, #5]
 645              	.LVL62:
 646 002c 012C     		cmp	r4, #1
 647 002e 68D0     		beq	.L63
 527:../Sources/main.c **** 		{	
 528:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 529:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 530:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 531:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 532:../Sources/main.c **** 		}
 533:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 648              		.loc 1 533 0
 649 0030 022C     		cmp	r4, #2
 650 0032 00D1     		bne	.LCB553
 651 0034 71E0     		b	.L64	@long jump
 652              	.LCB553:
 534:../Sources/main.c **** 		{	
 535:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 536:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 537:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 538:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 539:../Sources/main.c **** 		}
 540:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 653              		.loc 1 540 0
 654 0036 0128     		cmp	r0, #1
 655 0038 00D1     		bne	.LCB555
 656 003a 75E0     		b	.L65	@long jump
 657              	.LCB555:
 541:../Sources/main.c **** 		{	
 542:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 543:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 544:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 545:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 546:../Sources/main.c **** 		}
 547:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 658              		.loc 1 547 0
 659 003c 0328     		cmp	r0, #3
 660 003e 1BD1     		bne	.L39
 548:../Sources/main.c **** 		{	
 549:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 661              		.loc 1 549 0
 662 0040 4148     		ldr	r0, .L66+8
 663 0042 8021     		mov	r1, #128
 664 0044 8368     		ldr	r3, [r0, #8]
 665 0046 4A00     		lsl	r2, r1, #1
 666 0048 1A43     		orr	r2, r3
 667 004a 8260     		str	r2, [r0, #8]
 668 004c 27E0     		b	.L58
 669              	.LVL63:
 670              	.L51:
 550:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 551:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 552:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 553:../Sources/main.c **** 		}
 554:../Sources/main.c **** 	}
 555:../Sources/main.c **** 	else
 556:../Sources/main.c **** 	{
 557:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 671              		.loc 1 557 0
 672 004e 3E48     		ldr	r0, .L66+8
 673 0050 8022     		mov	r2, #128
 674 0052 4168     		ldr	r1, [r0, #4]
 675 0054 5400     		lsl	r4, r2, #1
 676              	.LVL64:
 677 0056 0C43     		orr	r4, r1
 678 0058 4460     		str	r4, [r0, #4]
 558:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 679              		.loc 1 558 0
 680 005a 4368     		ldr	r3, [r0, #4]
 681 005c 8021     		mov	r1, #128
 682 005e 8A00     		lsl	r2, r1, #2
 683 0060 1A43     		orr	r2, r3
 684 0062 4260     		str	r2, [r0, #4]
 685              	.L52:
 559:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 686              		.loc 1 559 0
 687 0064 4368     		ldr	r3, [r0, #4]
 688 0066 8021     		mov	r1, #128
 689 0068 CA00     		lsl	r2, r1, #3
 690 006a 1A43     		orr	r2, r3
 691 006c 4260     		str	r2, [r0, #4]
 692              	.L53:
 560:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 693              		.loc 1 560 0
 694 006e 4468     		ldr	r4, [r0, #4]
 695 0070 8023     		mov	r3, #128
 696 0072 1901     		lsl	r1, r3, #4
 697 0074 2143     		orr	r1, r4
 698 0076 4160     		str	r1, [r0, #4]
 699              	.L39:
 561:../Sources/main.c **** 	}
 562:../Sources/main.c **** }
 700              		.loc 1 562 0
 701              		@ sp needed for prologue
 702 0078 10BD     		pop	{r4, pc}
 703              	.LVL65:
 704              	.L59:
 498:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 705              		.loc 1 498 0
 706 007a 3348     		ldr	r0, .L66+8
 707 007c 8024     		mov	r4, #128
 708              	.LVL66:
 709 007e 8168     		ldr	r1, [r0, #8]
 710 0080 6300     		lsl	r3, r4, #1
 711 0082 0B43     		orr	r3, r1
 712 0084 8360     		str	r3, [r0, #8]
 499:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 713              		.loc 1 499 0
 714 0086 8168     		ldr	r1, [r0, #8]
 715 0088 8022     		mov	r2, #128
 716 008a 9400     		lsl	r4, r2, #2
 717 008c 0C43     		orr	r4, r1
 718 008e 8460     		str	r4, [r0, #8]
 719 0090 E8E7     		b	.L52
 720              	.LVL67:
 721              	.L60:
 506:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 722              		.loc 1 506 0
 723 0092 2D48     		ldr	r0, .L66+8
 724 0094 8021     		mov	r1, #128
 725 0096 4368     		ldr	r3, [r0, #4]
 726 0098 4C00     		lsl	r4, r1, #1
 727              	.LVL68:
 728 009a 1C43     		orr	r4, r3
 729 009c 4460     		str	r4, [r0, #4]
 730              	.L58:
 550:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 731              		.loc 1 550 0
 732 009e 8368     		ldr	r3, [r0, #8]
 733 00a0 8022     		mov	r2, #128
 734 00a2 9100     		lsl	r1, r2, #2
 735 00a4 1943     		orr	r1, r3
 736 00a6 8160     		str	r1, [r0, #8]
 551:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 737              		.loc 1 551 0
 738 00a8 8468     		ldr	r4, [r0, #8]
 739 00aa 8023     		mov	r3, #128
 740 00ac DA00     		lsl	r2, r3, #3
 741 00ae 2243     		orr	r2, r4
 742 00b0 8260     		str	r2, [r0, #8]
 743 00b2 DCE7     		b	.L53
 744              	.LVL69:
 745              	.L61:
 514:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 746              		.loc 1 514 0
 747 00b4 2448     		ldr	r0, .L66+8
 748 00b6 8021     		mov	r1, #128
 749 00b8 8368     		ldr	r3, [r0, #8]
 750 00ba 4A00     		lsl	r2, r1, #1
 751 00bc 1A43     		orr	r2, r3
 752 00be 8260     		str	r2, [r0, #8]
 515:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 753              		.loc 1 515 0
 754 00c0 4468     		ldr	r4, [r0, #4]
 755              	.LVL70:
 756 00c2 8023     		mov	r3, #128
 757 00c4 9900     		lsl	r1, r3, #2
 758 00c6 2143     		orr	r1, r4
 759 00c8 4160     		str	r1, [r0, #4]
 760              	.L55:
 544:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 761              		.loc 1 544 0
 762 00ca 4468     		ldr	r4, [r0, #4]
 763 00cc 8022     		mov	r2, #128
 764 00ce D300     		lsl	r3, r2, #3
 765 00d0 2343     		orr	r3, r4
 766 00d2 4360     		str	r3, [r0, #4]
 767              	.L54:
 545:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 768              		.loc 1 545 0
 769 00d4 8168     		ldr	r1, [r0, #8]
 770 00d6 8024     		mov	r4, #128
 771 00d8 2201     		lsl	r2, r4, #4
 772 00da 0A43     		orr	r2, r1
 773 00dc 8260     		str	r2, [r0, #8]
 774 00de CBE7     		b	.L39
 775              	.LVL71:
 776              	.L62:
 521:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 777              		.loc 1 521 0
 778 00e0 1948     		ldr	r0, .L66+8
 779 00e2 8023     		mov	r3, #128
 780 00e4 4468     		ldr	r4, [r0, #4]
 781              	.LVL72:
 782 00e6 5A00     		lsl	r2, r3, #1
 783 00e8 2243     		orr	r2, r4
 784 00ea 4260     		str	r2, [r0, #4]
 785              	.L57:
 536:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 786              		.loc 1 536 0
 787 00ec 4168     		ldr	r1, [r0, #4]
 788 00ee 8024     		mov	r4, #128
 789 00f0 A300     		lsl	r3, r4, #2
 790 00f2 0B43     		orr	r3, r1
 791 00f4 4360     		str	r3, [r0, #4]
 792              	.L56:
 537:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 793              		.loc 1 537 0
 794 00f6 8168     		ldr	r1, [r0, #8]
 795 00f8 8022     		mov	r2, #128
 796 00fa D400     		lsl	r4, r2, #3
 797 00fc 0C43     		orr	r4, r1
 798 00fe 8460     		str	r4, [r0, #8]
 799 0100 E8E7     		b	.L54
 800              	.L63:
 528:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 801              		.loc 1 528 0
 802 0102 1148     		ldr	r0, .L66+8
 803 0104 8021     		mov	r1, #128
 804 0106 4368     		ldr	r3, [r0, #4]
 805 0108 4C00     		lsl	r4, r1, #1
 806 010a 1C43     		orr	r4, r3
 807 010c 4460     		str	r4, [r0, #4]
 529:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 808              		.loc 1 529 0
 809 010e 8368     		ldr	r3, [r0, #8]
 810 0110 8022     		mov	r2, #128
 811 0112 9100     		lsl	r1, r2, #2
 812 0114 1943     		orr	r1, r3
 813 0116 8160     		str	r1, [r0, #8]
 814 0118 EDE7     		b	.L56
 815              	.L64:
 535:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 816              		.loc 1 535 0
 817 011a 0B48     		ldr	r0, .L66+8
 818 011c 8024     		mov	r4, #128
 819 011e 8168     		ldr	r1, [r0, #8]
 820 0120 6200     		lsl	r2, r4, #1
 821 0122 0A43     		orr	r2, r1
 822 0124 8260     		str	r2, [r0, #8]
 823 0126 E1E7     		b	.L57
 824              	.L65:
 542:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 825              		.loc 1 542 0
 826 0128 0748     		ldr	r0, .L66+8
 827 012a 8023     		mov	r3, #128
 828 012c 8468     		ldr	r4, [r0, #8]
 829 012e 5900     		lsl	r1, r3, #1
 830 0130 2143     		orr	r1, r4
 831 0132 8160     		str	r1, [r0, #8]
 543:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 832              		.loc 1 543 0
 833 0134 8468     		ldr	r4, [r0, #8]
 834 0136 8022     		mov	r2, #128
 835 0138 9300     		lsl	r3, r2, #2
 836 013a 2343     		orr	r3, r4
 837 013c 8360     		str	r3, [r0, #8]
 838 013e C4E7     		b	.L55
 839              	.L67:
 840              		.align	2
 841              	.L66:
 842 0140 00000000 		.word	.LANCHOR2
 843 0144 0000F040 		.word	1089470464
 844 0148 40F00F40 		.word	1074786368
 845              		.cfi_endproc
 846              	.LFE8:
 848              		.section	.text.servoAlignment,"ax",%progbits
 849              		.align	2
 850              		.global	servoAlignment
 851              		.code	16
 852              		.thumb_func
 854              	servoAlignment:
 855              	.LFB9:
 563:../Sources/main.c **** 
 564:../Sources/main.c **** void servoAlignment()		// Helps setting the servo offset value by debugging
 565:../Sources/main.c **** {
 856              		.loc 1 565 0
 857              		.cfi_startproc
 858 0000 08B5     		push	{r3, lr}
 859              	.LCFI10:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 3, -8
 862              		.cfi_offset 14, -4
 566:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 863              		.loc 1 566 0
 864 0002 054B     		ldr	r3, .L70
 865 0004 1A68     		ldr	r2, [r3]
 866 0006 C72A     		cmp	r2, #199
 867 0008 05D9     		bls	.L68
 868              	.LBB27:
 567:../Sources/main.c **** 	{
 568:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 869              		.loc 1 568 0
 870 000a 0020     		mov	r0, #0
 871 000c 1860     		str	r0, [r3]
 872              	.LVL73:
 569:../Sources/main.c **** 		float offset = 30000 * 0.15f;
 570:../Sources/main.c **** 		TFC_SetServo(0, offset);
 873              		.loc 1 570 0
 874 000e 0349     		ldr	r1, .L70+4
 875 0010 0020     		mov	r0, #0
 876 0012 FFF7FEFF 		bl	TFC_SetServo
 877              	.LVL74:
 878              	.L68:
 879              	.LBE27:
 571:../Sources/main.c **** 	}
 572:../Sources/main.c **** }
 880              		.loc 1 572 0
 881              		@ sp needed for prologue
 882 0016 08BD     		pop	{r3, pc}
 883              	.L71:
 884              		.align	2
 885              	.L70:
 886 0018 00000000 		.word	TFC_Ticker
 887 001c 00A08C45 		.word	1166843904
 888              		.cfi_endproc
 889              	.LFE9:
 891              		.global	__aeabi_fmul
 892              		.global	__aeabi_fcmple
 893              		.global	__aeabi_fcmpge
 894              		.global	__aeabi_f2iz
 895              		.global	__aeabi_fcmpeq
 896              		.global	__aeabi_f2d
 897              		.global	__aeabi_dadd
 898              		.global	__aeabi_d2iz
 899              		.global	__aeabi_dsub
 900              		.global	__aeabi_i2f
 901              		.section	.text.telemetrySendData,"ax",%progbits
 902              		.align	2
 903              		.global	telemetrySendData
 904              		.code	16
 905              		.thumb_func
 907              	telemetrySendData:
 908              	.LFB10:
 573:../Sources/main.c **** 
 574:../Sources/main.c **** void telemetrySendData()
 575:../Sources/main.c **** {
 909              		.loc 1 575 0
 910              		.cfi_startproc
 911 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 912              	.LCFI11:
 913              		.cfi_def_cfa_offset 24
 914              		.cfi_offset 3, -24
 915              		.cfi_offset 4, -20
 916              		.cfi_offset 5, -16
 917              		.cfi_offset 6, -12
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 576:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, BLUETOOTH_FLAG);
 920              		.loc 1 576 0
 921 0002 E348     		ldr	r0, .L377
 922 0004 8021     		mov	r1, #128
 923 0006 FFF7FEFF 		bl	uart_putchar
 924              	.LVL75:
 577:../Sources/main.c **** 	
 578:../Sources/main.c **** 	// 1 - Track Centre Detected by the Camera
 579:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineCenter);
 925              		.loc 1 579 0
 926 000a E24C     		ldr	r4, .L377+4
 927 000c E048     		ldr	r0, .L377
 928 000e A17A     		ldrb	r1, [r4, #10]
 929 0010 FFF7FEFF 		bl	uart_putchar
 930              	.LVL76:
 580:../Sources/main.c **** 	// 2 - Calculated Target Speed
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 931              		.loc 1 581 0
 932 0014 E04B     		ldr	r3, .L377+8
 933 0016 8221     		mov	r1, #130
 934 0018 C905     		lsl	r1, r1, #23
 935 001a 1868     		ldr	r0, [r3]
 936 001c FFF7FEFF 		bl	__aeabi_fmul
 937              	.LVL77:
 938 0020 DE49     		ldr	r1, .L377+12
 939 0022 051C     		add	r5, r0, #0
 940 0024 FFF7FEFF 		bl	__aeabi_fcmple
 941              	.LVL78:
 942 0028 0028     		cmp	r0, #0
 943 002a 00D1     		bne	.LCB819
 944 002c B3E0     		b	.L81	@long jump
 945              	.LCB819:
 946              		.loc 1 581 0 is_stmt 0
 947 002e 281C     		add	r0, r5, #0
 948 0030 0021     		mov	r1, #0
 949 0032 FFF7FEFF 		bl	__aeabi_fcmpge
 950              	.LVL79:
 951 0036 0028     		cmp	r0, #0
 952 0038 00D1     		bne	.LCB825
 953 003a BDE1     		b	.L75	@long jump
 954              	.LCB825:
 955              		.loc 1 581 0
 956 003c 281C     		add	r0, r5, #0
 957 003e D849     		ldr	r1, .L377+16
 958 0040 FFF7FEFF 		bl	__aeabi_fcmpge
 959              	.LVL80:
 960 0044 0028     		cmp	r0, #0
 961 0046 00D1     		bne	.LCB831
 962 0048 B0E1     		b	.L343	@long jump
 963              	.LCB831:
 964              		.loc 1 581 0
 965 004a 281C     		add	r0, r5, #0
 966 004c D549     		ldr	r1, .L377+20
 967 004e FFF7FEFF 		bl	__aeabi_fcmple
 968              	.LVL81:
 969 0052 7F26     		mov	r6, #127
 970 0054 071E     		sub	r7, r0, #0
 971 0056 17D1     		bne	.L79
 972              		.loc 1 581 0
 973 0058 281C     		add	r0, r5, #0
 974 005a 0021     		mov	r1, #0
 975 005c FFF7FEFF 		bl	__aeabi_fcmpeq
 976              	.LVL82:
 977 0060 0028     		cmp	r0, #0
 978 0062 00D1     		bne	.LCB845
 979 0064 A8E1     		b	.L75	@long jump
 980              	.LCB845:
 981              		.loc 1 581 0
 982 0066 002F     		cmp	r7, #0
 983 0068 00D1     		bne	.LCB847
 984 006a BAE1     		b	.L88	@long jump
 985              	.LCB847:
 986              		.loc 1 581 0
 987 006c 281C     		add	r0, r5, #0
 988 006e CE49     		ldr	r1, .L377+24
 989 0070 FFF7FEFF 		bl	__aeabi_fcmpgt
 990              	.LVL83:
 991 0074 0028     		cmp	r0, #0
 992 0076 07D1     		bne	.L79
 993              		.loc 1 581 0
 994 0078 281C     		add	r0, r5, #0
 995 007a C949     		ldr	r1, .L377+16
 996 007c FFF7FEFF 		bl	__aeabi_fcmpge
 997              	.LVL84:
 998 0080 7E26     		mov	r6, #126
 999 0082 0028     		cmp	r0, #0
 1000 0084 00D1     		bne	.LCB860
 1001 0086 9BE0     		b	.L87	@long jump
 1002              	.LCB860:
 1003              	.L79:
 1004              		.loc 1 581 0
 1005 0088 311C     		mov	r1, r6
 1006 008a C148     		ldr	r0, .L377
 1007 008c FFF7FEFF 		bl	uart_putchar
 1008              	.LVL85:
 582:../Sources/main.c **** 	// 3 - Speed of the right wheel
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1009              		.loc 1 583 0 is_stmt 1
 1010 0090 0020     		mov	r0, #0
 1011 0092 FFF7FEFF 		bl	getSpeed
 1012              	.LVL86:
 1013 0096 8222     		mov	r2, #130
 1014 0098 D105     		lsl	r1, r2, #23
 1015 009a FFF7FEFF 		bl	__aeabi_fmul
 1016              	.LVL87:
 1017 009e BF49     		ldr	r1, .L377+12
 1018 00a0 FFF7FEFF 		bl	__aeabi_fcmple
 1019              	.LVL88:
 1020 00a4 0028     		cmp	r0, #0
 1021 00a6 00D1     		bne	.LCB877
 1022 00a8 99E0     		b	.L92	@long jump
 1023              	.LCB877:
 1024              		.loc 1 583 0 is_stmt 0
 1025 00aa 0020     		mov	r0, #0
 1026 00ac FFF7FEFF 		bl	getSpeed
 1027              	.LVL89:
 1028 00b0 8223     		mov	r3, #130
 1029 00b2 D905     		lsl	r1, r3, #23
 1030 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1031              	.LVL90:
 1032 00b8 0021     		mov	r1, #0
 1033 00ba FFF7FEFF 		bl	__aeabi_fcmpge
 1034              	.LVL91:
 1035 00be 0028     		cmp	r0, #0
 1036 00c0 00D1     		bne	.LCB889
 1037 00c2 8CE0     		b	.L92	@long jump
 1038              	.LCB889:
 1039              		.loc 1 583 0
 1040 00c4 0020     		mov	r0, #0
 1041 00c6 FFF7FEFF 		bl	getSpeed
 1042              	.LVL92:
 1043 00ca 8221     		mov	r1, #130
 1044 00cc C905     		lsl	r1, r1, #23
 1045 00ce FFF7FEFF 		bl	__aeabi_fmul
 1046              	.LVL93:
 1047 00d2 B349     		ldr	r1, .L377+16
 1048 00d4 FFF7FEFF 		bl	__aeabi_fcmpge
 1049              	.LVL94:
 1050 00d8 0028     		cmp	r0, #0
 1051 00da 73D1     		bne	.L95
 1052              	.L98:
 1053              		.loc 1 583 0
 1054 00dc 0020     		mov	r0, #0
 1055 00de FFF7FEFF 		bl	getSpeed
 1056              	.LVL95:
 1057 00e2 8222     		mov	r2, #130
 1058 00e4 D105     		lsl	r1, r2, #23
 1059 00e6 FFF7FEFF 		bl	__aeabi_fmul
 1060              	.LVL96:
 1061 00ea 0021     		mov	r1, #0
 1062 00ec FFF7FEFF 		bl	__aeabi_fcmpeq
 1063              	.LVL97:
 1064 00f0 0028     		cmp	r0, #0
 1065 00f2 00D1     		bne	.LCB914
 1066 00f4 81E0     		b	.L96	@long jump
 1067              	.LCB914:
 1068              		.loc 1 583 0
 1069 00f6 0020     		mov	r0, #0
 1070 00f8 FFF7FEFF 		bl	getSpeed
 1071              	.LVL98:
 1072 00fc 8223     		mov	r3, #130
 1073 00fe D905     		lsl	r1, r3, #23
 1074 0100 FFF7FEFF 		bl	__aeabi_fmul
 1075              	.LVL99:
 1076 0104 A549     		ldr	r1, .L377+12
 1077 0106 FFF7FEFF 		bl	__aeabi_fcmple
 1078              	.LVL100:
 1079 010a 0028     		cmp	r0, #0
 1080 010c 27D0     		beq	.L114
 1081              		.loc 1 583 0
 1082 010e 0020     		mov	r0, #0
 1083 0110 FFF7FEFF 		bl	getSpeed
 1084              	.LVL101:
 1085 0114 8221     		mov	r1, #130
 1086 0116 C905     		lsl	r1, r1, #23
 1087 0118 FFF7FEFF 		bl	__aeabi_fmul
 1088              	.LVL102:
 1089 011c 0021     		mov	r1, #0
 1090 011e FFF7FEFF 		bl	__aeabi_fcmpge
 1091              	.LVL103:
 1092 0122 0028     		cmp	r0, #0
 1093 0124 1BD0     		beq	.L114
 1094              		.loc 1 583 0
 1095 0126 0020     		mov	r0, #0
 1096 0128 8227     		mov	r7, #130
 1097 012a FFF7FEFF 		bl	getSpeed
 1098              	.LVL104:
 1099 012e F905     		lsl	r1, r7, #23
 1100 0130 FFF7FEFF 		bl	__aeabi_fmul
 1101              	.LVL105:
 1102 0134 9A49     		ldr	r1, .L377+16
 1103 0136 FFF7FEFF 		bl	__aeabi_fcmpge
 1104              	.LVL106:
 1105 013a 0028     		cmp	r0, #0
 1106 013c 01D1     		bne	.LCB950
 1107 013e 00F027FD 		bl	.L118	@far jump
 1108              	.LCB950:
 1109              		.loc 1 583 0
 1110 0142 0020     		mov	r0, #0
 1111 0144 8225     		mov	r5, #130
 1112 0146 FFF7FEFF 		bl	getSpeed
 1113              	.LVL107:
 1114 014a E905     		lsl	r1, r5, #23
 1115 014c FFF7FEFF 		bl	__aeabi_fmul
 1116              	.LVL108:
 1117 0150 9449     		ldr	r1, .L377+20
 1118 0152 FFF7FEFF 		bl	__aeabi_fcmple
 1119              	.LVL109:
 1120 0156 0028     		cmp	r0, #0
 1121 0158 01D1     		bne	.LCB962
 1122 015a 00F019FD 		bl	.L118	@far jump
 1123              	.LCB962:
 1124              	.L114:
 1125              		.loc 1 583 0
 1126 015e 0020     		mov	r0, #0
 1127 0160 8226     		mov	r6, #130
 1128 0162 FFF7FEFF 		bl	getSpeed
 1129              	.LVL110:
 1130 0166 F105     		lsl	r1, r6, #23
 1131 0168 FFF7FEFF 		bl	__aeabi_fmul
 1132              	.LVL111:
 1133 016c 8E49     		ldr	r1, .L377+24
 1134 016e FFF7FEFF 		bl	__aeabi_fcmpgt
 1135              	.LVL112:
 1136 0172 0028     		cmp	r0, #0
 1137 0174 00D0     		beq	.LCB975
 1138 0176 82E0     		b	.L113	@long jump
 1139              	.LCB975:
 1140              		.loc 1 583 0
 1141 0178 FFF7FEFF 		bl	getSpeed
 1142              	.LVL113:
 1143 017c 8222     		mov	r2, #130
 1144 017e D105     		lsl	r1, r2, #23
 1145 0180 FFF7FEFF 		bl	__aeabi_fmul
 1146              	.LVL114:
 1147 0184 8649     		ldr	r1, .L377+16
 1148 0186 FFF7FEFF 		bl	__aeabi_fcmpge
 1149              	.LVL115:
 1150 018a 0028     		cmp	r0, #0
 1151 018c 01D0     		beq	.LCB986
 1152 018e 00F03DFD 		bl	.L368	@far jump
 1153              	.LCB986:
 1154              	.L122:
 1155              		.loc 1 583 0
 1156 0192 0021     		mov	r1, #0
 1157 0194 74E0     		b	.L107
 1158              	.L81:
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1159              		.loc 1 581 0 is_stmt 1
 1160 0196 281C     		add	r0, r5, #0
 1161 0198 8349     		ldr	r1, .L377+24
 1162 019a FFF7FEFF 		bl	__aeabi_fcmpgt
 1163              	.LVL116:
 1164 019e 7F26     		mov	r6, #127
 1165 01a0 0028     		cmp	r0, #0
 1166 01a2 00D0     		beq	.LCB999
 1167 01a4 70E7     		b	.L79	@long jump
 1168              	.LCB999:
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1169              		.loc 1 581 0 is_stmt 0
 1170 01a6 281C     		add	r0, r5, #0
 1171 01a8 7D49     		ldr	r1, .L377+16
 1172 01aa FFF7FEFF 		bl	__aeabi_fcmpge
 1173              	.LVL117:
 1174 01ae 0028     		cmp	r0, #0
 1175 01b0 06D0     		beq	.L87
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1176              		.loc 1 581 0
 1177 01b2 281C     		add	r0, r5, #0
 1178 01b4 7B49     		ldr	r1, .L377+20
 1179 01b6 FFF7FEFF 		bl	__aeabi_fcmple
 1180              	.LVL118:
 1181 01ba 0028     		cmp	r0, #0
 1182 01bc 00D0     		beq	.LCB1011
 1183 01be 63E7     		b	.L79	@long jump
 1184              	.LCB1011:
 1185              	.L87:
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1186              		.loc 1 581 0
 1187 01c0 0026     		mov	r6, #0
 1188 01c2 61E7     		b	.L79
 1189              	.L95:
 1190              		.loc 1 583 0 is_stmt 1
 1191 01c4 0020     		mov	r0, #0
 1192 01c6 8227     		mov	r7, #130
 1193 01c8 FFF7FEFF 		bl	getSpeed
 1194              	.LVL119:
 1195 01cc F905     		lsl	r1, r7, #23
 1196 01ce FFF7FEFF 		bl	__aeabi_fmul
 1197              	.LVL120:
 1198 01d2 7449     		ldr	r1, .L377+20
 1199 01d4 FFF7FEFF 		bl	__aeabi_fcmple
 1200              	.LVL121:
 1201 01d8 0028     		cmp	r0, #0
 1202 01da 00D1     		bne	.LCB1029
 1203 01dc 7EE7     		b	.L98	@long jump
 1204              	.LCB1029:
 1205              	.L92:
 1206              		.loc 1 583 0 is_stmt 0
 1207 01de 0020     		mov	r0, #0
 1208 01e0 8225     		mov	r5, #130
 1209 01e2 FFF7FEFF 		bl	getSpeed
 1210              	.LVL122:
 1211 01e6 E905     		lsl	r1, r5, #23
 1212 01e8 FFF7FEFF 		bl	__aeabi_fmul
 1213              	.LVL123:
 1214 01ec 6E49     		ldr	r1, .L377+24
 1215 01ee FFF7FEFF 		bl	__aeabi_fcmpgt
 1216              	.LVL124:
 1217 01f2 0028     		cmp	r0, #0
 1218 01f4 01D1     		bne	.LCB1042
 1219 01f6 00F04AFC 		bl	.L369	@far jump
 1220              	.LCB1042:
 1221              	.L96:
 1222              		.loc 1 583 0
 1223 01fa 0020     		mov	r0, #0
 1224 01fc FFF7FEFF 		bl	getSpeed
 1225              	.LVL125:
 1226 0200 8221     		mov	r1, #130
 1227 0202 C905     		lsl	r1, r1, #23
 1228 0204 FFF7FEFF 		bl	__aeabi_fmul
 1229              	.LVL126:
 1230 0208 6449     		ldr	r1, .L377+12
 1231 020a FFF7FEFF 		bl	__aeabi_fcmple
 1232              	.LVL127:
 1233 020e 0028     		cmp	r0, #0
 1234 0210 27D0     		beq	.L103
 1235              		.loc 1 583 0
 1236 0212 0020     		mov	r0, #0
 1237 0214 8227     		mov	r7, #130
 1238 0216 FFF7FEFF 		bl	getSpeed
 1239              	.LVL128:
 1240 021a F905     		lsl	r1, r7, #23
 1241 021c FFF7FEFF 		bl	__aeabi_fmul
 1242              	.LVL129:
 1243 0220 0021     		mov	r1, #0
 1244 0222 FFF7FEFF 		bl	__aeabi_fcmpge
 1245              	.LVL130:
 1246 0226 0028     		cmp	r0, #0
 1247 0228 1BD0     		beq	.L103
 1248              		.loc 1 583 0
 1249 022a 0020     		mov	r0, #0
 1250 022c 8225     		mov	r5, #130
 1251 022e FFF7FEFF 		bl	getSpeed
 1252              	.LVL131:
 1253 0232 E905     		lsl	r1, r5, #23
 1254 0234 FFF7FEFF 		bl	__aeabi_fmul
 1255              	.LVL132:
 1256 0238 5949     		ldr	r1, .L377+16
 1257 023a FFF7FEFF 		bl	__aeabi_fcmpge
 1258              	.LVL133:
 1259 023e 0028     		cmp	r0, #0
 1260 0240 01D1     		bne	.LCB1079
 1261 0242 00F0A5FC 		bl	.L118	@far jump
 1262              	.LCB1079:
 1263              		.loc 1 583 0
 1264 0246 0020     		mov	r0, #0
 1265 0248 8226     		mov	r6, #130
 1266 024a FFF7FEFF 		bl	getSpeed
 1267              	.LVL134:
 1268 024e F105     		lsl	r1, r6, #23
 1269 0250 FFF7FEFF 		bl	__aeabi_fmul
 1270              	.LVL135:
 1271 0254 5349     		ldr	r1, .L377+20
 1272 0256 FFF7FEFF 		bl	__aeabi_fcmple
 1273              	.LVL136:
 1274 025a 0028     		cmp	r0, #0
 1275 025c 01D1     		bne	.LCB1091
 1276 025e 00F097FC 		bl	.L118	@far jump
 1277              	.LCB1091:
 1278              	.L103:
 1279              		.loc 1 583 0
 1280 0262 0020     		mov	r0, #0
 1281 0264 FFF7FEFF 		bl	getSpeed
 1282              	.LVL137:
 1283 0268 8222     		mov	r2, #130
 1284 026a D105     		lsl	r1, r2, #23
 1285 026c FFF7FEFF 		bl	__aeabi_fmul
 1286              	.LVL138:
 1287 0270 4D49     		ldr	r1, .L377+24
 1288 0272 FFF7FEFF 		bl	__aeabi_fcmpgt
 1289              	.LVL139:
 1290 0276 0028     		cmp	r0, #0
 1291 0278 01D1     		bne	.LCB1104
 1292 027a 00F01AFC 		bl	.L346	@far jump
 1293              	.LCB1104:
 1294              	.L113:
 1295 027e 7F21     		mov	r1, #127
 1296              	.L107:
 1297              		.loc 1 583 0
 1298 0280 4348     		ldr	r0, .L377
 1299 0282 FFF7FEFF 		bl	uart_putchar
 1300              	.LVL140:
 584:../Sources/main.c **** 	// 4 - Speed of the left wheel
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1301              		.loc 1 585 0 is_stmt 1
 1302 0286 8225     		mov	r5, #130
 1303 0288 0120     		mov	r0, #1
 1304 028a FFF7FEFF 		bl	getSpeed
 1305              	.LVL141:
 1306 028e E905     		lsl	r1, r5, #23
 1307 0290 FFF7FEFF 		bl	__aeabi_fmul
 1308              	.LVL142:
 1309 0294 4149     		ldr	r1, .L377+12
 1310 0296 FFF7FEFF 		bl	__aeabi_fcmple
 1311              	.LVL143:
 1312 029a 0028     		cmp	r0, #0
 1313 029c 00D1     		bne	.LCB1123
 1314 029e B2E0     		b	.L124	@long jump
 1315              	.LCB1123:
 1316              		.loc 1 585 0 is_stmt 0
 1317 02a0 0120     		mov	r0, #1
 1318 02a2 8226     		mov	r6, #130
 1319 02a4 FFF7FEFF 		bl	getSpeed
 1320              	.LVL144:
 1321 02a8 F105     		lsl	r1, r6, #23
 1322 02aa FFF7FEFF 		bl	__aeabi_fmul
 1323              	.LVL145:
 1324 02ae 0021     		mov	r1, #0
 1325 02b0 FFF7FEFF 		bl	__aeabi_fcmpge
 1326              	.LVL146:
 1327 02b4 0028     		cmp	r0, #0
 1328 02b6 00D1     		bne	.LCB1135
 1329 02b8 A5E0     		b	.L124	@long jump
 1330              	.LCB1135:
 1331              		.loc 1 585 0
 1332 02ba 0120     		mov	r0, #1
 1333 02bc FFF7FEFF 		bl	getSpeed
 1334              	.LVL147:
 1335 02c0 8222     		mov	r2, #130
 1336 02c2 D105     		lsl	r1, r2, #23
 1337 02c4 FFF7FEFF 		bl	__aeabi_fmul
 1338              	.LVL148:
 1339 02c8 3549     		ldr	r1, .L377+16
 1340 02ca FFF7FEFF 		bl	__aeabi_fcmpge
 1341              	.LVL149:
 1342 02ce 0028     		cmp	r0, #0
 1343 02d0 00D0     		beq	.LCB1147
 1344 02d2 8BE0     		b	.L127	@long jump
 1345              	.LCB1147:
 1346              	.L130:
 1347              		.loc 1 585 0
 1348 02d4 0120     		mov	r0, #1
 1349 02d6 8225     		mov	r5, #130
 1350 02d8 FFF7FEFF 		bl	getSpeed
 1351              	.LVL150:
 1352 02dc E905     		lsl	r1, r5, #23
 1353 02de FFF7FEFF 		bl	__aeabi_fmul
 1354              	.LVL151:
 1355 02e2 0021     		mov	r1, #0
 1356 02e4 FFF7FEFF 		bl	__aeabi_fcmpeq
 1357              	.LVL152:
 1358 02e8 0028     		cmp	r0, #0
 1359 02ea 00D1     		bne	.LCB1160
 1360 02ec 98E0     		b	.L128	@long jump
 1361              	.LCB1160:
 1362              		.loc 1 585 0
 1363 02ee 0120     		mov	r0, #1
 1364 02f0 8226     		mov	r6, #130
 1365 02f2 FFF7FEFF 		bl	getSpeed
 1366              	.LVL153:
 1367 02f6 F105     		lsl	r1, r6, #23
 1368 02f8 FFF7FEFF 		bl	__aeabi_fmul
 1369              	.LVL154:
 1370 02fc 2749     		ldr	r1, .L377+12
 1371 02fe FFF7FEFF 		bl	__aeabi_fcmple
 1372              	.LVL155:
 1373 0302 0028     		cmp	r0, #0
 1374 0304 27D0     		beq	.L146
 1375              		.loc 1 585 0
 1376 0306 0120     		mov	r0, #1
 1377 0308 FFF7FEFF 		bl	getSpeed
 1378              	.LVL156:
 1379 030c 8222     		mov	r2, #130
 1380 030e D105     		lsl	r1, r2, #23
 1381 0310 FFF7FEFF 		bl	__aeabi_fmul
 1382              	.LVL157:
 1383 0314 0021     		mov	r1, #0
 1384 0316 FFF7FEFF 		bl	__aeabi_fcmpge
 1385              	.LVL158:
 1386 031a 0028     		cmp	r0, #0
 1387 031c 1BD0     		beq	.L146
 1388              		.loc 1 585 0
 1389 031e 0120     		mov	r0, #1
 1390 0320 FFF7FEFF 		bl	getSpeed
 1391              	.LVL159:
 1392 0324 8223     		mov	r3, #130
 1393 0326 D905     		lsl	r1, r3, #23
 1394 0328 FFF7FEFF 		bl	__aeabi_fmul
 1395              	.LVL160:
 1396 032c 1C49     		ldr	r1, .L377+16
 1397 032e FFF7FEFF 		bl	__aeabi_fcmpge
 1398              	.LVL161:
 1399 0332 0028     		cmp	r0, #0
 1400 0334 01D1     		bne	.LCB1196
 1401 0336 00F04BFC 		bl	.L150	@far jump
 1402              	.LCB1196:
 1403              		.loc 1 585 0
 1404 033a 0120     		mov	r0, #1
 1405 033c FFF7FEFF 		bl	getSpeed
 1406              	.LVL162:
 1407 0340 8221     		mov	r1, #130
 1408 0342 C905     		lsl	r1, r1, #23
 1409 0344 FFF7FEFF 		bl	__aeabi_fmul
 1410              	.LVL163:
 1411 0348 1649     		ldr	r1, .L377+20
 1412 034a FFF7FEFF 		bl	__aeabi_fcmple
 1413              	.LVL164:
 1414 034e 0028     		cmp	r0, #0
 1415 0350 01D1     		bne	.LCB1208
 1416 0352 00F03DFC 		bl	.L150	@far jump
 1417              	.LCB1208:
 1418              	.L146:
 1419              		.loc 1 585 0
 1420 0356 0120     		mov	r0, #1
 1421 0358 8227     		mov	r7, #130
 1422 035a FFF7FEFF 		bl	getSpeed
 1423              	.LVL165:
 1424 035e F905     		lsl	r1, r7, #23
 1425 0360 FFF7FEFF 		bl	__aeabi_fmul
 1426              	.LVL166:
 1427 0364 1049     		ldr	r1, .L377+24
 1428 0366 FFF7FEFF 		bl	__aeabi_fcmpgt
 1429              	.LVL167:
 1430 036a 0028     		cmp	r0, #0
 1431 036c 00D0     		beq	.LCB1221
 1432 036e 96E0     		b	.L145	@long jump
 1433              	.LCB1221:
 1434              		.loc 1 585 0
 1435 0370 0120     		mov	r0, #1
 1436 0372 8225     		mov	r5, #130
 1437 0374 FFF7FEFF 		bl	getSpeed
 1438              	.LVL168:
 1439 0378 E905     		lsl	r1, r5, #23
 1440 037a FFF7FEFF 		bl	__aeabi_fmul
 1441              	.LVL169:
 1442 037e 0849     		ldr	r1, .L377+16
 1443 0380 FFF7FEFF 		bl	__aeabi_fcmpge
 1444              	.LVL170:
 1445 0384 0028     		cmp	r0, #0
 1446 0386 01D0     		beq	.LCB1233
 1447 0388 00F052FC 		bl	.L370	@far jump
 1448              	.LCB1233:
 1449              	.L154:
 1450              		.loc 1 585 0
 1451 038c 0021     		mov	r1, #0
 1452 038e 87E0     		b	.L139
 1453              	.L378:
 1454              		.align	2
 1455              	.L377:
 1456 0390 00C00640 		.word	1074184192
 1457 0394 00000000 		.word	.LANCHOR3
 1458 0398 00000000 		.word	.LANCHOR4
 1459 039c 00807E43 		.word	1132363776
 1460 03a0 0000FF42 		.word	1124007936
 1461 03a4 00800043 		.word	1124106240
 1462 03a8 00007F43 		.word	1132396544
 1463              	.L343:
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1464              		.loc 1 581 0 is_stmt 1
 1465 03ac 281C     		add	r0, r5, #0
 1466 03ae 0021     		mov	r1, #0
 1467 03b0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1468              	.LVL171:
 1469 03b4 0028     		cmp	r0, #0
 1470 03b6 14D1     		bne	.L88
 1471              	.L75:
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1472              		.loc 1 581 0 is_stmt 0
 1473 03b8 281C     		add	r0, r5, #0
 1474 03ba 0021     		mov	r1, #0
 1475 03bc FFF7FEFF 		bl	__aeabi_fcmpge
 1476              	.LVL172:
 1477 03c0 0028     		cmp	r0, #0
 1478 03c2 00D1     		bne	.LCB1264
 1479 03c4 E7E6     		b	.L81	@long jump
 1480              	.LCB1264:
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1481              		.loc 1 581 0
 1482 03c6 281C     		add	r0, r5, #0
 1483 03c8 9149     		ldr	r1, .L379+8
 1484 03ca FFF7FEFF 		bl	__aeabi_fcmpge
 1485              	.LVL173:
 1486 03ce 0028     		cmp	r0, #0
 1487 03d0 07D0     		beq	.L88
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1488              		.loc 1 581 0
 1489 03d2 281C     		add	r0, r5, #0
 1490 03d4 8F49     		ldr	r1, .L379+12
 1491 03d6 FFF7FEFF 		bl	__aeabi_fcmple
 1492              	.LVL174:
 1493 03da 7F26     		mov	r6, #127
 1494 03dc 0028     		cmp	r0, #0
 1495 03de 00D0     		beq	.LCB1277
 1496 03e0 52E6     		b	.L79	@long jump
 1497              	.LCB1277:
 1498              	.L88:
 581:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1499              		.loc 1 581 0
 1500 03e2 281C     		add	r0, r5, #0
 1501 03e4 FFF7FEFF 		bl	__aeabi_f2iz
 1502              	.LVL175:
 1503 03e8 C6B2     		uxtb	r6, r0
 1504 03ea 4DE6     		b	.L79
 1505              	.L127:
 1506              		.loc 1 585 0 is_stmt 1
 1507 03ec 0120     		mov	r0, #1
 1508 03ee FFF7FEFF 		bl	getSpeed
 1509              	.LVL176:
 1510 03f2 8223     		mov	r3, #130
 1511 03f4 D905     		lsl	r1, r3, #23
 1512 03f6 FFF7FEFF 		bl	__aeabi_fmul
 1513              	.LVL177:
 1514 03fa 8649     		ldr	r1, .L379+12
 1515 03fc FFF7FEFF 		bl	__aeabi_fcmple
 1516              	.LVL178:
 1517 0400 0028     		cmp	r0, #0
 1518 0402 00D1     		bne	.LCB1299
 1519 0404 66E7     		b	.L130	@long jump
 1520              	.LCB1299:
 1521              	.L124:
 1522              		.loc 1 585 0 is_stmt 0
 1523 0406 0120     		mov	r0, #1
 1524 0408 FFF7FEFF 		bl	getSpeed
 1525              	.LVL179:
 1526 040c 8221     		mov	r1, #130
 1527 040e C905     		lsl	r1, r1, #23
 1528 0410 FFF7FEFF 		bl	__aeabi_fmul
 1529              	.LVL180:
 1530 0414 8049     		ldr	r1, .L379+16
 1531 0416 FFF7FEFF 		bl	__aeabi_fcmpgt
 1532              	.LVL181:
 1533 041a 0028     		cmp	r0, #0
 1534 041c 00D1     		bne	.LCB1312
 1535 041e 25E3     		b	.L371	@long jump
 1536              	.LCB1312:
 1537              	.L128:
 1538              		.loc 1 585 0
 1539 0420 0120     		mov	r0, #1
 1540 0422 FFF7FEFF 		bl	getSpeed
 1541              	.LVL182:
 1542 0426 8222     		mov	r2, #130
 1543 0428 D105     		lsl	r1, r2, #23
 1544 042a FFF7FEFF 		bl	__aeabi_fmul
 1545              	.LVL183:
 1546 042e 7B49     		ldr	r1, .L379+20
 1547 0430 FFF7FEFF 		bl	__aeabi_fcmple
 1548              	.LVL184:
 1549 0434 0028     		cmp	r0, #0
 1550 0436 25D0     		beq	.L135
 1551              		.loc 1 585 0
 1552 0438 0120     		mov	r0, #1
 1553 043a FFF7FEFF 		bl	getSpeed
 1554              	.LVL185:
 1555 043e 8223     		mov	r3, #130
 1556 0440 D905     		lsl	r1, r3, #23
 1557 0442 FFF7FEFF 		bl	__aeabi_fmul
 1558              	.LVL186:
 1559 0446 0021     		mov	r1, #0
 1560 0448 FFF7FEFF 		bl	__aeabi_fcmpge
 1561              	.LVL187:
 1562 044c 0028     		cmp	r0, #0
 1563 044e 19D0     		beq	.L135
 1564              		.loc 1 585 0
 1565 0450 0120     		mov	r0, #1
 1566 0452 FFF7FEFF 		bl	getSpeed
 1567              	.LVL188:
 1568 0456 8221     		mov	r1, #130
 1569 0458 C905     		lsl	r1, r1, #23
 1570 045a FFF7FEFF 		bl	__aeabi_fmul
 1571              	.LVL189:
 1572 045e 6C49     		ldr	r1, .L379+8
 1573 0460 FFF7FEFF 		bl	__aeabi_fcmpge
 1574              	.LVL190:
 1575 0464 0028     		cmp	r0, #0
 1576 0466 00D1     		bne	.LCB1349
 1577 0468 B2E3     		b	.L150	@long jump
 1578              	.LCB1349:
 1579              		.loc 1 585 0
 1580 046a 0120     		mov	r0, #1
 1581 046c 8227     		mov	r7, #130
 1582 046e FFF7FEFF 		bl	getSpeed
 1583              	.LVL191:
 1584 0472 F905     		lsl	r1, r7, #23
 1585 0474 FFF7FEFF 		bl	__aeabi_fmul
 1586              	.LVL192:
 1587 0478 6649     		ldr	r1, .L379+12
 1588 047a FFF7FEFF 		bl	__aeabi_fcmple
 1589              	.LVL193:
 1590 047e 0028     		cmp	r0, #0
 1591 0480 00D1     		bne	.LCB1361
 1592 0482 A5E3     		b	.L150	@long jump
 1593              	.LCB1361:
 1594              	.L135:
 1595              		.loc 1 585 0
 1596 0484 0120     		mov	r0, #1
 1597 0486 8225     		mov	r5, #130
 1598 0488 FFF7FEFF 		bl	getSpeed
 1599              	.LVL194:
 1600 048c E905     		lsl	r1, r5, #23
 1601 048e FFF7FEFF 		bl	__aeabi_fmul
 1602              	.LVL195:
 1603 0492 6149     		ldr	r1, .L379+16
 1604 0494 FFF7FEFF 		bl	__aeabi_fcmpgt
 1605              	.LVL196:
 1606 0498 0028     		cmp	r0, #0
 1607 049a 00D1     		bne	.LCB1374
 1608 049c 28E3     		b	.L348	@long jump
 1609              	.LCB1374:
 1610              	.L145:
 1611 049e 7F21     		mov	r1, #127
 1612              	.L139:
 1613              		.loc 1 585 0
 1614 04a0 5F48     		ldr	r0, .L379+24
 1615 04a2 FFF7FEFF 		bl	uart_putchar
 1616              	.LVL197:
 586:../Sources/main.c **** 	// 5 - PWM output to right motor
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 1617              		.loc 1 587 0 is_stmt 1
 1618 04a6 0020     		mov	r0, #0
 1619 04a8 FFF7FEFF 		bl	TFC_GetMotorPWM
 1620              	.LVL198:
 1621 04ac 5D49     		ldr	r1, .L379+28
 1622 04ae FFF7FEFF 		bl	__aeabi_fmul
 1623              	.LVL199:
 1624 04b2 0021     		mov	r1, #0
 1625 04b4 FFF7FEFF 		bl	__aeabi_fcmpge
 1626              	.LVL200:
 1627 04b8 0028     		cmp	r0, #0
 1628 04ba 00D1     		bne	.LCB1392
 1629 04bc A7E2     		b	.L349	@long jump
 1630              	.LCB1392:
 1631              		.loc 1 587 0 is_stmt 0
 1632 04be 0020     		mov	r0, #0
 1633 04c0 FFF7FEFF 		bl	TFC_GetMotorPWM
 1634              	.LVL201:
 1635 04c4 5749     		ldr	r1, .L379+28
 1636 04c6 FFF7FEFF 		bl	__aeabi_fmul
 1637              	.LVL202:
 1638 04ca FFF7FEFF 		bl	__aeabi_f2d
 1639              	.LVL203:
 1640 04ce 4F4B     		ldr	r3, .L379+4
 1641 04d0 4D4A     		ldr	r2, .L379
 1642 04d2 FFF7FEFF 		bl	__aeabi_dadd
 1643              	.LVL204:
 1644 04d6 FFF7FEFF 		bl	__aeabi_d2iz
 1645              	.LVL205:
 1646 04da C1B2     		uxtb	r1, r0
 1647              	.L158:
 1648              		.loc 1 587 0
 1649 04dc 5048     		ldr	r0, .L379+24
 1650 04de FFF7FEFF 		bl	uart_putchar
 1651              	.LVL206:
 588:../Sources/main.c **** 	// 6 - PWM output to left motor
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 1652              		.loc 1 589 0 is_stmt 1
 1653 04e2 0120     		mov	r0, #1
 1654 04e4 FFF7FEFF 		bl	TFC_GetMotorPWM
 1655              	.LVL207:
 1656 04e8 4E49     		ldr	r1, .L379+28
 1657 04ea FFF7FEFF 		bl	__aeabi_fmul
 1658              	.LVL208:
 1659 04ee 0021     		mov	r1, #0
 1660 04f0 FFF7FEFF 		bl	__aeabi_fcmpge
 1661              	.LVL209:
 1662 04f4 0028     		cmp	r0, #0
 1663 04f6 00D1     		bne	.LCB1423
 1664 04f8 79E2     		b	.L350	@long jump
 1665              	.LCB1423:
 1666              		.loc 1 589 0 is_stmt 0
 1667 04fa 0120     		mov	r0, #1
 1668 04fc FFF7FEFF 		bl	TFC_GetMotorPWM
 1669              	.LVL210:
 1670 0500 4849     		ldr	r1, .L379+28
 1671 0502 FFF7FEFF 		bl	__aeabi_fmul
 1672              	.LVL211:
 1673 0506 FFF7FEFF 		bl	__aeabi_f2d
 1674              	.LVL212:
 1675 050a 404B     		ldr	r3, .L379+4
 1676 050c 3E4A     		ldr	r2, .L379
 1677 050e FFF7FEFF 		bl	__aeabi_dadd
 1678              	.LVL213:
 1679 0512 FFF7FEFF 		bl	__aeabi_d2iz
 1680              	.LVL214:
 1681 0516 C1B2     		uxtb	r1, r0
 1682              	.L161:
 1683              		.loc 1 589 0
 1684 0518 4148     		ldr	r0, .L379+24
 1685 051a FFF7FEFF 		bl	uart_putchar
 1686              	.LVL215:
 590:../Sources/main.c **** 	// 7 - Current of the right motor
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 1687              		.loc 1 591 0 is_stmt 1
 1688 051e 0020     		mov	r0, #0
 1689 0520 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1690              	.LVL216:
 1691 0524 4049     		ldr	r1, .L379+32
 1692 0526 FFF7FEFF 		bl	__aeabi_fmul
 1693              	.LVL217:
 1694 052a 3C49     		ldr	r1, .L379+20
 1695 052c FFF7FEFF 		bl	__aeabi_fcmple
 1696              	.LVL218:
 1697 0530 0028     		cmp	r0, #0
 1698 0532 00D1     		bne	.LCB1454
 1699 0534 85E0     		b	.L162	@long jump
 1700              	.LCB1454:
 1701              		.loc 1 591 0 is_stmt 0
 1702 0536 0020     		mov	r0, #0
 1703 0538 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1704              	.LVL219:
 1705 053c 3A49     		ldr	r1, .L379+32
 1706 053e FFF7FEFF 		bl	__aeabi_fmul
 1707              	.LVL220:
 1708 0542 0021     		mov	r1, #0
 1709 0544 FFF7FEFF 		bl	__aeabi_fcmpge
 1710              	.LVL221:
 1711 0548 0028     		cmp	r0, #0
 1712 054a 7AD0     		beq	.L162
 1713              		.loc 1 591 0
 1714 054c 0020     		mov	r0, #0
 1715 054e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1716              	.LVL222:
 1717 0552 3549     		ldr	r1, .L379+32
 1718 0554 FFF7FEFF 		bl	__aeabi_fmul
 1719              	.LVL223:
 1720 0558 2D49     		ldr	r1, .L379+8
 1721 055a FFF7FEFF 		bl	__aeabi_fcmpge
 1722              	.LVL224:
 1723 055e 0028     		cmp	r0, #0
 1724 0560 64D1     		bne	.L165
 1725              	.L168:
 1726              		.loc 1 591 0
 1727 0562 0020     		mov	r0, #0
 1728 0564 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1729              	.LVL225:
 1730 0568 2F49     		ldr	r1, .L379+32
 1731 056a FFF7FEFF 		bl	__aeabi_fmul
 1732              	.LVL226:
 1733 056e 0021     		mov	r1, #0
 1734 0570 FFF7FEFF 		bl	__aeabi_fcmpeq
 1735              	.LVL227:
 1736 0574 0028     		cmp	r0, #0
 1737 0576 70D0     		beq	.L166
 1738              		.loc 1 591 0
 1739 0578 0020     		mov	r0, #0
 1740 057a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1741              	.LVL228:
 1742 057e 2A49     		ldr	r1, .L379+32
 1743 0580 FFF7FEFF 		bl	__aeabi_fmul
 1744              	.LVL229:
 1745 0584 2549     		ldr	r1, .L379+20
 1746 0586 FFF7FEFF 		bl	__aeabi_fcmple
 1747              	.LVL230:
 1748 058a 0028     		cmp	r0, #0
 1749 058c 22D0     		beq	.L184
 1750              		.loc 1 591 0
 1751 058e 0020     		mov	r0, #0
 1752 0590 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1753              	.LVL231:
 1754 0594 2449     		ldr	r1, .L379+32
 1755 0596 FFF7FEFF 		bl	__aeabi_fmul
 1756              	.LVL232:
 1757 059a 0021     		mov	r1, #0
 1758 059c FFF7FEFF 		bl	__aeabi_fcmpge
 1759              	.LVL233:
 1760 05a0 0028     		cmp	r0, #0
 1761 05a2 17D0     		beq	.L184
 1762              		.loc 1 591 0
 1763 05a4 0020     		mov	r0, #0
 1764 05a6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1765              	.LVL234:
 1766 05aa 1F49     		ldr	r1, .L379+32
 1767 05ac FFF7FEFF 		bl	__aeabi_fmul
 1768              	.LVL235:
 1769 05b0 1749     		ldr	r1, .L379+8
 1770 05b2 FFF7FEFF 		bl	__aeabi_fcmpge
 1771              	.LVL236:
 1772 05b6 0028     		cmp	r0, #0
 1773 05b8 00D1     		bne	.LCB1521
 1774 05ba FFE2     		b	.L188	@long jump
 1775              	.LCB1521:
 1776              		.loc 1 591 0
 1777 05bc 0020     		mov	r0, #0
 1778 05be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1779              	.LVL237:
 1780 05c2 1949     		ldr	r1, .L379+32
 1781 05c4 FFF7FEFF 		bl	__aeabi_fmul
 1782              	.LVL238:
 1783 05c8 1249     		ldr	r1, .L379+12
 1784 05ca FFF7FEFF 		bl	__aeabi_fcmple
 1785              	.LVL239:
 1786 05ce 0028     		cmp	r0, #0
 1787 05d0 00D1     		bne	.LCB1532
 1788 05d2 F3E2     		b	.L188	@long jump
 1789              	.LCB1532:
 1790              	.L184:
 1791              		.loc 1 591 0
 1792 05d4 0020     		mov	r0, #0
 1793 05d6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1794              	.LVL240:
 1795 05da 1349     		ldr	r1, .L379+32
 1796 05dc FFF7FEFF 		bl	__aeabi_fmul
 1797              	.LVL241:
 1798 05e0 0D49     		ldr	r1, .L379+16
 1799 05e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 1800              	.LVL242:
 1801 05e6 0028     		cmp	r0, #0
 1802 05e8 71D1     		bne	.L183
 1803              		.loc 1 591 0
 1804 05ea FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1805              	.LVL243:
 1806 05ee 0E49     		ldr	r1, .L379+32
 1807 05f0 FFF7FEFF 		bl	__aeabi_fmul
 1808              	.LVL244:
 1809 05f4 0649     		ldr	r1, .L379+8
 1810 05f6 FFF7FEFF 		bl	__aeabi_fcmpge
 1811              	.LVL245:
 1812 05fa 0028     		cmp	r0, #0
 1813 05fc 00D0     		beq	.LCB1554
 1814 05fe 27E3     		b	.L372	@long jump
 1815              	.LCB1554:
 1816              	.L192:
 1817              		.loc 1 591 0
 1818 0600 0021     		mov	r1, #0
 1819 0602 65E0     		b	.L177
 1820              	.L380:
 1821 0604 C046C046 		.align	3
 1822              	.L379:
 1823 0608 00000000 		.word	0
 1824 060c 0000E03F 		.word	1071644672
 1825 0610 0000FF42 		.word	1124007936
 1826 0614 00800043 		.word	1124106240
 1827 0618 00007F43 		.word	1132396544
 1828 061c 00807E43 		.word	1132363776
 1829 0620 00C00640 		.word	1074184192
 1830 0624 0000FC42 		.word	1123811328
 1831 0628 00007042 		.word	1114636288
 1832              	.L165:
 1833              		.loc 1 591 0
 1834 062c 0020     		mov	r0, #0
 1835 062e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1836              	.LVL246:
 1837 0632 CF49     		ldr	r1, .L381+8
 1838 0634 FFF7FEFF 		bl	__aeabi_fmul
 1839              	.LVL247:
 1840 0638 CE49     		ldr	r1, .L381+12
 1841 063a FFF7FEFF 		bl	__aeabi_fcmple
 1842              	.LVL248:
 1843 063e 0028     		cmp	r0, #0
 1844 0640 8FD0     		beq	.L168
 1845              	.L162:
 1846              		.loc 1 591 0
 1847 0642 0020     		mov	r0, #0
 1848 0644 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1849              	.LVL249:
 1850 0648 C949     		ldr	r1, .L381+8
 1851 064a FFF7FEFF 		bl	__aeabi_fmul
 1852              	.LVL250:
 1853 064e CA49     		ldr	r1, .L381+16
 1854 0650 FFF7FEFF 		bl	__aeabi_fcmpgt
 1855              	.LVL251:
 1856 0654 0028     		cmp	r0, #0
 1857 0656 00D1     		bne	.LCB1596
 1858 0658 F9E1     		b	.L373	@long jump
 1859              	.LCB1596:
 1860              	.L166:
 1861              		.loc 1 591 0
 1862 065a 0020     		mov	r0, #0
 1863 065c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1864              	.LVL252:
 1865 0660 C349     		ldr	r1, .L381+8
 1866 0662 FFF7FEFF 		bl	__aeabi_fmul
 1867              	.LVL253:
 1868 0666 C549     		ldr	r1, .L381+20
 1869 0668 FFF7FEFF 		bl	__aeabi_fcmple
 1870              	.LVL254:
 1871 066c 0028     		cmp	r0, #0
 1872 066e 22D0     		beq	.L173
 1873              		.loc 1 591 0
 1874 0670 0020     		mov	r0, #0
 1875 0672 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1876              	.LVL255:
 1877 0676 BE49     		ldr	r1, .L381+8
 1878 0678 FFF7FEFF 		bl	__aeabi_fmul
 1879              	.LVL256:
 1880 067c 0021     		mov	r1, #0
 1881 067e FFF7FEFF 		bl	__aeabi_fcmpge
 1882              	.LVL257:
 1883 0682 0028     		cmp	r0, #0
 1884 0684 17D0     		beq	.L173
 1885              		.loc 1 591 0
 1886 0686 0020     		mov	r0, #0
 1887 0688 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1888              	.LVL258:
 1889 068c B849     		ldr	r1, .L381+8
 1890 068e FFF7FEFF 		bl	__aeabi_fmul
 1891              	.LVL259:
 1892 0692 BB49     		ldr	r1, .L381+24
 1893 0694 FFF7FEFF 		bl	__aeabi_fcmpge
 1894              	.LVL260:
 1895 0698 0028     		cmp	r0, #0
 1896 069a 00D1     		bne	.LCB1630
 1897 069c 8EE2     		b	.L188	@long jump
 1898              	.LCB1630:
 1899              		.loc 1 591 0
 1900 069e 0020     		mov	r0, #0
 1901 06a0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1902              	.LVL261:
 1903 06a4 B249     		ldr	r1, .L381+8
 1904 06a6 FFF7FEFF 		bl	__aeabi_fmul
 1905              	.LVL262:
 1906 06aa B249     		ldr	r1, .L381+12
 1907 06ac FFF7FEFF 		bl	__aeabi_fcmple
 1908              	.LVL263:
 1909 06b0 0028     		cmp	r0, #0
 1910 06b2 00D1     		bne	.LCB1641
 1911 06b4 82E2     		b	.L188	@long jump
 1912              	.LCB1641:
 1913              	.L173:
 1914              		.loc 1 591 0
 1915 06b6 0020     		mov	r0, #0
 1916 06b8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1917              	.LVL264:
 1918 06bc AC49     		ldr	r1, .L381+8
 1919 06be FFF7FEFF 		bl	__aeabi_fmul
 1920              	.LVL265:
 1921 06c2 AD49     		ldr	r1, .L381+16
 1922 06c4 FFF7FEFF 		bl	__aeabi_fcmpgt
 1923              	.LVL266:
 1924 06c8 0028     		cmp	r0, #0
 1925 06ca 00D1     		bne	.LCB1653
 1926 06cc 46E2     		b	.L352	@long jump
 1927              	.LCB1653:
 1928              	.L183:
 1929 06ce 7F21     		mov	r1, #127
 1930              	.L177:
 1931              		.loc 1 591 0
 1932 06d0 AC48     		ldr	r0, .L381+28
 1933 06d2 FFF7FEFF 		bl	uart_putchar
 1934              	.LVL267:
 592:../Sources/main.c **** 	// 8 - Current of the left motor
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 1935              		.loc 1 593 0 is_stmt 1
 1936 06d6 0120     		mov	r0, #1
 1937 06d8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1938              	.LVL268:
 1939 06dc A449     		ldr	r1, .L381+8
 1940 06de FFF7FEFF 		bl	__aeabi_fmul
 1941              	.LVL269:
 1942 06e2 A649     		ldr	r1, .L381+20
 1943 06e4 FFF7FEFF 		bl	__aeabi_fcmple
 1944              	.LVL270:
 1945 06e8 0028     		cmp	r0, #0
 1946 06ea 72D0     		beq	.L194
 1947              		.loc 1 593 0 is_stmt 0
 1948 06ec 0120     		mov	r0, #1
 1949 06ee FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1950              	.LVL271:
 1951 06f2 9F49     		ldr	r1, .L381+8
 1952 06f4 FFF7FEFF 		bl	__aeabi_fmul
 1953              	.LVL272:
 1954 06f8 0021     		mov	r1, #0
 1955 06fa FFF7FEFF 		bl	__aeabi_fcmpge
 1956              	.LVL273:
 1957 06fe 0028     		cmp	r0, #0
 1958 0700 67D0     		beq	.L194
 1959              		.loc 1 593 0
 1960 0702 0120     		mov	r0, #1
 1961 0704 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1962              	.LVL274:
 1963 0708 9949     		ldr	r1, .L381+8
 1964 070a FFF7FEFF 		bl	__aeabi_fmul
 1965              	.LVL275:
 1966 070e 9C49     		ldr	r1, .L381+24
 1967 0710 FFF7FEFF 		bl	__aeabi_fcmpge
 1968              	.LVL276:
 1969 0714 0028     		cmp	r0, #0
 1970 0716 51D1     		bne	.L197
 1971              	.L200:
 1972              		.loc 1 593 0
 1973 0718 0120     		mov	r0, #1
 1974 071a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1975              	.LVL277:
 1976 071e 9449     		ldr	r1, .L381+8
 1977 0720 FFF7FEFF 		bl	__aeabi_fmul
 1978              	.LVL278:
 1979 0724 0021     		mov	r1, #0
 1980 0726 FFF7FEFF 		bl	__aeabi_fcmpeq
 1981              	.LVL279:
 1982 072a 0028     		cmp	r0, #0
 1983 072c 5DD0     		beq	.L198
 1984              		.loc 1 593 0
 1985 072e 0120     		mov	r0, #1
 1986 0730 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1987              	.LVL280:
 1988 0734 8E49     		ldr	r1, .L381+8
 1989 0736 FFF7FEFF 		bl	__aeabi_fmul
 1990              	.LVL281:
 1991 073a 9049     		ldr	r1, .L381+20
 1992 073c FFF7FEFF 		bl	__aeabi_fcmple
 1993              	.LVL282:
 1994 0740 0028     		cmp	r0, #0
 1995 0742 22D0     		beq	.L216
 1996              		.loc 1 593 0
 1997 0744 0120     		mov	r0, #1
 1998 0746 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1999              	.LVL283:
 2000 074a 8949     		ldr	r1, .L381+8
 2001 074c FFF7FEFF 		bl	__aeabi_fmul
 2002              	.LVL284:
 2003 0750 0021     		mov	r1, #0
 2004 0752 FFF7FEFF 		bl	__aeabi_fcmpge
 2005              	.LVL285:
 2006 0756 0028     		cmp	r0, #0
 2007 0758 17D0     		beq	.L216
 2008              		.loc 1 593 0
 2009 075a 0120     		mov	r0, #1
 2010 075c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2011              	.LVL286:
 2012 0760 8349     		ldr	r1, .L381+8
 2013 0762 FFF7FEFF 		bl	__aeabi_fmul
 2014              	.LVL287:
 2015 0766 8649     		ldr	r1, .L381+24
 2016 0768 FFF7FEFF 		bl	__aeabi_fcmpge
 2017              	.LVL288:
 2018 076c 0028     		cmp	r0, #0
 2019 076e 00D1     		bne	.LCB1738
 2020 0770 1AE2     		b	.L220	@long jump
 2021              	.LCB1738:
 2022              		.loc 1 593 0
 2023 0772 0120     		mov	r0, #1
 2024 0774 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2025              	.LVL289:
 2026 0778 7D49     		ldr	r1, .L381+8
 2027 077a FFF7FEFF 		bl	__aeabi_fmul
 2028              	.LVL290:
 2029 077e 7D49     		ldr	r1, .L381+12
 2030 0780 FFF7FEFF 		bl	__aeabi_fcmple
 2031              	.LVL291:
 2032 0784 0028     		cmp	r0, #0
 2033 0786 00D1     		bne	.LCB1749
 2034 0788 0EE2     		b	.L220	@long jump
 2035              	.LCB1749:
 2036              	.L216:
 2037              		.loc 1 593 0
 2038 078a 0120     		mov	r0, #1
 2039 078c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2040              	.LVL292:
 2041 0790 7749     		ldr	r1, .L381+8
 2042 0792 FFF7FEFF 		bl	__aeabi_fmul
 2043              	.LVL293:
 2044 0796 7849     		ldr	r1, .L381+16
 2045 0798 FFF7FEFF 		bl	__aeabi_fcmpgt
 2046              	.LVL294:
 2047 079c 0028     		cmp	r0, #0
 2048 079e 5ED1     		bne	.L215
 2049              		.loc 1 593 0
 2050 07a0 0120     		mov	r0, #1
 2051 07a2 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2052              	.LVL295:
 2053 07a6 7249     		ldr	r1, .L381+8
 2054 07a8 FFF7FEFF 		bl	__aeabi_fmul
 2055              	.LVL296:
 2056 07ac 7449     		ldr	r1, .L381+24
 2057 07ae FFF7FEFF 		bl	__aeabi_fcmpge
 2058              	.LVL297:
 2059 07b2 0028     		cmp	r0, #0
 2060 07b4 00D0     		beq	.LCB1772
 2061 07b6 1AE2     		b	.L374	@long jump
 2062              	.LCB1772:
 2063              	.L224:
 2064              		.loc 1 593 0
 2065 07b8 0021     		mov	r1, #0
 2066 07ba 51E0     		b	.L209
 2067              	.L197:
 2068              		.loc 1 593 0
 2069 07bc 0120     		mov	r0, #1
 2070 07be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2071              	.LVL298:
 2072 07c2 6B49     		ldr	r1, .L381+8
 2073 07c4 FFF7FEFF 		bl	__aeabi_fmul
 2074              	.LVL299:
 2075 07c8 6A49     		ldr	r1, .L381+12
 2076 07ca FFF7FEFF 		bl	__aeabi_fcmple
 2077              	.LVL300:
 2078 07ce 0028     		cmp	r0, #0
 2079 07d0 A2D0     		beq	.L200
 2080              	.L194:
 2081              		.loc 1 593 0
 2082 07d2 0120     		mov	r0, #1
 2083 07d4 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2084              	.LVL301:
 2085 07d8 6549     		ldr	r1, .L381+8
 2086 07da FFF7FEFF 		bl	__aeabi_fmul
 2087              	.LVL302:
 2088 07de 6649     		ldr	r1, .L381+16
 2089 07e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 2090              	.LVL303:
 2091 07e4 0028     		cmp	r0, #0
 2092 07e6 00D1     		bne	.LCB1801
 2093 07e8 21E1     		b	.L375	@long jump
 2094              	.LCB1801:
 2095              	.L198:
 2096              		.loc 1 593 0
 2097 07ea 0120     		mov	r0, #1
 2098 07ec FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2099              	.LVL304:
 2100 07f0 5F49     		ldr	r1, .L381+8
 2101 07f2 FFF7FEFF 		bl	__aeabi_fmul
 2102              	.LVL305:
 2103 07f6 6149     		ldr	r1, .L381+20
 2104 07f8 FFF7FEFF 		bl	__aeabi_fcmple
 2105              	.LVL306:
 2106 07fc 0028     		cmp	r0, #0
 2107 07fe 22D0     		beq	.L205
 2108              		.loc 1 593 0
 2109 0800 0120     		mov	r0, #1
 2110 0802 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2111              	.LVL307:
 2112 0806 5A49     		ldr	r1, .L381+8
 2113 0808 FFF7FEFF 		bl	__aeabi_fmul
 2114              	.LVL308:
 2115 080c 0021     		mov	r1, #0
 2116 080e FFF7FEFF 		bl	__aeabi_fcmpge
 2117              	.LVL309:
 2118 0812 0028     		cmp	r0, #0
 2119 0814 17D0     		beq	.L205
 2120              		.loc 1 593 0
 2121 0816 0120     		mov	r0, #1
 2122 0818 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2123              	.LVL310:
 2124 081c 5449     		ldr	r1, .L381+8
 2125 081e FFF7FEFF 		bl	__aeabi_fmul
 2126              	.LVL311:
 2127 0822 5749     		ldr	r1, .L381+24
 2128 0824 FFF7FEFF 		bl	__aeabi_fcmpge
 2129              	.LVL312:
 2130 0828 0028     		cmp	r0, #0
 2131 082a 00D1     		bne	.LCB1835
 2132 082c BCE1     		b	.L220	@long jump
 2133              	.LCB1835:
 2134              		.loc 1 593 0
 2135 082e 0120     		mov	r0, #1
 2136 0830 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2137              	.LVL313:
 2138 0834 4E49     		ldr	r1, .L381+8
 2139 0836 FFF7FEFF 		bl	__aeabi_fmul
 2140              	.LVL314:
 2141 083a 4E49     		ldr	r1, .L381+12
 2142 083c FFF7FEFF 		bl	__aeabi_fcmple
 2143              	.LVL315:
 2144 0840 0028     		cmp	r0, #0
 2145 0842 00D1     		bne	.LCB1846
 2146 0844 B0E1     		b	.L220	@long jump
 2147              	.LCB1846:
 2148              	.L205:
 2149              		.loc 1 593 0
 2150 0846 0120     		mov	r0, #1
 2151 0848 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2152              	.LVL316:
 2153 084c 4849     		ldr	r1, .L381+8
 2154 084e FFF7FEFF 		bl	__aeabi_fmul
 2155              	.LVL317:
 2156 0852 4949     		ldr	r1, .L381+16
 2157 0854 FFF7FEFF 		bl	__aeabi_fcmpgt
 2158              	.LVL318:
 2159 0858 0028     		cmp	r0, #0
 2160 085a 00D1     		bne	.LCB1858
 2161 085c 64E1     		b	.L354	@long jump
 2162              	.LCB1858:
 2163              	.L215:
 2164 085e 7F21     		mov	r1, #127
 2165              	.L209:
 2166              		.loc 1 593 0
 2167 0860 4848     		ldr	r0, .L381+28
 2168 0862 FFF7FEFF 		bl	uart_putchar
 2169              	.LVL319:
 594:../Sources/main.c **** 	// 9 - Servo Value
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2170              		.loc 1 595 0 is_stmt 1
 2171 0866 4848     		ldr	r0, .L381+32
 2172 0868 4849     		ldr	r1, .L381+36
 2173 086a 0068     		ldr	r0, [r0]
 2174 086c FFF7FEFF 		bl	__aeabi_fmul
 2175              	.LVL320:
 2176 0870 0021     		mov	r1, #0
 2177 0872 071C     		add	r7, r0, #0
 2178 0874 FFF7FEFF 		bl	__aeabi_fcmpge
 2179              	.LVL321:
 2180 0878 0028     		cmp	r0, #0
 2181 087a 00D1     		bne	.LCB1876
 2182 087c ACE0     		b	.L355	@long jump
 2183              	.LCB1876:
 2184              		.loc 1 595 0 is_stmt 0
 2185 087e 381C     		add	r0, r7, #0
 2186 0880 FFF7FEFF 		bl	__aeabi_f2d
 2187              	.LVL322:
 2188 0884 394B     		ldr	r3, .L381+4
 2189 0886 384A     		ldr	r2, .L381
 2190 0888 FFF7FEFF 		bl	__aeabi_dadd
 2191              	.LVL323:
 2192 088c FFF7FEFF 		bl	__aeabi_d2iz
 2193              	.LVL324:
 2194 0890 C1B2     		uxtb	r1, r0
 2195              	.L228:
 2196              		.loc 1 595 0
 2197 0892 3C48     		ldr	r0, .L381+28
 2198 0894 FFF7FEFF 		bl	uart_putchar
 2199              	.LVL325:
 596:../Sources/main.c **** 	// 10 - Detected edge type - Left:100, Right:-100, Track: 0, None:50
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2200              		.loc 1 597 0 is_stmt 1
 2201 0898 6579     		ldrb	r5, [r4, #5]
 2202 089a 3221     		mov	r1, #50
 2203 089c 002D     		cmp	r5, #0
 2204 089e 06D0     		beq	.L229
 2205              		.loc 1 597 0 is_stmt 0
 2206 08a0 032D     		cmp	r5, #3
 2207 08a2 00D1     		bne	.LCB1897
 2208 08a4 9FE1     		b	.L259	@long jump
 2209              	.LCB1897:
 2210              		.loc 1 597 0
 2211 08a6 9C21     		mov	r1, #156
 2212 08a8 012D     		cmp	r5, #1
 2213 08aa 00D1     		bne	.LCB1900
 2214 08ac 9DE1     		b	.L376	@long jump
 2215              	.LCB1900:
 2216              	.L229:
 2217              		.loc 1 597 0
 2218 08ae 3548     		ldr	r0, .L381+28
 2219 08b0 FFF7FEFF 		bl	uart_putchar
 2220              	.LVL326:
 598:../Sources/main.c **** 	// 11 - Camera Exposure Time, 1 unit = 0.1 ms
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2221              		.loc 1 599 0 is_stmt 1
 2222 08b4 3649     		ldr	r1, .L381+40
 2223 08b6 0868     		ldr	r0, [r1]
 2224 08b8 FFF7FEFF 		bl	__aeabi_i2f
 2225              	.LVL327:
 2226 08bc 3549     		ldr	r1, .L381+44
 2227 08be FFF7FEFF 		bl	__aeabi_fmul
 2228              	.LVL328:
 2229 08c2 2E49     		ldr	r1, .L381+20
 2230 08c4 051C     		add	r5, r0, #0
 2231 08c6 FFF7FEFF 		bl	__aeabi_fcmple
 2232              	.LVL329:
 2233 08ca 0028     		cmp	r0, #0
 2234 08cc 36D0     		beq	.L238
 2235              		.loc 1 599 0 is_stmt 0
 2236 08ce 281C     		add	r0, r5, #0
 2237 08d0 0021     		mov	r1, #0
 2238 08d2 FFF7FEFF 		bl	__aeabi_fcmpge
 2239              	.LVL330:
 2240 08d6 0028     		cmp	r0, #0
 2241 08d8 66D0     		beq	.L232
 2242              		.loc 1 599 0
 2243 08da 281C     		add	r0, r5, #0
 2244 08dc 2849     		ldr	r1, .L381+24
 2245 08de FFF7FEFF 		bl	__aeabi_fcmpge
 2246              	.LVL331:
 2247 08e2 0028     		cmp	r0, #0
 2248 08e4 5AD0     		beq	.L357
 2249              		.loc 1 599 0
 2250 08e6 281C     		add	r0, r5, #0
 2251 08e8 2249     		ldr	r1, .L381+12
 2252 08ea FFF7FEFF 		bl	__aeabi_fcmple
 2253              	.LVL332:
 2254 08ee 7F26     		mov	r6, #127
 2255 08f0 071E     		sub	r7, r0, #0
 2256 08f2 15D1     		bne	.L236
 2257              		.loc 1 599 0
 2258 08f4 281C     		add	r0, r5, #0
 2259 08f6 0021     		mov	r1, #0
 2260 08f8 FFF7FEFF 		bl	__aeabi_fcmpeq
 2261              	.LVL333:
 2262 08fc 0028     		cmp	r0, #0
 2263 08fe 53D0     		beq	.L232
 2264              		.loc 1 599 0
 2265 0900 002F     		cmp	r7, #0
 2266 0902 64D0     		beq	.L245
 2267              		.loc 1 599 0
 2268 0904 281C     		add	r0, r5, #0
 2269 0906 1C49     		ldr	r1, .L381+16
 2270 0908 FFF7FEFF 		bl	__aeabi_fcmpgt
 2271              	.LVL334:
 2272 090c 0028     		cmp	r0, #0
 2273 090e 07D1     		bne	.L236
 2274              		.loc 1 599 0
 2275 0910 281C     		add	r0, r5, #0
 2276 0912 1B49     		ldr	r1, .L381+24
 2277 0914 FFF7FEFF 		bl	__aeabi_fcmpge
 2278              	.LVL335:
 2279 0918 7E26     		mov	r6, #126
 2280 091a 0028     		cmp	r0, #0
 2281 091c 00D1     		bne	.L236
 2282              	.L244:
 2283              		.loc 1 599 0
 2284 091e 0026     		mov	r6, #0
 2285              	.L236:
 2286              		.loc 1 599 0
 2287 0920 311C     		mov	r1, r6
 2288 0922 1848     		ldr	r0, .L381+28
 2289 0924 FFF7FEFF 		bl	uart_putchar
 2290              	.LVL336:
 600:../Sources/main.c **** 	// 12 - Loop time
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)loop_time);
 2291              		.loc 1 601 0 is_stmt 1
 2292 0928 1B4A     		ldr	r2, .L381+48
 2293 092a 1648     		ldr	r0, .L381+28
 2294 092c 1178     		ldrb	r1, [r2]
 2295 092e FFF7FEFF 		bl	uart_putchar
 2296              	.LVL337:
 602:../Sources/main.c **** 	// 13 - Line Distance
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineDistance);
 2297              		.loc 1 603 0
 2298 0932 217B     		ldrb	r1, [r4, #12]
 2299 0934 1348     		ldr	r0, .L381+28
 2300 0936 FFF7FEFF 		bl	uart_putchar
 2301              	.LVL338:
 604:../Sources/main.c **** }
 2302              		.loc 1 604 0
 2303              		@ sp needed for prologue
 2304 093a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2305              	.L238:
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2306              		.loc 1 599 0
 2307 093c 281C     		add	r0, r5, #0
 2308 093e 0E49     		ldr	r1, .L381+16
 2309 0940 FFF7FEFF 		bl	__aeabi_fcmpgt
 2310              	.LVL339:
 2311 0944 7F26     		mov	r6, #127
 2312 0946 0028     		cmp	r0, #0
 2313 0948 EAD1     		bne	.L236
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2314              		.loc 1 599 0 is_stmt 0
 2315 094a 281C     		add	r0, r5, #0
 2316 094c 0C49     		ldr	r1, .L381+24
 2317 094e FFF7FEFF 		bl	__aeabi_fcmpge
 2318              	.LVL340:
 2319 0952 0028     		cmp	r0, #0
 2320 0954 E3D0     		beq	.L244
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2321              		.loc 1 599 0
 2322 0956 281C     		add	r0, r5, #0
 2323 0958 0649     		ldr	r1, .L381+12
 2324 095a FFF7FEFF 		bl	__aeabi_fcmple
 2325              	.LVL341:
 2326 095e 0028     		cmp	r0, #0
 2327 0960 DED1     		bne	.L236
 2328 0962 DCE7     		b	.L244
 2329              	.L382:
 2330 0964 C046C046 		.align	3
 2331              	.L381:
 2332 0968 00000000 		.word	0
 2333 096c 0000E03F 		.word	1071644672
 2334 0970 00007042 		.word	1114636288
 2335 0974 00800043 		.word	1124106240
 2336 0978 00007F43 		.word	1132396544
 2337 097c 00807E43 		.word	1132363776
 2338 0980 0000FF42 		.word	1124007936
 2339 0984 00C00640 		.word	1074184192
 2340 0988 00000000 		.word	.LANCHOR5
 2341 098c 0000FC42 		.word	1123811328
 2342 0990 00000000 		.word	newExposure
 2343 0994 CDCCCC3C 		.word	1020054733
 2344 0998 00000000 		.word	.LANCHOR6
 2345              	.L357:
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2346              		.loc 1 599 0
 2347 099c 281C     		add	r0, r5, #0
 2348 099e 0021     		mov	r1, #0
 2349 09a0 FFF7FEFF 		bl	__aeabi_fcmpeq
 2350              	.LVL342:
 2351 09a4 0028     		cmp	r0, #0
 2352 09a6 12D1     		bne	.L245
 2353              	.L232:
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2354              		.loc 1 599 0
 2355 09a8 281C     		add	r0, r5, #0
 2356 09aa 0021     		mov	r1, #0
 2357 09ac FFF7FEFF 		bl	__aeabi_fcmpge
 2358              	.LVL343:
 2359 09b0 0028     		cmp	r0, #0
 2360 09b2 C3D0     		beq	.L238
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2361              		.loc 1 599 0
 2362 09b4 281C     		add	r0, r5, #0
 2363 09b6 B049     		ldr	r1, .L383+8
 2364 09b8 FFF7FEFF 		bl	__aeabi_fcmpge
 2365              	.LVL344:
 2366 09bc 0028     		cmp	r0, #0
 2367 09be 06D0     		beq	.L245
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2368              		.loc 1 599 0
 2369 09c0 281C     		add	r0, r5, #0
 2370 09c2 AE49     		ldr	r1, .L383+12
 2371 09c4 FFF7FEFF 		bl	__aeabi_fcmple
 2372              	.LVL345:
 2373 09c8 7F26     		mov	r6, #127
 2374 09ca 0028     		cmp	r0, #0
 2375 09cc A8D1     		bne	.L236
 2376              	.L245:
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2377              		.loc 1 599 0
 2378 09ce 281C     		add	r0, r5, #0
 2379 09d0 FFF7FEFF 		bl	__aeabi_f2iz
 2380              	.LVL346:
 2381 09d4 C6B2     		uxtb	r6, r0
 2382 09d6 A3E7     		b	.L236
 2383              	.L355:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2384              		.loc 1 595 0 is_stmt 1
 2385 09d8 381C     		add	r0, r7, #0
 2386 09da FFF7FEFF 		bl	__aeabi_f2d
 2387              	.LVL347:
 2388 09de A54B     		ldr	r3, .L383+4
 2389 09e0 A34A     		ldr	r2, .L383
 2390 09e2 FFF7FEFF 		bl	__aeabi_dsub
 2391              	.LVL348:
 2392 09e6 FFF7FEFF 		bl	__aeabi_d2iz
 2393              	.LVL349:
 2394 09ea C1B2     		uxtb	r1, r0
 2395 09ec 51E7     		b	.L228
 2396              	.L350:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 2397              		.loc 1 589 0
 2398 09ee 0120     		mov	r0, #1
 2399 09f0 FFF7FEFF 		bl	TFC_GetMotorPWM
 2400              	.LVL350:
 2401 09f4 A249     		ldr	r1, .L383+16
 2402 09f6 FFF7FEFF 		bl	__aeabi_fmul
 2403              	.LVL351:
 2404 09fa FFF7FEFF 		bl	__aeabi_f2d
 2405              	.LVL352:
 2406 09fe 9D4B     		ldr	r3, .L383+4
 2407 0a00 9B4A     		ldr	r2, .L383
 2408 0a02 FFF7FEFF 		bl	__aeabi_dsub
 2409              	.LVL353:
 2410 0a06 FFF7FEFF 		bl	__aeabi_d2iz
 2411              	.LVL354:
 2412 0a0a C1B2     		uxtb	r1, r0
 2413 0a0c 84E5     		b	.L161
 2414              	.L349:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 2415              		.loc 1 587 0
 2416 0a0e 0020     		mov	r0, #0
 2417 0a10 FFF7FEFF 		bl	TFC_GetMotorPWM
 2418              	.LVL355:
 2419 0a14 9A49     		ldr	r1, .L383+16
 2420 0a16 FFF7FEFF 		bl	__aeabi_fmul
 2421              	.LVL356:
 2422 0a1a FFF7FEFF 		bl	__aeabi_f2d
 2423              	.LVL357:
 2424 0a1e 954B     		ldr	r3, .L383+4
 2425 0a20 934A     		ldr	r2, .L383
 2426 0a22 FFF7FEFF 		bl	__aeabi_dsub
 2427              	.LVL358:
 2428 0a26 FFF7FEFF 		bl	__aeabi_d2iz
 2429              	.LVL359:
 2430 0a2a C1B2     		uxtb	r1, r0
 2431 0a2c 56E5     		b	.L158
 2432              	.L375:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2433              		.loc 1 593 0
 2434 0a2e 0120     		mov	r0, #1
 2435 0a30 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2436              	.LVL360:
 2437 0a34 9349     		ldr	r1, .L383+20
 2438 0a36 FFF7FEFF 		bl	__aeabi_fmul
 2439              	.LVL361:
 2440 0a3a 8F49     		ldr	r1, .L383+8
 2441 0a3c FFF7FEFF 		bl	__aeabi_fcmpge
 2442              	.LVL362:
 2443 0a40 0028     		cmp	r0, #0
 2444 0a42 00D1     		bne	.LCB2127
 2445 0a44 D1E6     		b	.L198	@long jump
 2446              	.LCB2127:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2447              		.loc 1 593 0 is_stmt 0
 2448 0a46 0120     		mov	r0, #1
 2449 0a48 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2450              	.LVL363:
 2451 0a4c CDE6     		b	.L198
 2452              	.L373:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2453              		.loc 1 591 0 is_stmt 1
 2454 0a4e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2455              	.LVL364:
 2456 0a52 8C49     		ldr	r1, .L383+20
 2457 0a54 FFF7FEFF 		bl	__aeabi_fmul
 2458              	.LVL365:
 2459 0a58 8749     		ldr	r1, .L383+8
 2460 0a5a FFF7FEFF 		bl	__aeabi_fcmpge
 2461              	.LVL366:
 2462 0a5e 0028     		cmp	r0, #0
 2463 0a60 00D1     		bne	.LCB2144
 2464 0a62 FAE5     		b	.L166	@long jump
 2465              	.LCB2144:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2466              		.loc 1 591 0 is_stmt 0
 2467 0a64 0020     		mov	r0, #0
 2468 0a66 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2469              	.LVL367:
 2470 0a6a F6E5     		b	.L166
 2471              	.L371:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2472              		.loc 1 585 0 is_stmt 1
 2473 0a6c 0120     		mov	r0, #1
 2474 0a6e 8227     		mov	r7, #130
 2475 0a70 FFF7FEFF 		bl	getSpeed
 2476              	.LVL368:
 2477 0a74 F905     		lsl	r1, r7, #23
 2478 0a76 FFF7FEFF 		bl	__aeabi_fmul
 2479              	.LVL369:
 2480 0a7a 7F49     		ldr	r1, .L383+8
 2481 0a7c FFF7FEFF 		bl	__aeabi_fcmpge
 2482              	.LVL370:
 2483 0a80 0028     		cmp	r0, #0
 2484 0a82 00D1     		bne	.LCB2163
 2485 0a84 CCE4     		b	.L128	@long jump
 2486              	.LCB2163:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2487              		.loc 1 585 0 is_stmt 0
 2488 0a86 0120     		mov	r0, #1
 2489 0a88 FFF7FEFF 		bl	getSpeed
 2490              	.LVL371:
 2491 0a8c C8E4     		b	.L128
 2492              	.L369:
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2493              		.loc 1 583 0 is_stmt 1
 2494 0a8e 8226     		mov	r6, #130
 2495 0a90 FFF7FEFF 		bl	getSpeed
 2496              	.LVL372:
 2497 0a94 F105     		lsl	r1, r6, #23
 2498 0a96 FFF7FEFF 		bl	__aeabi_fmul
 2499              	.LVL373:
 2500 0a9a 7749     		ldr	r1, .L383+8
 2501 0a9c FFF7FEFF 		bl	__aeabi_fcmpge
 2502              	.LVL374:
 2503 0aa0 0028     		cmp	r0, #0
 2504 0aa2 01D1     		bne	.LCB2181
 2505 0aa4 FFF7A9FB 		bl	.L96	@far jump
 2506              	.LCB2181:
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2507              		.loc 1 583 0 is_stmt 0
 2508 0aa8 0020     		mov	r0, #0
 2509 0aaa FFF7FEFF 		bl	getSpeed
 2510              	.LVL375:
 2511 0aae FFF7A4FB 		bl	.L96	@ far jump
 2512              	.L346:
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2513              		.loc 1 583 0
 2514 0ab2 0020     		mov	r0, #0
 2515 0ab4 FFF7FEFF 		bl	getSpeed
 2516              	.LVL376:
 2517 0ab8 8223     		mov	r3, #130
 2518 0aba D905     		lsl	r1, r3, #23
 2519 0abc FFF7FEFF 		bl	__aeabi_fmul
 2520              	.LVL377:
 2521 0ac0 6D49     		ldr	r1, .L383+8
 2522 0ac2 FFF7FEFF 		bl	__aeabi_fcmpge
 2523              	.LVL378:
 2524 0ac6 0028     		cmp	r0, #0
 2525 0ac8 01D1     		bne	.LCB2200
 2526 0aca FFF762FB 		bl	.L122	@far jump
 2527              	.LCB2200:
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2528              		.loc 1 583 0
 2529 0ace 0020     		mov	r0, #0
 2530 0ad0 FFF7FEFF 		bl	getSpeed
 2531              	.LVL379:
 2532 0ad4 8221     		mov	r1, #130
 2533 0ad6 C905     		lsl	r1, r1, #23
 2534 0ad8 FFF7FEFF 		bl	__aeabi_fmul
 2535              	.LVL380:
 2536 0adc 6749     		ldr	r1, .L383+12
 2537 0ade FFF7FEFF 		bl	__aeabi_fcmple
 2538              	.LVL381:
 2539 0ae2 0028     		cmp	r0, #0
 2540 0ae4 01D0     		beq	.LCB2212
 2541 0ae6 FFF7CAFB 		bl	.L113	@far jump
 2542              	.LCB2212:
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2543              		.loc 1 583 0
 2544 0aea 0021     		mov	r1, #0
 2545 0aec FFF7C8FB 		bl	.L107	@ far jump
 2546              	.L348:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2547              		.loc 1 585 0 is_stmt 1
 2548 0af0 0120     		mov	r0, #1
 2549 0af2 8226     		mov	r6, #130
 2550 0af4 FFF7FEFF 		bl	getSpeed
 2551              	.LVL382:
 2552 0af8 F105     		lsl	r1, r6, #23
 2553 0afa FFF7FEFF 		bl	__aeabi_fmul
 2554              	.LVL383:
 2555 0afe 5E49     		ldr	r1, .L383+8
 2556 0b00 FFF7FEFF 		bl	__aeabi_fcmpge
 2557              	.LVL384:
 2558 0b04 0028     		cmp	r0, #0
 2559 0b06 00D1     		bne	.LCB2229
 2560 0b08 40E4     		b	.L154	@long jump
 2561              	.LCB2229:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2562              		.loc 1 585 0 is_stmt 0
 2563 0b0a 0120     		mov	r0, #1
 2564 0b0c FFF7FEFF 		bl	getSpeed
 2565              	.LVL385:
 2566 0b10 8222     		mov	r2, #130
 2567 0b12 D105     		lsl	r1, r2, #23
 2568 0b14 FFF7FEFF 		bl	__aeabi_fmul
 2569              	.LVL386:
 2570 0b18 5849     		ldr	r1, .L383+12
 2571 0b1a FFF7FEFF 		bl	__aeabi_fcmple
 2572              	.LVL387:
 2573 0b1e 0028     		cmp	r0, #0
 2574 0b20 00D0     		beq	.LCB2241
 2575 0b22 BCE4     		b	.L145	@long jump
 2576              	.LCB2241:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2577              		.loc 1 585 0
 2578 0b24 0021     		mov	r1, #0
 2579 0b26 BBE4     		b	.L139
 2580              	.L354:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2581              		.loc 1 593 0 is_stmt 1
 2582 0b28 0120     		mov	r0, #1
 2583 0b2a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2584              	.LVL388:
 2585 0b2e 5549     		ldr	r1, .L383+20
 2586 0b30 FFF7FEFF 		bl	__aeabi_fmul
 2587              	.LVL389:
 2588 0b34 5049     		ldr	r1, .L383+8
 2589 0b36 FFF7FEFF 		bl	__aeabi_fcmpge
 2590              	.LVL390:
 2591 0b3a 0028     		cmp	r0, #0
 2592 0b3c 00D1     		bne	.LCB2257
 2593 0b3e 3BE6     		b	.L224	@long jump
 2594              	.LCB2257:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2595              		.loc 1 593 0 is_stmt 0
 2596 0b40 0120     		mov	r0, #1
 2597 0b42 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2598              	.LVL391:
 2599 0b46 4F49     		ldr	r1, .L383+20
 2600 0b48 FFF7FEFF 		bl	__aeabi_fmul
 2601              	.LVL392:
 2602 0b4c 4B49     		ldr	r1, .L383+12
 2603 0b4e FFF7FEFF 		bl	__aeabi_fcmple
 2604              	.LVL393:
 2605 0b52 0028     		cmp	r0, #0
 2606 0b54 00D0     		beq	.LCB2268
 2607 0b56 82E6     		b	.L215	@long jump
 2608              	.LCB2268:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2609              		.loc 1 593 0
 2610 0b58 0021     		mov	r1, #0
 2611 0b5a 81E6     		b	.L209
 2612              	.L352:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2613              		.loc 1 591 0 is_stmt 1
 2614 0b5c 0020     		mov	r0, #0
 2615 0b5e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2616              	.LVL394:
 2617 0b62 4849     		ldr	r1, .L383+20
 2618 0b64 FFF7FEFF 		bl	__aeabi_fmul
 2619              	.LVL395:
 2620 0b68 4349     		ldr	r1, .L383+8
 2621 0b6a FFF7FEFF 		bl	__aeabi_fcmpge
 2622              	.LVL396:
 2623 0b6e 0028     		cmp	r0, #0
 2624 0b70 00D1     		bne	.LCB2284
 2625 0b72 45E5     		b	.L192	@long jump
 2626              	.LCB2284:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2627              		.loc 1 591 0 is_stmt 0
 2628 0b74 0020     		mov	r0, #0
 2629 0b76 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2630              	.LVL397:
 2631 0b7a 4249     		ldr	r1, .L383+20
 2632 0b7c FFF7FEFF 		bl	__aeabi_fmul
 2633              	.LVL398:
 2634 0b80 3E49     		ldr	r1, .L383+12
 2635 0b82 FFF7FEFF 		bl	__aeabi_fcmple
 2636              	.LVL399:
 2637 0b86 0028     		cmp	r0, #0
 2638 0b88 00D0     		beq	.LCB2295
 2639 0b8a A0E5     		b	.L183	@long jump
 2640              	.LCB2295:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2641              		.loc 1 591 0
 2642 0b8c 0021     		mov	r1, #0
 2643 0b8e 9FE5     		b	.L177
 2644              	.L118:
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2645              		.loc 1 583 0 is_stmt 1
 2646 0b90 0020     		mov	r0, #0
 2647 0b92 8227     		mov	r7, #130
 2648 0b94 FFF7FEFF 		bl	getSpeed
 2649              	.LVL400:
 2650 0b98 F905     		lsl	r1, r7, #23
 2651 0b9a FFF7FEFF 		bl	__aeabi_fmul
 2652              	.LVL401:
 2653 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 2654              	.LVL402:
 2655 0ba2 C1B2     		uxtb	r1, r0
 2656 0ba4 FFF76CFB 		bl	.L107	@ far jump
 2657              	.L220:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2658              		.loc 1 593 0
 2659 0ba8 0120     		mov	r0, #1
 2660 0baa FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2661              	.LVL403:
 2662 0bae 3549     		ldr	r1, .L383+20
 2663 0bb0 FFF7FEFF 		bl	__aeabi_fmul
 2664              	.LVL404:
 2665 0bb4 FFF7FEFF 		bl	__aeabi_f2iz
 2666              	.LVL405:
 2667 0bb8 C1B2     		uxtb	r1, r0
 2668 0bba 51E6     		b	.L209
 2669              	.L188:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2670              		.loc 1 591 0
 2671 0bbc 0020     		mov	r0, #0
 2672 0bbe FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2673              	.LVL406:
 2674 0bc2 3049     		ldr	r1, .L383+20
 2675 0bc4 FFF7FEFF 		bl	__aeabi_fmul
 2676              	.LVL407:
 2677 0bc8 FFF7FEFF 		bl	__aeabi_f2iz
 2678              	.LVL408:
 2679 0bcc C1B2     		uxtb	r1, r0
 2680 0bce 7FE5     		b	.L177
 2681              	.L150:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2682              		.loc 1 585 0
 2683 0bd0 0120     		mov	r0, #1
 2684 0bd2 FFF7FEFF 		bl	getSpeed
 2685              	.LVL409:
 2686 0bd6 8223     		mov	r3, #130
 2687 0bd8 D905     		lsl	r1, r3, #23
 2688 0bda FFF7FEFF 		bl	__aeabi_fmul
 2689              	.LVL410:
 2690 0bde FFF7FEFF 		bl	__aeabi_f2iz
 2691              	.LVL411:
 2692 0be2 C1B2     		uxtb	r1, r0
 2693 0be4 5CE4     		b	.L139
 2694              	.L259:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2695              		.loc 1 597 0
 2696 0be6 0021     		mov	r1, #0
 2697 0be8 61E6     		b	.L229
 2698              	.L376:
 2699 0bea 6421     		mov	r1, #100
 2700 0bec 5FE6     		b	.L229
 2701              	.L374:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2702              		.loc 1 593 0
 2703 0bee 0120     		mov	r0, #1
 2704 0bf0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2705              	.LVL412:
 2706 0bf4 2349     		ldr	r1, .L383+20
 2707 0bf6 FFF7FEFF 		bl	__aeabi_fmul
 2708              	.LVL413:
 2709 0bfa 2049     		ldr	r1, .L383+12
 2710 0bfc FFF7FEFF 		bl	__aeabi_fcmple
 2711              	.LVL414:
 2712 0c00 7E21     		mov	r1, #126
 2713 0c02 0028     		cmp	r0, #0
 2714 0c04 00D0     		beq	.LCB2380
 2715 0c06 2BE6     		b	.L209	@long jump
 2716              	.LCB2380:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2717              		.loc 1 593 0 is_stmt 0
 2718 0c08 0021     		mov	r1, #0
 2719 0c0a 29E6     		b	.L209
 2720              	.L368:
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2721              		.loc 1 583 0 is_stmt 1
 2722 0c0c 0020     		mov	r0, #0
 2723 0c0e FFF7FEFF 		bl	getSpeed
 2724              	.LVL415:
 2725 0c12 8223     		mov	r3, #130
 2726 0c14 D905     		lsl	r1, r3, #23
 2727 0c16 FFF7FEFF 		bl	__aeabi_fmul
 2728              	.LVL416:
 2729 0c1a 1849     		ldr	r1, .L383+12
 2730 0c1c FFF7FEFF 		bl	__aeabi_fcmple
 2731              	.LVL417:
 2732 0c20 7E21     		mov	r1, #126
 2733 0c22 0028     		cmp	r0, #0
 2734 0c24 01D0     		beq	.LCB2398
 2735 0c26 FFF72BFB 		bl	.L107	@far jump
 2736              	.LCB2398:
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2737              		.loc 1 583 0 is_stmt 0
 2738 0c2a 0021     		mov	r1, #0
 2739 0c2c FFF728FB 		bl	.L107	@ far jump
 2740              	.L370:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2741              		.loc 1 585 0 is_stmt 1
 2742 0c30 0120     		mov	r0, #1
 2743 0c32 8226     		mov	r6, #130
 2744 0c34 FFF7FEFF 		bl	getSpeed
 2745              	.LVL418:
 2746 0c38 F105     		lsl	r1, r6, #23
 2747 0c3a FFF7FEFF 		bl	__aeabi_fmul
 2748              	.LVL419:
 2749 0c3e 0F49     		ldr	r1, .L383+12
 2750 0c40 FFF7FEFF 		bl	__aeabi_fcmple
 2751              	.LVL420:
 2752 0c44 7E21     		mov	r1, #126
 2753 0c46 0028     		cmp	r0, #0
 2754 0c48 00D0     		beq	.LCB2416
 2755 0c4a 29E4     		b	.L139	@long jump
 2756              	.LCB2416:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2757              		.loc 1 585 0 is_stmt 0
 2758 0c4c 0021     		mov	r1, #0
 2759 0c4e 27E4     		b	.L139
 2760              	.L372:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2761              		.loc 1 591 0 is_stmt 1
 2762 0c50 0020     		mov	r0, #0
 2763 0c52 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2764              	.LVL421:
 2765 0c56 0B49     		ldr	r1, .L383+20
 2766 0c58 FFF7FEFF 		bl	__aeabi_fmul
 2767              	.LVL422:
 2768 0c5c 0749     		ldr	r1, .L383+12
 2769 0c5e FFF7FEFF 		bl	__aeabi_fcmple
 2770              	.LVL423:
 2771 0c62 7E21     		mov	r1, #126
 2772 0c64 0028     		cmp	r0, #0
 2773 0c66 00D0     		beq	.LCB2433
 2774 0c68 32E5     		b	.L177	@long jump
 2775              	.LCB2433:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2776              		.loc 1 591 0 is_stmt 0
 2777 0c6a 0021     		mov	r1, #0
 2778 0c6c 30E5     		b	.L177
 2779              	.L384:
 2780 0c6e C046     		.align	3
 2781              	.L383:
 2782 0c70 00000000 		.word	0
 2783 0c74 0000E03F 		.word	1071644672
 2784 0c78 0000FF42 		.word	1124007936
 2785 0c7c 00800043 		.word	1124106240
 2786 0c80 0000FC42 		.word	1123811328
 2787 0c84 00007042 		.word	1114636288
 2788              		.cfi_endproc
 2789              	.LFE10:
 2791              		.global	__aeabi_ui2f
 2792              		.section	.text.BluetoothSetSpeed,"ax",%progbits
 2793              		.align	2
 2794              		.global	BluetoothSetSpeed
 2795              		.code	16
 2796              		.thumb_func
 2798              	BluetoothSetSpeed:
 2799              	.LFB12:
 605:../Sources/main.c **** 
 606:../Sources/main.c **** void telemetryReadData(){
 607:../Sources/main.c **** 	
 608:../Sources/main.c **** 	if(count==0){
 609:../Sources/main.c **** 		//if something is on the UART, get it and put it in received_byte
 610:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 611:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 612:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 613:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 614:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 615:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 616:../Sources/main.c **** 			count++;
 617:../Sources/main.c **** 		}
 618:../Sources/main.c **** 	}
 619:../Sources/main.c **** 	else if(count>0){
 620:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 621:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 622:../Sources/main.c **** 			count=0;
 623:../Sources/main.c **** 		}
 624:../Sources/main.c **** 	}
 625:../Sources/main.c **** 	
 626:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 627:../Sources/main.c **** 		switch(received_byte1){
 628:../Sources/main.c **** 		case 255: //SPEED
 629:../Sources/main.c **** 			BluetoothSetSpeed(received_byte2);
 630:../Sources/main.c **** 			break;
 631:../Sources/main.c **** 		case 251: //LED
 632:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 633:../Sources/main.c **** 			break;
 634:../Sources/main.c **** 		}
 635:../Sources/main.c **** 		//received_byte1=0;
 636:../Sources/main.c **** 		//received_byte2=0;
 637:../Sources/main.c **** 	}
 638:../Sources/main.c **** 	
 639:../Sources/main.c **** }
 640:../Sources/main.c **** 
 641:../Sources/main.c **** void BluetoothSetSpeed(uint8_t i){
 2800              		.loc 1 641 0 is_stmt 1
 2801              		.cfi_startproc
 2802              	.LVL424:
 2803 0000 38B5     		push	{r3, r4, r5, lr}
 2804              	.LCFI12:
 2805              		.cfi_def_cfa_offset 16
 2806              		.cfi_offset 3, -16
 2807              		.cfi_offset 4, -12
 2808              		.cfi_offset 5, -8
 2809              		.cfi_offset 14, -4
 642:../Sources/main.c **** 	max_speed_percent=i;
 2810              		.loc 1 642 0
 2811 0002 FFF7FEFF 		bl	__aeabi_ui2f
 2812              	.LVL425:
 643:../Sources/main.c **** 		if(max_speed_percent>100){
 2813              		.loc 1 643 0
 2814 0006 064C     		ldr	r4, .L389
 642:../Sources/main.c **** 	max_speed_percent=i;
 2815              		.loc 1 642 0
 2816 0008 051C     		add	r5, r0, #0
 2817              		.loc 1 643 0
 2818 000a 211C     		add	r1, r4, #0
 2819 000c FFF7FEFF 		bl	__aeabi_fcmpgt
 2820              	.LVL426:
 644:../Sources/main.c **** 			max_speed_percent=100;
 2821              		.loc 1 644 0
 2822 0010 044B     		ldr	r3, .L389+4
 643:../Sources/main.c **** 		if(max_speed_percent>100){
 2823              		.loc 1 643 0
 2824 0012 0028     		cmp	r0, #0
 2825 0014 01D0     		beq	.L388
 2826              		.loc 1 644 0
 2827 0016 1C60     		str	r4, [r3]
 2828              	.L385:
 645:../Sources/main.c **** 		}
 646:../Sources/main.c **** }
 2829              		.loc 1 646 0
 2830              		@ sp needed for prologue
 2831 0018 38BD     		pop	{r3, r4, r5, pc}
 2832              	.L388:
 642:../Sources/main.c **** 	max_speed_percent=i;
 2833              		.loc 1 642 0
 2834 001a 1D60     		str	r5, [r3]
 2835 001c FCE7     		b	.L385
 2836              	.L390:
 2837 001e C046     		.align	2
 2838              	.L389:
 2839 0020 0000C842 		.word	1120403456
 2840 0024 00000000 		.word	.LANCHOR7
 2841              		.cfi_endproc
 2842              	.LFE12:
 2844              		.section	.text.BluetoothSetLED,"ax",%progbits
 2845              		.align	2
 2846              		.global	BluetoothSetLED
 2847              		.code	16
 2848              		.thumb_func
 2850              	BluetoothSetLED:
 2851              	.LFB13:
 647:../Sources/main.c **** 
 648:../Sources/main.c **** void BluetoothSetLED(uint8_t i){	
 2852              		.loc 1 648 0
 2853              		.cfi_startproc
 2854              	.LVL427:
 2855 0000 00B5     		push	{lr}
 2856              	.LCFI13:
 2857              		.cfi_def_cfa_offset 4
 2858              		.cfi_offset 14, -4
 649:../Sources/main.c **** 		switch(i){
 2859              		.loc 1 649 0
 2860 0002 0228     		cmp	r0, #2
 2861 0004 43D0     		beq	.L394
 2862 0006 17D8     		bhi	.L397
 2863 0008 0128     		cmp	r0, #1
 2864 000a 4CD0     		beq	.L402
 2865              	.L392:
 650:../Sources/main.c **** 			case 1: 
 651:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 652:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 653:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 654:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 655:../Sources/main.c **** 				break;
 656:../Sources/main.c **** 			case 2:
 657:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 658:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 659:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 660:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 661:../Sources/main.c **** 				break;
 662:../Sources/main.c **** 			case 3:
 663:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 664:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 665:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 666:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);			
 667:../Sources/main.c **** 				break;
 668:../Sources/main.c **** 			case 4: 
 669:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 670:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 671:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 672:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 673:../Sources/main.c **** 				break;
 674:../Sources/main.c **** 			default:
 675:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2866              		.loc 1 675 0
 2867 000c 294B     		ldr	r3, .L403
 2868 000e 8022     		mov	r2, #128
 2869 0010 9968     		ldr	r1, [r3, #8]
 2870 0012 5000     		lsl	r0, r2, #1
 2871              	.LVL428:
 2872 0014 0843     		orr	r0, r1
 2873 0016 9860     		str	r0, [r3, #8]
 2874              	.L400:
 676:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2875              		.loc 1 676 0
 2876 0018 9968     		ldr	r1, [r3, #8]
 2877 001a 8022     		mov	r2, #128
 2878 001c 9000     		lsl	r0, r2, #2
 2879 001e 0843     		orr	r0, r1
 2880 0020 9860     		str	r0, [r3, #8]
 2881              	.L401:
 677:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2882              		.loc 1 677 0
 2883 0022 9968     		ldr	r1, [r3, #8]
 2884 0024 8022     		mov	r2, #128
 2885 0026 D000     		lsl	r0, r2, #3
 2886 0028 0843     		orr	r0, r1
 2887 002a 9860     		str	r0, [r3, #8]
 2888              	.L399:
 678:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 2889              		.loc 1 678 0
 2890 002c 9968     		ldr	r1, [r3, #8]
 2891 002e 8022     		mov	r2, #128
 2892 0030 1001     		lsl	r0, r2, #4
 2893 0032 0843     		orr	r0, r1
 2894 0034 9860     		str	r0, [r3, #8]
 2895              	.L391:
 679:../Sources/main.c **** 			}
 680:../Sources/main.c **** }
 2896              		.loc 1 680 0
 2897              		@ sp needed for prologue
 2898 0036 00BD     		pop	{pc}
 2899              	.LVL429:
 2900              	.L397:
 649:../Sources/main.c **** 		switch(i){
 2901              		.loc 1 649 0
 2902 0038 0328     		cmp	r0, #3
 2903 003a 17D0     		beq	.L395
 2904 003c 0428     		cmp	r0, #4
 2905 003e E5D1     		bne	.L392
 669:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2906              		.loc 1 669 0
 2907 0040 1C4B     		ldr	r3, .L403
 2908 0042 8022     		mov	r2, #128
 2909 0044 9968     		ldr	r1, [r3, #8]
 2910 0046 5000     		lsl	r0, r2, #1
 2911              	.LVL430:
 2912 0048 0843     		orr	r0, r1
 2913 004a 9860     		str	r0, [r3, #8]
 670:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2914              		.loc 1 670 0
 2915 004c 9968     		ldr	r1, [r3, #8]
 2916 004e 8022     		mov	r2, #128
 2917 0050 9000     		lsl	r0, r2, #2
 2918 0052 0843     		orr	r0, r1
 2919 0054 9860     		str	r0, [r3, #8]
 671:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2920              		.loc 1 671 0
 2921 0056 9968     		ldr	r1, [r3, #8]
 2922 0058 8022     		mov	r2, #128
 2923 005a D000     		lsl	r0, r2, #3
 2924 005c 0843     		orr	r0, r1
 2925 005e 9860     		str	r0, [r3, #8]
 672:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 2926              		.loc 1 672 0
 2927 0060 5968     		ldr	r1, [r3, #4]
 2928 0062 8022     		mov	r2, #128
 2929 0064 1001     		lsl	r0, r2, #4
 2930 0066 0843     		orr	r0, r1
 2931 0068 5860     		str	r0, [r3, #4]
 673:../Sources/main.c **** 				break;
 2932              		.loc 1 673 0
 2933 006a E4E7     		b	.L391
 2934              	.LVL431:
 2935              	.L395:
 663:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2936              		.loc 1 663 0
 2937 006c 114B     		ldr	r3, .L403
 2938 006e 8022     		mov	r2, #128
 2939 0070 9968     		ldr	r1, [r3, #8]
 2940 0072 5000     		lsl	r0, r2, #1
 2941              	.LVL432:
 2942 0074 0843     		orr	r0, r1
 2943 0076 9860     		str	r0, [r3, #8]
 664:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2944              		.loc 1 664 0
 2945 0078 9968     		ldr	r1, [r3, #8]
 2946 007a 8022     		mov	r2, #128
 2947 007c 9000     		lsl	r0, r2, #2
 2948 007e 0843     		orr	r0, r1
 2949 0080 9860     		str	r0, [r3, #8]
 665:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 2950              		.loc 1 665 0
 2951 0082 5968     		ldr	r1, [r3, #4]
 2952 0084 8022     		mov	r2, #128
 2953 0086 D000     		lsl	r0, r2, #3
 2954 0088 0843     		orr	r0, r1
 2955 008a 5860     		str	r0, [r3, #4]
 2956 008c CEE7     		b	.L399
 2957              	.LVL433:
 2958              	.L394:
 657:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2959              		.loc 1 657 0
 2960 008e 094B     		ldr	r3, .L403
 2961 0090 8022     		mov	r2, #128
 2962 0092 9968     		ldr	r1, [r3, #8]
 2963 0094 5000     		lsl	r0, r2, #1
 2964              	.LVL434:
 2965 0096 0843     		orr	r0, r1
 2966 0098 9860     		str	r0, [r3, #8]
 658:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 2967              		.loc 1 658 0
 2968 009a 5968     		ldr	r1, [r3, #4]
 2969 009c 8022     		mov	r2, #128
 2970 009e 9000     		lsl	r0, r2, #2
 2971 00a0 0843     		orr	r0, r1
 2972 00a2 5860     		str	r0, [r3, #4]
 2973 00a4 BDE7     		b	.L401
 2974              	.LVL435:
 2975              	.L402:
 651:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 2976              		.loc 1 651 0
 2977 00a6 034B     		ldr	r3, .L403
 2978 00a8 8022     		mov	r2, #128
 2979 00aa 5968     		ldr	r1, [r3, #4]
 2980 00ac 5000     		lsl	r0, r2, #1
 2981              	.LVL436:
 2982 00ae 0843     		orr	r0, r1
 2983 00b0 5860     		str	r0, [r3, #4]
 2984 00b2 B1E7     		b	.L400
 2985              	.L404:
 2986              		.align	2
 2987              	.L403:
 2988 00b4 40F00F40 		.word	1074786368
 2989              		.cfi_endproc
 2990              	.LFE13:
 2992              		.section	.text.telemetryReadData,"ax",%progbits
 2993              		.align	2
 2994              		.global	telemetryReadData
 2995              		.code	16
 2996              		.thumb_func
 2998              	telemetryReadData:
 2999              	.LFB11:
 606:../Sources/main.c **** void telemetryReadData(){
 3000              		.loc 1 606 0
 3001              		.cfi_startproc
 3002 0000 38B5     		push	{r3, r4, r5, lr}
 3003              	.LCFI14:
 3004              		.cfi_def_cfa_offset 16
 3005              		.cfi_offset 3, -16
 3006              		.cfi_offset 4, -12
 3007              		.cfi_offset 5, -8
 3008              		.cfi_offset 14, -4
 608:../Sources/main.c **** 	if(count==0){
 3009              		.loc 1 608 0
 3010 0002 284C     		ldr	r4, .L423
 610:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3011              		.loc 1 610 0
 3012 0004 2848     		ldr	r0, .L423+4
 608:../Sources/main.c **** 	if(count==0){
 3013              		.loc 1 608 0
 3014 0006 2378     		ldrb	r3, [r4]
 3015 0008 002B     		cmp	r3, #0
 3016 000a 10D0     		beq	.L421
 620:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3017              		.loc 1 620 0
 3018 000c FFF7FEFF 		bl	uart_getchar_present
 3019              	.LVL437:
 3020 0010 0028     		cmp	r0, #0
 3021 0012 3BD1     		bne	.L409
 3022              	.L420:
 3023 0014 254A     		ldr	r2, .L423+8
 3024 0016 1578     		ldrb	r5, [r2]
 3025              	.L408:
 626:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3026              		.loc 1 626 0
 3027 0018 002D     		cmp	r5, #0
 3028 001a 07D0     		beq	.L405
 626:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3029              		.loc 1 626 0 is_stmt 0
 3030 001c 244C     		ldr	r4, .L423+12
 3031 001e 2078     		ldrb	r0, [r4]
 3032 0020 0028     		cmp	r0, #0
 3033 0022 03D0     		beq	.L405
 627:../Sources/main.c **** 		switch(received_byte1){
 3034              		.loc 1 627 0 is_stmt 1
 3035 0024 FB2D     		cmp	r5, #251
 3036 0026 39D0     		beq	.L413
 3037 0028 FF2D     		cmp	r5, #255
 3038 002a 23D0     		beq	.L422
 3039              	.L405:
 639:../Sources/main.c **** }
 3040              		.loc 1 639 0
 3041              		@ sp needed for prologue
 3042 002c 38BD     		pop	{r3, r4, r5, pc}
 3043              	.L421:
 610:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3044              		.loc 1 610 0
 3045 002e FFF7FEFF 		bl	uart_getchar_present
 3046              	.LVL438:
 3047 0032 0028     		cmp	r0, #0
 3048 0034 EED0     		beq	.L420
 611:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3049              		.loc 1 611 0
 3050 0036 1C48     		ldr	r0, .L423+4
 3051 0038 FFF7FEFF 		bl	uart_getchar
 3052              	.LVL439:
 3053 003c 1B4B     		ldr	r3, .L423+8
 612:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3054              		.loc 1 612 0
 3055 003e 1D4A     		ldr	r2, .L423+16
 611:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3056              		.loc 1 611 0
 3057 0040 1870     		strb	r0, [r3]
 612:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3058              		.loc 1 612 0
 3059 0042 8021     		mov	r1, #128
 611:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3060              		.loc 1 611 0
 3061 0044 051C     		mov	r5, r0
 612:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3062              		.loc 1 612 0
 3063 0046 5068     		ldr	r0, [r2, #4]
 3064 0048 4B00     		lsl	r3, r1, #1
 3065 004a 0343     		orr	r3, r0
 3066 004c 5360     		str	r3, [r2, #4]
 613:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 3067              		.loc 1 613 0
 3068 004e 5068     		ldr	r0, [r2, #4]
 3069 0050 8021     		mov	r1, #128
 3070 0052 8B00     		lsl	r3, r1, #2
 3071 0054 0343     		orr	r3, r0
 3072 0056 5360     		str	r3, [r2, #4]
 614:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 3073              		.loc 1 614 0
 3074 0058 5068     		ldr	r0, [r2, #4]
 3075 005a 8021     		mov	r1, #128
 3076 005c CB00     		lsl	r3, r1, #3
 3077 005e 0343     		orr	r3, r0
 3078 0060 5360     		str	r3, [r2, #4]
 615:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 3079              		.loc 1 615 0
 3080 0062 5068     		ldr	r0, [r2, #4]
 3081 0064 8021     		mov	r1, #128
 3082 0066 0B01     		lsl	r3, r1, #4
 3083 0068 0343     		orr	r3, r0
 3084 006a 5360     		str	r3, [r2, #4]
 616:../Sources/main.c **** 			count++;
 3085              		.loc 1 616 0
 3086 006c 2278     		ldrb	r2, [r4]
 3087 006e 0132     		add	r2, r2, #1
 3088 0070 2270     		strb	r2, [r4]
 3089 0072 D1E7     		b	.L408
 3090              	.L422:
 3091              	.LVL440:
 3092              	.LBB28:
 3093              	.LBB29:
 642:../Sources/main.c **** 	max_speed_percent=i;
 3094              		.loc 1 642 0
 3095 0074 FFF7FEFF 		bl	__aeabi_ui2f
 3096              	.LVL441:
 643:../Sources/main.c **** 		if(max_speed_percent>100){
 3097              		.loc 1 643 0
 3098 0078 0F4D     		ldr	r5, .L423+20
 642:../Sources/main.c **** 	max_speed_percent=i;
 3099              		.loc 1 642 0
 3100 007a 104C     		ldr	r4, .L423+24
 643:../Sources/main.c **** 		if(max_speed_percent>100){
 3101              		.loc 1 643 0
 3102 007c 291C     		add	r1, r5, #0
 642:../Sources/main.c **** 	max_speed_percent=i;
 3103              		.loc 1 642 0
 3104 007e 2060     		str	r0, [r4]
 643:../Sources/main.c **** 		if(max_speed_percent>100){
 3105              		.loc 1 643 0
 3106 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 3107              	.LVL442:
 3108 0084 0028     		cmp	r0, #0
 3109 0086 D1D0     		beq	.L405
 644:../Sources/main.c **** 			max_speed_percent=100;
 3110              		.loc 1 644 0
 3111 0088 2560     		str	r5, [r4]
 3112 008a CFE7     		b	.L405
 3113              	.L409:
 3114              	.LBE29:
 3115              	.LBE28:
 621:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 3116              		.loc 1 621 0
 3117 008c 0648     		ldr	r0, .L423+4
 3118 008e FFF7FEFF 		bl	uart_getchar
 3119              	.LVL443:
 3120 0092 0749     		ldr	r1, .L423+12
 3121 0094 0870     		strb	r0, [r1]
 622:../Sources/main.c **** 			count=0;
 3122              		.loc 1 622 0
 3123 0096 0020     		mov	r0, #0
 3124 0098 2070     		strb	r0, [r4]
 3125 009a BBE7     		b	.L420
 3126              	.L413:
 632:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 3127              		.loc 1 632 0
 3128 009c FFF7FEFF 		bl	BluetoothSetLED
 3129              	.LVL444:
 633:../Sources/main.c **** 			break;
 3130              		.loc 1 633 0
 3131 00a0 C4E7     		b	.L405
 3132              	.L424:
 3133 00a2 C046     		.align	2
 3134              	.L423:
 3135 00a4 00000000 		.word	.LANCHOR8
 3136 00a8 00C00640 		.word	1074184192
 3137 00ac 00000000 		.word	.LANCHOR9
 3138 00b0 00000000 		.word	.LANCHOR10
 3139 00b4 40F00F40 		.word	1074786368
 3140 00b8 0000C842 		.word	1120403456
 3141 00bc 00000000 		.word	.LANCHOR7
 3142              		.cfi_endproc
 3143              	.LFE11:
 3145              		.global	__aeabi_fadd
 3146              		.global	__aeabi_f2uiz
 3147              		.global	__aeabi_dmul
 3148              		.global	__aeabi_d2f
 3149              		.global	__aeabi_fdiv
 3150              		.global	__aeabi_fcmplt
 3151              		.section	.text.lineFollowingMode,"ax",%progbits
 3152              		.align	2
 3153              		.global	lineFollowingMode
 3154              		.code	16
 3155              		.thumb_func
 3157              	lineFollowingMode:
 3158              	.LFB1:
 202:../Sources/main.c **** {
 3159              		.loc 1 202 0
 3160              		.cfi_startproc
 3161              	.LVL445:
 3162 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3163              	.LCFI15:
 3164              		.cfi_def_cfa_offset 24
 3165              		.cfi_offset 3, -24
 3166              		.cfi_offset 4, -20
 3167              		.cfi_offset 5, -16
 3168              		.cfi_offset 6, -12
 3169              		.cfi_offset 7, -8
 3170              		.cfi_offset 14, -4
 3171 0002 5F46     		mov	r7, fp
 3172 0004 5646     		mov	r6, sl
 3173 0006 4D46     		mov	r5, r9
 3174 0008 4446     		mov	r4, r8
 3175 000a F0B4     		push	{r4, r5, r6, r7}
 3176              	.LCFI16:
 3177              		.cfi_def_cfa_offset 40
 3178              		.cfi_offset 8, -40
 3179              		.cfi_offset 9, -36
 3180              		.cfi_offset 10, -32
 3181              		.cfi_offset 11, -28
 202:../Sources/main.c **** {
 3182              		.loc 1 202 0
 3183 000c 071C     		mov	r7, r0
 206:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 3184              		.loc 1 206 0
 3185 000e 0120     		mov	r0, #1
 3186              	.LVL446:
 3187 0010 FFF7FEFF 		bl	TFC_GetPush_Button
 3188              	.LVL447:
 3189 0014 0128     		cmp	r0, #1
 3190 0016 00D1     		bne	.LCB2796
 3191 0018 CDE0     		b	.L454	@long jump
 3192              	.LCB2796:
 3193              	.L426:
 212:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 3194              		.loc 1 212 0
 3195 001a D14C     		ldr	r4, .L466+8
 3196 001c D14D     		ldr	r5, .L466+12
 3197 001e A169     		ldr	r1, [r4, #24]
 3198 0020 A942     		cmp	r1, r5
 3199 0022 00D9     		bls	.LCB2802
 3200 0024 C0E0     		b	.L455	@long jump
 3201              	.LCB2802:
 3202              	.L427:
 219:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 3203              		.loc 1 219 0
 3204 0026 2369     		ldr	r3, [r4, #16]
 3205 0028 312B     		cmp	r3, #49
 3206 002a 00D9     		bls	.LCB2806
 3207 002c B5E0     		b	.L456	@long jump
 3208              	.LCB2806:
 3209              	.L428:
 240:../Sources/main.c **** 		incline_speed=max_speed_percent;
 3210              		.loc 1 240 0
 3211 002e CE4D     		ldr	r5, .L466+16
 3212 0030 CE49     		ldr	r1, .L466+20
 3213 0032 2E68     		ldr	r6, [r5]
 3214 0034 8946     		mov	r9, r1
 3215 0036 0E60     		str	r6, [r1]
 242:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 3216              		.loc 1 242 0
 3217 0038 FB78     		ldrb	r3, [r7, #3]
 3218 003a 002B     		cmp	r3, #0
 3219 003c 00D1     		bne	.LCB2816
 3220 003e 93E0     		b	.L457	@long jump
 3221              	.LCB2816:
 3222              	.L429:
 251:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 3223              		.loc 1 251 0
 3224 0040 2268     		ldr	r2, [r4]
 3225 0042 632A     		cmp	r2, #99
 3226 0044 55D8     		bhi	.L458
 3227              	.L436:
 270:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 3228              		.loc 1 270 0
 3229 0046 FA78     		ldrb	r2, [r7, #3]
 3230 0048 002A     		cmp	r2, #0
 3231 004a 11D1     		bne	.L440
 273:../Sources/main.c **** 		if(stopline_enable == 1)
 3232              		.loc 1 273 0
 3233 004c C848     		ldr	r0, .L466+24
 272:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3234              		.loc 1 272 0
 3235 004e 0123     		mov	r3, #1
 273:../Sources/main.c **** 		if(stopline_enable == 1)
 3236              		.loc 1 273 0
 3237 0050 0678     		ldrb	r6, [r0]
 272:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3238              		.loc 1 272 0
 3239 0052 FB70     		strb	r3, [r7, #3]
 273:../Sources/main.c **** 		if(stopline_enable == 1)
 3240              		.loc 1 273 0
 3241 0054 012E     		cmp	r6, #1
 3242 0056 00D1     		bne	.LCB2830
 3243 0058 C8E0     		b	.L459	@long jump
 3244              	.LCB2830:
 3245              	.L441:
 277:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3246              		.loc 1 277 0
 3247 005a C649     		ldr	r1, .L466+28
 3248 005c 0868     		ldr	r0, [r1]
 3249 005e FFF7FEFF 		bl	getTotalIntensity
 3250              	.LVL448:
 3251 0062 C54D     		ldr	r5, .L466+32
 278:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3252              		.loc 1 278 0
 3253 0064 C549     		ldr	r1, .L466+36
 277:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3254              		.loc 1 277 0
 3255 0066 2860     		str	r0, [r5]
 278:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3256              		.loc 1 278 0
 3257 0068 FFF7FEFF 		bl	calculateNewExposure
 3258              	.LVL449:
 3259 006c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 3260              	.LVL450:
 3261              	.L440:
 281:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 3262              		.loc 1 281 0
 3263 0070 BA78     		ldrb	r2, [r7, #2]
 3264 0072 012A     		cmp	r2, #1
 3265 0074 00D8     		bhi	.LCB2847
 3266 0076 C2E0     		b	.L460	@long jump
 3267              	.LCB2847:
 315:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 3268              		.loc 1 315 0
 3269 0078 032A     		cmp	r2, #3
 3270 007a 00D1     		bne	.LCB2849
 3271 007c 36E1     		b	.L461	@long jump
 3272              	.LCB2849:
 320:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 3273              		.loc 1 320 0
 3274 007e 022A     		cmp	r2, #2
 3275 0080 05D0     		beq	.L462
 3276              	.LVL451:
 3277              	.L425:
 357:../Sources/main.c **** }
 3278              		.loc 1 357 0
 3279              		@ sp needed for prologue
 3280 0082 3CBC     		pop	{r2, r3, r4, r5}
 3281 0084 9046     		mov	r8, r2
 3282 0086 9946     		mov	r9, r3
 3283 0088 A246     		mov	sl, r4
 3284 008a AB46     		mov	fp, r5
 3285 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3286              	.LVL452:
 3287              	.L462:
 322:../Sources/main.c **** 		if(stopline_enable == 1)
 3288              		.loc 1 322 0
 3289 008e B84F     		ldr	r7, .L466+24
 3290              	.LVL453:
 3291 0090 3B78     		ldrb	r3, [r7]
 3292 0092 012B     		cmp	r3, #1
 3293 0094 F5D1     		bne	.L425
 3294              	.LBB40:
 327:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 3295              		.loc 1 327 0
 3296 0096 BA48     		ldr	r0, .L466+40
 3297 0098 0678     		ldrb	r6, [r0]
 3298 009a 002E     		cmp	r6, #0
 3299 009c 00D0     		beq	.LCB2878
 3300 009e 31E1     		b	.L447	@long jump
 3301              	.LCB2878:
 3302              	.LBB41:
 330:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3303              		.loc 1 330 0
 3304 00a0 6269     		ldr	r2, [r4, #20]
 329:../Sources/main.c **** 				stoplineJustDetected = 1;
 3305              		.loc 1 329 0
 3306 00a2 0370     		strb	r3, [r0]
 330:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3307              		.loc 1 330 0
 3308 00a4 B74F     		ldr	r7, .L466+44
 333:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3309              		.loc 1 333 0
 3310 00a6 B84B     		ldr	r3, .L466+48
 3311 00a8 B84E     		ldr	r6, .L466+52
 330:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3312              		.loc 1 330 0
 3313 00aa 3A60     		str	r2, [r7]
 3314              	.LVL454:
 333:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3315              		.loc 1 333 0
 3316 00ac 1868     		ldr	r0, [r3]
 3317 00ae 3168     		ldr	r1, [r6]
 3318 00b0 FC24     		mov	r4, #252
 3319 00b2 FFF7FEFF 		bl	__aeabi_fadd
 3320              	.LVL455:
 3321 00b6 A105     		lsl	r1, r4, #22
 3322 00b8 FFF7FEFF 		bl	__aeabi_fmul
 3323              	.LVL456:
 335:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3324              		.loc 1 335 0
 3325 00bc B449     		ldr	r1, .L466+56
 333:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3326              		.loc 1 333 0
 3327 00be 071C     		add	r7, r0, #0
 3328              	.LVL457:
 335:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3329              		.loc 1 335 0
 3330 00c0 FFF7FEFF 		bl	__aeabi_fcmplt
 3331              	.LVL458:
 3332 00c4 0028     		cmp	r0, #0
 3333 00c6 00D1     		bne	.LCB2902
 3334 00c8 41E1     		b	.L463	@long jump
 3335              	.LCB2902:
 337:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 3336              		.loc 1 337 0
 3337 00ca B24D     		ldr	r5, .L466+60
 3338              	.L448:
 3339              	.LVL459:
 340:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 3340              		.loc 1 340 0
 3341 00cc B249     		ldr	r1, .L466+64
 3342 00ce 381C     		add	r0, r7, #0
 3343 00d0 FFF7FEFF 		bl	__aeabi_fmul
 3344              	.LVL460:
 3345 00d4 B149     		ldr	r1, .L466+68
 3346 00d6 FFF7FEFF 		bl	__aeabi_fdiv
 3347              	.LVL461:
 3348 00da 011C     		add	r1, r0, #0
 3349 00dc 281C     		add	r0, r5, #0
 3350 00de FFF7FEFF 		bl	__aeabi_fdiv
 3351              	.LVL462:
 3352 00e2 AF49     		ldr	r1, .L466+72
 3353 00e4 FFF7FEFF 		bl	__aeabi_fmul
 3354              	.LVL463:
 3355 00e8 FFF7FEFF 		bl	__aeabi_f2uiz
 3356              	.LVL464:
 3357 00ec AD49     		ldr	r1, .L466+76
 3358 00ee 0860     		str	r0, [r1]
 3359 00f0 C7E7     		b	.L425
 3360              	.LVL465:
 3361              	.L458:
 3362              	.LBE41:
 3363              	.LBE40:
 253:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 3364              		.loc 1 253 0
 3365 00f2 0023     		mov	r3, #0
 3366 00f4 2360     		str	r3, [r4]
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3367              		.loc 1 254 0
 3368 00f6 0B25     		mov	r5, #11
 3369 00f8 7857     		ldrsb	r0, [r7, r5]
 3370 00fa 0021     		mov	r1, #0
 3371 00fc AA4A     		ldr	r2, .L466+80
 3372 00fe FFF7FEFF 		bl	getDesiredServoValue
 3373              	.LVL466:
 257:../Sources/main.c **** 		if(servoValue>0){
 3374              		.loc 1 257 0
 3375 0102 0021     		mov	r1, #0
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3376              		.loc 1 254 0
 3377 0104 051C     		add	r5, r0, #0
 257:../Sources/main.c **** 		if(servoValue>0){
 3378              		.loc 1 257 0
 3379 0106 FFF7FEFF 		bl	__aeabi_fcmpgt
 3380              	.LVL467:
 3381 010a 0028     		cmp	r0, #0
 3382 010c 00D1     		bne	.LCB2947
 3383 010e F6E0     		b	.L464	@long jump
 3384              	.LCB2947:
 258:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 3385              		.loc 1 258 0
 3386 0110 281C     		add	r0, r5, #0
 3387 0112 A649     		ldr	r1, .L466+84
 3388 0114 FFF7FEFF 		bl	__aeabi_fadd
 3389              	.LVL468:
 3390 0118 011C     		add	r1, r0, #0
 3391 011a 281C     		add	r0, r5, #0
 3392 011c FFF7FEFF 		bl	__aeabi_fadd
 3393              	.LVL469:
 3394 0120 051C     		add	r5, r0, #0
 259:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 3395              		.loc 1 259 0
 3396 0122 A348     		ldr	r0, .L466+88
 3397 0124 8246     		mov	sl, r0
 3398 0126 5146     		mov	r1, sl
 3399 0128 281C     		add	r0, r5, #0
 3400 012a FFF7FEFF 		bl	__aeabi_fcmpgt
 3401              	.LVL470:
 261:../Sources/main.c **** 						servoValue=STEERING_LIMIT_UPPER;
 3402              		.loc 1 261 0
 3403 012e A14E     		ldr	r6, .L466+92
 259:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 3404              		.loc 1 259 0
 3405 0130 0028     		cmp	r0, #0
 3406 0132 57D1     		bne	.L439
 258:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 3407              		.loc 1 258 0
 3408 0134 3560     		str	r5, [r6]
 3409              	.L438:
 266:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 3410              		.loc 1 266 0
 3411 0136 281C     		add	r0, r5, #0
 3412 0138 9F49     		ldr	r1, .L466+96
 3413 013a FFF7FEFF 		bl	__aeabi_fadd
 3414              	.LVL471:
 3415 013e 011C     		add	r1, r0, #0
 3416 0140 0020     		mov	r0, #0
 3417 0142 FFF7FEFF 		bl	TFC_SetServo
 3418              	.LVL472:
 3419              	.LBB45:
 3420              	.LBB46:
 681:../Sources/main.c **** 
 682:../Sources/main.c **** void processRaceLine(carState_s* carState)
 683:../Sources/main.c **** {
 684:../Sources/main.c **** 	if(s_mode_enable)
 685:../Sources/main.c **** 	{	
 686:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 687:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 688:../Sources/main.c **** 				&& carState->crossSection == NO)
 689:../Sources/main.c **** 		{
 690:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 691:../Sources/main.c **** 			{
 692:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 693:../Sources/main.c **** 			}
 694:../Sources/main.c **** 		}
 695:../Sources/main.c **** 		else
 696:../Sources/main.c **** 		{
 697:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 698:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 699:../Sources/main.c **** 		}
 700:../Sources/main.c **** 	}
 701:../Sources/main.c **** 	
 702:../Sources/main.c **** 	static float previousRaceLine = 0;
 703:../Sources/main.c **** 	
 704:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 705:../Sources/main.c **** 	{
 706:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 707:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 708:../Sources/main.c **** 	}
 709:../Sources/main.c **** 	else
 710:../Sources/main.c **** 	{
 711:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 712:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 713:../Sources/main.c **** 	}
 714:../Sources/main.c **** }
 715:../Sources/main.c **** 
 716:../Sources/main.c **** float targetSpeedAverage(float targetSpeed)
 717:../Sources/main.c **** {
 718:../Sources/main.c **** 	static float previousTargetSpeed = 0;
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 720:../Sources/main.c **** 	return previousTargetSpeed;
 721:../Sources/main.c **** }
 722:../Sources/main.c **** 
 723:../Sources/main.c **** float servoValueAverage(float servoValue)
 724:../Sources/main.c **** {
 725:../Sources/main.c **** 	static float previousServoValue = 0;
 726:../Sources/main.c **** 	previousServoValue = SERVO_LOWPASS_COEFF*previousServoValue + (1-SERVO_LOWPASS_COEFF)*servoValue;
 3421              		.loc 1 726 0
 3422 0146 9D4D     		ldr	r5, .L466+100
 3423 0148 9D49     		ldr	r1, .L466+104
 3424 014a 2868     		ldr	r0, [r5]
 3425 014c FFF7FEFF 		bl	__aeabi_fmul
 3426              	.LVL473:
 3427 0150 9C49     		ldr	r1, .L466+108
 3428 0152 8346     		mov	fp, r0
 3429 0154 3068     		ldr	r0, [r6]
 3430              	.LVL474:
 3431 0156 FFF7FEFF 		bl	__aeabi_fmul
 3432              	.LVL475:
 3433 015a 011C     		add	r1, r0, #0
 3434 015c 5846     		mov	r0, fp
 3435 015e FFF7FEFF 		bl	__aeabi_fadd
 3436              	.LVL476:
 3437 0162 2860     		str	r0, [r5]
 3438              	.LBE46:
 3439              	.LBE45:
 267:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 3440              		.loc 1 267 0
 3441 0164 3060     		str	r0, [r6]
 3442 0166 6EE7     		b	.L436
 3443              	.L457:
 244:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3444              		.loc 1 244 0
 3445 0168 8F4A     		ldr	r2, .L466+80
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3446              		.loc 1 246 0
 3447 016a 8248     		ldr	r0, .L466+28
 3448 016c 9649     		ldr	r1, .L466+112
 244:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3449              		.loc 1 244 0
 3450 016e 1370     		strb	r3, [r2]
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3451              		.loc 1 246 0
 3452 0170 0068     		ldr	r0, [r0]
 3453 0172 0968     		ldr	r1, [r1]
 3454 0174 3A1C     		mov	r2, r7
 3455 0176 FFF7FEFF 		bl	findLine
 3456              	.LVL477:
 3457              	.LBB47:
 3458              	.LBB48:
 684:../Sources/main.c **** 	if(s_mode_enable)
 3459              		.loc 1 684 0
 3460 017a 944D     		ldr	r5, .L466+116
 3461 017c 2E78     		ldrb	r6, [r5]
 3462 017e 002E     		cmp	r6, #0
 3463 0180 1FD1     		bne	.L430
 3464 0182 7D7A     		ldrb	r5, [r7, #9]
 3465 0184 BB7A     		ldrb	r3, [r7, #10]
 3466              	.L431:
 704:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 3467              		.loc 1 704 0
 3468 0186 012D     		cmp	r5, #1
 3469 0188 00D1     		bne	.LCB3029
 3470 018a 35E1     		b	.L465	@long jump
 3471              	.LCB3029:
 3472              	.L435:
 711:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 3473              		.loc 1 711 0
 3474 018c FB72     		strb	r3, [r7, #11]
 712:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 3475              		.loc 1 712 0
 3476 018e 58B2     		sxtb	r0, r3
 3477 0190 FFF7FEFF 		bl	__aeabi_i2f
 3478              	.LVL478:
 3479 0194 8E4B     		ldr	r3, .L466+120
 3480 0196 1860     		str	r0, [r3]
 3481 0198 52E7     		b	.L429
 3482              	.LVL479:
 3483              	.L456:
 3484              	.LBE48:
 3485              	.LBE47:
 221:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 3486              		.loc 1 221 0
 3487 019a 0020     		mov	r0, #0
 3488 019c 2061     		str	r0, [r4, #16]
 222:../Sources/main.c **** 		telemetrySendData();
 3489              		.loc 1 222 0
 3490 019e FFF7FEFF 		bl	telemetrySendData
 3491              	.LVL480:
 223:../Sources/main.c **** 		telemetryReadData();
 3492              		.loc 1 223 0
 3493 01a2 FFF7FEFF 		bl	telemetryReadData
 3494              	.LVL481:
 3495 01a6 42E7     		b	.L428
 3496              	.L455:
 214:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 3497              		.loc 1 214 0
 3498 01a8 0026     		mov	r6, #0
 3499 01aa A661     		str	r6, [r4, #24]
 215:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 3500              		.loc 1 215 0
 3501 01ac FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 3502              	.LVL482:
 3503 01b0 884A     		ldr	r2, .L466+124
 3504 01b2 1060     		str	r0, [r2]
 3505 01b4 37E7     		b	.L427
 3506              	.L454:
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 3507              		.loc 1 208 0
 3508 01b6 724B     		ldr	r3, .L466+40
 3509 01b8 0022     		mov	r2, #0
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3510              		.loc 1 209 0
 3511 01ba 0320     		mov	r0, #3
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 3512              		.loc 1 208 0
 3513 01bc 1A70     		strb	r2, [r3]
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3514              		.loc 1 209 0
 3515 01be B870     		strb	r0, [r7, #2]
 3516 01c0 2BE7     		b	.L426
 3517              	.LVL483:
 3518              	.L430:
 3519              	.LBB52:
 3520              	.LBB49:
 686:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 3521              		.loc 1 686 0
 3522 01c2 BB7A     		ldrb	r3, [r7, #10]
 3523 01c4 5DB2     		sxtb	r5, r3
 3524 01c6 092D     		cmp	r5, #9
 3525 01c8 14DC     		bgt	.L432
 687:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 3526              		.loc 1 687 0
 3527 01ca 3A7B     		ldrb	r2, [r7, #12]
 3528 01cc 462A     		cmp	r2, #70
 3529 01ce 11D9     		bls	.L432
 688:../Sources/main.c **** 				&& carState->crossSection == NO)
 3530              		.loc 1 688 0
 3531 01d0 B879     		ldrb	r0, [r7, #6]
 3532 01d2 0028     		cmp	r0, #0
 3533 01d4 0ED1     		bne	.L432
 690:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 3534              		.loc 1 690 0
 3535 01d6 E669     		ldr	r6, [r4, #28]
 3536 01d8 7F4A     		ldr	r2, .L466+128
 3537 01da 9642     		cmp	r6, r2
 3538 01dc 00D9     		bls	.LCB3091
 3539 01de 25E1     		b	.L433	@long jump
 3540              	.LCB3091:
 3541 01e0 7D7A     		ldrb	r5, [r7, #9]
 3542 01e2 D0E7     		b	.L431
 3543              	.LVL484:
 3544              	.L439:
 3545              	.LBE49:
 3546              	.LBE52:
 261:../Sources/main.c **** 						servoValue=STEERING_LIMIT_UPPER;
 3547              		.loc 1 261 0
 3548 01e4 5146     		mov	r1, sl
 3549 01e6 3160     		str	r1, [r6]
 3550 01e8 5546     		mov	r5, sl
 3551 01ea A4E7     		b	.L438
 3552              	.L459:
 275:../Sources/main.c **** 			findStop(carState);
 3553              		.loc 1 275 0
 3554 01ec 381C     		mov	r0, r7
 3555 01ee FFF7FEFF 		bl	findStop
 3556              	.LVL485:
 3557 01f2 32E7     		b	.L441
 3558              	.LVL486:
 3559              	.L432:
 3560              	.LBB53:
 3561              	.LBB50:
 697:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 3562              		.loc 1 697 0
 3563 01f4 0021     		mov	r1, #0
 3564 01f6 7972     		strb	r1, [r7, #9]
 698:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 3565              		.loc 1 698 0
 3566 01f8 E161     		str	r1, [r4, #28]
 3567 01fa BB7A     		ldrb	r3, [r7, #10]
 3568 01fc C6E7     		b	.L435
 3569              	.LVL487:
 3570              	.L460:
 3571              	.LBE50:
 3572              	.LBE53:
 3573              	.LBB54:
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3574              		.loc 1 283 0
 3575 01fe 6D4E     		ldr	r6, .L466+92
 3576 0200 3068     		ldr	r0, [r6]
 3577 0202 FFF7FEFF 		bl	getRadiusRoot
 3578              	.LVL488:
 3579 0206 7549     		ldr	r1, .L466+132
 3580 0208 021C     		add	r2, r0, #0
 3581 020a 381C     		mov	r0, r7
 3582 020c FFF7FEFF 		bl	getDesiredSpeed
 3583              	.LVL489:
 3584              	.LBB55:
 3585              	.LBB56:
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3586              		.loc 1 719 0
 3587 0210 734C     		ldr	r4, .L466+136
 3588              	.LBE56:
 3589              	.LBE55:
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3590              		.loc 1 283 0
 3591 0212 8046     		mov	r8, r0
 3592              	.LVL490:
 3593              	.LBB59:
 3594              	.LBB57:
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3595              		.loc 1 719 0
 3596 0214 7349     		ldr	r1, .L466+140
 3597 0216 2068     		ldr	r0, [r4]
 3598              	.LVL491:
 3599 0218 FFF7FEFF 		bl	__aeabi_fmul
 3600              	.LVL492:
 3601 021c FFF7FEFF 		bl	__aeabi_f2d
 3602              	.LVL493:
 3603 0220 A246     		mov	sl, r4
 3604 0222 041C     		mov	r4, r0
 3605 0224 4046     		mov	r0, r8
 3606 0226 0D1C     		mov	r5, r1
 3607 0228 FFF7FEFF 		bl	__aeabi_f2d
 3608              	.LVL494:
 3609 022c 4B4B     		ldr	r3, .L466+4
 3610 022e 4A4A     		ldr	r2, .L466
 3611 0230 FFF7FEFF 		bl	__aeabi_dmul
 3612              	.LVL495:
 3613 0234 021C     		mov	r2, r0
 3614 0236 0B1C     		mov	r3, r1
 3615 0238 201C     		mov	r0, r4
 3616 023a 291C     		mov	r1, r5
 3617 023c FFF7FEFF 		bl	__aeabi_dadd
 3618              	.LVL496:
 3619 0240 FFF7FEFF 		bl	__aeabi_d2f
 3620              	.LVL497:
 3621              	.LBE57:
 3622              	.LBE59:
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3623              		.loc 1 283 0
 3624 0244 684C     		ldr	r4, .L466+144
 3625              	.LBB60:
 3626              	.LBB58:
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3627              		.loc 1 719 0
 3628 0246 5146     		mov	r1, sl
 3629 0248 0860     		str	r0, [r1]
 3630              	.LBE58:
 3631              	.LBE60:
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3632              		.loc 1 283 0
 3633 024a 2060     		str	r0, [r4]
 286:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 3634              		.loc 1 286 0
 3635 024c 0021     		mov	r1, #0
 3636 024e 3068     		ldr	r0, [r6]
 3637 0250 FFF7FEFF 		bl	getActiveDifferentialModifier
 3638              	.LVL498:
 3639 0254 0121     		mov	r1, #1
 3640 0256 8346     		mov	fp, r0
 3641              	.LVL499:
 3642 0258 3068     		ldr	r0, [r6]
 3643              	.LVL500:
 3644 025a FFF7FEFF 		bl	getActiveDifferentialModifier
 3645              	.LVL501:
 3646 025e 8246     		mov	sl, r0
 3647              	.LVL502:
 290:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 3648              		.loc 1 290 0
 3649 0260 0020     		mov	r0, #0
 3650              	.LVL503:
 3651 0262 FFF7FEFF 		bl	getSpeed
 3652              	.LVL504:
 3653 0266 494E     		ldr	r6, .L466+52
 3654 0268 3060     		str	r0, [r6]
 291:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 3655              		.loc 1 291 0
 3656 026a 0120     		mov	r0, #1
 3657 026c FFF7FEFF 		bl	getSpeed
 3658              	.LVL505:
 3659 0270 454D     		ldr	r5, .L466+48
 3660 0272 2860     		str	r0, [r5]
 303:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 3661              		.loc 1 303 0
 3662 0274 7F78     		ldrb	r7, [r7, #1]
 3663              	.LVL506:
 3664 0276 012F     		cmp	r7, #1
 3665 0278 00D0     		beq	.LCB3214
 3666 027a 02E7     		b	.L425	@long jump
 3667              	.LCB3214:
 307:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 3668              		.loc 1 307 0
 3669 027c 4846     		mov	r0, r9
 3670 027e 0068     		ldr	r0, [r0]
 3671 0280 5A49     		ldr	r1, .L466+148
 3672 0282 FFF7FEFF 		bl	__aeabi_fdiv
 3673              	.LVL507:
 3674 0286 2168     		ldr	r1, [r4]
 3675 0288 8046     		mov	r8, r0
 3676              	.LVL508:
 3677 028a 5846     		mov	r0, fp
 3678 028c FFF7FEFF 		bl	__aeabi_fmul
 3679              	.LVL509:
 3680 0290 071C     		add	r7, r0, #0
 3681 0292 0020     		mov	r0, #0
 3682 0294 3668     		ldr	r6, [r6]
 3683 0296 FFF7FEFF 		bl	isANewmeasurementAvailable
 3684              	.LVL510:
 3685 029a 0023     		mov	r3, #0
 3686 029c 021C     		mov	r2, r0
 3687 029e 311C     		add	r1, r6, #0
 3688 02a0 381C     		add	r0, r7, #0
 3689 02a2 FFF7FEFF 		bl	getDesiredMotorPWM
 3690              	.LVL511:
 3691 02a6 011C     		add	r1, r0, #0
 306:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3692              		.loc 1 306 0
 3693 02a8 4046     		mov	r0, r8
 3694 02aa FFF7FEFF 		bl	__aeabi_fmul
 3695              	.LVL512:
 308:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3696              		.loc 1 308 0
 3697 02ae 4A46     		mov	r2, r9
 306:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3698              		.loc 1 306 0
 3699 02b0 061C     		add	r6, r0, #0
 308:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3700              		.loc 1 308 0
 3701 02b2 4E49     		ldr	r1, .L466+148
 3702 02b4 1068     		ldr	r0, [r2]
 3703 02b6 FFF7FEFF 		bl	__aeabi_fdiv
 3704              	.LVL513:
 3705 02ba 2168     		ldr	r1, [r4]
 3706 02bc 071C     		add	r7, r0, #0
 3707 02be 5046     		mov	r0, sl
 3708 02c0 FFF7FEFF 		bl	__aeabi_fmul
 3709              	.LVL514:
 3710 02c4 8146     		mov	r9, r0
 3711 02c6 0120     		mov	r0, #1
 3712 02c8 2C68     		ldr	r4, [r5]
 3713 02ca FFF7FEFF 		bl	isANewmeasurementAvailable
 3714              	.LVL515:
 3715 02ce 211C     		add	r1, r4, #0
 3716 02d0 021C     		mov	r2, r0
 3717 02d2 0123     		mov	r3, #1
 3718 02d4 4846     		mov	r0, r9
 3719 02d6 FFF7FEFF 		bl	getDesiredMotorPWM
 3720              	.LVL516:
 3721 02da 011C     		add	r1, r0, #0
 306:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3722              		.loc 1 306 0
 3723 02dc 381C     		add	r0, r7, #0
 3724 02de FFF7FEFF 		bl	__aeabi_fmul
 3725              	.LVL517:
 3726 02e2 011C     		add	r1, r0, #0
 3727 02e4 301C     		add	r0, r6, #0
 3728 02e6 FFF7FEFF 		bl	TFC_SetMotorPWM
 3729              	.LVL518:
 3730 02ea CAE6     		b	.L425
 3731              	.LVL519:
 3732              	.L461:
 3733              	.LBE54:
 317:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 3734              		.loc 1 317 0
 3735 02ec 8020     		mov	r0, #128
 3736 02ee 404B     		ldr	r3, .L466+152
 3737 02f0 8203     		lsl	r2, r0, #14
 318:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 3738              		.loc 1 318 0
 3739 02f2 0020     		mov	r0, #0
 317:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 3740              		.loc 1 317 0
 3741 02f4 9A60     		str	r2, [r3, #8]
 318:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 3742              		.loc 1 318 0
 3743 02f6 011C     		add	r1, r0, #0
 3744 02f8 FFF7FEFF 		bl	TFC_SetMotorPWM
 3745              	.LVL520:
 3746 02fc C1E6     		b	.L425
 3747              	.L464:
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3748              		.loc 1 254 0
 3749 02fe 2D4E     		ldr	r6, .L466+92
 3750 0300 3560     		str	r5, [r6]
 3751 0302 18E7     		b	.L438
 3752              	.LVL521:
 3753              	.L447:
 3754              	.LBB61:
 342:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 3755              		.loc 1 342 0
 3756 0304 1F49     		ldr	r1, .L466+44
 3757 0306 274F     		ldr	r7, .L466+76
 3758 0308 6469     		ldr	r4, [r4, #20]
 3759 030a 0D68     		ldr	r5, [r1]
 3760 030c 3B68     		ldr	r3, [r7]
 3761 030e 621B     		sub	r2, r4, r5
 3762 0310 9A42     		cmp	r2, r3
 3763 0312 00D2     		bcs	.LCB3308
 3764 0314 B5E6     		b	.L425	@long jump
 3765              	.LCB3308:
 3766              	.LBB42:
 344:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3767              		.loc 1 344 0
 3768 0316 0020     		mov	r0, #0
 3769 0318 FFF7FEFF 		bl	getSpeed
 3770              	.LVL522:
 3771 031c 061C     		add	r6, r0, #0
 3772              	.LVL523:
 3773 031e 0120     		mov	r0, #1
 3774              	.LVL524:
 3775 0320 FFF7FEFF 		bl	getSpeed
 3776              	.LVL525:
 346:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3777              		.loc 1 346 0
 3778 0324 8021     		mov	r1, #128
 344:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3779              		.loc 1 344 0
 3780 0326 041C     		add	r4, r0, #0
 3781              	.LVL526:
 346:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3782              		.loc 1 346 0
 3783 0328 C905     		lsl	r1, r1, #23
 3784 032a 301C     		add	r0, r6, #0
 3785              	.LVL527:
 3786 032c FFF7FEFF 		bl	__aeabi_fcmpgt
 3787              	.LVL528:
 3788 0330 0028     		cmp	r0, #0
 3789 0332 06D1     		bne	.L449
 346:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3790              		.loc 1 346 0 is_stmt 0
 3791 0334 8025     		mov	r5, #128
 3792 0336 201C     		add	r0, r4, #0
 3793 0338 E905     		lsl	r1, r5, #23
 3794 033a FFF7FEFF 		bl	__aeabi_fcmpgt
 3795              	.LVL529:
 3796 033e 0028     		cmp	r0, #0
 3797 0340 77D0     		beq	.L453
 3798              	.L449:
 348:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 3799              		.loc 1 348 0 is_stmt 1
 3800 0342 BF20     		mov	r0, #191
 3801 0344 0006     		lsl	r0, r0, #24
 3802 0346 011C     		add	r1, r0, #0
 3803 0348 FFF7FEFF 		bl	TFC_SetMotorPWM
 3804              	.LVL530:
 3805 034c 99E6     		b	.L425
 3806              	.LVL531:
 3807              	.L463:
 3808              	.LBE42:
 3809              	.LBB43:
 332:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 3810              		.loc 1 332 0
 3811 034e 294D     		ldr	r5, .L466+156
 3812 0350 BCE6     		b	.L448
 3813              	.L467:
 3814 0352 C046C046 		.align	3
 3814      C046
 3815              	.L466:
 3816 0358 9A999999 		.word	-1717986918
 3817 035c 9999B93F 		.word	1069128089
 3818 0360 00000000 		.word	TFC_Ticker
 3819 0364 E7030000 		.word	999
 3820 0368 00000000 		.word	.LANCHOR7
 3821 036c 00000000 		.word	incline_speed
 3822 0370 00000000 		.word	.LANCHOR16
 3823 0374 00000000 		.word	LineScanImage0
 3824 0378 00000000 		.word	.LANCHOR17
 3825 037c E0930400 		.word	300000
 3826 0380 00000000 		.word	.LANCHOR11
 3827 0384 00000000 		.word	.LANCHOR21
 3828 0388 00000000 		.word	.LANCHOR20
 3829 038c 00000000 		.word	.LANCHOR19
 3830 0390 00002041 		.word	1092616192
 3831 0394 6666263F 		.word	1059481190
 3832 0398 F90F4940 		.word	1078530041
 3833 039c 0000A041 		.word	1101004800
 3834 03a0 00401C46 		.word	1176256512
 3835 03a4 00000000 		.word	.LANCHOR22
 3836 03a8 00000000 		.word	.LANCHOR12
 3837 03ac 8FC2753C 		.word	1014350479
 3838 03b0 F628DC3E 		.word	1054615798
 3839 03b4 00000000 		.word	.LANCHOR5
 3840 03b8 CDCC4C3D 		.word	1028443341
 3841 03bc 00000000 		.word	.LANCHOR15
 3842 03c0 CDCC4C3F 		.word	1061997773
 3843 03c4 CCCC4C3E 		.word	1045220556
 3844 03c8 00000000 		.word	LineScanImage1
 3845 03cc 00000000 		.word	.LANCHOR13
 3846 03d0 00000000 		.word	.LANCHOR14
 3847 03d4 00000000 		.word	.LANCHOR2
 3848 03d8 94110000 		.word	4500
 3849 03dc 00807A43 		.word	1132101632
 3850 03e0 00000000 		.word	.LANCHOR18
 3851 03e4 6666663F 		.word	1063675494
 3852 03e8 00000000 		.word	.LANCHOR4
 3853 03ec 0000C842 		.word	1120403456
 3854 03f0 00F10F40 		.word	1074786560
 3855 03f4 CDCCCC3E 		.word	1053609165
 3856              	.LVL532:
 3857              	.L465:
 3858 03f8 5DB2     		sxtb	r5, r3
 3859              	.L434:
 3860              	.LBE43:
 3861              	.LBE61:
 3862              	.LBB62:
 3863              	.LBB51:
 706:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3864              		.loc 1 706 0
 3865 03fa 104E     		ldr	r6, .L468
 3866 03fc 1049     		ldr	r1, .L468+4
 3867 03fe 3068     		ldr	r0, [r6]
 3868 0400 FFF7FEFF 		bl	__aeabi_fmul
 3869              	.LVL533:
 3870 0404 8046     		mov	r8, r0
 3871 0406 281C     		mov	r0, r5
 3872 0408 FFF7FEFF 		bl	__aeabi_i2f
 3873              	.LVL534:
 3874 040c 0D49     		ldr	r1, .L468+8
 3875 040e FFF7FEFF 		bl	__aeabi_fmul
 3876              	.LVL535:
 3877 0412 011C     		add	r1, r0, #0
 3878 0414 4046     		mov	r0, r8
 3879 0416 FFF7FEFF 		bl	__aeabi_fadd
 3880              	.LVL536:
 707:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3881              		.loc 1 707 0
 3882 041a FC21     		mov	r1, #252
 3883 041c 8905     		lsl	r1, r1, #22
 706:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3884              		.loc 1 706 0
 3885 041e 3060     		str	r0, [r6]
 707:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3886              		.loc 1 707 0
 3887 0420 FFF7FEFF 		bl	__aeabi_fadd
 3888              	.LVL537:
 3889 0424 FFF7FEFF 		bl	__aeabi_f2uiz
 3890              	.LVL538:
 3891 0428 F872     		strb	r0, [r7, #11]
 3892 042a 09E6     		b	.L429
 3893              	.L433:
 692:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 3894              		.loc 1 692 0
 3895 042c 0120     		mov	r0, #1
 3896 042e 7872     		strb	r0, [r7, #9]
 3897 0430 E3E7     		b	.L434
 3898              	.LVL539:
 3899              	.L453:
 3900              	.LBE51:
 3901              	.LBE62:
 3902              	.LBB63:
 3903              	.LBB44:
 352:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 3904              		.loc 1 352 0
 3905 0432 0020     		mov	r0, #0
 3906 0434 011C     		add	r1, r0, #0
 3907 0436 FFF7FEFF 		bl	TFC_SetMotorPWM
 3908              	.LVL540:
 3909 043a 22E6     		b	.L425
 3910              	.L469:
 3911              		.align	2
 3912              	.L468:
 3913 043c 00000000 		.word	.LANCHOR14
 3914 0440 6666663F 		.word	1063675494
 3915 0444 D0CCCC3D 		.word	1036831952
 3916              	.LBE44:
 3917              	.LBE63:
 3918              		.cfi_endproc
 3919              	.LFE1:
 3921              		.section	.text.startup.main,"ax",%progbits
 3922              		.align	2
 3923              		.global	main
 3924              		.code	16
 3925              		.thumb_func
 3927              	main:
 3928              	.LFB0:
 120:../Sources/main.c **** {
 3929              		.loc 1 120 0
 3930              		.cfi_startproc
 3931 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3932              	.LCFI17:
 3933              		.cfi_def_cfa_offset 20
 3934              		.cfi_offset 4, -20
 3935              		.cfi_offset 5, -16
 3936              		.cfi_offset 6, -12
 3937              		.cfi_offset 7, -8
 3938              		.cfi_offset 14, -4
 3939 0002 5F46     		mov	r7, fp
 3940 0004 4D46     		mov	r5, r9
 3941 0006 4446     		mov	r4, r8
 3942 0008 5646     		mov	r6, sl
 3943 000a F0B4     		push	{r4, r5, r6, r7}
 3944              	.LCFI18:
 3945              		.cfi_def_cfa_offset 36
 3946              		.cfi_offset 8, -36
 3947              		.cfi_offset 9, -32
 3948              		.cfi_offset 10, -28
 3949              		.cfi_offset 11, -24
 121:../Sources/main.c **** 	TFC_Init(&carState);
 3950              		.loc 1 121 0
 3951 000c BA49     		ldr	r1, .L563
 120:../Sources/main.c **** {
 3952              		.loc 1 120 0
 3953 000e CDB0     		sub	sp, sp, #308
 3954              	.LCFI19:
 3955              		.cfi_def_cfa_offset 344
 121:../Sources/main.c **** 	TFC_Init(&carState);
 3956              		.loc 1 121 0
 3957 0010 081C     		mov	r0, r1
 3958 0012 8B46     		mov	fp, r1
 3959 0014 FFF7FEFF 		bl	TFC_Init
 3960              	.LVL541:
 128:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 3961              		.loc 1 128 0
 3962 0018 B84B     		ldr	r3, .L563+4
 3963 001a 8022     		mov	r2, #128
 3964 001c 5868     		ldr	r0, [r3, #4]
 3965 001e 5400     		lsl	r4, r2, #1
 3966 0020 0443     		orr	r4, r0
 3967 0022 5C60     		str	r4, [r3, #4]
 129:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 3968              		.loc 1 129 0
 3969 0024 5D68     		ldr	r5, [r3, #4]
 3970 0026 8026     		mov	r6, #128
 3971 0028 B700     		lsl	r7, r6, #2
 3972 002a 2F43     		orr	r7, r5
 3973 002c 5F60     		str	r7, [r3, #4]
 130:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 3974              		.loc 1 130 0
 3975 002e 5968     		ldr	r1, [r3, #4]
 3976 0030 8020     		mov	r0, #128
 3977 0032 C200     		lsl	r2, r0, #3
 3978 0034 0A43     		orr	r2, r1
 3979 0036 5A60     		str	r2, [r3, #4]
 131:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);		
 3980              		.loc 1 131 0
 3981 0038 5C68     		ldr	r4, [r3, #4]
 3982 003a 8025     		mov	r5, #128
 3983 003c 2E01     		lsl	r6, r5, #4
 3984 003e 2643     		orr	r6, r4
 3985 0040 5E60     		str	r6, [r3, #4]
 3986 0042 AF49     		ldr	r1, .L563+8
 3987 0044 AF4B     		ldr	r3, .L563+12
 3988 0046 B04E     		ldr	r6, .L563+16
 3989 0048 9946     		mov	r9, r3
 3990 004a B04F     		ldr	r7, .L563+20
 3991 004c 8846     		mov	r8, r1
 3992 004e B04D     		ldr	r5, .L563+24
 3993 0050 71E0     		b	.L521
 3994              	.LVL542:
 3995              	.L550:
 3996              	.LBB94:
 3997              	.LBB95:
 475:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 3998              		.loc 1 475 0
 3999 0052 B04A     		ldr	r2, .L563+28
 4000 0054 9568     		ldr	r5, [r2, #8]
 4001 0056 6B05     		lsl	r3, r5, #21
 4002 0058 590F     		lsr	r1, r3, #29
 4003 005a 0229     		cmp	r1, #2
 4004 005c 76D0     		beq	.L471
 4005              	.L472:
 477:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4006              		.loc 1 477 0
 4007 005e AD48     		ldr	r0, .L563+28
 4008 0060 AD4A     		ldr	r2, .L563+32
 4009 0062 8168     		ldr	r1, [r0, #8]
 478:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 4010              		.loc 1 478 0
 4011 0064 8025     		mov	r5, #128
 477:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4012              		.loc 1 477 0
 4013 0066 0A40     		and	r2, r1
 4014 0068 8260     		str	r2, [r0, #8]
 478:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 4015              		.loc 1 478 0
 4016 006a 8468     		ldr	r4, [r0, #8]
 4017 006c AB00     		lsl	r3, r5, #2
 4018 006e 2343     		orr	r3, r4
 4019 0070 8360     		str	r3, [r0, #8]
 479:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 4020              		.loc 1 479 0
 4021 0072 0C20     		mov	r0, #12
 4022 0074 FFF7FEFF 		bl	enable_irq
 4023              	.LVL543:
 480:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 4024              		.loc 1 480 0
 4025 0078 0020     		mov	r0, #0
 4026 007a 5946     		mov	r1, fp
 4027 007c 4870     		strb	r0, [r1, #1]
 4028              	.L474:
 4029              	.LVL544:
 4030              	.LBE95:
 4031              	.LBE94:
 4032              	.LBB98:
 4033              	.LBB99:
 461:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 4034              		.loc 1 461 0
 4035 007e FFF7FEFF 		bl	TFC_GetDIP_Switch
 4036              	.LVL545:
 4037              	.LBE99:
 4038 0082 0124     		mov	r4, #1
 4039              	.LBB100:
 4040 0084 0442     		tst	r4, r0
 4041 0086 00D1     		bne	.LCB3603
 4042 0088 84E0     		b	.L477	@long jump
 4043              	.LCB3603:
 4044              	.L551:
 463:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 4045              		.loc 1 463 0
 4046 008a 8020     		mov	r0, #128
 4047 008c A34A     		ldr	r2, .L563+36
 4048 008e 8103     		lsl	r1, r0, #14
 464:../Sources/main.c **** 		carState->motorState = RUNNING;
 4049              		.loc 1 464 0
 4050 0090 5D46     		mov	r5, fp
 463:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 4051              		.loc 1 463 0
 4052 0092 5160     		str	r1, [r2, #4]
 464:../Sources/main.c **** 		carState->motorState = RUNNING;
 4053              		.loc 1 464 0
 4054 0094 2C70     		strb	r4, [r5]
 4055              	.L478:
 4056              	.LVL546:
 4057              	.LBE100:
 4058              	.LBE98:
 4059              	.LBB103:
 4060              	.LBB104:
 494:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 4061              		.loc 1 494 0
 4062 0096 A24C     		ldr	r4, .L563+40
 4063 0098 A249     		ldr	r1, .L563+44
 4064 009a 2068     		ldr	r0, [r4]
 4065 009c FFF7FEFF 		bl	__aeabi_fcmpgt
 4066              	.LVL547:
 4067 00a0 0028     		cmp	r0, #0
 4068 00a2 00D1     		bne	.LCB3624
 4069 00a4 8BE0     		b	.L531	@long jump
 4070              	.LCB3624:
 4071              	.L552:
 496:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 4072              		.loc 1 496 0
 4073 00a6 5B46     		mov	r3, fp
 4074 00a8 9D78     		ldrb	r5, [r3, #2]
 4075 00aa 022D     		cmp	r5, #2
 4076 00ac 00D1     		bne	.LCB3629
 4077 00ae AEE1     		b	.L541	@long jump
 4078              	.LCB3629:
 504:../Sources/main.c **** 		else if(carState->crossSection == YES)
 4079              		.loc 1 504 0
 4080 00b0 9A79     		ldrb	r2, [r3, #6]
 4081 00b2 5946     		mov	r1, fp
 4082 00b4 012A     		cmp	r2, #1
 4083 00b6 00D1     		bne	.LCB3633
 4084 00b8 B5E1     		b	.L542	@long jump
 4085              	.LCB3633:
 512:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 4086              		.loc 1 512 0
 4087 00ba 587A     		ldrb	r0, [r3, #9]
 4088 00bc 5C46     		mov	r4, fp
 4089 00be 0128     		cmp	r0, #1
 4090 00c0 00D1     		bne	.LCB3637
 4091 00c2 32E2     		b	.L543	@long jump
 4092              	.LCB3637:
 519:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 4093              		.loc 1 519 0
 4094 00c4 0979     		ldrb	r1, [r1, #4]
 4095 00c6 0229     		cmp	r1, #2
 4096 00c8 00D1     		bne	.LCB3640
 4097 00ca 78E2     		b	.L544	@long jump
 4098              	.LCB3640:
 526:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 4099              		.loc 1 526 0
 4100 00cc 6479     		ldrb	r4, [r4, #5]
 4101 00ce 012C     		cmp	r4, #1
 4102 00d0 00D1     		bne	.LCB3643
 4103 00d2 85E2     		b	.L545	@long jump
 4104              	.LCB3643:
 533:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 4105              		.loc 1 533 0
 4106 00d4 022C     		cmp	r4, #2
 4107 00d6 00D1     		bne	.LCB3645
 4108 00d8 C2E2     		b	.L546	@long jump
 4109              	.LCB3645:
 540:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 4110              		.loc 1 540 0
 4111 00da 012D     		cmp	r5, #1
 4112 00dc 00D1     		bne	.LCB3647
 4113 00de 87E3     		b	.L547	@long jump
 4114              	.LCB3647:
 547:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 4115              		.loc 1 547 0
 4116 00e0 032D     		cmp	r5, #3
 4117 00e2 00D1     		bne	.LCB3649
 4118 00e4 79E3     		b	.L548	@long jump
 4119              	.LCB3649:
 4120              	.L482:
 4121              	.LBE104:
 4122              	.LBE103:
 148:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 4123              		.loc 1 148 0
 4124 00e6 0120     		mov	r0, #1
 4125 00e8 FFF7FEFF 		bl	getSpeed
 4126              	.LVL548:
 4127 00ec FFF7FEFF 		bl	__aeabi_f2d
 4128              	.LVL549:
 4129 00f0 0B1C     		mov	r3, r1
 4130 00f2 021C     		mov	r2, r0
 4131 00f4 391C     		mov	r1, r7
 4132 00f6 301C     		mov	r0, r6
 4133 00f8 FFF7FEFF 		bl	Qprintf
 4134              	.LVL550:
 151:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 4135              		.loc 1 151 0
 4136 00fc FFF7FEFF 		bl	TFC_GetDIP_Switch
 4137              	.LVL551:
 4138 0100 4307     		lsl	r3, r0, #29
 4139 0102 9C0F     		lsr	r4, r3, #30
 4140 0104 022C     		cmp	r4, #2
 4141 0106 00D1     		bne	.LCB3671
 4142 0108 32E1     		b	.L491	@long jump
 4143              	.LCB3671:
 4144 010a 032C     		cmp	r4, #3
 4145 010c 73D0     		beq	.L492
 4146 010e 012C     		cmp	r4, #1
 4147 0110 00D1     		bne	.LCB3675
 4148 0112 E4E0     		b	.L490	@long jump
 4149              	.LCB3675:
 4150              	.LVL552:
 4151              	.LBB112:
 4152              	.LBB113:
 361:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 4153              		.loc 1 361 0
 4154 0114 4D46     		mov	r5, r9
 4155 0116 2968     		ldr	r1, [r5]
 4156 0118 C729     		cmp	r1, #199
 4157 011a 04D9     		bls	.L494
 4158 011c 5A46     		mov	r2, fp
 4159 011e D078     		ldrb	r0, [r2, #3]
 4160 0120 0028     		cmp	r0, #0
 4161 0122 00D1     		bne	.LCB3686
 4162 0124 17E2     		b	.L549	@long jump
 4163              	.LCB3686:
 4164              	.LVL553:
 4165              	.L494:
 4166              	.LBE113:
 4167              	.LBE112:
 194:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 4168              		.loc 1 194 0
 4169 0126 7A4C     		ldr	r4, .L563+24
 4170 0128 4D46     		mov	r5, r9
 4171 012a 6869     		ldr	r0, [r5, #20]
 4172 012c 2388     		ldrh	r3, [r4]
 4173 012e 7E4A     		ldr	r2, .L563+48
 4174 0130 C11A     		sub	r1, r0, r3
 4175 0132 1180     		strh	r1, [r2]
 4176 0134 251C     		mov	r5, r4
 4177              	.LVL554:
 4178              	.L521:
 135:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 4179              		.loc 1 135 0
 4180 0136 4846     		mov	r0, r9
 4181 0138 4469     		ldr	r4, [r0, #20]
 4182 013a 2C80     		strh	r4, [r5]
 4183              	.LBB117:
 4184              	.LBB118:
 454:../Sources/main.c **** 	TFC_UART_Process();
 4185              		.loc 1 454 0
 4186 013c FFF7FEFF 		bl	TFC_UART_Process
 4187              	.LVL555:
 456:../Sources/main.c **** 	TFC_ProcessTerminal();
 4188              		.loc 1 456 0
 4189 0140 FFF7FEFF 		bl	TFC_ProcessTerminal
 4190              	.LVL556:
 4191              	.LBE118:
 4192              	.LBE117:
 4193              	.LBB119:
 4194              	.LBB96:
 475:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 4195              		.loc 1 475 0
 4196 0144 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4197              	.LVL557:
 4198 0148 0307     		lsl	r3, r0, #28
 4199 014a 82D5     		bpl	.L550
 4200              	.L471:
 4201 014c 5846     		mov	r0, fp
 4202 014e 4478     		ldrb	r4, [r0, #1]
 4203 0150 022C     		cmp	r4, #2
 4204 0152 84D0     		beq	.L472
 483:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 4205              		.loc 1 483 0
 4206 0154 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4207              	.LVL558:
 4208 0158 0307     		lsl	r3, r0, #28
 4209 015a 46D5     		bpl	.L475
 4210 015c 6D4A     		ldr	r2, .L563+28
 4211 015e 9568     		ldr	r5, [r2, #8]
 4212 0160 6B05     		lsl	r3, r5, #21
 4213 0162 590F     		lsr	r1, r3, #29
 4214 0164 0329     		cmp	r1, #3
 4215 0166 40D0     		beq	.L475
 4216              	.L476:
 485:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4217              		.loc 1 485 0
 4218 0168 6A4D     		ldr	r5, .L563+28
 4219 016a 6B4A     		ldr	r2, .L563+32
 4220 016c AB68     		ldr	r3, [r5, #8]
 486:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 4221              		.loc 1 486 0
 4222 016e C020     		mov	r0, #192
 485:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4223              		.loc 1 485 0
 4224 0170 1A40     		and	r2, r3
 4225 0172 AA60     		str	r2, [r5, #8]
 486:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 4226              		.loc 1 486 0
 4227 0174 A968     		ldr	r1, [r5, #8]
 4228 0176 8400     		lsl	r4, r0, #2
 4229 0178 0C43     		orr	r4, r1
 4230 017a AC60     		str	r4, [r5, #8]
 487:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 4231              		.loc 1 487 0
 4232 017c 0C20     		mov	r0, #12
 4233 017e FFF7FEFF 		bl	disable_irq
 4234              	.LVL559:
 488:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 4235              		.loc 1 488 0
 4236 0182 0125     		mov	r5, #1
 4237 0184 5B46     		mov	r3, fp
 4238 0186 5D70     		strb	r5, [r3, #1]
 4239              	.LVL560:
 4240              	.LBE96:
 4241              	.LBE119:
 4242              	.LBB120:
 4243              	.LBB101:
 461:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 4244              		.loc 1 461 0
 4245 0188 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4246              	.LVL561:
 4247              	.LBE101:
 4248 018c 0124     		mov	r4, #1
 4249              	.LBB102:
 4250 018e 0442     		tst	r4, r0
 4251 0190 00D0     		beq	.LCB3774
 4252 0192 7AE7     		b	.L551	@long jump
 4253              	.LCB3774:
 4254              	.L477:
 466:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 4255              		.loc 1 466 0
 4256 0194 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4257              	.LVL562:
 4258 0198 0442     		tst	r4, r0
 4259 019a 00D0     		beq	.LCB3782
 4260 019c 7BE7     		b	.L478	@long jump
 4261              	.LCB3782:
 468:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4262              		.loc 1 468 0
 4263 019e 8022     		mov	r2, #128
 4264 01a0 5E4B     		ldr	r3, .L563+36
 469:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4265              		.loc 1 469 0
 4266 01a2 0020     		mov	r0, #0
 468:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4267              		.loc 1 468 0
 4268 01a4 9503     		lsl	r5, r2, #14
 469:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4269              		.loc 1 469 0
 4270 01a6 011C     		add	r1, r0, #0
 468:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4271              		.loc 1 468 0
 4272 01a8 9D60     		str	r5, [r3, #8]
 469:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4273              		.loc 1 469 0
 4274 01aa FFF7FEFF 		bl	TFC_SetMotorPWM
 4275              	.LVL563:
 4276              	.LBE102:
 4277              	.LBE120:
 4278              	.LBB121:
 4279              	.LBB105:
 494:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 4280              		.loc 1 494 0
 4281 01ae 5C4C     		ldr	r4, .L563+40
 4282 01b0 5C49     		ldr	r1, .L563+44
 4283 01b2 2068     		ldr	r0, [r4]
 4284 01b4 FFF7FEFF 		bl	__aeabi_fcmpgt
 4285              	.LVL564:
 4286 01b8 0028     		cmp	r0, #0
 4287 01ba 00D0     		beq	.LCB3802
 4288 01bc 73E7     		b	.L552	@long jump
 4289              	.LCB3802:
 4290              	.L531:
 557:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 4291              		.loc 1 557 0
 4292 01be 4F4B     		ldr	r3, .L563+4
 4293 01c0 8021     		mov	r1, #128
 4294 01c2 5868     		ldr	r0, [r3, #4]
 4295 01c4 4A00     		lsl	r2, r1, #1
 4296 01c6 0243     		orr	r2, r0
 4297 01c8 5A60     		str	r2, [r3, #4]
 558:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 4298              		.loc 1 558 0
 4299 01ca 5D68     		ldr	r5, [r3, #4]
 4300 01cc 8024     		mov	r4, #128
 4301 01ce A000     		lsl	r0, r4, #2
 4302 01d0 2843     		orr	r0, r5
 4303 01d2 5860     		str	r0, [r3, #4]
 4304              	.L533:
 559:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 4305              		.loc 1 559 0
 4306 01d4 5868     		ldr	r0, [r3, #4]
 4307 01d6 8021     		mov	r1, #128
 4308 01d8 CC00     		lsl	r4, r1, #3
 4309 01da 0443     		orr	r4, r0
 4310 01dc 5C60     		str	r4, [r3, #4]
 4311              	.L534:
 560:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 4312              		.loc 1 560 0
 4313 01de 5D68     		ldr	r5, [r3, #4]
 4314 01e0 8022     		mov	r2, #128
 4315 01e2 1001     		lsl	r0, r2, #4
 4316 01e4 2843     		orr	r0, r5
 4317 01e6 5860     		str	r0, [r3, #4]
 4318 01e8 7DE7     		b	.L482
 4319              	.LVL565:
 4320              	.L475:
 4321              	.LBE105:
 4322              	.LBE121:
 4323              	.LBB122:
 4324              	.LBB97:
 483:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 4325              		.loc 1 483 0
 4326 01ea 5846     		mov	r0, fp
 4327 01ec 4478     		ldrb	r4, [r0, #1]
 4328 01ee 022C     		cmp	r4, #2
 4329 01f0 00D0     		beq	.LCB3842
 4330 01f2 44E7     		b	.L474	@long jump
 4331              	.LCB3842:
 4332 01f4 B8E7     		b	.L476
 4333              	.LVL566:
 4334              	.L492:
 4335              	.LBE97:
 4336              	.LBE122:
 4337              	.LBB123:
 4338              	.LBB124:
 206:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 4339              		.loc 1 206 0
 4340 01f6 0120     		mov	r0, #1
 4341 01f8 FFF7FEFF 		bl	TFC_GetPush_Button
 4342              	.LVL567:
 4343 01fc 0128     		cmp	r0, #1
 4344 01fe 00D1     		bne	.LCB3858
 4345 0200 8DE1     		b	.L553	@long jump
 4346              	.LCB3858:
 4347              	.L498:
 212:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 4348              		.loc 1 212 0
 4349 0202 4C46     		mov	r4, r9
 4350 0204 A569     		ldr	r5, [r4, #24]
 4351 0206 494A     		ldr	r2, .L563+52
 4352 0208 9542     		cmp	r5, r2
 4353 020a 00D9     		bls	.LCB3864
 4354 020c 80E1     		b	.L554	@long jump
 4355              	.LCB3864:
 4356              	.L499:
 219:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 4357              		.loc 1 219 0
 4358 020e 4946     		mov	r1, r9
 4359 0210 0C69     		ldr	r4, [r1, #16]
 4360 0212 312C     		cmp	r4, #49
 4361 0214 00D9     		bls	.LCB3869
 4362 0216 74E1     		b	.L555	@long jump
 4363              	.LCB3869:
 4364              	.L500:
 240:../Sources/main.c **** 		incline_speed=max_speed_percent;
 4365              		.loc 1 240 0
 4366 0218 454A     		ldr	r2, .L563+56
 4367 021a 464B     		ldr	r3, .L563+60
 4368 021c 1068     		ldr	r0, [r2]
 242:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 4369              		.loc 1 242 0
 4370 021e 5946     		mov	r1, fp
 240:../Sources/main.c **** 		incline_speed=max_speed_percent;
 4371              		.loc 1 240 0
 4372 0220 1860     		str	r0, [r3]
 242:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 4373              		.loc 1 242 0
 4374 0222 CC78     		ldrb	r4, [r1, #3]
 4375 0224 002C     		cmp	r4, #0
 4376 0226 00D1     		bne	.LCB3878
 4377 0228 4CE1     		b	.L556	@long jump
 4378              	.LCB3878:
 4379              	.L501:
 251:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 4380              		.loc 1 251 0
 4381 022a 4846     		mov	r0, r9
 4382 022c 0168     		ldr	r1, [r0]
 4383 022e 6329     		cmp	r1, #99
 4384 0230 00D9     		bls	.LCB3883
 4385 0232 09E1     		b	.L557	@long jump
 4386              	.LCB3883:
 4387              	.L508:
 270:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 4388              		.loc 1 270 0
 4389 0234 5846     		mov	r0, fp
 4390 0236 C378     		ldrb	r3, [r0, #3]
 4391 0238 002B     		cmp	r3, #0
 4392 023a 11D1     		bne	.L512
 273:../Sources/main.c **** 		if(stopline_enable == 1)
 4393              		.loc 1 273 0
 4394 023c 3E4A     		ldr	r2, .L563+64
 272:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4395              		.loc 1 272 0
 4396 023e 0125     		mov	r5, #1
 273:../Sources/main.c **** 		if(stopline_enable == 1)
 4397              		.loc 1 273 0
 4398 0240 1178     		ldrb	r1, [r2]
 272:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4399              		.loc 1 272 0
 4400 0242 C570     		strb	r5, [r0, #3]
 273:../Sources/main.c **** 		if(stopline_enable == 1)
 4401              		.loc 1 273 0
 4402 0244 0129     		cmp	r1, #1
 4403 0246 00D1     		bne	.LCB3894
 4404 0248 EAE2     		b	.L558	@long jump
 4405              	.LCB3894:
 4406              	.L513:
 277:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 4407              		.loc 1 277 0
 4408 024a 4446     		mov	r4, r8
 4409 024c 2068     		ldr	r0, [r4]
 4410 024e FFF7FEFF 		bl	getTotalIntensity
 4411              	.LVL568:
 4412 0252 3A4B     		ldr	r3, .L563+68
 278:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 4413              		.loc 1 278 0
 4414 0254 3A49     		ldr	r1, .L563+72
 277:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 4415              		.loc 1 277 0
 4416 0256 1860     		str	r0, [r3]
 278:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 4417              		.loc 1 278 0
 4418 0258 FFF7FEFF 		bl	calculateNewExposure
 4419              	.LVL569:
 4420 025c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4421              	.LVL570:
 4422              	.L512:
 281:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 4423              		.loc 1 281 0
 4424 0260 5846     		mov	r0, fp
 4425 0262 8578     		ldrb	r5, [r0, #2]
 4426 0264 012D     		cmp	r5, #1
 4427 0266 00D8     		bhi	.LCB3913
 4428 0268 2EE2     		b	.L559	@long jump
 4429              	.LCB3913:
 315:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 4430              		.loc 1 315 0
 4431 026a 032D     		cmp	r5, #3
 4432 026c 00D1     		bne	.LCB3915
 4433 026e CBE2     		b	.L560	@long jump
 4434              	.LCB3915:
 320:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 4435              		.loc 1 320 0
 4436 0270 022D     		cmp	r5, #2
 4437 0272 00D0     		beq	.LCB3917
 4438 0274 57E7     		b	.L494	@long jump
 4439              	.LCB3917:
 322:../Sources/main.c **** 		if(stopline_enable == 1)
 4440              		.loc 1 322 0
 4441 0276 304A     		ldr	r2, .L563+64
 4442 0278 1478     		ldrb	r4, [r2]
 4443 027a 012C     		cmp	r4, #1
 4444 027c 00D0     		beq	.LCB3921
 4445 027e 52E7     		b	.L494	@long jump
 4446              	.LCB3921:
 4447              	.LBB125:
 327:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 4448              		.loc 1 327 0
 4449 0280 3049     		ldr	r1, .L563+76
 4450 0282 0B78     		ldrb	r3, [r1]
 4451 0284 002B     		cmp	r3, #0
 4452 0286 00D0     		beq	.LCB3926
 4453 0288 CEE2     		b	.L516	@long jump
 4454              	.LCB3926:
 4455              	.LBB126:
 330:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4456              		.loc 1 330 0
 4457 028a 4846     		mov	r0, r9
 329:../Sources/main.c **** 				stoplineJustDetected = 1;
 4458              		.loc 1 329 0
 4459 028c 0C70     		strb	r4, [r1]
 330:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4460              		.loc 1 330 0
 4461 028e 4569     		ldr	r5, [r0, #20]
 333:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4462              		.loc 1 333 0
 4463 0290 2D4A     		ldr	r2, .L563+80
 4464 0292 2E4B     		ldr	r3, .L563+84
 330:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4465              		.loc 1 330 0
 4466 0294 2E4C     		ldr	r4, .L563+88
 333:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4467              		.loc 1 333 0
 4468 0296 1968     		ldr	r1, [r3]
 330:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4469              		.loc 1 330 0
 4470 0298 2560     		str	r5, [r4]
 4471              	.LVL571:
 333:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4472              		.loc 1 333 0
 4473 029a 1068     		ldr	r0, [r2]
 4474 029c FFF7FEFF 		bl	__aeabi_fadd
 4475              	.LVL572:
 4476 02a0 FC21     		mov	r1, #252
 4477 02a2 8905     		lsl	r1, r1, #22
 4478 02a4 FFF7FEFF 		bl	__aeabi_fmul
 4479              	.LVL573:
 335:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 4480              		.loc 1 335 0
 4481 02a8 2A49     		ldr	r1, .L563+92
 333:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4482              		.loc 1 333 0
 4483 02aa 041C     		add	r4, r0, #0
 4484              	.LVL574:
 335:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 4485              		.loc 1 335 0
 4486 02ac FFF7FEFF 		bl	__aeabi_fcmplt
 4487              	.LVL575:
 4488 02b0 0028     		cmp	r0, #0
 4489 02b2 00D1     		bne	.LCB3951
 4490 02b4 DEE2     		b	.L561	@long jump
 4491              	.LCB3951:
 337:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 4492              		.loc 1 337 0
 4493 02b6 284D     		ldr	r5, .L563+96
 4494              	.L517:
 4495              	.LVL576:
 340:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 4496              		.loc 1 340 0
 4497 02b8 2849     		ldr	r1, .L563+100
 4498 02ba 201C     		add	r0, r4, #0
 4499 02bc FFF7FEFF 		bl	__aeabi_fmul
 4500              	.LVL577:
 4501 02c0 2749     		ldr	r1, .L563+104
 4502 02c2 FFF7FEFF 		bl	__aeabi_fdiv
 4503              	.LVL578:
 4504 02c6 011C     		add	r1, r0, #0
 4505 02c8 281C     		add	r0, r5, #0
 4506 02ca FFF7FEFF 		bl	__aeabi_fdiv
 4507              	.LVL579:
 4508 02ce 2549     		ldr	r1, .L563+108
 4509 02d0 FFF7FEFF 		bl	__aeabi_fmul
 4510              	.LVL580:
 4511 02d4 FFF7FEFF 		bl	__aeabi_f2uiz
 4512              	.LVL581:
 4513 02d8 234A     		ldr	r2, .L563+112
 4514 02da 1060     		str	r0, [r2]
 4515 02dc 23E7     		b	.L494
 4516              	.LVL582:
 4517              	.L490:
 4518              	.LBE126:
 4519              	.LBE125:
 4520              	.LBE124:
 4521              	.LBE123:
 4522              	.LBB158:
 4523              	.LBB159:
 566:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 4524              		.loc 1 566 0
 4525 02de 4C46     		mov	r4, r9
 4526 02e0 2568     		ldr	r5, [r4]
 4527 02e2 C72D     		cmp	r5, #199
 4528 02e4 00D8     		bhi	.LCB3990
 4529 02e6 1EE7     		b	.L494	@long jump
 4530              	.LCB3990:
 4531              	.LBB160:
 568:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4532              		.loc 1 568 0
 4533 02e8 0022     		mov	r2, #0
 570:../Sources/main.c **** 		TFC_SetServo(0, offset);
 4534              		.loc 1 570 0
 4535 02ea 0020     		mov	r0, #0
 4536 02ec 1F49     		ldr	r1, .L563+116
 568:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4537              		.loc 1 568 0
 4538 02ee 2260     		str	r2, [r4]
 4539              	.LVL583:
 570:../Sources/main.c **** 		TFC_SetServo(0, offset);
 4540              		.loc 1 570 0
 4541 02f0 FFF7FEFF 		bl	TFC_SetServo
 4542              	.LVL584:
 4543 02f4 17E7     		b	.L494
 4544              	.L564:
 4545 02f6 C046     		.align	2
 4546              	.L563:
 4547 02f8 00000000 		.word	.LANCHOR3
 4548 02fc 40F00F40 		.word	1074786368
 4549 0300 00000000 		.word	LineScanImage0
 4550 0304 00000000 		.word	TFC_Ticker
 4551 0308 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 4552 030c 00000000 		.word	.LC3
 4553 0310 00000000 		.word	.LANCHOR23
 4554 0314 00900440 		.word	1074040832
 4555 0318 FFF8FFFF 		.word	-1793
 4556 031c 00F10F40 		.word	1074786560
 4557 0320 00000000 		.word	.LANCHOR2
 4558 0324 0000F040 		.word	1089470464
 4559 0328 00000000 		.word	.LANCHOR6
 4560 032c E7030000 		.word	999
 4561 0330 00000000 		.word	.LANCHOR7
 4562 0334 00000000 		.word	incline_speed
 4563 0338 00000000 		.word	.LANCHOR16
 4564 033c 00000000 		.word	.LANCHOR17
 4565 0340 E0930400 		.word	300000
 4566 0344 00000000 		.word	.LANCHOR11
 4567 0348 00000000 		.word	.LANCHOR20
 4568 034c 00000000 		.word	.LANCHOR19
 4569 0350 00000000 		.word	.LANCHOR21
 4570 0354 00002041 		.word	1092616192
 4571 0358 6666263F 		.word	1059481190
 4572 035c F90F4940 		.word	1078530041
 4573 0360 0000A041 		.word	1101004800
 4574 0364 00401C46 		.word	1176256512
 4575 0368 00000000 		.word	.LANCHOR22
 4576 036c 00A08C45 		.word	1166843904
 4577              	.LVL585:
 4578              	.L491:
 4579              	.LBE160:
 4580              	.LBE159:
 4581              	.LBE158:
 4582              	.LBB161:
 4583              	.LBB162:
 384:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 4584              		.loc 1 384 0
 4585 0370 4A46     		mov	r2, r9
 4586 0372 1368     		ldr	r3, [r2]
 4587 0374 C72B     		cmp	r3, #199
 4588 0376 00D8     		bhi	.LCB4048
 4589 0378 D5E6     		b	.L494	@long jump
 4590              	.LCB4048:
 4591 037a 5846     		mov	r0, fp
 4592 037c C578     		ldrb	r5, [r0, #3]
 4593 037e 002D     		cmp	r5, #0
 4594 0380 00D0     		beq	.LCB4052
 4595 0382 D0E6     		b	.L494	@long jump
 4596              	.LCB4052:
 4597              	.LBB163:
 387:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4598              		.loc 1 387 0
 4599 0384 0121     		mov	r1, #1
 4600 0386 C170     		strb	r1, [r0, #3]
 389:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4601              		.loc 1 389 0
 4602 0388 0020     		mov	r0, #0
 4603 038a B949     		ldr	r1, .L565
 386:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4604              		.loc 1 386 0
 4605 038c 1560     		str	r5, [r2]
 390:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4606              		.loc 1 390 0
 4607 038e 8024     		mov	r4, #128
 389:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4608              		.loc 1 389 0
 4609 0390 FFF7FEFF 		bl	TFC_SetServo
 4610              	.LVL586:
 390:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4611              		.loc 1 390 0
 4612 0394 B74B     		ldr	r3, .L565+4
 4613 0396 A203     		lsl	r2, r4, #14
 391:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4614              		.loc 1 391 0
 4615 0398 0020     		mov	r0, #0
 390:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4616              		.loc 1 390 0
 4617 039a 9A60     		str	r2, [r3, #8]
 391:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4618              		.loc 1 391 0
 4619 039c 011C     		add	r1, r0, #0
 4620 039e FFF7FEFF 		bl	TFC_SetMotorPWM
 4621              	.LVL587:
 393:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4622              		.loc 1 393 0
 4623 03a2 4046     		mov	r0, r8
 4624 03a4 0068     		ldr	r0, [r0]
 4625 03a6 FFF7FEFF 		bl	getTotalIntensity
 4626              	.LVL588:
 4627 03aa B349     		ldr	r1, .L565+8
 4628 03ac FFF7FEFF 		bl	calculateNewExposure
 4629              	.LVL589:
 396:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4630              		.loc 1 396 0
 4631 03b0 4D46     		mov	r5, r9
 393:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4632              		.loc 1 393 0
 4633 03b2 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4634              	.LVL590:
 396:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4635              		.loc 1 396 0
 4636 03b6 6C69     		ldr	r4, [r5, #20]
 4637 03b8 B049     		ldr	r1, .L565+12
 397:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 4638              		.loc 1 397 0
 4639 03ba 4246     		mov	r2, r8
 396:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4640              		.loc 1 396 0
 4641 03bc 0C60     		str	r4, [r1]
 397:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 4642              		.loc 1 397 0
 4643 03be 1068     		ldr	r0, [r2]
 4644 03c0 0CA9     		add	r1, sp, #48
 4645 03c2 8022     		mov	r2, #128
 4646 03c4 FFF7FEFF 		bl	edgeDetection
 4647              	.LVL591:
 398:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 4648              		.loc 1 398 0
 4649 03c8 6869     		ldr	r0, [r5, #20]
 4650 03ca AC4D     		ldr	r5, .L565+12
 4651 03cc AC49     		ldr	r1, .L565+16
 4652 03ce 2C68     		ldr	r4, [r5]
 119:../Sources/main.c **** int main(void)
 4653              		.loc 1 119 0
 4654 03d0 4CAB     		add	r3, sp, #304
 398:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 4655              		.loc 1 398 0
 4656 03d2 021B     		sub	r2, r0, r4
 4657 03d4 0A60     		str	r2, [r1]
 4658              	.LVL592:
 4659 03d6 0CAD     		add	r5, sp, #48
 119:../Sources/main.c **** int main(void)
 4660              		.loc 1 119 0
 4661 03d8 9A46     		mov	sl, r3
 4662              	.LVL593:
 4663              	.L497:
 4664              	.LBB164:
 403:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 4665              		.loc 1 403 0
 4666 03da 0023     		mov	r3, #0
 4667 03dc E85E     		ldrsh	r0, [r5, r3]
 4668 03de 391C     		mov	r1, r7
 4669 03e0 C417     		asr	r4, r0, #31
 4670 03e2 0219     		add	r2, r0, r4
 4671 03e4 6240     		eor	r2, r4
 4672 03e6 301C     		mov	r0, r6
 4673 03e8 FFF7FEFF 		bl	Qprintf
 4674              	.LVL594:
 4675 03ec 0223     		mov	r3, #2
 4676 03ee EA5E     		ldrsh	r2, [r5, r3]
 4677 03f0 301C     		mov	r0, r6
 4678 03f2 D117     		asr	r1, r2, #31
 4679 03f4 5218     		add	r2, r2, r1
 4680 03f6 4A40     		eor	r2, r1
 4681 03f8 0435     		add	r5, r5, #4
 4682 03fa 391C     		mov	r1, r7
 4683 03fc FFF7FEFF 		bl	Qprintf
 4684              	.LVL595:
 401:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4685              		.loc 1 401 0
 4686 0400 5545     		cmp	r5, sl
 4687 0402 EAD1     		bne	.L497
 4688              	.LBE164:
 405:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 4689              		.loc 1 405 0
 4690 0404 301C     		mov	r0, r6
 4691 0406 9F49     		ldr	r1, .L565+20
 4692 0408 FFF7FEFF 		bl	Qprintf
 4693              	.LVL596:
 4694 040c 8BE6     		b	.L494
 4695              	.LVL597:
 4696              	.L541:
 4697              	.LBE163:
 4698              	.LBE162:
 4699              	.LBE161:
 4700              	.LBB167:
 4701              	.LBB106:
 498:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 4702              		.loc 1 498 0
 4703 040e 9E4B     		ldr	r3, .L565+24
 4704 0410 8020     		mov	r0, #128
 4705 0412 9D68     		ldr	r5, [r3, #8]
 4706 0414 4100     		lsl	r1, r0, #1
 4707 0416 2943     		orr	r1, r5
 4708 0418 9960     		str	r1, [r3, #8]
 499:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 4709              		.loc 1 499 0
 4710 041a 9C68     		ldr	r4, [r3, #8]
 4711 041c 8022     		mov	r2, #128
 4712 041e 9500     		lsl	r5, r2, #2
 4713 0420 2543     		orr	r5, r4
 4714 0422 9D60     		str	r5, [r3, #8]
 4715 0424 D6E6     		b	.L533
 4716              	.L542:
 506:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 4717              		.loc 1 506 0
 4718 0426 984B     		ldr	r3, .L565+24
 4719 0428 8022     		mov	r2, #128
 4720 042a 5868     		ldr	r0, [r3, #4]
 4721 042c 5100     		lsl	r1, r2, #1
 4722 042e 0143     		orr	r1, r0
 4723 0430 5960     		str	r1, [r3, #4]
 4724              	.L539:
 550:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 4725              		.loc 1 550 0
 4726 0432 9C68     		ldr	r4, [r3, #8]
 4727 0434 8025     		mov	r5, #128
 4728 0436 A800     		lsl	r0, r5, #2
 4729 0438 2043     		orr	r0, r4
 4730 043a 9860     		str	r0, [r3, #8]
 551:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 4731              		.loc 1 551 0
 4732 043c 9968     		ldr	r1, [r3, #8]
 4733 043e 8022     		mov	r2, #128
 4734 0440 D400     		lsl	r4, r2, #3
 4735 0442 0C43     		orr	r4, r1
 4736 0444 9C60     		str	r4, [r3, #8]
 4737 0446 CAE6     		b	.L534
 4738              	.LVL598:
 4739              	.L557:
 4740              	.LBE106:
 4741              	.LBE167:
 4742              	.LBB168:
 4743              	.LBB153:
 253:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4744              		.loc 1 253 0
 4745 0448 0025     		mov	r5, #0
 4746 044a 0560     		str	r5, [r0]
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 4747              		.loc 1 254 0
 4748 044c 5C46     		mov	r4, fp
 4749 044e 0B23     		mov	r3, #11
 4750 0450 E056     		ldrsb	r0, [r4, r3]
 4751 0452 0021     		mov	r1, #0
 4752 0454 8D4A     		ldr	r2, .L565+28
 4753 0456 FFF7FEFF 		bl	getDesiredServoValue
 4754              	.LVL599:
 257:../Sources/main.c **** 		if(servoValue>0){
 4755              		.loc 1 257 0
 4756 045a 0021     		mov	r1, #0
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 4757              		.loc 1 254 0
 4758 045c 041C     		add	r4, r0, #0
 257:../Sources/main.c **** 		if(servoValue>0){
 4759              		.loc 1 257 0
 4760 045e FFF7FEFF 		bl	__aeabi_fcmpgt
 4761              	.LVL600:
 4762 0462 0028     		cmp	r0, #0
 4763 0464 00D1     		bne	.LCB4197
 4764 0466 D8E1     		b	.L562	@long jump
 4765              	.LCB4197:
 258:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 4766              		.loc 1 258 0
 4767 0468 201C     		add	r0, r4, #0
 4768 046a 8949     		ldr	r1, .L565+32
 4769 046c FFF7FEFF 		bl	__aeabi_fadd
 4770              	.LVL601:
 4771 0470 011C     		add	r1, r0, #0
 4772 0472 201C     		add	r0, r4, #0
 4773 0474 FFF7FEFF 		bl	__aeabi_fadd
 4774              	.LVL602:
 259:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 4775              		.loc 1 259 0
 4776 0478 864D     		ldr	r5, .L565+36
 258:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 4777              		.loc 1 258 0
 4778 047a 041C     		add	r4, r0, #0
 259:../Sources/main.c **** 					if(servoValue>STEERING_LIMIT_UPPER)
 4779              		.loc 1 259 0
 4780 047c 291C     		add	r1, r5, #0
 4781 047e FFF7FEFF 		bl	__aeabi_fcmpgt
 4782              	.LVL603:
 4783 0482 0028     		cmp	r0, #0
 4784 0484 00D0     		beq	.LCB4212
 4785 0486 AFE1     		b	.L511	@long jump
 4786              	.LCB4212:
 258:../Sources/main.c **** 					servoValue+=servoValue+0.015f;
 4787              		.loc 1 258 0
 4788 0488 8348     		ldr	r0, .L565+40
 4789 048a 0460     		str	r4, [r0]
 4790              	.L510:
 266:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4791              		.loc 1 266 0
 4792 048c 201C     		add	r0, r4, #0
 4793 048e 7849     		ldr	r1, .L565
 4794 0490 FFF7FEFF 		bl	__aeabi_fadd
 4795              	.LVL604:
 4796 0494 011C     		add	r1, r0, #0
 4797 0496 0020     		mov	r0, #0
 4798 0498 FFF7FEFF 		bl	TFC_SetServo
 4799              	.LVL605:
 4800              	.LBB130:
 4801              	.LBB131:
 4802              		.loc 1 726 0
 4803 049c 7F4B     		ldr	r3, .L565+44
 4804 049e 8049     		ldr	r1, .L565+48
 4805 04a0 1868     		ldr	r0, [r3]
 4806 04a2 FFF7FEFF 		bl	__aeabi_fmul
 4807              	.LVL606:
 4808 04a6 7C4A     		ldr	r2, .L565+40
 4809 04a8 051C     		add	r5, r0, #0
 4810 04aa 7E49     		ldr	r1, .L565+52
 4811 04ac 1068     		ldr	r0, [r2]
 4812              	.LVL607:
 4813 04ae FFF7FEFF 		bl	__aeabi_fmul
 4814              	.LVL608:
 4815 04b2 011C     		add	r1, r0, #0
 4816 04b4 281C     		add	r0, r5, #0
 4817 04b6 FFF7FEFF 		bl	__aeabi_fadd
 4818              	.LVL609:
 4819 04ba 7849     		ldr	r1, .L565+44
 4820              	.LBE131:
 4821              	.LBE130:
 267:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 4822              		.loc 1 267 0
 4823 04bc 764C     		ldr	r4, .L565+40
 4824              	.LBB133:
 4825              	.LBB132:
 4826              		.loc 1 726 0
 4827 04be 0860     		str	r0, [r1]
 4828              	.LBE132:
 4829              	.LBE133:
 267:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 4830              		.loc 1 267 0
 4831 04c0 2060     		str	r0, [r4]
 4832 04c2 B7E6     		b	.L508
 4833              	.L556:
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4834              		.loc 1 246 0
 4835 04c4 784A     		ldr	r2, .L565+56
 244:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 4836              		.loc 1 244 0
 4837 04c6 714D     		ldr	r5, .L565+28
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4838              		.loc 1 246 0
 4839 04c8 1368     		ldr	r3, [r2]
 4840 04ca 4046     		mov	r0, r8
 4841 04cc 191C     		mov	r1, r3
 4842 04ce 0068     		ldr	r0, [r0]
 4843 04d0 5A46     		mov	r2, fp
 244:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 4844              		.loc 1 244 0
 4845 04d2 2C70     		strb	r4, [r5]
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4846              		.loc 1 246 0
 4847 04d4 0693     		str	r3, [sp, #24]
 4848 04d6 FFF7FEFF 		bl	findLine
 4849              	.LVL610:
 4850              	.LBB134:
 4851              	.LBB135:
 684:../Sources/main.c **** 	if(s_mode_enable)
 4852              		.loc 1 684 0
 4853 04da 7449     		ldr	r1, .L565+60
 4854 04dc 0C78     		ldrb	r4, [r1]
 4855 04de 002C     		cmp	r4, #0
 4856 04e0 00D0     		beq	.LCB4279
 4857 04e2 89E0     		b	.L502	@long jump
 4858              	.LCB4279:
 4859 04e4 5D46     		mov	r5, fp
 4860 04e6 AB7A     		ldrb	r3, [r5, #10]
 4861 04e8 697A     		ldrb	r1, [r5, #9]
 4862 04ea 5CB2     		sxtb	r4, r3
 704:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 4863              		.loc 1 704 0
 4864 04ec 0129     		cmp	r1, #1
 4865 04ee 00D1     		bne	.LCB4285
 4866 04f0 9BE0     		b	.L506	@long jump
 4867              	.LCB4285:
 4868              	.L507:
 711:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 4869              		.loc 1 711 0
 4870 04f2 5D46     		mov	r5, fp
 4871 04f4 EB72     		strb	r3, [r5, #11]
 712:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 4872              		.loc 1 712 0
 4873 04f6 201C     		mov	r0, r4
 4874 04f8 FFF7FEFF 		bl	__aeabi_i2f
 4875              	.LVL611:
 4876 04fc 6C4B     		ldr	r3, .L565+64
 4877 04fe 1860     		str	r0, [r3]
 4878 0500 93E6     		b	.L501
 4879              	.LVL612:
 4880              	.L555:
 4881              	.LBE135:
 4882              	.LBE134:
 221:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 4883              		.loc 1 221 0
 4884 0502 0025     		mov	r5, #0
 4885 0504 0D61     		str	r5, [r1, #16]
 222:../Sources/main.c **** 		telemetrySendData();
 4886              		.loc 1 222 0
 4887 0506 FFF7FEFF 		bl	telemetrySendData
 4888              	.LVL613:
 223:../Sources/main.c **** 		telemetryReadData();
 4889              		.loc 1 223 0
 4890 050a FFF7FEFF 		bl	telemetryReadData
 4891              	.LVL614:
 4892 050e 83E6     		b	.L500
 4893              	.L554:
 214:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 4894              		.loc 1 214 0
 4895 0510 0020     		mov	r0, #0
 4896 0512 A061     		str	r0, [r4, #24]
 215:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 4897              		.loc 1 215 0
 4898 0514 FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 4899              	.LVL615:
 4900 0518 664B     		ldr	r3, .L565+68
 4901 051a 1860     		str	r0, [r3]
 4902 051c 77E6     		b	.L499
 4903              	.L553:
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 4904              		.loc 1 208 0
 4905 051e 664B     		ldr	r3, .L565+72
 4906 0520 0020     		mov	r0, #0
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 4907              		.loc 1 209 0
 4908 0522 5946     		mov	r1, fp
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 4909              		.loc 1 208 0
 4910 0524 1870     		strb	r0, [r3]
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 4911              		.loc 1 209 0
 4912 0526 8C70     		strb	r4, [r1, #2]
 4913 0528 6BE6     		b	.L498
 4914              	.LVL616:
 4915              	.L543:
 4916              	.LBE153:
 4917              	.LBE168:
 4918              	.LBB169:
 4919              	.LBB107:
 514:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 4920              		.loc 1 514 0
 4921 052a 574B     		ldr	r3, .L565+24
 4922 052c 8022     		mov	r2, #128
 4923 052e 9C68     		ldr	r4, [r3, #8]
 4924 0530 5500     		lsl	r5, r2, #1
 4925 0532 2543     		orr	r5, r4
 4926 0534 9D60     		str	r5, [r3, #8]
 515:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 4927              		.loc 1 515 0
 4928 0536 5868     		ldr	r0, [r3, #4]
 4929 0538 8021     		mov	r1, #128
 4930 053a 8C00     		lsl	r4, r1, #2
 4931 053c 0443     		orr	r4, r0
 4932 053e 5C60     		str	r4, [r3, #4]
 4933              	.L535:
 544:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 4934              		.loc 1 544 0
 4935 0540 5D68     		ldr	r5, [r3, #4]
 4936 0542 8022     		mov	r2, #128
 4937 0544 D000     		lsl	r0, r2, #3
 4938 0546 2843     		orr	r0, r5
 4939 0548 5860     		str	r0, [r3, #4]
 4940              	.L536:
 545:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 4941              		.loc 1 545 0
 4942 054a 9968     		ldr	r1, [r3, #8]
 4943 054c 8024     		mov	r4, #128
 4944 054e 2501     		lsl	r5, r4, #4
 4945 0550 0D43     		orr	r5, r1
 4946 0552 9D60     		str	r5, [r3, #8]
 4947 0554 C7E5     		b	.L482
 4948              	.LVL617:
 4949              	.L549:
 4950              	.LBE107:
 4951              	.LBE169:
 4952              	.LBB170:
 4953              	.LBB116:
 364:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4954              		.loc 1 364 0
 4955 0556 0123     		mov	r3, #1
 363:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4956              		.loc 1 363 0
 4957 0558 2860     		str	r0, [r5]
 366:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4958              		.loc 1 366 0
 4959 055a 4549     		ldr	r1, .L565
 4960 055c 0020     		mov	r0, #0
 364:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4961              		.loc 1 364 0
 4962 055e D370     		strb	r3, [r2, #3]
 367:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4963              		.loc 1 367 0
 4964 0560 8024     		mov	r4, #128
 366:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4965              		.loc 1 366 0
 4966 0562 FFF7FEFF 		bl	TFC_SetServo
 4967              	.LVL618:
 367:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4968              		.loc 1 367 0
 4969 0566 4349     		ldr	r1, .L565+4
 4970 0568 A503     		lsl	r5, r4, #14
 368:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4971              		.loc 1 368 0
 4972 056a 0020     		mov	r0, #0
 367:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4973              		.loc 1 367 0
 4974 056c 8D60     		str	r5, [r1, #8]
 368:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4975              		.loc 1 368 0
 4976 056e 011C     		add	r1, r0, #0
 4977 0570 FFF7FEFF 		bl	TFC_SetMotorPWM
 4978              	.LVL619:
 370:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4979              		.loc 1 370 0
 4980 0574 4246     		mov	r2, r8
 4981 0576 1068     		ldr	r0, [r2]
 4982 0578 FFF7FEFF 		bl	getTotalIntensity
 4983              	.LVL620:
 4984 057c 3E49     		ldr	r1, .L565+8
 4985 057e FFF7FEFF 		bl	calculateNewExposure
 4986              	.LVL621:
 4987 0582 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4988              	.LVL622:
 4989              	.LBB114:
 373:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4990              		.loc 1 373 0
 4991 0586 8020     		mov	r0, #128
 4992              	.LBE114:
 370:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4993              		.loc 1 370 0
 4994 0588 0024     		mov	r4, #0
 4995              	.LBB115:
 373:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4996              		.loc 1 373 0
 4997 058a 4500     		lsl	r5, r0, #1
 4998              	.LVL623:
 4999              	.L496:
 375:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 5000              		.loc 1 375 0
 5001 058c 4346     		mov	r3, r8
 5002 058e 1968     		ldr	r1, [r3]
 5003 0590 301C     		mov	r0, r6
 5004 0592 0A19     		add	r2, r1, r4
 5005 0594 1288     		ldrh	r2, [r2]
 5006 0596 391C     		mov	r1, r7
 5007 0598 FFF7FEFF 		bl	Qprintf
 5008              	.LVL624:
 5009 059c 4046     		mov	r0, r8
 5010 059e 0368     		ldr	r3, [r0]
 5011 05a0 0234     		add	r4, r4, #2
 5012 05a2 1919     		add	r1, r3, r4
 5013 05a4 0A88     		ldrh	r2, [r1]
 5014 05a6 301C     		mov	r0, r6
 5015 05a8 391C     		mov	r1, r7
 5016 05aa 0234     		add	r4, r4, #2
 5017 05ac FFF7FEFF 		bl	Qprintf
 5018              	.LVL625:
 373:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 5019              		.loc 1 373 0
 5020 05b0 AC42     		cmp	r4, r5
 5021 05b2 EBD1     		bne	.L496
 5022              	.LBE115:
 5023              	.LBE116:
 5024              	.LBE170:
 5025              	.LBB171:
 5026              	.LBB166:
 5027              	.LBB165:
 405:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 5028              		.loc 1 405 0
 5029 05b4 301C     		mov	r0, r6
 5030 05b6 3349     		ldr	r1, .L565+20
 5031 05b8 FFF7FEFF 		bl	Qprintf
 5032              	.LVL626:
 5033 05bc B3E5     		b	.L494
 5034              	.LVL627:
 5035              	.L544:
 5036              	.LBE165:
 5037              	.LBE166:
 5038              	.LBE171:
 5039              	.LBB172:
 5040              	.LBB108:
 521:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 5041              		.loc 1 521 0
 5042 05be 324B     		ldr	r3, .L565+24
 5043 05c0 8025     		mov	r5, #128
 5044 05c2 5C68     		ldr	r4, [r3, #4]
 5045 05c4 6800     		lsl	r0, r5, #1
 5046 05c6 2043     		orr	r0, r4
 5047 05c8 5860     		str	r0, [r3, #4]
 5048              	.L540:
 536:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 5049              		.loc 1 536 0
 5050 05ca 5968     		ldr	r1, [r3, #4]
 5051 05cc 8022     		mov	r2, #128
 5052 05ce 9400     		lsl	r4, r2, #2
 5053 05d0 0C43     		orr	r4, r1
 5054 05d2 5C60     		str	r4, [r3, #4]
 5055              	.L538:
 530:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 5056              		.loc 1 530 0
 5057 05d4 9D68     		ldr	r5, [r3, #8]
 5058 05d6 8020     		mov	r0, #128
 5059 05d8 C100     		lsl	r1, r0, #3
 5060 05da 2943     		orr	r1, r5
 5061 05dc 9960     		str	r1, [r3, #8]
 5062 05de B4E7     		b	.L536
 5063              	.L545:
 528:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 5064              		.loc 1 528 0
 5065 05e0 294B     		ldr	r3, .L565+24
 5066 05e2 8024     		mov	r4, #128
 5067 05e4 5968     		ldr	r1, [r3, #4]
 5068 05e6 6500     		lsl	r5, r4, #1
 5069 05e8 0D43     		orr	r5, r1
 5070 05ea 5D60     		str	r5, [r3, #4]
 529:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 5071              		.loc 1 529 0
 5072 05ec 9868     		ldr	r0, [r3, #8]
 5073 05ee 8022     		mov	r2, #128
 5074 05f0 9100     		lsl	r1, r2, #2
 5075 05f2 0143     		orr	r1, r0
 5076 05f4 9960     		str	r1, [r3, #8]
 5077 05f6 EDE7     		b	.L538
 5078              	.LVL628:
 5079              	.L502:
 5080              	.LBE108:
 5081              	.LBE172:
 5082              	.LBB173:
 5083              	.LBB154:
 5084              	.LBB139:
 5085              	.LBB136:
 686:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 5086              		.loc 1 686 0
 5087 05f8 5846     		mov	r0, fp
 5088 05fa 837A     		ldrb	r3, [r0, #10]
 5089 05fc 5CB2     		sxtb	r4, r3
 5090 05fe 092C     		cmp	r4, #9
 5091 0600 00DD     		ble	.LCB4502
 5092 0602 E4E0     		b	.L504	@long jump
 5093              	.LCB4502:
 687:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 5094              		.loc 1 687 0
 5095 0604 027B     		ldrb	r2, [r0, #12]
 5096 0606 462A     		cmp	r2, #70
 5097 0608 00D8     		bhi	.LCB4505
 5098 060a E0E0     		b	.L504	@long jump
 5099              	.LCB4505:
 688:../Sources/main.c **** 				&& carState->crossSection == NO)
 5100              		.loc 1 688 0
 5101 060c 8179     		ldrb	r1, [r0, #6]
 5102 060e 0029     		cmp	r1, #0
 5103 0610 00D0     		beq	.LCB4508
 5104 0612 DCE0     		b	.L504	@long jump
 5105              	.LCB4508:
 690:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 5106              		.loc 1 690 0
 5107 0614 4946     		mov	r1, r9
 5108 0616 CD69     		ldr	r5, [r1, #28]
 5109 0618 2848     		ldr	r0, .L565+76
 5110 061a 8542     		cmp	r5, r0
 5111 061c 00D9     		bls	.LCB4513
 5112 061e 2BE1     		b	.L505	@long jump
 5113              	.LCB4513:
 5114 0620 5A46     		mov	r2, fp
 5115 0622 517A     		ldrb	r1, [r2, #9]
 704:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 5116              		.loc 1 704 0
 5117 0624 0129     		cmp	r1, #1
 5118 0626 00D0     		beq	.LCB4517
 5119 0628 63E7     		b	.L507	@long jump
 5120              	.LCB4517:
 5121              	.L506:
 706:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5122              		.loc 1 706 0
 5123 062a 2149     		ldr	r1, .L565+64
 5124 062c 0868     		ldr	r0, [r1]
 5125 062e 2449     		ldr	r1, .L565+80
 5126 0630 FFF7FEFF 		bl	__aeabi_fmul
 5127              	.LVL629:
 5128 0634 051C     		add	r5, r0, #0
 5129 0636 201C     		mov	r0, r4
 5130 0638 FFF7FEFF 		bl	__aeabi_i2f
 5131              	.LVL630:
 5132 063c 2149     		ldr	r1, .L565+84
 5133 063e FFF7FEFF 		bl	__aeabi_fmul
 5134              	.LVL631:
 5135 0642 011C     		add	r1, r0, #0
 5136 0644 281C     		add	r0, r5, #0
 5137 0646 FFF7FEFF 		bl	__aeabi_fadd
 5138              	.LVL632:
 5139 064a 194C     		ldr	r4, .L565+64
 707:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5140              		.loc 1 707 0
 5141 064c FC23     		mov	r3, #252
 5142 064e 9905     		lsl	r1, r3, #22
 706:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5143              		.loc 1 706 0
 5144 0650 2060     		str	r0, [r4]
 707:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5145              		.loc 1 707 0
 5146 0652 FFF7FEFF 		bl	__aeabi_fadd
 5147              	.LVL633:
 5148 0656 FFF7FEFF 		bl	__aeabi_f2uiz
 5149              	.LVL634:
 5150 065a 5A46     		mov	r2, fp
 5151 065c D072     		strb	r0, [r2, #11]
 5152 065e E4E5     		b	.L501
 5153              	.LVL635:
 5154              	.L546:
 5155              	.LBE136:
 5156              	.LBE139:
 5157              	.LBE154:
 5158              	.LBE173:
 5159              	.LBB174:
 5160              	.LBB109:
 535:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5161              		.loc 1 535 0
 5162 0660 094B     		ldr	r3, .L565+24
 5163 0662 8022     		mov	r2, #128
 5164 0664 9D68     		ldr	r5, [r3, #8]
 5165 0666 5000     		lsl	r0, r2, #1
 5166 0668 2843     		orr	r0, r5
 5167 066a 9860     		str	r0, [r3, #8]
 5168 066c ADE7     		b	.L540
 5169              	.L566:
 5170 066e C046     		.align	2
 5171              	.L565:
 5172 0670 CDCC4C3D 		.word	1028443341
 5173 0674 00F10F40 		.word	1074786560
 5174 0678 E0930400 		.word	300000
 5175 067c 00000000 		.word	.LANCHOR0
 5176 0680 00000000 		.word	.LANCHOR1
 5177 0684 04000000 		.word	.LC5
 5178 0688 40F00F40 		.word	1074786368
 5179 068c 00000000 		.word	.LANCHOR12
 5180 0690 8FC2753C 		.word	1014350479
 5181 0694 F628DC3E 		.word	1054615798
 5182 0698 00000000 		.word	.LANCHOR5
 5183 069c 00000000 		.word	.LANCHOR15
 5184 06a0 CDCC4C3F 		.word	1061997773
 5185 06a4 CCCC4C3E 		.word	1045220556
 5186 06a8 00000000 		.word	LineScanImage1
 5187 06ac 00000000 		.word	.LANCHOR13
 5188 06b0 00000000 		.word	.LANCHOR14
 5189 06b4 00000000 		.word	.LANCHOR2
 5190 06b8 00000000 		.word	.LANCHOR11
 5191 06bc 94110000 		.word	4500
 5192 06c0 6666663F 		.word	1063675494
 5193 06c4 D0CCCC3D 		.word	1036831952
 5194              	.LVL636:
 5195              	.L559:
 5196              	.LBE109:
 5197              	.LBE174:
 5198              	.LBB175:
 5199              	.LBB155:
 5200              	.LBB140:
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5201              		.loc 1 283 0
 5202 06c8 734C     		ldr	r4, .L567+8
 5203 06ca 2568     		ldr	r5, [r4]
 5204 06cc 281C     		add	r0, r5, #0
 5205 06ce 0595     		str	r5, [sp, #20]
 5206 06d0 FFF7FEFF 		bl	getRadiusRoot
 5207              	.LVL637:
 5208 06d4 7149     		ldr	r1, .L567+12
 5209 06d6 021C     		add	r2, r0, #0
 5210 06d8 5846     		mov	r0, fp
 5211 06da FFF7FEFF 		bl	getDesiredSpeed
 5212              	.LVL638:
 5213              	.LBB141:
 5214              	.LBB142:
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5215              		.loc 1 719 0
 5216 06de 704A     		ldr	r2, .L567+16
 5217              	.LBE142:
 5218              	.LBE141:
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5219              		.loc 1 283 0
 5220 06e0 8246     		mov	sl, r0
 5221              	.LVL639:
 5222              	.LBB146:
 5223              	.LBB143:
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5224              		.loc 1 719 0
 5225 06e2 7049     		ldr	r1, .L567+20
 5226 06e4 1068     		ldr	r0, [r2]
 5227              	.LVL640:
 5228 06e6 FFF7FEFF 		bl	__aeabi_fmul
 5229              	.LVL641:
 5230 06ea FFF7FEFF 		bl	__aeabi_f2d
 5231              	.LVL642:
 5232 06ee 041C     		mov	r4, r0
 5233 06f0 5046     		mov	r0, sl
 5234 06f2 0D1C     		mov	r5, r1
 5235 06f4 FFF7FEFF 		bl	__aeabi_f2d
 5236              	.LVL643:
 5237 06f8 664B     		ldr	r3, .L567+4
 5238 06fa 654A     		ldr	r2, .L567
 5239 06fc FFF7FEFF 		bl	__aeabi_dmul
 5240              	.LVL644:
 5241 0700 021C     		mov	r2, r0
 5242 0702 0B1C     		mov	r3, r1
 5243 0704 201C     		mov	r0, r4
 5244 0706 291C     		mov	r1, r5
 5245 0708 FFF7FEFF 		bl	__aeabi_dadd
 5246              	.LVL645:
 5247 070c FFF7FEFF 		bl	__aeabi_d2f
 5248              	.LVL646:
 5249              	.LBE143:
 5250              	.LBE146:
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5251              		.loc 1 283 0
 5252 0710 654B     		ldr	r3, .L567+24
 5253              	.LBB147:
 5254              	.LBB144:
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5255              		.loc 1 719 0
 5256 0712 6349     		ldr	r1, .L567+16
 5257              	.LBE144:
 5258              	.LBE147:
 283:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5259              		.loc 1 283 0
 5260 0714 1860     		str	r0, [r3]
 5261              	.LBB148:
 5262              	.LBB145:
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5263              		.loc 1 719 0
 5264 0716 0860     		str	r0, [r1]
 5265              	.LBE145:
 5266              	.LBE148:
 286:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 5267              		.loc 1 286 0
 5268 0718 5F48     		ldr	r0, .L567+8
 5269 071a 0021     		mov	r1, #0
 5270 071c 0268     		ldr	r2, [r0]
 5271 071e 101C     		add	r0, r2, #0
 5272 0720 0492     		str	r2, [sp, #16]
 5273 0722 FFF7FEFF 		bl	getActiveDifferentialModifier
 5274              	.LVL647:
 5275 0726 5C4C     		ldr	r4, .L567+8
 5276 0728 051C     		add	r5, r0, #0
 5277              	.LVL648:
 5278 072a 2168     		ldr	r1, [r4]
 5279 072c 0391     		str	r1, [sp, #12]
 5280 072e 081C     		add	r0, r1, #0
 5281              	.LVL649:
 5282 0730 0121     		mov	r1, #1
 5283 0732 FFF7FEFF 		bl	getActiveDifferentialModifier
 5284              	.LVL650:
 5285 0736 041C     		add	r4, r0, #0
 5286              	.LVL651:
 290:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 5287              		.loc 1 290 0
 5288 0738 0020     		mov	r0, #0
 5289              	.LVL652:
 5290 073a FFF7FEFF 		bl	getSpeed
 5291              	.LVL653:
 5292 073e 5B4B     		ldr	r3, .L567+28
 5293 0740 1860     		str	r0, [r3]
 291:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 5294              		.loc 1 291 0
 5295 0742 0120     		mov	r0, #1
 5296 0744 FFF7FEFF 		bl	getSpeed
 5297              	.LVL654:
 5298 0748 594A     		ldr	r2, .L567+32
 5299 074a 1060     		str	r0, [r2]
 303:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 5300              		.loc 1 303 0
 5301 074c 5846     		mov	r0, fp
 5302 074e 4178     		ldrb	r1, [r0, #1]
 5303 0750 0129     		cmp	r1, #1
 5304 0752 00D0     		beq	.LCB4690
 5305 0754 E7E4     		b	.L494	@long jump
 5306              	.LCB4690:
 307:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 5307              		.loc 1 307 0
 5308 0756 574B     		ldr	r3, .L567+36
 5309 0758 5749     		ldr	r1, .L567+40
 5310 075a 1868     		ldr	r0, [r3]
 5311 075c FFF7FEFF 		bl	__aeabi_fdiv
 5312              	.LVL655:
 5313 0760 0B90     		str	r0, [sp, #44]
 5314 0762 281C     		add	r0, r5, #0
 5315 0764 504D     		ldr	r5, .L567+24
 5316              	.LVL656:
 5317 0766 2968     		ldr	r1, [r5]
 5318 0768 FFF7FEFF 		bl	__aeabi_fmul
 5319              	.LVL657:
 5320 076c 4F4A     		ldr	r2, .L567+28
 5321 076e 8246     		mov	sl, r0
 5322              	.LVL658:
 5323 0770 0020     		mov	r0, #0
 5324 0772 1568     		ldr	r5, [r2]
 5325 0774 FFF7FEFF 		bl	isANewmeasurementAvailable
 5326              	.LVL659:
 5327 0778 0023     		mov	r3, #0
 5328 077a 021C     		mov	r2, r0
 5329 077c 291C     		add	r1, r5, #0
 5330 077e 5046     		mov	r0, sl
 5331 0780 FFF7FEFF 		bl	getDesiredMotorPWM
 5332              	.LVL660:
 5333 0784 011C     		add	r1, r0, #0
 306:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 5334              		.loc 1 306 0
 5335 0786 0B98     		ldr	r0, [sp, #44]
 5336 0788 FFF7FEFF 		bl	__aeabi_fmul
 5337              	.LVL661:
 5338 078c 0B90     		str	r0, [sp, #44]
 308:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 5339              		.loc 1 308 0
 5340 078e 4948     		ldr	r0, .L567+36
 5341 0790 4949     		ldr	r1, .L567+40
 5342 0792 0068     		ldr	r0, [r0]
 5343 0794 FFF7FEFF 		bl	__aeabi_fdiv
 5344              	.LVL662:
 5345 0798 051C     		add	r5, r0, #0
 5346 079a 201C     		add	r0, r4, #0
 5347 079c 424C     		ldr	r4, .L567+24
 5348              	.LVL663:
 5349 079e 2168     		ldr	r1, [r4]
 5350 07a0 FFF7FEFF 		bl	__aeabi_fmul
 5351              	.LVL664:
 5352 07a4 4249     		ldr	r1, .L567+32
 5353 07a6 8246     		mov	sl, r0
 5354 07a8 0120     		mov	r0, #1
 5355 07aa 0C68     		ldr	r4, [r1]
 5356 07ac FFF7FEFF 		bl	isANewmeasurementAvailable
 5357              	.LVL665:
 5358 07b0 211C     		add	r1, r4, #0
 5359 07b2 021C     		mov	r2, r0
 5360 07b4 0123     		mov	r3, #1
 5361 07b6 5046     		mov	r0, sl
 5362 07b8 FFF7FEFF 		bl	getDesiredMotorPWM
 5363              	.LVL666:
 5364 07bc 011C     		add	r1, r0, #0
 306:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 5365              		.loc 1 306 0
 5366 07be 281C     		add	r0, r5, #0
 5367 07c0 FFF7FEFF 		bl	__aeabi_fmul
 5368              	.LVL667:
 5369 07c4 011C     		add	r1, r0, #0
 5370 07c6 0B98     		ldr	r0, [sp, #44]
 5371 07c8 FFF7FEFF 		bl	TFC_SetMotorPWM
 5372              	.LVL668:
 5373 07cc ABE4     		b	.L494
 5374              	.LVL669:
 5375              	.L504:
 5376              	.LBE140:
 5377              	.LBB149:
 5378              	.LBB137:
 697:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5379              		.loc 1 697 0
 5380 07ce 0025     		mov	r5, #0
 5381 07d0 5846     		mov	r0, fp
 698:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5382              		.loc 1 698 0
 5383 07d2 4A46     		mov	r2, r9
 697:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5384              		.loc 1 697 0
 5385 07d4 4572     		strb	r5, [r0, #9]
 698:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5386              		.loc 1 698 0
 5387 07d6 D561     		str	r5, [r2, #28]
 5388 07d8 8BE6     		b	.L507
 5389              	.LVL670:
 5390              	.L548:
 5391              	.LBE137:
 5392              	.LBE149:
 5393              	.LBE155:
 5394              	.LBE175:
 5395              	.LBB176:
 5396              	.LBB110:
 549:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5397              		.loc 1 549 0
 5398 07da 384B     		ldr	r3, .L567+44
 5399 07dc 8020     		mov	r0, #128
 5400 07de 9D68     		ldr	r5, [r3, #8]
 5401 07e0 4100     		lsl	r1, r0, #1
 5402 07e2 2943     		orr	r1, r5
 5403 07e4 9960     		str	r1, [r3, #8]
 5404 07e6 24E6     		b	.L539
 5405              	.LVL671:
 5406              	.L511:
 5407              	.LBE110:
 5408              	.LBE176:
 5409              	.LBB177:
 5410              	.LBB156:
 261:../Sources/main.c **** 						servoValue=STEERING_LIMIT_UPPER;
 5411              		.loc 1 261 0
 5412 07e8 2B49     		ldr	r1, .L567+8
 5413 07ea 2C1C     		add	r4, r5, #0
 5414 07ec 0D60     		str	r5, [r1]
 5415 07ee 4DE6     		b	.L510
 5416              	.LVL672:
 5417              	.L547:
 5418              	.LBE156:
 5419              	.LBE177:
 5420              	.LBB178:
 5421              	.LBB111:
 542:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5422              		.loc 1 542 0
 5423 07f0 324B     		ldr	r3, .L567+44
 5424 07f2 8022     		mov	r2, #128
 5425 07f4 9C68     		ldr	r4, [r3, #8]
 5426 07f6 5500     		lsl	r5, r2, #1
 5427 07f8 2543     		orr	r5, r4
 5428 07fa 9D60     		str	r5, [r3, #8]
 543:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 5429              		.loc 1 543 0
 5430 07fc 9868     		ldr	r0, [r3, #8]
 5431 07fe 8021     		mov	r1, #128
 5432 0800 8C00     		lsl	r4, r1, #2
 5433 0802 0443     		orr	r4, r0
 5434 0804 9C60     		str	r4, [r3, #8]
 5435 0806 9BE6     		b	.L535
 5436              	.LVL673:
 5437              	.L560:
 5438              	.LBE111:
 5439              	.LBE178:
 5440              	.LBB179:
 5441              	.LBB157:
 317:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 5442              		.loc 1 317 0
 5443 0808 8020     		mov	r0, #128
 5444 080a 2D4B     		ldr	r3, .L567+48
 5445 080c 8103     		lsl	r1, r0, #14
 318:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 5446              		.loc 1 318 0
 5447 080e 0020     		mov	r0, #0
 317:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 5448              		.loc 1 317 0
 5449 0810 9960     		str	r1, [r3, #8]
 318:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 5450              		.loc 1 318 0
 5451 0812 011C     		add	r1, r0, #0
 5452 0814 FFF7FEFF 		bl	TFC_SetMotorPWM
 5453              	.LVL674:
 5454 0818 85E4     		b	.L494
 5455              	.L562:
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 5456              		.loc 1 254 0
 5457 081a 1F4A     		ldr	r2, .L567+8
 5458 081c 1460     		str	r4, [r2]
 5459 081e 35E6     		b	.L510
 5460              	.L558:
 275:../Sources/main.c **** 			findStop(carState);
 5461              		.loc 1 275 0
 5462 0820 5846     		mov	r0, fp
 5463 0822 FFF7FEFF 		bl	findStop
 5464              	.LVL675:
 5465 0826 10E5     		b	.L513
 5466              	.L516:
 5467              	.LBB150:
 342:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 5468              		.loc 1 342 0
 5469 0828 264A     		ldr	r2, .L567+52
 5470 082a 2749     		ldr	r1, .L567+56
 5471 082c 4846     		mov	r0, r9
 5472 082e 4569     		ldr	r5, [r0, #20]
 5473 0830 1468     		ldr	r4, [r2]
 5474 0832 0868     		ldr	r0, [r1]
 5475 0834 2B1B     		sub	r3, r5, r4
 5476 0836 8342     		cmp	r3, r0
 5477 0838 00D2     		bcs	.LCB4864
 5478 083a 74E4     		b	.L494	@long jump
 5479              	.LCB4864:
 5480              	.LBB127:
 344:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 5481              		.loc 1 344 0
 5482 083c 0020     		mov	r0, #0
 5483 083e FFF7FEFF 		bl	getSpeed
 5484              	.LVL676:
 5485 0842 051C     		add	r5, r0, #0
 5486              	.LVL677:
 5487 0844 0120     		mov	r0, #1
 5488              	.LVL678:
 5489 0846 FFF7FEFF 		bl	getSpeed
 5490              	.LVL679:
 346:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 5491              		.loc 1 346 0
 5492 084a 8022     		mov	r2, #128
 344:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 5493              		.loc 1 344 0
 5494 084c 041C     		add	r4, r0, #0
 5495              	.LVL680:
 346:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 5496              		.loc 1 346 0
 5497 084e D105     		lsl	r1, r2, #23
 5498 0850 281C     		add	r0, r5, #0
 5499              	.LVL681:
 5500 0852 FFF7FEFF 		bl	__aeabi_fcmpgt
 5501              	.LVL682:
 5502 0856 0028     		cmp	r0, #0
 5503 0858 06D1     		bne	.L518
 5504 085a 8023     		mov	r3, #128
 5505 085c 201C     		add	r0, r4, #0
 5506 085e D905     		lsl	r1, r3, #23
 5507 0860 FFF7FEFF 		bl	__aeabi_fcmpgt
 5508              	.LVL683:
 5509 0864 0028     		cmp	r0, #0
 5510 0866 0BD0     		beq	.L532
 5511              	.L518:
 348:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 5512              		.loc 1 348 0
 5513 0868 BF21     		mov	r1, #191
 5514 086a 0806     		lsl	r0, r1, #24
 5515 086c 011C     		add	r1, r0, #0
 5516 086e FFF7FEFF 		bl	TFC_SetMotorPWM
 5517              	.LVL684:
 5518 0872 58E4     		b	.L494
 5519              	.LVL685:
 5520              	.L561:
 5521              	.LBE127:
 5522              	.LBB128:
 332:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 5523              		.loc 1 332 0
 5524 0874 154D     		ldr	r5, .L567+60
 5525 0876 1FE5     		b	.L517
 5526              	.LVL686:
 5527              	.L505:
 5528              	.LBE128:
 5529              	.LBE150:
 5530              	.LBB151:
 5531              	.LBB138:
 692:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 5532              		.loc 1 692 0
 5533 0878 0120     		mov	r0, #1
 5534 087a 5A46     		mov	r2, fp
 5535 087c 5072     		strb	r0, [r2, #9]
 5536 087e D4E6     		b	.L506
 5537              	.LVL687:
 5538              	.L532:
 5539              	.LBE138:
 5540              	.LBE151:
 5541              	.LBB152:
 5542              	.LBB129:
 352:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 5543              		.loc 1 352 0
 5544 0880 0020     		mov	r0, #0
 5545 0882 011C     		add	r1, r0, #0
 5546 0884 FFF7FEFF 		bl	TFC_SetMotorPWM
 5547              	.LVL688:
 5548 0888 4DE4     		b	.L494
 5549              	.L568:
 5550 088a C046C046 		.align	3
 5550      C046
 5551              	.L567:
 5552 0890 9A999999 		.word	-1717986918
 5553 0894 9999B93F 		.word	1069128089
 5554 0898 00000000 		.word	.LANCHOR5
 5555 089c 00807A43 		.word	1132101632
 5556 08a0 00000000 		.word	.LANCHOR18
 5557 08a4 6666663F 		.word	1063675494
 5558 08a8 00000000 		.word	.LANCHOR4
 5559 08ac 00000000 		.word	.LANCHOR19
 5560 08b0 00000000 		.word	.LANCHOR20
 5561 08b4 00000000 		.word	incline_speed
 5562 08b8 0000C842 		.word	1120403456
 5563 08bc 40F00F40 		.word	1074786368
 5564 08c0 00F10F40 		.word	1074786560
 5565 08c4 00000000 		.word	.LANCHOR21
 5566 08c8 00000000 		.word	.LANCHOR22
 5567 08cc CDCCCC3E 		.word	1053609165
 5568              	.LBE129:
 5569              	.LBE152:
 5570              	.LBE157:
 5571              	.LBE179:
 5572              		.cfi_endproc
 5573              	.LFE0:
 5575              		.section	.text.processRaceLine,"ax",%progbits
 5576              		.align	2
 5577              		.global	processRaceLine
 5578              		.code	16
 5579              		.thumb_func
 5581              	processRaceLine:
 5582              	.LFB14:
 683:../Sources/main.c **** {
 5583              		.loc 1 683 0
 5584              		.cfi_startproc
 5585              	.LVL689:
 5586 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5587              	.LCFI20:
 5588              		.cfi_def_cfa_offset 24
 5589              		.cfi_offset 3, -24
 5590              		.cfi_offset 4, -20
 5591              		.cfi_offset 5, -16
 5592              		.cfi_offset 6, -12
 5593              		.cfi_offset 7, -8
 5594              		.cfi_offset 14, -4
 684:../Sources/main.c **** 	if(s_mode_enable)
 5595              		.loc 1 684 0
 5596 0002 234B     		ldr	r3, .L579
 683:../Sources/main.c **** {
 5597              		.loc 1 683 0
 5598 0004 041C     		mov	r4, r0
 684:../Sources/main.c **** 	if(s_mode_enable)
 5599              		.loc 1 684 0
 5600 0006 1878     		ldrb	r0, [r3]
 5601              	.LVL690:
 5602 0008 0028     		cmp	r0, #0
 5603 000a 0CD1     		bne	.L570
 5604 000c 617A     		ldrb	r1, [r4, #9]
 5605 000e A67A     		ldrb	r6, [r4, #10]
 5606              	.L571:
 704:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 5607              		.loc 1 704 0
 5608 0010 0129     		cmp	r1, #1
 5609 0012 20D0     		beq	.L577
 5610              	.L575:
 712:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 5611              		.loc 1 712 0
 5612 0014 70B2     		sxtb	r0, r6
 5613 0016 FFF7FEFF 		bl	__aeabi_i2f
 5614              	.LVL691:
 711:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 5615              		.loc 1 711 0
 5616 001a 351C     		mov	r5, r6
 5617 001c 1D4E     		ldr	r6, .L579+4
 712:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 5618              		.loc 1 712 0
 5619 001e 071C     		add	r7, r0, #0
 5620              	.L576:
 5621 0020 3760     		str	r7, [r6]
 5622 0022 E572     		strb	r5, [r4, #11]
 714:../Sources/main.c **** }
 5623              		.loc 1 714 0
 5624              		@ sp needed for prologue
 5625              	.LVL692:
 5626 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5627              	.LVL693:
 5628              	.L570:
 686:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 5629              		.loc 1 686 0
 5630 0026 A67A     		ldrb	r6, [r4, #10]
 5631 0028 75B2     		sxtb	r5, r6
 5632 002a 092D     		cmp	r5, #9
 5633 002c 0DDC     		bgt	.L572
 687:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 5634              		.loc 1 687 0
 5635 002e 227B     		ldrb	r2, [r4, #12]
 5636 0030 462A     		cmp	r2, #70
 5637 0032 0AD9     		bls	.L572
 688:../Sources/main.c **** 				&& carState->crossSection == NO)
 5638              		.loc 1 688 0
 5639 0034 A179     		ldrb	r1, [r4, #6]
 5640 0036 0029     		cmp	r1, #0
 5641 0038 07D1     		bne	.L572
 690:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 5642              		.loc 1 690 0
 5643 003a 174B     		ldr	r3, .L579+8
 5644 003c 174A     		ldr	r2, .L579+12
 5645 003e D869     		ldr	r0, [r3, #28]
 5646 0040 9042     		cmp	r0, r2
 5647 0042 22D9     		bls	.L578
 692:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 5648              		.loc 1 692 0
 5649 0044 0123     		mov	r3, #1
 5650 0046 6372     		strb	r3, [r4, #9]
 5651 0048 06E0     		b	.L574
 5652              	.L572:
 698:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5653              		.loc 1 698 0
 5654 004a 134F     		ldr	r7, .L579+8
 697:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5655              		.loc 1 697 0
 5656 004c 0025     		mov	r5, #0
 5657 004e 6572     		strb	r5, [r4, #9]
 698:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5658              		.loc 1 698 0
 5659 0050 FD61     		str	r5, [r7, #28]
 5660 0052 A67A     		ldrb	r6, [r4, #10]
 5661 0054 DEE7     		b	.L575
 5662              	.L577:
 5663 0056 75B2     		sxtb	r5, r6
 5664              	.L574:
 706:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5665              		.loc 1 706 0
 5666 0058 0E4E     		ldr	r6, .L579+4
 5667 005a 1149     		ldr	r1, .L579+16
 5668 005c 3068     		ldr	r0, [r6]
 5669 005e FFF7FEFF 		bl	__aeabi_fmul
 5670              	.LVL694:
 5671 0062 071C     		add	r7, r0, #0
 5672 0064 281C     		mov	r0, r5
 5673 0066 FFF7FEFF 		bl	__aeabi_i2f
 5674              	.LVL695:
 5675 006a 0E49     		ldr	r1, .L579+20
 5676 006c FFF7FEFF 		bl	__aeabi_fmul
 5677              	.LVL696:
 5678 0070 011C     		add	r1, r0, #0
 5679 0072 381C     		add	r0, r7, #0
 5680 0074 FFF7FEFF 		bl	__aeabi_fadd
 5681              	.LVL697:
 707:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5682              		.loc 1 707 0
 5683 0078 FC22     		mov	r2, #252
 5684 007a 9105     		lsl	r1, r2, #22
 706:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5685              		.loc 1 706 0
 5686 007c 071C     		add	r7, r0, #0
 707:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5687              		.loc 1 707 0
 5688 007e FFF7FEFF 		bl	__aeabi_fadd
 5689              	.LVL698:
 5690 0082 FFF7FEFF 		bl	__aeabi_f2uiz
 5691              	.LVL699:
 5692 0086 C5B2     		uxtb	r5, r0
 5693 0088 CAE7     		b	.L576
 5694              	.L578:
 5695 008a 617A     		ldrb	r1, [r4, #9]
 5696 008c C0E7     		b	.L571
 5697              	.L580:
 5698 008e C046     		.align	2
 5699              	.L579:
 5700 0090 00000000 		.word	.LANCHOR13
 5701 0094 00000000 		.word	.LANCHOR14
 5702 0098 00000000 		.word	TFC_Ticker
 5703 009c 94110000 		.word	4500
 5704 00a0 6666663F 		.word	1063675494
 5705 00a4 D0CCCC3D 		.word	1036831952
 5706              		.cfi_endproc
 5707              	.LFE14:
 5709              		.section	.text.targetSpeedAverage,"ax",%progbits
 5710              		.align	2
 5711              		.global	targetSpeedAverage
 5712              		.code	16
 5713              		.thumb_func
 5715              	targetSpeedAverage:
 5716              	.LFB15:
 717:../Sources/main.c **** {
 5717              		.loc 1 717 0
 5718              		.cfi_startproc
 5719              	.LVL700:
 5720 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5721              	.LCFI21:
 5722              		.cfi_def_cfa_offset 24
 5723              		.cfi_offset 3, -24
 5724              		.cfi_offset 4, -20
 5725              		.cfi_offset 5, -16
 5726              		.cfi_offset 6, -12
 5727              		.cfi_offset 7, -8
 5728              		.cfi_offset 14, -4
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5729              		.loc 1 719 0
 5730 0002 0F4E     		ldr	r6, .L582+8
 717:../Sources/main.c **** {
 5731              		.loc 1 717 0
 5732 0004 071C     		add	r7, r0, #0
 719:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5733              		.loc 1 719 0
 5734 0006 0F49     		ldr	r1, .L582+12
 5735 0008 3068     		ldr	r0, [r6]
 5736              	.LVL701:
 5737 000a FFF7FEFF 		bl	__aeabi_fmul
 5738              	.LVL702:
 5739 000e FFF7FEFF 		bl	__aeabi_f2d
 5740              	.LVL703:
 5741 0012 041C     		mov	r4, r0
 5742 0014 381C     		add	r0, r7, #0
 5743 0016 0D1C     		mov	r5, r1
 5744 0018 FFF7FEFF 		bl	__aeabi_f2d
 5745              	.LVL704:
 5746 001c 074B     		ldr	r3, .L582+4
 5747 001e 064A     		ldr	r2, .L582
 5748 0020 FFF7FEFF 		bl	__aeabi_dmul
 5749              	.LVL705:
 5750 0024 021C     		mov	r2, r0
 5751 0026 0B1C     		mov	r3, r1
 5752 0028 201C     		mov	r0, r4
 5753 002a 291C     		mov	r1, r5
 5754 002c FFF7FEFF 		bl	__aeabi_dadd
 5755              	.LVL706:
 5756 0030 FFF7FEFF 		bl	__aeabi_d2f
 5757              	.LVL707:
 5758 0034 3060     		str	r0, [r6]
 721:../Sources/main.c **** }
 5759              		.loc 1 721 0
 5760              		@ sp needed for prologue
 5761              	.LVL708:
 5762 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5763              	.L583:
 5764              		.align	3
 5765              	.L582:
 5766 0038 9A999999 		.word	-1717986918
 5767 003c 9999B93F 		.word	1069128089
 5768 0040 00000000 		.word	.LANCHOR18
 5769 0044 6666663F 		.word	1063675494
 5770              		.cfi_endproc
 5771              	.LFE15:
 5773              		.section	.text.servoValueAverage,"ax",%progbits
 5774              		.align	2
 5775              		.global	servoValueAverage
 5776              		.code	16
 5777              		.thumb_func
 5779              	servoValueAverage:
 5780              	.LFB16:
 724:../Sources/main.c **** {
 5781              		.loc 1 724 0
 5782              		.cfi_startproc
 5783              	.LVL709:
 5784 0000 70B5     		push	{r4, r5, r6, lr}
 5785              	.LCFI22:
 5786              		.cfi_def_cfa_offset 16
 5787              		.cfi_offset 4, -16
 5788              		.cfi_offset 5, -12
 5789              		.cfi_offset 6, -8
 5790              		.cfi_offset 14, -4
 5791              		.loc 1 726 0
 5792 0002 084C     		ldr	r4, .L585
 724:../Sources/main.c **** {
 5793              		.loc 1 724 0
 5794 0004 061C     		add	r6, r0, #0
 5795              		.loc 1 726 0
 5796 0006 0849     		ldr	r1, .L585+4
 5797 0008 2068     		ldr	r0, [r4]
 5798              	.LVL710:
 5799 000a FFF7FEFF 		bl	__aeabi_fmul
 5800              	.LVL711:
 5801 000e 0749     		ldr	r1, .L585+8
 5802 0010 051C     		add	r5, r0, #0
 5803 0012 301C     		add	r0, r6, #0
 5804 0014 FFF7FEFF 		bl	__aeabi_fmul
 5805              	.LVL712:
 5806 0018 011C     		add	r1, r0, #0
 5807 001a 281C     		add	r0, r5, #0
 5808 001c FFF7FEFF 		bl	__aeabi_fadd
 5809              	.LVL713:
 5810 0020 2060     		str	r0, [r4]
 727:../Sources/main.c **** 	return previousServoValue;
 728:../Sources/main.c **** }
 5811              		.loc 1 728 0
 5812              		@ sp needed for prologue
 5813              	.LVL714:
 5814 0022 70BD     		pop	{r4, r5, r6, pc}
 5815              	.L586:
 5816              		.align	2
 5817              	.L585:
 5818 0024 00000000 		.word	.LANCHOR15
 5819 0028 CDCC4C3F 		.word	1061997773
 5820 002c CCCC4C3E 		.word	1045220556
 5821              		.cfi_endproc
 5822              	.LFE16:
 5824              		.global	test_time
 5825              		.global	test_begin
 5826              		.global	stopline_enable
 5827              		.global	cross_section_enable
 5828              		.global	s_mode_enable
 5829              		.global	friction_correct
 5830              		.global	count
 5831              		.global	received_byte2
 5832              		.global	received_byte1
 5833              		.global	max_speed_percent
 5834              		.global	speedR
 5835              		.global	speedL
 5836              		.comm	incline_speed,4,4
 5837              		.global	batteryLevel
 5838              		.global	loop_begin
 5839              		.global	loop_time
 5840              		.section	.bss.stopDelayTime.6146,"aw",%nobits
 5841              		.align	2
 5842              		.set	.LANCHOR22,. + 0
 5845              	stopDelayTime.6146:
 5846 0000 00000000 		.space	4
 5847              		.section	.bss.count,"aw",%nobits
 5848              		.set	.LANCHOR8,. + 0
 5851              	count:
 5852 0000 00       		.space	1
 5853              		.section	.bss.totalIntensity.6143,"aw",%nobits
 5854              		.align	2
 5855              		.set	.LANCHOR17,. + 0
 5858              	totalIntensity.6143:
 5859 0000 00000000 		.space	4
 5860              		.section	.bss.previousServoValue.6212,"aw",%nobits
 5861              		.align	2
 5862              		.set	.LANCHOR15,. + 0
 5865              	previousServoValue.6212:
 5866 0000 00000000 		.space	4
 5867              		.section	.bss.loop_time,"aw",%nobits
 5868              		.align	1
 5869              		.set	.LANCHOR6,. + 0
 5872              	loop_time:
 5873 0000 0000     		.space	2
 5874              		.section	.bss.previousTargetSpeed.6208,"aw",%nobits
 5875              		.align	2
 5876              		.set	.LANCHOR18,. + 0
 5879              	previousTargetSpeed.6208:
 5880 0000 00000000 		.space	4
 5881              		.section	.bss.loop_begin,"aw",%nobits
 5882              		.align	1
 5883              		.set	.LANCHOR23,. + 0
 5886              	loop_begin:
 5887 0000 0000     		.space	2
 5888              		.section	.bss.speedL,"aw",%nobits
 5889              		.align	2
 5890              		.set	.LANCHOR20,. + 0
 5893              	speedL:
 5894 0000 00000000 		.space	4
 5895              		.section	.bss.stopline_enable,"aw",%nobits
 5896              		.set	.LANCHOR16,. + 0
 5899              	stopline_enable:
 5900 0000 00       		.space	1
 5901              		.section	.bss.batteryLevel,"aw",%nobits
 5902              		.align	2
 5903              		.set	.LANCHOR2,. + 0
 5906              	batteryLevel:
 5907 0000 00000000 		.space	4
 5908              		.section	.bss.test_begin,"aw",%nobits
 5909              		.align	2
 5910              		.set	.LANCHOR0,. + 0
 5913              	test_begin:
 5914 0000 00000000 		.space	4
 5915              		.section	.bss.speedR,"aw",%nobits
 5916              		.align	2
 5917              		.set	.LANCHOR19,. + 0
 5920              	speedR:
 5921 0000 00000000 		.space	4
 5922              		.section	.bss.received_byte1,"aw",%nobits
 5923              		.set	.LANCHOR9,. + 0
 5926              	received_byte1:
 5927 0000 00       		.space	1
 5928              		.section	.bss.received_byte2,"aw",%nobits
 5929              		.set	.LANCHOR10,. + 0
 5932              	received_byte2:
 5933 0000 00       		.space	1
 5934              		.section	.rodata.str1.4,"aMS",%progbits,1
 5935              		.align	2
 5936              	.LC3:
 5937 0000 25582C00 		.ascii	"%X,\000"
 5938              	.LC5:
 5939 0004 0D0A00   		.ascii	"\015\012\000"
 5940 0007 00       		.section	.bss.test_time,"aw",%nobits
 5941              		.align	2
 5942              		.set	.LANCHOR1,. + 0
 5945              	test_time:
 5946 0000 00000000 		.space	4
 5947              		.section	.data.max_speed_percent,"aw",%progbits
 5948              		.align	2
 5949              		.set	.LANCHOR7,. + 0
 5952              	max_speed_percent:
 5953 0000 00004842 		.word	1112014848
 5954              		.section	.bss.stoplineJustDetected,"aw",%nobits
 5955              		.set	.LANCHOR11,. + 0
 5958              	stoplineJustDetected:
 5959 0000 00       		.space	1
 5960              		.section	.bss.friction_correct,"aw",%nobits
 5961              		.align	2
 5964              	friction_correct:
 5965 0000 00000000 		.space	4
 5966              		.section	.bss.previousRaceLine.6204,"aw",%nobits
 5967              		.align	2
 5968              		.set	.LANCHOR14,. + 0
 5971              	previousRaceLine.6204:
 5972 0000 00000000 		.space	4
 5973              		.section	.bss.stoplineDetectedMoment.6145,"aw",%nobits
 5974              		.align	2
 5975              		.set	.LANCHOR21,. + 0
 5978              	stoplineDetectedMoment.6145:
 5979 0000 00000000 		.space	4
 5980              		.section	.data.cross_section_enable,"aw",%progbits
 5983              	cross_section_enable:
 5984 0000 01       		.byte	1
 5985              		.section	.bss.s_mode_enable,"aw",%nobits
 5986              		.set	.LANCHOR13,. + 0
 5989              	s_mode_enable:
 5990 0000 00       		.space	1
 5991              		.section	.bss.steeringControlUpdate.6142,"aw",%nobits
 5992              		.set	.LANCHOR12,. + 0
 5995              	steeringControlUpdate.6142:
 5996 0000 00       		.space	1
 5997              		.section	.bss.servoValue,"aw",%nobits
 5998              		.align	2
 5999              		.set	.LANCHOR5,. + 0
 6002              	servoValue:
 6003 0000 00000000 		.space	4
 6004              		.section	.bss.targetSpeed,"aw",%nobits
 6005              		.align	2
 6006              		.set	.LANCHOR4,. + 0
 6009              	targetSpeed:
 6010 0000 00000000 		.space	4
 6011              		.section	.data.carState,"aw",%progbits
 6012              		.align	2
 6013              		.set	.LANCHOR3,. + 0
 6016              	carState:
 6017 0000 00       		.byte	0
 6018 0001 02       		.byte	2
 6019 0002 03       		.byte	3
 6020 0003 01       		.byte	1
 6021 0004 00       		.byte	0
 6022 0005 00       		.byte	0
 6023 0006 00       		.byte	0
 6024 0007 00       		.byte	0
 6025 0008 00       		.byte	0
 6026 0009 00       		.byte	0
 6027 000a 0000     		.space	2
 6028 000c 78       		.byte	120
 6029 000d 000000   		.text
 6030              	.Letext0:
 6031              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 6032              		.file 3 "C:/Users/bentr_000/Desktop/FRDM-TFC/Project_Headers/MKL25Z4.h"
 6033              		.file 4 "C:/Users/bentr_000/Desktop/FRDM-TFC/Project_Headers/typedefs_structs\\carState_s.h"
 6034              		.file 5 "C:/Users/bentr_000/Desktop/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 6035              		.file 6 "C:/Users/bentr_000/Desktop/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 6036              		.file 7 "C:/Users/bentr_000/Desktop/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
 6037              		.file 8 "C:/Users/bentr_000/Desktop/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:18     .text.rawFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:23     .text.rawFocussingMode:00000000 rawFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:138    .text.rawFocussingMode:00000084 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:150    .text.derivativeFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:155    .text.derivativeFocussingMode:00000000 derivativeFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:296    .text.derivativeFocussingMode:000000a8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:311    .text.TFC_Init:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:316    .text.TFC_Init:00000000 TFC_Init
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:392    .text.TFC_Init:00000058 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:398    .text.TFC_Task:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:403    .text.TFC_Task:00000000 TFC_Task
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:426    .text.evaluateMotorState:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:431    .text.evaluateMotorState:00000000 evaluateMotorState
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:484    .text.evaluateMotorState:00000034 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:489    .text.evaluateUARTorSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:494    .text.evaluateUARTorSpeed:00000000 evaluateUARTorSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:591    .text.evaluateUARTorSpeed:0000007c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:598    .text.LEDfeedback:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:603    .text.LEDfeedback:00000000 LEDfeedback
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:842    .text.LEDfeedback:00000140 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:849    .text.servoAlignment:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:854    .text.servoAlignment:00000000 servoAlignment
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:886    .text.servoAlignment:00000018 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:902    .text.telemetrySendData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:907    .text.telemetrySendData:00000000 telemetrySendData
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:1456   .text.telemetrySendData:00000390 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:1465   .text.telemetrySendData:000003ac $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:1823   .text.telemetrySendData:00000608 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:1834   .text.telemetrySendData:0000062c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2332   .text.telemetrySendData:00000968 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2347   .text.telemetrySendData:0000099c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2782   .text.telemetrySendData:00000c70 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2793   .text.BluetoothSetSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2798   .text.BluetoothSetSpeed:00000000 BluetoothSetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2839   .text.BluetoothSetSpeed:00000020 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2845   .text.BluetoothSetLED:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2850   .text.BluetoothSetLED:00000000 BluetoothSetLED
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2988   .text.BluetoothSetLED:000000b4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2993   .text.telemetryReadData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:2998   .text.telemetryReadData:00000000 telemetryReadData
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:3135   .text.telemetryReadData:000000a4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:3152   .text.lineFollowingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:3157   .text.lineFollowingMode:00000000 lineFollowingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:3816   .text.lineFollowingMode:00000358 $d
                            *COM*:00000004 incline_speed
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:3858   .text.lineFollowingMode:000003f8 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:3913   .text.lineFollowingMode:0000043c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:3922   .text.startup.main:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:3927   .text.startup.main:00000000 main
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:4547   .text.startup.main:000002f8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:4585   .text.startup.main:00000370 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5172   .text.startup.main:00000670 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5202   .text.startup.main:000006c8 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5552   .text.startup.main:00000890 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5576   .text.processRaceLine:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5581   .text.processRaceLine:00000000 processRaceLine
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5700   .text.processRaceLine:00000090 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5710   .text.targetSpeedAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5715   .text.targetSpeedAverage:00000000 targetSpeedAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5766   .text.targetSpeedAverage:00000038 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5774   .text.servoValueAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5779   .text.servoValueAverage:00000000 servoValueAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5818   .text.servoValueAverage:00000024 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5945   .bss.test_time:00000000 test_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5913   .bss.test_begin:00000000 test_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5899   .bss.stopline_enable:00000000 stopline_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5983   .data.cross_section_enable:00000000 cross_section_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5989   .bss.s_mode_enable:00000000 s_mode_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5964   .bss.friction_correct:00000000 friction_correct
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5851   .bss.count:00000000 count
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5932   .bss.received_byte2:00000000 received_byte2
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5926   .bss.received_byte1:00000000 received_byte1
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5952   .data.max_speed_percent:00000000 max_speed_percent
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5920   .bss.speedR:00000000 speedR
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5893   .bss.speedL:00000000 speedL
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5906   .bss.batteryLevel:00000000 batteryLevel
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5886   .bss.loop_begin:00000000 loop_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5872   .bss.loop_time:00000000 loop_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5841   .bss.stopDelayTime.6146:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5845   .bss.stopDelayTime.6146:00000000 stopDelayTime.6146
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5852   .bss.count:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5854   .bss.totalIntensity.6143:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5858   .bss.totalIntensity.6143:00000000 totalIntensity.6143
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5861   .bss.previousServoValue.6212:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5865   .bss.previousServoValue.6212:00000000 previousServoValue.6212
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5868   .bss.loop_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5875   .bss.previousTargetSpeed.6208:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5879   .bss.previousTargetSpeed.6208:00000000 previousTargetSpeed.6208
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5882   .bss.loop_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5889   .bss.speedL:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5900   .bss.stopline_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5902   .bss.batteryLevel:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5909   .bss.test_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5916   .bss.speedR:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5927   .bss.received_byte1:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5933   .bss.received_byte2:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5935   .rodata.str1.4:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5941   .bss.test_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5948   .data.max_speed_percent:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5958   .bss.stoplineJustDetected:00000000 stoplineJustDetected
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5959   .bss.stoplineJustDetected:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5961   .bss.friction_correct:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5967   .bss.previousRaceLine.6204:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5971   .bss.previousRaceLine.6204:00000000 previousRaceLine.6204
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5974   .bss.stoplineDetectedMoment.6145:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5978   .bss.stoplineDetectedMoment.6145:00000000 stoplineDetectedMoment.6145
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5990   .bss.s_mode_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5995   .bss.steeringControlUpdate.6142:00000000 steeringControlUpdate.6142
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5996   .bss.steeringControlUpdate.6142:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:5998   .bss.servoValue:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:6002   .bss.servoValue:00000000 servoValue
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:6005   .bss.targetSpeed:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:6009   .bss.targetSpeed:00000000 targetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:6012   .data.carState:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccnuKX9z.s:6016   .data.carState:00000000 carState
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_SetServo
TFC_SetMotorPWM
getTotalIntensity
calculateNewExposure
TFC_SetLineScanExposureTime
Qprintf
TFC_Ticker
LineScanImage0
SDA_SERIAL_OUTGOING_QUEUE
edgeDetection
TFC_InitClock
TFC_InitSysTick
TFC_InitGPIO
TFC_InitServos
TFC_InitMotorPWM
TFC_InitADCs
TFC_InitLineScanCamera
TFC_InitUARTs
TFC_InitTerminal
TFC_InitSpeedSensor
preloadProbabilityTables
generateKernel
TFC_UART_Process
TFC_ProcessTerminal
TFC_GetDIP_Switch
enable_irq
disable_irq
__aeabi_fcmpgt
__aeabi_fmul
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_f2iz
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dadd
__aeabi_d2iz
__aeabi_dsub
__aeabi_i2f
uart_putchar
getSpeed
TFC_GetMotorPWM
TFC_ReadMotorCurrent
newExposure
__aeabi_ui2f
uart_getchar_present
uart_getchar
__aeabi_fadd
__aeabi_f2uiz
__aeabi_dmul
__aeabi_d2f
__aeabi_fdiv
__aeabi_fcmplt
TFC_GetPush_Button
getDesiredServoValue
findLine
TFC_ReadBatteryVoltage
findStop
getRadiusRoot
getDesiredSpeed
getActiveDifferentialModifier
isANewmeasurementAvailable
getDesiredMotorPWM
LineScanImage1
