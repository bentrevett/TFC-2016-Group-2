   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.rawFocussingMode,"ax",%progbits
  18              		.align	2
  19              		.global	rawFocussingMode
  20              		.code	16
  21              		.thumb_func
  23              	rawFocussingMode:
  24              	.LFB2:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** 
   2:../Sources/main.c **** /*************************************
   3:../Sources/main.c **** //// Shield Interfaces Description /////////////////
   4:../Sources/main.c **** 
   5:../Sources/main.c **** //// DIP /////////////////
   6:../Sources/main.c **** 
   7:../Sources/main.c **** Standard Mode:
   8:../Sources/main.c **** 
   9:../Sources/main.c **** 1	2	3	4
  10:../Sources/main.c **** X	0  	0	X	Raw Focusing Mode
  11:../Sources/main.c **** X	1	0	X	Servo Alignment
  12:../Sources/main.c **** X	0	1	X	Derivative Focusing Mode
  13:../Sources/main.c **** X	1	1	X	Line Following Mode
  14:../Sources/main.c **** Pin 1:	1 HBRIDGE enabled, RunningState;	0 HBRIDGE DISSABLED;
  15:../Sources/main.c **** Pin 4:	0 SingleSpeed_SingleUart;	1 DualSpeed_NoUart
  16:../Sources/main.c **** 
  17:../Sources/main.c **** Race Mode:
  18:../Sources/main.c **** 
  19:../Sources/main.c **** Pin 1: HBRIDGE enabled
  20:../Sources/main.c **** Pin 2: S-Mode enabled
  21:../Sources/main.c **** Pin 3: Cross Detection enabled
  22:../Sources/main.c **** Pin 4: Stopline Detection enabled
  23:../Sources/main.c **** 
  24:../Sources/main.c **** 
  25:../Sources/main.c **** //// LEDs /////////////////		0 LED_ON	x LED_OFF
  26:../Sources/main.c **** 
  27:../Sources/main.c **** 0xxx	Line lost
  28:../Sources/main.c **** x0xx	Line temporarily lost
  29:../Sources/main.c **** xx0x	Right edge following
  30:../Sources/main.c **** xxx0	Left edge following
  31:../Sources/main.c **** xx00	Double line following
  32:../Sources/main.c **** 0xx0	Cross Section detected
  33:../Sources/main.c **** 00xx	Stop Line detected
  34:../Sources/main.c **** x00x	S-Mode active
  35:../Sources/main.c **** 0000	Low battery
  36:../Sources/main.c **** 
  37:../Sources/main.c **** 
  38:../Sources/main.c **** //// Pots ///////////
  39:../Sources/main.c **** 
  40:../Sources/main.c **** Standard mode:
  41:../Sources/main.c **** Pot_1	Max Speed percent
  42:../Sources/main.c **** Pot_2	No Function
  43:../Sources/main.c **** 
  44:../Sources/main.c **** Race mode:
  45:../Sources/main.c **** Pot_1	Max Speed percent
  46:../Sources/main.c **** Pot_2	Friction Coefficient Correction - rotate clockwise to decrease friction coefficient
  47:../Sources/main.c **** 
  48:../Sources/main.c **** 
  49:../Sources/main.c **** //// Push Buttons ///////////
  50:../Sources/main.c **** 
  51:../Sources/main.c **** Switch_1	Stop Line reset
  52:../Sources/main.c **** 
  53:../Sources/main.c **** **************************************/
  54:../Sources/main.c **** 
  55:../Sources/main.c **** #include "main.h"
  56:../Sources/main.c **** 
  57:../Sources/main.c **** #define CHANNEL_0 0
  58:../Sources/main.c **** #define CHANNEL_1 1
  59:../Sources/main.c **** #define PUSH_BUTTON_1 1
  60:../Sources/main.c **** #define PUSH_BUTTON_2 2
  61:../Sources/main.c **** //#define TESTING
  62:../Sources/main.c **** 
  63:../Sources/main.c **** 
  64:../Sources/main.c **** #define BLUETOOTH_FLAG	-128
  65:../Sources/main.c **** 
  66:../Sources/main.c **** #define FLOAT_TO_CHAR(x)	(x >= 0.0) ? (signed char)(x + 0.5) : (signed char)(x - 0.5)		
  67:../Sources/main.c **** #define LIMIT_255(x)		(x <= 254.5f && x >= 0.0f && !(x >= 127.5f && x <= 128.5f)) ? x : ((x > 255.0
  68:../Sources/main.c **** #define LIMIT_ABS_127(x)	(x <= 126.9f && x >= -126.9f) ? x : ((x > 126.9f) ? 126.9f : -126.9f)
  69:../Sources/main.c **** 
  70:../Sources/main.c **** #define LINE_SCAN_IMAGE(x)	LINE_SCAN_IMAGE_EXAPND(x)	// Second level of indirection needed to expan
  71:../Sources/main.c **** #define LINE_SCAN_IMAGE_EXAPND(x)	LineScanImage##x
  72:../Sources/main.c **** 
  73:../Sources/main.c **** // carState struct initialization - keeps the main parameters of the car state
  74:../Sources/main.c **** static carState_s carState =
  75:../Sources/main.c **** {   .motorState = FORCED_DISABLED, .UARTSpeedState = UNDEFINED, 
  76:../Sources/main.c ****     .lineDetectionState = LINE_LOST, .lineScanState = NO_NEW_LINESCAN_IMAGE, 
  77:../Sources/main.c **** 	.detectedType = NONE, .edge = NO_EDGE, .crossSection = NO, .crossSectionPosition = NO_CROSS,
  78:../Sources/main.c **** 	.lineDistance = STRAIGHT_DISTANCE_DEFAULT, .carMode = NORMAL_MODE, .sMode = S_MODE_OFF};
  79:../Sources/main.c **** 
  80:../Sources/main.c **** uint16_t loop_time = 0, loop_begin = 0;
  81:../Sources/main.c **** float batteryLevel = 0;
  82:../Sources/main.c **** static float targetSpeed = 0;
  83:../Sources/main.c **** float incline_speed;
  84:../Sources/main.c **** float speedL = 0;
  85:../Sources/main.c **** float speedR = 0;
  86:../Sources/main.c **** static float servoValue = 0;
  87:../Sources/main.c **** extern int32_t newExposure;
  88:../Sources/main.c **** float max_speed_percent = 30;
  89:../Sources/main.c **** uint8_t received_byte1 = 0; //received byte from bluetooth 0 to 255
  90:../Sources/main.c **** uint8_t received_byte2 = 0;
  91:../Sources/main.c **** uint8_t count = 0; //bluetooth count
  92:../Sources/main.c **** static uint8_t stoplineJustDetected = 0;
  93:../Sources/main.c **** float friction_correct = 0;
  94:../Sources/main.c **** float i =0; // for testing pwm speed for torque control
  95:../Sources/main.c **** uint8_t camera_output[128];
  96:../Sources/main.c **** #ifdef S_MODE_ENABLE
  97:../Sources/main.c **** uint8_t s_mode_enable = 1;
  98:../Sources/main.c **** #else
  99:../Sources/main.c **** uint8_t s_mode_enable = 0;
 100:../Sources/main.c **** #endif
 101:../Sources/main.c **** 
 102:../Sources/main.c **** #ifdef CROSS_DETECTION_ENABLE
 103:../Sources/main.c **** uint8_t cross_section_enable = 1;
 104:../Sources/main.c **** #else
 105:../Sources/main.c **** uint8_t cross_section_enable = 0;
 106:../Sources/main.c **** #endif
 107:../Sources/main.c **** 
 108:../Sources/main.c **** #ifdef STOPLINE_ENABLE
 109:../Sources/main.c **** uint8_t stopline_enable = 1;
 110:../Sources/main.c **** #else
 111:../Sources/main.c **** uint8_t stopline_enable = 0;
 112:../Sources/main.c **** #endif
 113:../Sources/main.c **** 
 114:../Sources/main.c **** // Test timer ////////////////////
 115:../Sources/main.c **** uint32_t test_begin = 0;
 116:../Sources/main.c **** uint32_t test_time  = 0;
 117:../Sources/main.c **** //////////////////////////////////
 118:../Sources/main.c **** 
 119:../Sources/main.c **** 
 120:../Sources/main.c **** int main(void)
 121:../Sources/main.c **** {
 122:../Sources/main.c **** 	TFC_Init(&carState);
 123:../Sources/main.c **** 	while(TFC_Ticker[5]<=10000){
 124:../Sources/main.c **** 	}
 125:../Sources/main.c **** 	
 126:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 127:../Sources/main.c **** 		Init_I2C();
 128:../Sources/main.c **** 		Init_Accelerometer();
 129:../Sources/main.c **** 	#endif
 130:../Sources/main.c **** 
 131:../Sources/main.c **** 	//LCDinit();
 132:../Sources/main.c **** 
 133:../Sources/main.c **** 	while (1)
 134:../Sources/main.c **** 	{
 135:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 136:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 137:../Sources/main.c **** 			TFC_Task();
 138:../Sources/main.c **** 		#endif
 139:../Sources/main.c **** 		
 140:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS	
 141:../Sources/main.c **** 			evaluateUARTorSpeed(&carState);		// Checks DIP switch
 142:../Sources/main.c **** 		#endif
 143:../Sources/main.c **** 		
 144:../Sources/main.c **** 		evaluateMotorState(&carState);		// Checks DIP switch
 145:../Sources/main.c **** 		
 146:../Sources/main.c **** 		LEDfeedback(&carState);				// Gives feedback for car state by the 4 LEDs
 147:../Sources/main.c **** 		
 148:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 149:../Sources/main.c **** 		
 150:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS
 151:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 152:../Sources/main.c **** 			{
 153:../Sources/main.c **** 			default:
 154:../Sources/main.c **** 			case 0:
 155:../Sources/main.c **** 				rawFocussingMode(&carState);
 156:../Sources/main.c **** 				break;
 157:../Sources/main.c **** 	
 158:../Sources/main.c **** 			case 1:
 159:../Sources/main.c **** 				servoAlignment();
 160:../Sources/main.c **** 				break;
 161:../Sources/main.c **** 	
 162:../Sources/main.c **** 			case 2:
 163:../Sources/main.c **** 				derivativeFocussingMode(&carState);
 164:../Sources/main.c **** 				break;
 165:../Sources/main.c **** 	
 166:../Sources/main.c **** 			case 3:
 167:../Sources/main.c **** 				lineFollowingMode(&carState);
 168:../Sources/main.c **** 				break;
 169:../Sources/main.c **** 			}
 170:../Sources/main.c **** 		#else
 171:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 1) & 0x01) == 1)
 172:../Sources/main.c **** 				s_mode_enable = 1;
 173:../Sources/main.c **** 			else
 174:../Sources/main.c **** 				s_mode_enable = 0;
 175:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 2) & 0x01) == 1)
 176:../Sources/main.c **** 				cross_section_enable = 1;
 177:../Sources/main.c **** 			else
 178:../Sources/main.c **** 				cross_section_enable = 0;
 179:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 3) & 0x01) == 1)
 180:../Sources/main.c **** 			{
 181:../Sources/main.c **** 				stopline_enable = 1;
 182:../Sources/main.c **** 			}
 183:../Sources/main.c **** 			else
 184:../Sources/main.c **** 			{
 185:../Sources/main.c **** 				stopline_enable = 0;
 186:../Sources/main.c **** 			}
 187:../Sources/main.c **** 			
 188:../Sources/main.c **** 			friction_correct = ((0 + 1.0f)/2)*MAX_FRICTION_CORRECT;
 189:../Sources/main.c **** 			
 190:../Sources/main.c **** 			lineFollowingMode(&carState);
 191:../Sources/main.c **** 		#endif
 192:../Sources/main.c **** 		
 193:../Sources/main.c **** 		
 194:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 195:../Sources/main.c **** 	}
 196:../Sources/main.c **** 	
 197:../Sources/main.c **** 	return 0;
 198:../Sources/main.c **** }
 199:../Sources/main.c **** 
 200:../Sources/main.c **** 
 201:../Sources/main.c **** void lineFollowingMode(carState_s* carState)
 202:../Sources/main.c **** {
 203:../Sources/main.c **** 	static lineScanState_t steeringControlUpdate;
 204:../Sources/main.c **** 	static uint32_t totalIntensity = 0;
 205:../Sources/main.c **** 	
 206:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 207:../Sources/main.c **** 	{
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 210:../Sources/main.c **** 	}
 211:../Sources/main.c **** 
 212:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 213:../Sources/main.c **** 	{
 214:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 215:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 216:../Sources/main.c **** 	}
 217:../Sources/main.c **** 	
 218:../Sources/main.c **** 	#ifdef TELEMETRY_ENABLE
 219:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 220:../Sources/main.c **** 	{
 221:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 222:../Sources/main.c **** 		telemetrySendData();
 223:../Sources/main.c **** 		telemetryReadData();
 224:../Sources/main.c **** 	}
 225:../Sources/main.c **** 	#endif
 226:../Sources/main.c **** 	
 227:../Sources/main.c **** 	if(TFC_Ticker[5]>=50){ 
 228:../Sources/main.c **** 		TFC_Ticker[5]=0;
 229:../Sources/main.c **** 		LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 230:../Sources/main.c **** 	}
 231:../Sources/main.c **** 	
 232:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 233:../Sources/main.c **** 		if(TFC_Ticker[8]>=1000){
 234:../Sources/main.c **** 			TFC_Ticker[8]=0;
 235:../Sources/main.c **** 			//accel_z=getZAcc();
 236:../Sources/main.c **** 			if(getZAcc<-1){
 237:../Sources/main.c **** 				incline_speed=max_speed_percent+10;
 238:../Sources/main.c **** 			}
 239:../Sources/main.c **** 			else{
 240:../Sources/main.c **** 				incline_speed=max_speed_percent;
 241:../Sources/main.c **** 				}
 242:../Sources/main.c **** 		}
 243:../Sources/main.c **** 	#endif
 244:../Sources/main.c **** 	#ifndef ACCELEROMETER_ENABLE
 245:../Sources/main.c **** 		incline_speed=max_speed_percent;
 246:../Sources/main.c **** 	#endif
 247:../Sources/main.c **** 		
 248:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 249:../Sources/main.c **** 	{
 250:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 251:../Sources/main.c **** 	//	test_begin = TFC_Ticker[5];
 252:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 253:../Sources/main.c **** 	//	test_time = TFC_Ticker[5] - test_begin;
 254:../Sources/main.c **** 		processRaceLine(carState);
 255:../Sources/main.c **** 	}
 256:../Sources/main.c **** 		
 257:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 258:../Sources/main.c **** 	{
 259:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 260:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 261:../Sources/main.c **** 		
 262:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 263:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 264:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 265:../Sources/main.c **** 					{
 266:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 267:../Sources/main.c **** 					}
 268:../Sources/main.c **** 			}
 269:../Sources/main.c **** 	
 270:../Sources/main.c **** 		
 271:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 272:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 273:../Sources/main.c **** 	}
 274:../Sources/main.c **** 
 275:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 276:../Sources/main.c **** 	{
 277:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 278:../Sources/main.c **** 		if(stopline_enable == 1)
 279:../Sources/main.c **** 		{
 280:../Sources/main.c **** 			findStop(carState);
 281:../Sources/main.c **** 		}
 282:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 283:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 284:../Sources/main.c **** 	}
 285:../Sources/main.c **** 
 286:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 287:../Sources/main.c **** 	{
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 289:../Sources/main.c **** 		
 290:../Sources/main.c **** 		float activeDifferentialModifier[] =
 291:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 292:../Sources/main.c **** 		
 293:../Sources/main.c **** 		// Speed measurement depending on the particular mode which is used
 294:../Sources/main.c **** 		#if (SPEED_DETECTION_MODE == 0)
 295:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 296:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 297:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 1)
 298:../Sources/main.c **** 			speedR = (getSpeed(CHANNEL_0) + getSpeed(CHANNEL_1))/2;
 299:../Sources/main.c **** 			speedL = speedR;
 300:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 2)
 301:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 302:../Sources/main.c **** 			speedL = speedR;
 303:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 3)
 304:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 305:../Sources/main.c **** 			speedR = speedL;
 306:../Sources/main.c **** 		#endif
 307:../Sources/main.c **** 
 308:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 309:../Sources/main.c **** 		{
 310:../Sources/main.c **** 			TFC_SetMotorPWM(
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 312:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 313:../Sources/main.c **** 		}
 314:../Sources/main.c **** 		else if (carState->UARTSpeedState == SINGLE_SPEED_SINGLE_UART)
 315:../Sources/main.c **** 		{
 316:../Sources/main.c **** 			// Missing setup - Normally this mode is not used
 317:../Sources/main.c **** 		}
 318:../Sources/main.c **** 	}
 319:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 320:../Sources/main.c **** 	{
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 323:../Sources/main.c **** 	}
 324:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 325:../Sources/main.c **** 	{
 326:../Sources/main.c **** 		if(stopline_enable == 1)
 327:../Sources/main.c **** 		{	
 328:../Sources/main.c **** 			static uint32_t stoplineDetectedMoment = 0;
 329:../Sources/main.c **** 			static uint32_t stopDelayTime = 0;
 330:../Sources/main.c **** 			
 331:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 332:../Sources/main.c **** 			{
 333:../Sources/main.c **** 				stoplineJustDetected = 1;
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 335:../Sources/main.c **** 				
 336:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 338:../Sources/main.c **** 				
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 340:../Sources/main.c **** 				{
 341:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 342:../Sources/main.c **** 				}
 343:../Sources/main.c **** 				
 344:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 345:../Sources/main.c **** 			}
 346:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 347:../Sources/main.c **** 			{
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 349:../Sources/main.c **** 				
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 351:../Sources/main.c **** 				{
 352:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 353:../Sources/main.c **** 				}
 354:../Sources/main.c **** 				else
 355:../Sources/main.c **** 				{
 356:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 357:../Sources/main.c **** 				}
 358:../Sources/main.c **** 			}
 359:../Sources/main.c **** 		}	
 360:../Sources/main.c **** 	}
 361:../Sources/main.c **** }
 362:../Sources/main.c **** 
 363:../Sources/main.c **** void rawFocussingMode(carState_s* carState)
 364:../Sources/main.c **** {
  26              		.loc 1 364 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
 365:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
  37              		.loc 1 365 0
  38 0002 204B     		ldr	r3, .L8
 364:../Sources/main.c **** {
  39              		.loc 1 364 0
  40 0004 4746     		mov	r7, r8
  41              		.loc 1 365 0
  42 0006 1A68     		ldr	r2, [r3]
 364:../Sources/main.c **** {
  43              		.loc 1 364 0
  44 0008 80B4     		push	{r7}
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47              		.cfi_offset 8, -24
  48              		.loc 1 365 0
  49 000a C72A     		cmp	r2, #199
  50 000c 02D9     		bls	.L1
  51              		.loc 1 365 0 is_stmt 0
  52 000e C178     		ldrb	r1, [r0, #3]
  53 0010 0029     		cmp	r1, #0
  54 0012 02D0     		beq	.L7
  55              	.LVL1:
  56              	.L1:
 366:../Sources/main.c **** 	{
 367:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 369:../Sources/main.c **** 
 370:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 373:../Sources/main.c **** 
 374:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 375:../Sources/main.c **** 		
 376:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 378:../Sources/main.c **** 			{
 379:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 380:../Sources/main.c **** 			}
 381:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 382:../Sources/main.c **** 		#endif		
 383:../Sources/main.c **** 	}
 384:../Sources/main.c **** }
  57              		.loc 1 384 0 is_stmt 1
  58              		@ sp needed for prologue
  59 0014 04BC     		pop	{r2}
  60 0016 9046     		mov	r8, r2
  61 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
  62              	.LVL2:
  63              	.L7:
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  64              		.loc 1 368 0
  65 001a 0124     		mov	r4, #1
 367:../Sources/main.c **** 		TFC_Ticker[0] = 0;
  66              		.loc 1 367 0
  67 001c 1960     		str	r1, [r3]
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  68              		.loc 1 368 0
  69 001e C470     		strb	r4, [r0, #3]
 370:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
  70              		.loc 1 370 0
  71 0020 0021     		mov	r1, #0
  72 0022 0020     		mov	r0, #0
  73              	.LVL3:
  74 0024 FFF7FEFF 		bl	TFC_SetServo
  75              	.LVL4:
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  76              		.loc 1 371 0
  77 0028 174E     		ldr	r6, .L8+4
  78 002a 8020     		mov	r0, #128
  79 002c 8503     		lsl	r5, r0, #14
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  80              		.loc 1 372 0
  81 002e 0020     		mov	r0, #0
  82 0030 011C     		add	r1, r0, #0
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  83              		.loc 1 371 0
  84 0032 B560     		str	r5, [r6, #8]
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  85              		.loc 1 372 0
  86 0034 FFF7FEFF 		bl	TFC_SetMotorPWM
  87              	.LVL5:
 374:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
  88              		.loc 1 374 0
  89 0038 144E     		ldr	r6, .L8+8
  90 003a 0024     		mov	r4, #0
  91 003c 3068     		ldr	r0, [r6]
  92 003e FFF7FEFF 		bl	getTotalIntensity
  93              	.LVL6:
  94 0042 1349     		ldr	r1, .L8+12
  95 0044 FFF7FEFF 		bl	calculateNewExposure
  96              	.LVL7:
  97 0048 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
  98              	.LVL8:
  99              	.LBB23:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 100              		.loc 1 377 0
 101 004c 8023     		mov	r3, #128
 102 004e 5A00     		lsl	r2, r3, #1
 103 0050 104D     		ldr	r5, .L8+16
 104 0052 114F     		ldr	r7, .L8+20
 105 0054 9046     		mov	r8, r2
 106              	.LVL9:
 107              	.L3:
 379:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 108              		.loc 1 379 0
 109 0056 3168     		ldr	r1, [r6]
 110 0058 0819     		add	r0, r1, r4
 111 005a 0288     		ldrh	r2, [r0]
 112 005c 391C     		mov	r1, r7
 113 005e 281C     		mov	r0, r5
 114 0060 FFF7FEFF 		bl	Qprintf
 115              	.LVL10:
 116 0064 3368     		ldr	r3, [r6]
 117 0066 0234     		add	r4, r4, #2
 118 0068 1A19     		add	r2, r3, r4
 119 006a 1288     		ldrh	r2, [r2]
 120 006c 281C     		mov	r0, r5
 121 006e 391C     		mov	r1, r7
 122 0070 0234     		add	r4, r4, #2
 123 0072 FFF7FEFF 		bl	Qprintf
 124              	.LVL11:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 125              		.loc 1 377 0
 126 0076 4445     		cmp	r4, r8
 127 0078 EDD1     		bne	.L3
 128              	.LBE23:
 381:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 129              		.loc 1 381 0
 130 007a 281C     		mov	r0, r5
 131 007c 0749     		ldr	r1, .L8+24
 132 007e FFF7FEFF 		bl	Qprintf
 133              	.LVL12:
 134 0082 C7E7     		b	.L1
 135              	.L9:
 136              		.align	2
 137              	.L8:
 138 0084 00000000 		.word	TFC_Ticker
 139 0088 00F10F40 		.word	1074786560
 140 008c 00000000 		.word	LineScanImage0
 141 0090 E0930400 		.word	300000
 142 0094 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 143 0098 00000000 		.word	.LC3
 144 009c 04000000 		.word	.LC5
 145              		.cfi_endproc
 146              	.LFE2:
 148              		.section	.text.derivativeFocussingMode,"ax",%progbits
 149              		.align	2
 150              		.global	derivativeFocussingMode
 151              		.code	16
 152              		.thumb_func
 154              	derivativeFocussingMode:
 155              	.LFB3:
 385:../Sources/main.c **** 
 386:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 387:../Sources/main.c **** {
 156              		.loc 1 387 0
 157              		.cfi_startproc
 158              	.LVL13:
 159 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 20
 162              		.cfi_offset 4, -20
 163              		.cfi_offset 5, -16
 164              		.cfi_offset 6, -12
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 4746     		mov	r7, r8
 168 0004 80B4     		push	{r7}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 24
 171              		.cfi_offset 8, -24
 388:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 172              		.loc 1 388 0
 173 0006 284C     		ldr	r4, .L16
 387:../Sources/main.c **** {
 174              		.loc 1 387 0
 175 0008 C0B0     		sub	sp, sp, #256
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 280
 178              		.loc 1 388 0
 179 000a 2368     		ldr	r3, [r4]
 180 000c C72B     		cmp	r3, #199
 181 000e 02D9     		bls	.L10
 182              		.loc 1 388 0 is_stmt 0
 183 0010 C178     		ldrb	r1, [r0, #3]
 184 0012 0029     		cmp	r1, #0
 185 0014 03D0     		beq	.L15
 186              	.LVL14:
 187              	.L10:
 389:../Sources/main.c **** 	{
 390:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 391:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 392:../Sources/main.c **** 
 393:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 396:../Sources/main.c **** 
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 398:../Sources/main.c **** 		int16_t temp[128];
 399:../Sources/main.c **** 		
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 403:../Sources/main.c **** 		
 404:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 405:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 406:../Sources/main.c **** 			{
 407:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 408:../Sources/main.c **** 			}
 409:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 410:../Sources/main.c **** 		#endif	
 411:../Sources/main.c **** 	}
 412:../Sources/main.c **** }
 188              		.loc 1 412 0 is_stmt 1
 189 0016 40B0     		add	sp, sp, #256
 190              		@ sp needed for prologue
 191 0018 04BC     		pop	{r2}
 192 001a 9046     		mov	r8, r2
 193 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 194              	.LVL15:
 195              	.L15:
 196              	.LBB24:
 391:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 197              		.loc 1 391 0
 198 001e 0122     		mov	r2, #1
 390:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 199              		.loc 1 390 0
 200 0020 2160     		str	r1, [r4]
 391:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 201              		.loc 1 391 0
 202 0022 C270     		strb	r2, [r0, #3]
 393:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 203              		.loc 1 393 0
 204 0024 0021     		mov	r1, #0
 205 0026 0020     		mov	r0, #0
 206              	.LVL16:
 207 0028 FFF7FEFF 		bl	TFC_SetServo
 208              	.LVL17:
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 209              		.loc 1 394 0
 210 002c 1F4E     		ldr	r6, .L16+4
 211 002e 8020     		mov	r0, #128
 212 0030 8503     		lsl	r5, r0, #14
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 213              		.loc 1 395 0
 214 0032 0020     		mov	r0, #0
 215 0034 011C     		add	r1, r0, #0
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 216              		.loc 1 394 0
 217 0036 B560     		str	r5, [r6, #8]
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 218              		.loc 1 395 0
 219 0038 FFF7FEFF 		bl	TFC_SetMotorPWM
 220              	.LVL18:
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 221              		.loc 1 397 0
 222 003c 1C4F     		ldr	r7, .L16+8
 386:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 223              		.loc 1 386 0
 224 003e 40AE     		add	r6, sp, #256
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 225              		.loc 1 397 0
 226 0040 3868     		ldr	r0, [r7]
 227 0042 FFF7FEFF 		bl	getTotalIntensity
 228              	.LVL19:
 229 0046 1B49     		ldr	r1, .L16+12
 230 0048 FFF7FEFF 		bl	calculateNewExposure
 231              	.LVL20:
 232 004c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 233              	.LVL21:
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 234              		.loc 1 400 0
 235 0050 194D     		ldr	r5, .L16+16
 236 0052 6369     		ldr	r3, [r4, #20]
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 237              		.loc 1 401 0
 238 0054 3868     		ldr	r0, [r7]
 239 0056 6946     		mov	r1, sp
 240 0058 8022     		mov	r2, #128
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 241              		.loc 1 400 0
 242 005a 2B60     		str	r3, [r5]
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 243              		.loc 1 401 0
 244 005c FFF7FEFF 		bl	edgeDetection
 245              	.LVL22:
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 246              		.loc 1 402 0
 247 0060 6469     		ldr	r4, [r4, #20]
 248 0062 2968     		ldr	r1, [r5]
 249 0064 1548     		ldr	r0, .L16+20
 250 0066 621A     		sub	r2, r4, r1
 386:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 251              		.loc 1 386 0
 252 0068 B046     		mov	r8, r6
 253 006a 154D     		ldr	r5, .L16+24
 254 006c 154E     		ldr	r6, .L16+28
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 255              		.loc 1 402 0
 256 006e 0260     		str	r2, [r0]
 257              	.LVL23:
 258 0070 6C46     		mov	r4, sp
 259              	.LVL24:
 260              	.L12:
 261              	.LBB25:
 407:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 262              		.loc 1 407 0
 263 0072 0023     		mov	r3, #0
 264 0074 E75E     		ldrsh	r7, [r4, r3]
 265 0076 311C     		mov	r1, r6
 266 0078 FB17     		asr	r3, r7, #31
 267 007a FA18     		add	r2, r7, r3
 268 007c 5A40     		eor	r2, r3
 269 007e 281C     		mov	r0, r5
 270 0080 FFF7FEFF 		bl	Qprintf
 271              	.LVL25:
 272 0084 0223     		mov	r3, #2
 273 0086 E15E     		ldrsh	r1, [r4, r3]
 274 0088 0434     		add	r4, r4, #4
 275 008a C817     		asr	r0, r1, #31
 276 008c 0A18     		add	r2, r1, r0
 277 008e 4240     		eor	r2, r0
 278 0090 311C     		mov	r1, r6
 279 0092 281C     		mov	r0, r5
 280 0094 FFF7FEFF 		bl	Qprintf
 281              	.LVL26:
 405:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 282              		.loc 1 405 0
 283 0098 4445     		cmp	r4, r8
 284 009a EAD1     		bne	.L12
 285              	.LBE25:
 409:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 286              		.loc 1 409 0
 287 009c 281C     		mov	r0, r5
 288 009e 0A49     		ldr	r1, .L16+32
 289 00a0 FFF7FEFF 		bl	Qprintf
 290              	.LVL27:
 291 00a4 B7E7     		b	.L10
 292              	.L17:
 293 00a6 C046     		.align	2
 294              	.L16:
 295 00a8 00000000 		.word	TFC_Ticker
 296 00ac 00F10F40 		.word	1074786560
 297 00b0 00000000 		.word	LineScanImage0
 298 00b4 E0930400 		.word	300000
 299 00b8 00000000 		.word	.LANCHOR0
 300 00bc 00000000 		.word	.LANCHOR1
 301 00c0 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 302 00c4 00000000 		.word	.LC3
 303 00c8 04000000 		.word	.LC5
 304              	.LBE24:
 305              		.cfi_endproc
 306              	.LFE3:
 308              		.section	.text.TFC_Init,"ax",%progbits
 309              		.align	2
 310              		.global	TFC_Init
 311              		.code	16
 312              		.thumb_func
 314              	TFC_Init:
 315              	.LFB4:
 413:../Sources/main.c **** 
 414:../Sources/main.c **** 
 415:../Sources/main.c **** void TFC_Init(carState_s* carState)
 416:../Sources/main.c **** {
 316              		.loc 1 416 0
 317              		.cfi_startproc
 318              	.LVL28:
 319 0000 10B5     		push	{r4, lr}
 320              	.LCFI5:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 14, -4
 324              		.loc 1 416 0
 325 0002 041C     		mov	r4, r0
 417:../Sources/main.c **** 	TFC_InitClock();
 326              		.loc 1 417 0
 327 0004 FFF7FEFF 		bl	TFC_InitClock
 328              	.LVL29:
 418:../Sources/main.c **** 	TFC_InitSysTick();
 329              		.loc 1 418 0
 330 0008 FFF7FEFF 		bl	TFC_InitSysTick
 331              	.LVL30:
 419:../Sources/main.c **** 	TFC_InitGPIO();
 332              		.loc 1 419 0
 333 000c FFF7FEFF 		bl	TFC_InitGPIO
 334              	.LVL31:
 420:../Sources/main.c **** 	TFC_InitServos();
 335              		.loc 1 420 0
 336 0010 FFF7FEFF 		bl	TFC_InitServos
 337              	.LVL32:
 421:../Sources/main.c **** 	TFC_InitMotorPWM();
 338              		.loc 1 421 0
 339 0014 FFF7FEFF 		bl	TFC_InitMotorPWM
 340              	.LVL33:
 422:../Sources/main.c **** 	TFC_InitADCs(carState);
 341              		.loc 1 422 0
 342 0018 201C     		mov	r0, r4
 343 001a FFF7FEFF 		bl	TFC_InitADCs
 344              	.LVL34:
 423:../Sources/main.c **** 	TFC_InitLineScanCamera();
 345              		.loc 1 423 0
 346 001e FFF7FEFF 		bl	TFC_InitLineScanCamera
 347              	.LVL35:
 424:../Sources/main.c **** 	
 425:../Sources/main.c **** 	#ifdef CHANGE_BLUETOOTH_BAUD_RATE
 426:../Sources/main.c **** 		TFC_InitUARTs(SDA_SERIAL_BAUD, 38400);	// 38400 is default for the BL module in AT mode 2
 427:../Sources/main.c **** 		int dummy_timee = TFC_Ticker[0];
 428:../Sources/main.c **** 		while(TFC_Ticker[0] - dummy_timee < 30000)
 429:../Sources/main.c **** 		{}
 430:../Sources/main.c **** 		TFC_BluetoothModuleSetBaud(BLUETOOTH_BAUD);		// Need to manually power the AT pin on the module
 431:../Sources/main.c **** 	#endif
 432:../Sources/main.c **** 	
 433:../Sources/main.c **** 	TFC_InitUARTs(SDA_SERIAL_BAUD, 9600);
 348              		.loc 1 433 0
 349 0022 E120     		mov	r0, #225
 350 0024 9621     		mov	r1, #150
 351 0026 4002     		lsl	r0, r0, #9
 352 0028 8901     		lsl	r1, r1, #6
 353 002a FFF7FEFF 		bl	TFC_InitUARTs
 354              	.LVL36:
 434:../Sources/main.c **** 	
 435:../Sources/main.c **** 	#ifdef TERMINAL_ENABLED
 436:../Sources/main.c **** 		TFC_InitTerminal();
 355              		.loc 1 436 0
 356 002e FFF7FEFF 		bl	TFC_InitTerminal
 357              	.LVL37:
 437:../Sources/main.c **** 	#endif
 438:../Sources/main.c **** 		
 439:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 358              		.loc 1 439 0
 359 0032 8022     		mov	r2, #128
 360 0034 094B     		ldr	r3, .L19
 361 0036 9403     		lsl	r4, r2, #14
 362              	.LVL38:
 363 0038 9C60     		str	r4, [r3, #8]
 440:../Sources/main.c **** 	TFC_SetMotorPWM(0, 0);
 364              		.loc 1 440 0
 365 003a 0024     		mov	r4, #0
 366 003c 201C     		add	r0, r4, #0
 367 003e 211C     		add	r1, r4, #0
 368 0040 FFF7FEFF 		bl	TFC_SetMotorPWM
 369              	.LVL39:
 441:../Sources/main.c **** 	TFC_InitSpeedSensor();
 370              		.loc 1 441 0
 371 0044 FFF7FEFF 		bl	TFC_InitSpeedSensor
 372              	.LVL40:
 442:../Sources/main.c **** 	preloadProbabilityTables(); //Prevents probability tables for stop line evaluation from being crea
 373              		.loc 1 442 0
 374 0048 FFF7FEFF 		bl	preloadProbabilityTables
 375              	.LVL41:
 443:../Sources/main.c **** 	generateKernel();
 376              		.loc 1 443 0
 377 004c FFF7FEFF 		bl	generateKernel
 378              	.LVL42:
 444:../Sources/main.c **** 	
 445:../Sources/main.c **** 	#ifdef RACE_MODE_CONTROLS
 446:../Sources/main.c **** 	PORTA_PCR2 &= 0xFFFFF8FF;
 447:../Sources/main.c **** 	PORTA_PCR2 |= 0x00000300;
 448:../Sources/main.c **** 	disable_irq(INT_UART0-16);
 449:../Sources/main.c **** 	carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 450:../Sources/main.c **** 	#endif
 451:../Sources/main.c **** 	
 452:../Sources/main.c **** 	TFC_SetServo(0, 0);
 379              		.loc 1 452 0
 380 0050 0020     		mov	r0, #0
 381 0052 211C     		add	r1, r4, #0
 382 0054 FFF7FEFF 		bl	TFC_SetServo
 383              	.LVL43:
 453:../Sources/main.c **** }
 384              		.loc 1 453 0
 385              		@ sp needed for prologue
 386 0058 10BD     		pop	{r4, pc}
 387              	.L20:
 388 005a C046     		.align	2
 389              	.L19:
 390 005c 00F10F40 		.word	1074786560
 391              		.cfi_endproc
 392              	.LFE4:
 394              		.section	.text.TFC_Task,"ax",%progbits
 395              		.align	2
 396              		.global	TFC_Task
 397              		.code	16
 398              		.thumb_func
 400              	TFC_Task:
 401              	.LFB5:
 454:../Sources/main.c **** 
 455:../Sources/main.c **** void TFC_Task()
 456:../Sources/main.c **** {
 402              		.loc 1 456 0
 403              		.cfi_startproc
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI6:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 457:../Sources/main.c **** #if defined(TERMINAL_USE_SDA_SERIAL)
 458:../Sources/main.c **** 	TFC_UART_Process();
 409              		.loc 1 458 0
 410 0002 FFF7FEFF 		bl	TFC_UART_Process
 411              	.LVL44:
 459:../Sources/main.c **** #endif
 460:../Sources/main.c **** 	TFC_ProcessTerminal();
 461:../Sources/main.c **** }
 412              		.loc 1 461 0
 413              		@ sp needed for prologue
 460:../Sources/main.c **** 	TFC_ProcessTerminal();
 414              		.loc 1 460 0
 415 0006 FFF7FEFF 		bl	TFC_ProcessTerminal
 416              	.LVL45:
 417              		.loc 1 461 0
 418 000a 08BD     		pop	{r3, pc}
 419              		.cfi_endproc
 420              	.LFE5:
 422              		.section	.text.evaluateMotorState,"ax",%progbits
 423              		.align	2
 424              		.global	evaluateMotorState
 425              		.code	16
 426              		.thumb_func
 428              	evaluateMotorState:
 429              	.LFB6:
 462:../Sources/main.c **** 
 463:../Sources/main.c **** void evaluateMotorState(carState_s* carState)
 464:../Sources/main.c **** {
 430              		.loc 1 464 0
 431              		.cfi_startproc
 432              	.LVL46:
 433 0000 38B5     		push	{r3, r4, r5, lr}
 434              	.LCFI7:
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 3, -16
 437              		.cfi_offset 4, -12
 438              		.cfi_offset 5, -8
 439              		.cfi_offset 14, -4
 440              		.loc 1 464 0
 441 0002 051C     		mov	r5, r0
 465:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 442              		.loc 1 465 0
 443 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 444              	.LVL47:
 445 0008 0124     		mov	r4, #1
 446 000a 0442     		tst	r4, r0
 447 000c 05D0     		beq	.L23
 466:../Sources/main.c **** 	{
 467:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 448              		.loc 1 467 0
 449 000e 8021     		mov	r1, #128
 450 0010 0848     		ldr	r0, .L25
 451 0012 8A03     		lsl	r2, r1, #14
 452 0014 4260     		str	r2, [r0, #4]
 468:../Sources/main.c **** 		carState->motorState = RUNNING;
 453              		.loc 1 468 0
 454 0016 2C70     		strb	r4, [r5]
 455              	.L22:
 469:../Sources/main.c **** 	}
 470:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 471:../Sources/main.c **** 	{
 472:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 473:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 474:../Sources/main.c **** 	}
 475:../Sources/main.c **** }
 456              		.loc 1 475 0
 457              		@ sp needed for prologue
 458              	.LVL48:
 459 0018 38BD     		pop	{r3, r4, r5, pc}
 460              	.LVL49:
 461              	.L23:
 470:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 462              		.loc 1 470 0
 463 001a FFF7FEFF 		bl	TFC_GetDIP_Switch
 464              	.LVL50:
 465 001e 0442     		tst	r4, r0
 466 0020 FAD1     		bne	.L22
 472:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 467              		.loc 1 472 0
 468 0022 8022     		mov	r2, #128
 469 0024 034B     		ldr	r3, .L25
 470 0026 9003     		lsl	r0, r2, #14
 471 0028 9860     		str	r0, [r3, #8]
 473:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 472              		.loc 1 473 0
 473 002a 0020     		mov	r0, #0
 474 002c 011C     		add	r1, r0, #0
 475 002e FFF7FEFF 		bl	TFC_SetMotorPWM
 476              	.LVL51:
 477 0032 F1E7     		b	.L22
 478              	.L26:
 479              		.align	2
 480              	.L25:
 481 0034 00F10F40 		.word	1074786560
 482              		.cfi_endproc
 483              	.LFE6:
 485              		.section	.text.evaluateUARTorSpeed,"ax",%progbits
 486              		.align	2
 487              		.global	evaluateUARTorSpeed
 488              		.code	16
 489              		.thumb_func
 491              	evaluateUARTorSpeed:
 492              	.LFB7:
 476:../Sources/main.c **** 
 477:../Sources/main.c **** void evaluateUARTorSpeed(carState_s* carState)
 478:../Sources/main.c **** {
 493              		.loc 1 478 0
 494              		.cfi_startproc
 495              	.LVL52:
 496 0000 10B5     		push	{r4, lr}
 497              	.LCFI8:
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 4, -8
 500              		.cfi_offset 14, -4
 501              		.loc 1 478 0
 502 0002 041C     		mov	r4, r0
 479:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 503              		.loc 1 479 0
 504 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 505              	.LVL53:
 506 0008 0307     		lsl	r3, r0, #28
 507 000a 15D4     		bmi	.L28
 508              		.loc 1 479 0 is_stmt 0
 509 000c 1B4B     		ldr	r3, .L37
 510 000e 9868     		ldr	r0, [r3, #8]
 511 0010 4105     		lsl	r1, r0, #21
 512 0012 4A0F     		lsr	r2, r1, #29
 513 0014 022A     		cmp	r2, #2
 514 0016 0FD0     		beq	.L28
 515              	.L29:
 480:../Sources/main.c **** 	{
 481:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 516              		.loc 1 481 0 is_stmt 1
 517 0018 1848     		ldr	r0, .L37
 518 001a 194A     		ldr	r2, .L37+4
 519 001c 8168     		ldr	r1, [r0, #8]
 520 001e 0A40     		and	r2, r1
 521 0020 8260     		str	r2, [r0, #8]
 482:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 522              		.loc 1 482 0
 523 0022 8368     		ldr	r3, [r0, #8]
 524 0024 8021     		mov	r1, #128
 525 0026 8A00     		lsl	r2, r1, #2
 526 0028 1A43     		orr	r2, r3
 527 002a 8260     		str	r2, [r0, #8]
 483:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 528              		.loc 1 483 0
 529 002c 0C20     		mov	r0, #12
 530 002e FFF7FEFF 		bl	enable_irq
 531              	.LVL54:
 484:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 532              		.loc 1 484 0
 533 0032 0020     		mov	r0, #0
 534 0034 6070     		strb	r0, [r4, #1]
 535              	.L27:
 485:../Sources/main.c **** 	}
 486:../Sources/main.c **** 
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 488:../Sources/main.c **** 	{
 489:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 490:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 491:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 492:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 493:../Sources/main.c **** 	}
 494:../Sources/main.c **** }
 536              		.loc 1 494 0
 537              		@ sp needed for prologue
 538              	.LVL55:
 539 0036 10BD     		pop	{r4, pc}
 540              	.LVL56:
 541              	.L28:
 479:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 542              		.loc 1 479 0
 543 0038 6378     		ldrb	r3, [r4, #1]
 544 003a 022B     		cmp	r3, #2
 545 003c ECD0     		beq	.L29
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 546              		.loc 1 487 0
 547 003e FFF7FEFF 		bl	TFC_GetDIP_Switch
 548              	.LVL57:
 549 0042 0307     		lsl	r3, r0, #28
 550 0044 15D5     		bpl	.L32
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 551              		.loc 1 487 0 is_stmt 0
 552 0046 0D48     		ldr	r0, .L37
 553 0048 8168     		ldr	r1, [r0, #8]
 554 004a 4A05     		lsl	r2, r1, #21
 555 004c 530F     		lsr	r3, r2, #29
 556 004e 032B     		cmp	r3, #3
 557 0050 0FD0     		beq	.L32
 558              	.L33:
 489:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 559              		.loc 1 489 0 is_stmt 1
 560 0052 0A4B     		ldr	r3, .L37
 561 0054 0A4A     		ldr	r2, .L37+4
 562 0056 9968     		ldr	r1, [r3, #8]
 563 0058 0A40     		and	r2, r1
 564 005a 9A60     		str	r2, [r3, #8]
 490:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 565              		.loc 1 490 0
 566 005c 9868     		ldr	r0, [r3, #8]
 567 005e C021     		mov	r1, #192
 568 0060 8A00     		lsl	r2, r1, #2
 569 0062 0243     		orr	r2, r0
 570 0064 9A60     		str	r2, [r3, #8]
 491:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 571              		.loc 1 491 0
 572 0066 0C20     		mov	r0, #12
 573 0068 FFF7FEFF 		bl	disable_irq
 574              	.LVL58:
 492:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 575              		.loc 1 492 0
 576 006c 0123     		mov	r3, #1
 577 006e 6370     		strb	r3, [r4, #1]
 578 0070 E1E7     		b	.L27
 579              	.L32:
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 580              		.loc 1 487 0
 581 0072 6078     		ldrb	r0, [r4, #1]
 582 0074 0228     		cmp	r0, #2
 583 0076 DED1     		bne	.L27
 584 0078 EBE7     		b	.L33
 585              	.L38:
 586 007a C046     		.align	2
 587              	.L37:
 588 007c 00900440 		.word	1074040832
 589 0080 FFF8FFFF 		.word	-1793
 590              		.cfi_endproc
 591              	.LFE7:
 593              		.global	__aeabi_fcmpgt
 594              		.section	.text.LEDfeedback,"ax",%progbits
 595              		.align	2
 596              		.global	LEDfeedback
 597              		.code	16
 598              		.thumb_func
 600              	LEDfeedback:
 601              	.LFB8:
 495:../Sources/main.c **** 
 496:../Sources/main.c **** void LEDfeedback(carState_s* carState)
 497:../Sources/main.c **** {
 602              		.loc 1 497 0
 603              		.cfi_startproc
 604              	.LVL59:
 498:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 605              		.loc 1 498 0
 606 0000 4F4B     		ldr	r3, .L66
 497:../Sources/main.c **** {
 607              		.loc 1 497 0
 608 0002 10B5     		push	{r4, lr}
 609              	.LCFI9:
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 4, -8
 612              		.cfi_offset 14, -4
 613              		.loc 1 498 0
 614 0004 4F49     		ldr	r1, .L66+4
 497:../Sources/main.c **** {
 615              		.loc 1 497 0
 616 0006 041C     		mov	r4, r0
 617              		.loc 1 498 0
 618 0008 1868     		ldr	r0, [r3]
 619              	.LVL60:
 620 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 621              	.LVL61:
 622 000e 0028     		cmp	r0, #0
 623 0010 1DD0     		beq	.L51
 499:../Sources/main.c **** 	{
 500:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 624              		.loc 1 500 0
 625 0012 A078     		ldrb	r0, [r4, #2]
 626 0014 0228     		cmp	r0, #2
 627 0016 30D0     		beq	.L59
 501:../Sources/main.c **** 		{
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 503:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 504:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 505:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 506:../Sources/main.c **** 		}
 507:../Sources/main.c **** 		#ifdef CROSS_DETECTION_ENABLE
 508:../Sources/main.c **** 		else if(carState->crossSection == YES)
 628              		.loc 1 508 0
 629 0018 A379     		ldrb	r3, [r4, #6]
 630 001a 012B     		cmp	r3, #1
 631 001c 39D0     		beq	.L60
 509:../Sources/main.c **** 		{
 510:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 511:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 512:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 513:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 514:../Sources/main.c **** 		}
 515:../Sources/main.c **** 		#endif
 516:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 632              		.loc 1 516 0
 633 001e 617A     		ldrb	r1, [r4, #9]
 634 0020 0129     		cmp	r1, #1
 635 0022 47D0     		beq	.L61
 517:../Sources/main.c **** 		{
 518:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 519:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 520:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 521:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 522:../Sources/main.c **** 		}
 523:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 636              		.loc 1 523 0
 637 0024 2279     		ldrb	r2, [r4, #4]
 638 0026 022A     		cmp	r2, #2
 639 0028 5AD0     		beq	.L62
 524:../Sources/main.c **** 		{
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 526:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 527:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 528:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 529:../Sources/main.c **** 		}
 530:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 640              		.loc 1 530 0
 641 002a 6479     		ldrb	r4, [r4, #5]
 642              	.LVL62:
 643 002c 012C     		cmp	r4, #1
 644 002e 68D0     		beq	.L63
 531:../Sources/main.c **** 		{	
 532:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 534:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 535:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 536:../Sources/main.c **** 		}
 537:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 645              		.loc 1 537 0
 646 0030 022C     		cmp	r4, #2
 647 0032 00D1     		bne	.LCB552
 648 0034 71E0     		b	.L64	@long jump
 649              	.LCB552:
 538:../Sources/main.c **** 		{	
 539:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 540:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 541:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 542:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 543:../Sources/main.c **** 		}
 544:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 650              		.loc 1 544 0
 651 0036 0128     		cmp	r0, #1
 652 0038 00D1     		bne	.LCB554
 653 003a 75E0     		b	.L65	@long jump
 654              	.LCB554:
 545:../Sources/main.c **** 		{	
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 547:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 548:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 549:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 550:../Sources/main.c **** 		}
 551:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 655              		.loc 1 551 0
 656 003c 0328     		cmp	r0, #3
 657 003e 1BD1     		bne	.L39
 552:../Sources/main.c **** 		{	
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 658              		.loc 1 553 0
 659 0040 4148     		ldr	r0, .L66+8
 660 0042 8021     		mov	r1, #128
 661 0044 8368     		ldr	r3, [r0, #8]
 662 0046 4A00     		lsl	r2, r1, #1
 663 0048 1A43     		orr	r2, r3
 664 004a 8260     		str	r2, [r0, #8]
 665 004c 27E0     		b	.L58
 666              	.LVL63:
 667              	.L51:
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 555:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 556:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 557:../Sources/main.c **** 		}
 558:../Sources/main.c **** 	}
 559:../Sources/main.c **** 	else
 560:../Sources/main.c **** 	{
 561:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 668              		.loc 1 561 0
 669 004e 3E48     		ldr	r0, .L66+8
 670 0050 8022     		mov	r2, #128
 671 0052 4168     		ldr	r1, [r0, #4]
 672 0054 5400     		lsl	r4, r2, #1
 673              	.LVL64:
 674 0056 0C43     		orr	r4, r1
 675 0058 4460     		str	r4, [r0, #4]
 562:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 676              		.loc 1 562 0
 677 005a 4368     		ldr	r3, [r0, #4]
 678 005c 8021     		mov	r1, #128
 679 005e 8A00     		lsl	r2, r1, #2
 680 0060 1A43     		orr	r2, r3
 681 0062 4260     		str	r2, [r0, #4]
 682              	.L52:
 563:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 683              		.loc 1 563 0
 684 0064 4368     		ldr	r3, [r0, #4]
 685 0066 8021     		mov	r1, #128
 686 0068 CA00     		lsl	r2, r1, #3
 687 006a 1A43     		orr	r2, r3
 688 006c 4260     		str	r2, [r0, #4]
 689              	.L53:
 564:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 690              		.loc 1 564 0
 691 006e 4468     		ldr	r4, [r0, #4]
 692 0070 8023     		mov	r3, #128
 693 0072 1901     		lsl	r1, r3, #4
 694 0074 2143     		orr	r1, r4
 695 0076 4160     		str	r1, [r0, #4]
 696              	.L39:
 565:../Sources/main.c **** 	}
 566:../Sources/main.c **** }
 697              		.loc 1 566 0
 698              		@ sp needed for prologue
 699 0078 10BD     		pop	{r4, pc}
 700              	.LVL65:
 701              	.L59:
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 702              		.loc 1 502 0
 703 007a 3348     		ldr	r0, .L66+8
 704 007c 8024     		mov	r4, #128
 705              	.LVL66:
 706 007e 8168     		ldr	r1, [r0, #8]
 707 0080 6300     		lsl	r3, r4, #1
 708 0082 0B43     		orr	r3, r1
 709 0084 8360     		str	r3, [r0, #8]
 503:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 710              		.loc 1 503 0
 711 0086 8168     		ldr	r1, [r0, #8]
 712 0088 8022     		mov	r2, #128
 713 008a 9400     		lsl	r4, r2, #2
 714 008c 0C43     		orr	r4, r1
 715 008e 8460     		str	r4, [r0, #8]
 716 0090 E8E7     		b	.L52
 717              	.LVL67:
 718              	.L60:
 510:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 719              		.loc 1 510 0
 720 0092 2D48     		ldr	r0, .L66+8
 721 0094 8021     		mov	r1, #128
 722 0096 4368     		ldr	r3, [r0, #4]
 723 0098 4C00     		lsl	r4, r1, #1
 724              	.LVL68:
 725 009a 1C43     		orr	r4, r3
 726 009c 4460     		str	r4, [r0, #4]
 727              	.L58:
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 728              		.loc 1 554 0
 729 009e 8368     		ldr	r3, [r0, #8]
 730 00a0 8022     		mov	r2, #128
 731 00a2 9100     		lsl	r1, r2, #2
 732 00a4 1943     		orr	r1, r3
 733 00a6 8160     		str	r1, [r0, #8]
 555:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 734              		.loc 1 555 0
 735 00a8 8468     		ldr	r4, [r0, #8]
 736 00aa 8023     		mov	r3, #128
 737 00ac DA00     		lsl	r2, r3, #3
 738 00ae 2243     		orr	r2, r4
 739 00b0 8260     		str	r2, [r0, #8]
 740 00b2 DCE7     		b	.L53
 741              	.LVL69:
 742              	.L61:
 518:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 743              		.loc 1 518 0
 744 00b4 2448     		ldr	r0, .L66+8
 745 00b6 8021     		mov	r1, #128
 746 00b8 8368     		ldr	r3, [r0, #8]
 747 00ba 4A00     		lsl	r2, r1, #1
 748 00bc 1A43     		orr	r2, r3
 749 00be 8260     		str	r2, [r0, #8]
 519:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 750              		.loc 1 519 0
 751 00c0 4468     		ldr	r4, [r0, #4]
 752              	.LVL70:
 753 00c2 8023     		mov	r3, #128
 754 00c4 9900     		lsl	r1, r3, #2
 755 00c6 2143     		orr	r1, r4
 756 00c8 4160     		str	r1, [r0, #4]
 757              	.L55:
 548:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 758              		.loc 1 548 0
 759 00ca 4468     		ldr	r4, [r0, #4]
 760 00cc 8022     		mov	r2, #128
 761 00ce D300     		lsl	r3, r2, #3
 762 00d0 2343     		orr	r3, r4
 763 00d2 4360     		str	r3, [r0, #4]
 764              	.L54:
 549:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 765              		.loc 1 549 0
 766 00d4 8168     		ldr	r1, [r0, #8]
 767 00d6 8024     		mov	r4, #128
 768 00d8 2201     		lsl	r2, r4, #4
 769 00da 0A43     		orr	r2, r1
 770 00dc 8260     		str	r2, [r0, #8]
 771 00de CBE7     		b	.L39
 772              	.LVL71:
 773              	.L62:
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 774              		.loc 1 525 0
 775 00e0 1948     		ldr	r0, .L66+8
 776 00e2 8023     		mov	r3, #128
 777 00e4 4468     		ldr	r4, [r0, #4]
 778              	.LVL72:
 779 00e6 5A00     		lsl	r2, r3, #1
 780 00e8 2243     		orr	r2, r4
 781 00ea 4260     		str	r2, [r0, #4]
 782              	.L57:
 540:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 783              		.loc 1 540 0
 784 00ec 4168     		ldr	r1, [r0, #4]
 785 00ee 8024     		mov	r4, #128
 786 00f0 A300     		lsl	r3, r4, #2
 787 00f2 0B43     		orr	r3, r1
 788 00f4 4360     		str	r3, [r0, #4]
 789              	.L56:
 541:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 790              		.loc 1 541 0
 791 00f6 8168     		ldr	r1, [r0, #8]
 792 00f8 8022     		mov	r2, #128
 793 00fa D400     		lsl	r4, r2, #3
 794 00fc 0C43     		orr	r4, r1
 795 00fe 8460     		str	r4, [r0, #8]
 796 0100 E8E7     		b	.L54
 797              	.L63:
 532:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 798              		.loc 1 532 0
 799 0102 1148     		ldr	r0, .L66+8
 800 0104 8021     		mov	r1, #128
 801 0106 4368     		ldr	r3, [r0, #4]
 802 0108 4C00     		lsl	r4, r1, #1
 803 010a 1C43     		orr	r4, r3
 804 010c 4460     		str	r4, [r0, #4]
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 805              		.loc 1 533 0
 806 010e 8368     		ldr	r3, [r0, #8]
 807 0110 8022     		mov	r2, #128
 808 0112 9100     		lsl	r1, r2, #2
 809 0114 1943     		orr	r1, r3
 810 0116 8160     		str	r1, [r0, #8]
 811 0118 EDE7     		b	.L56
 812              	.L64:
 539:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 813              		.loc 1 539 0
 814 011a 0B48     		ldr	r0, .L66+8
 815 011c 8024     		mov	r4, #128
 816 011e 8168     		ldr	r1, [r0, #8]
 817 0120 6200     		lsl	r2, r4, #1
 818 0122 0A43     		orr	r2, r1
 819 0124 8260     		str	r2, [r0, #8]
 820 0126 E1E7     		b	.L57
 821              	.L65:
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 822              		.loc 1 546 0
 823 0128 0748     		ldr	r0, .L66+8
 824 012a 8023     		mov	r3, #128
 825 012c 8468     		ldr	r4, [r0, #8]
 826 012e 5900     		lsl	r1, r3, #1
 827 0130 2143     		orr	r1, r4
 828 0132 8160     		str	r1, [r0, #8]
 547:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 829              		.loc 1 547 0
 830 0134 8468     		ldr	r4, [r0, #8]
 831 0136 8022     		mov	r2, #128
 832 0138 9300     		lsl	r3, r2, #2
 833 013a 2343     		orr	r3, r4
 834 013c 8360     		str	r3, [r0, #8]
 835 013e C4E7     		b	.L55
 836              	.L67:
 837              		.align	2
 838              	.L66:
 839 0140 00000000 		.word	.LANCHOR2
 840 0144 0000F040 		.word	1089470464
 841 0148 40F00F40 		.word	1074786368
 842              		.cfi_endproc
 843              	.LFE8:
 845              		.section	.text.servoAlignment,"ax",%progbits
 846              		.align	2
 847              		.global	servoAlignment
 848              		.code	16
 849              		.thumb_func
 851              	servoAlignment:
 852              	.LFB9:
 567:../Sources/main.c **** 
 568:../Sources/main.c **** void servoAlignment()		// Helps setting the servo offset value by debugging
 569:../Sources/main.c **** {
 853              		.loc 1 569 0
 854              		.cfi_startproc
 855 0000 08B5     		push	{r3, lr}
 856              	.LCFI10:
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 3, -8
 859              		.cfi_offset 14, -4
 570:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 860              		.loc 1 570 0
 861 0002 054B     		ldr	r3, .L70
 862 0004 1A68     		ldr	r2, [r3]
 863 0006 C72A     		cmp	r2, #199
 864 0008 05D9     		bls	.L68
 865              	.LBB27:
 571:../Sources/main.c **** 	{
 572:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 866              		.loc 1 572 0
 867 000a 0020     		mov	r0, #0
 868 000c 1860     		str	r0, [r3]
 869              	.LVL73:
 573:../Sources/main.c **** 		float offset = 30000 * 0.15f;
 574:../Sources/main.c **** 		TFC_SetServo(0, offset);
 870              		.loc 1 574 0
 871 000e 0349     		ldr	r1, .L70+4
 872 0010 0020     		mov	r0, #0
 873 0012 FFF7FEFF 		bl	TFC_SetServo
 874              	.LVL74:
 875              	.L68:
 876              	.LBE27:
 575:../Sources/main.c **** 	}
 576:../Sources/main.c **** }
 877              		.loc 1 576 0
 878              		@ sp needed for prologue
 879 0016 08BD     		pop	{r3, pc}
 880              	.L71:
 881              		.align	2
 882              	.L70:
 883 0018 00000000 		.word	TFC_Ticker
 884 001c 00A08C45 		.word	1166843904
 885              		.cfi_endproc
 886              	.LFE9:
 888              		.global	__aeabi_fmul
 889              		.global	__aeabi_fcmple
 890              		.global	__aeabi_fcmpge
 891              		.global	__aeabi_f2iz
 892              		.global	__aeabi_fcmpeq
 893              		.global	__aeabi_f2d
 894              		.global	__aeabi_dadd
 895              		.global	__aeabi_d2iz
 896              		.global	__aeabi_dsub
 897              		.global	__aeabi_i2f
 898              		.section	.text.telemetrySendData,"ax",%progbits
 899              		.align	2
 900              		.global	telemetrySendData
 901              		.code	16
 902              		.thumb_func
 904              	telemetrySendData:
 905              	.LFB10:
 577:../Sources/main.c **** 
 578:../Sources/main.c **** void telemetrySendData()
 579:../Sources/main.c **** {
 906              		.loc 1 579 0
 907              		.cfi_startproc
 908 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 909              	.LCFI11:
 910              		.cfi_def_cfa_offset 24
 911              		.cfi_offset 3, -24
 912              		.cfi_offset 4, -20
 913              		.cfi_offset 5, -16
 914              		.cfi_offset 6, -12
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 580:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, BLUETOOTH_FLAG);
 917              		.loc 1 580 0
 918 0002 E348     		ldr	r0, .L377
 919 0004 8021     		mov	r1, #128
 920 0006 FFF7FEFF 		bl	uart_putchar
 921              	.LVL75:
 581:../Sources/main.c **** 	
 582:../Sources/main.c **** 	// 1 - Track Centre Detected by the Camera
 583:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineCenter);
 922              		.loc 1 583 0
 923 000a E24C     		ldr	r4, .L377+4
 924 000c E048     		ldr	r0, .L377
 925 000e A17A     		ldrb	r1, [r4, #10]
 926 0010 FFF7FEFF 		bl	uart_putchar
 927              	.LVL76:
 584:../Sources/main.c **** 	// 2 - Calculated Target Speed
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 928              		.loc 1 585 0
 929 0014 E04B     		ldr	r3, .L377+8
 930 0016 8221     		mov	r1, #130
 931 0018 C905     		lsl	r1, r1, #23
 932 001a 1868     		ldr	r0, [r3]
 933 001c FFF7FEFF 		bl	__aeabi_fmul
 934              	.LVL77:
 935 0020 DE49     		ldr	r1, .L377+12
 936 0022 051C     		add	r5, r0, #0
 937 0024 FFF7FEFF 		bl	__aeabi_fcmple
 938              	.LVL78:
 939 0028 0028     		cmp	r0, #0
 940 002a 00D1     		bne	.LCB818
 941 002c B3E0     		b	.L81	@long jump
 942              	.LCB818:
 943              		.loc 1 585 0 is_stmt 0
 944 002e 281C     		add	r0, r5, #0
 945 0030 0021     		mov	r1, #0
 946 0032 FFF7FEFF 		bl	__aeabi_fcmpge
 947              	.LVL79:
 948 0036 0028     		cmp	r0, #0
 949 0038 00D1     		bne	.LCB824
 950 003a BDE1     		b	.L75	@long jump
 951              	.LCB824:
 952              		.loc 1 585 0
 953 003c 281C     		add	r0, r5, #0
 954 003e D849     		ldr	r1, .L377+16
 955 0040 FFF7FEFF 		bl	__aeabi_fcmpge
 956              	.LVL80:
 957 0044 0028     		cmp	r0, #0
 958 0046 00D1     		bne	.LCB830
 959 0048 B0E1     		b	.L343	@long jump
 960              	.LCB830:
 961              		.loc 1 585 0
 962 004a 281C     		add	r0, r5, #0
 963 004c D549     		ldr	r1, .L377+20
 964 004e FFF7FEFF 		bl	__aeabi_fcmple
 965              	.LVL81:
 966 0052 7F26     		mov	r6, #127
 967 0054 071E     		sub	r7, r0, #0
 968 0056 17D1     		bne	.L79
 969              		.loc 1 585 0
 970 0058 281C     		add	r0, r5, #0
 971 005a 0021     		mov	r1, #0
 972 005c FFF7FEFF 		bl	__aeabi_fcmpeq
 973              	.LVL82:
 974 0060 0028     		cmp	r0, #0
 975 0062 00D1     		bne	.LCB844
 976 0064 A8E1     		b	.L75	@long jump
 977              	.LCB844:
 978              		.loc 1 585 0
 979 0066 002F     		cmp	r7, #0
 980 0068 00D1     		bne	.LCB846
 981 006a BAE1     		b	.L88	@long jump
 982              	.LCB846:
 983              		.loc 1 585 0
 984 006c 281C     		add	r0, r5, #0
 985 006e CE49     		ldr	r1, .L377+24
 986 0070 FFF7FEFF 		bl	__aeabi_fcmpgt
 987              	.LVL83:
 988 0074 0028     		cmp	r0, #0
 989 0076 07D1     		bne	.L79
 990              		.loc 1 585 0
 991 0078 281C     		add	r0, r5, #0
 992 007a C949     		ldr	r1, .L377+16
 993 007c FFF7FEFF 		bl	__aeabi_fcmpge
 994              	.LVL84:
 995 0080 7E26     		mov	r6, #126
 996 0082 0028     		cmp	r0, #0
 997 0084 00D1     		bne	.LCB859
 998 0086 9BE0     		b	.L87	@long jump
 999              	.LCB859:
 1000              	.L79:
 1001              		.loc 1 585 0
 1002 0088 311C     		mov	r1, r6
 1003 008a C148     		ldr	r0, .L377
 1004 008c FFF7FEFF 		bl	uart_putchar
 1005              	.LVL85:
 586:../Sources/main.c **** 	// 3 - Speed of the right wheel
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1006              		.loc 1 587 0 is_stmt 1
 1007 0090 0020     		mov	r0, #0
 1008 0092 FFF7FEFF 		bl	getSpeed
 1009              	.LVL86:
 1010 0096 8222     		mov	r2, #130
 1011 0098 D105     		lsl	r1, r2, #23
 1012 009a FFF7FEFF 		bl	__aeabi_fmul
 1013              	.LVL87:
 1014 009e BF49     		ldr	r1, .L377+12
 1015 00a0 FFF7FEFF 		bl	__aeabi_fcmple
 1016              	.LVL88:
 1017 00a4 0028     		cmp	r0, #0
 1018 00a6 00D1     		bne	.LCB876
 1019 00a8 99E0     		b	.L92	@long jump
 1020              	.LCB876:
 1021              		.loc 1 587 0 is_stmt 0
 1022 00aa 0020     		mov	r0, #0
 1023 00ac FFF7FEFF 		bl	getSpeed
 1024              	.LVL89:
 1025 00b0 8223     		mov	r3, #130
 1026 00b2 D905     		lsl	r1, r3, #23
 1027 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1028              	.LVL90:
 1029 00b8 0021     		mov	r1, #0
 1030 00ba FFF7FEFF 		bl	__aeabi_fcmpge
 1031              	.LVL91:
 1032 00be 0028     		cmp	r0, #0
 1033 00c0 00D1     		bne	.LCB888
 1034 00c2 8CE0     		b	.L92	@long jump
 1035              	.LCB888:
 1036              		.loc 1 587 0
 1037 00c4 0020     		mov	r0, #0
 1038 00c6 FFF7FEFF 		bl	getSpeed
 1039              	.LVL92:
 1040 00ca 8221     		mov	r1, #130
 1041 00cc C905     		lsl	r1, r1, #23
 1042 00ce FFF7FEFF 		bl	__aeabi_fmul
 1043              	.LVL93:
 1044 00d2 B349     		ldr	r1, .L377+16
 1045 00d4 FFF7FEFF 		bl	__aeabi_fcmpge
 1046              	.LVL94:
 1047 00d8 0028     		cmp	r0, #0
 1048 00da 73D1     		bne	.L95
 1049              	.L98:
 1050              		.loc 1 587 0
 1051 00dc 0020     		mov	r0, #0
 1052 00de FFF7FEFF 		bl	getSpeed
 1053              	.LVL95:
 1054 00e2 8222     		mov	r2, #130
 1055 00e4 D105     		lsl	r1, r2, #23
 1056 00e6 FFF7FEFF 		bl	__aeabi_fmul
 1057              	.LVL96:
 1058 00ea 0021     		mov	r1, #0
 1059 00ec FFF7FEFF 		bl	__aeabi_fcmpeq
 1060              	.LVL97:
 1061 00f0 0028     		cmp	r0, #0
 1062 00f2 00D1     		bne	.LCB913
 1063 00f4 81E0     		b	.L96	@long jump
 1064              	.LCB913:
 1065              		.loc 1 587 0
 1066 00f6 0020     		mov	r0, #0
 1067 00f8 FFF7FEFF 		bl	getSpeed
 1068              	.LVL98:
 1069 00fc 8223     		mov	r3, #130
 1070 00fe D905     		lsl	r1, r3, #23
 1071 0100 FFF7FEFF 		bl	__aeabi_fmul
 1072              	.LVL99:
 1073 0104 A549     		ldr	r1, .L377+12
 1074 0106 FFF7FEFF 		bl	__aeabi_fcmple
 1075              	.LVL100:
 1076 010a 0028     		cmp	r0, #0
 1077 010c 27D0     		beq	.L114
 1078              		.loc 1 587 0
 1079 010e 0020     		mov	r0, #0
 1080 0110 FFF7FEFF 		bl	getSpeed
 1081              	.LVL101:
 1082 0114 8221     		mov	r1, #130
 1083 0116 C905     		lsl	r1, r1, #23
 1084 0118 FFF7FEFF 		bl	__aeabi_fmul
 1085              	.LVL102:
 1086 011c 0021     		mov	r1, #0
 1087 011e FFF7FEFF 		bl	__aeabi_fcmpge
 1088              	.LVL103:
 1089 0122 0028     		cmp	r0, #0
 1090 0124 1BD0     		beq	.L114
 1091              		.loc 1 587 0
 1092 0126 0020     		mov	r0, #0
 1093 0128 8227     		mov	r7, #130
 1094 012a FFF7FEFF 		bl	getSpeed
 1095              	.LVL104:
 1096 012e F905     		lsl	r1, r7, #23
 1097 0130 FFF7FEFF 		bl	__aeabi_fmul
 1098              	.LVL105:
 1099 0134 9A49     		ldr	r1, .L377+16
 1100 0136 FFF7FEFF 		bl	__aeabi_fcmpge
 1101              	.LVL106:
 1102 013a 0028     		cmp	r0, #0
 1103 013c 01D1     		bne	.LCB949
 1104 013e 00F027FD 		bl	.L118	@far jump
 1105              	.LCB949:
 1106              		.loc 1 587 0
 1107 0142 0020     		mov	r0, #0
 1108 0144 8225     		mov	r5, #130
 1109 0146 FFF7FEFF 		bl	getSpeed
 1110              	.LVL107:
 1111 014a E905     		lsl	r1, r5, #23
 1112 014c FFF7FEFF 		bl	__aeabi_fmul
 1113              	.LVL108:
 1114 0150 9449     		ldr	r1, .L377+20
 1115 0152 FFF7FEFF 		bl	__aeabi_fcmple
 1116              	.LVL109:
 1117 0156 0028     		cmp	r0, #0
 1118 0158 01D1     		bne	.LCB961
 1119 015a 00F019FD 		bl	.L118	@far jump
 1120              	.LCB961:
 1121              	.L114:
 1122              		.loc 1 587 0
 1123 015e 0020     		mov	r0, #0
 1124 0160 8226     		mov	r6, #130
 1125 0162 FFF7FEFF 		bl	getSpeed
 1126              	.LVL110:
 1127 0166 F105     		lsl	r1, r6, #23
 1128 0168 FFF7FEFF 		bl	__aeabi_fmul
 1129              	.LVL111:
 1130 016c 8E49     		ldr	r1, .L377+24
 1131 016e FFF7FEFF 		bl	__aeabi_fcmpgt
 1132              	.LVL112:
 1133 0172 0028     		cmp	r0, #0
 1134 0174 00D0     		beq	.LCB974
 1135 0176 82E0     		b	.L113	@long jump
 1136              	.LCB974:
 1137              		.loc 1 587 0
 1138 0178 FFF7FEFF 		bl	getSpeed
 1139              	.LVL113:
 1140 017c 8222     		mov	r2, #130
 1141 017e D105     		lsl	r1, r2, #23
 1142 0180 FFF7FEFF 		bl	__aeabi_fmul
 1143              	.LVL114:
 1144 0184 8649     		ldr	r1, .L377+16
 1145 0186 FFF7FEFF 		bl	__aeabi_fcmpge
 1146              	.LVL115:
 1147 018a 0028     		cmp	r0, #0
 1148 018c 01D0     		beq	.LCB985
 1149 018e 00F03DFD 		bl	.L368	@far jump
 1150              	.LCB985:
 1151              	.L122:
 1152              		.loc 1 587 0
 1153 0192 0021     		mov	r1, #0
 1154 0194 74E0     		b	.L107
 1155              	.L81:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1156              		.loc 1 585 0 is_stmt 1
 1157 0196 281C     		add	r0, r5, #0
 1158 0198 8349     		ldr	r1, .L377+24
 1159 019a FFF7FEFF 		bl	__aeabi_fcmpgt
 1160              	.LVL116:
 1161 019e 7F26     		mov	r6, #127
 1162 01a0 0028     		cmp	r0, #0
 1163 01a2 00D0     		beq	.LCB998
 1164 01a4 70E7     		b	.L79	@long jump
 1165              	.LCB998:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1166              		.loc 1 585 0 is_stmt 0
 1167 01a6 281C     		add	r0, r5, #0
 1168 01a8 7D49     		ldr	r1, .L377+16
 1169 01aa FFF7FEFF 		bl	__aeabi_fcmpge
 1170              	.LVL117:
 1171 01ae 0028     		cmp	r0, #0
 1172 01b0 06D0     		beq	.L87
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1173              		.loc 1 585 0
 1174 01b2 281C     		add	r0, r5, #0
 1175 01b4 7B49     		ldr	r1, .L377+20
 1176 01b6 FFF7FEFF 		bl	__aeabi_fcmple
 1177              	.LVL118:
 1178 01ba 0028     		cmp	r0, #0
 1179 01bc 00D0     		beq	.LCB1010
 1180 01be 63E7     		b	.L79	@long jump
 1181              	.LCB1010:
 1182              	.L87:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1183              		.loc 1 585 0
 1184 01c0 0026     		mov	r6, #0
 1185 01c2 61E7     		b	.L79
 1186              	.L95:
 1187              		.loc 1 587 0 is_stmt 1
 1188 01c4 0020     		mov	r0, #0
 1189 01c6 8227     		mov	r7, #130
 1190 01c8 FFF7FEFF 		bl	getSpeed
 1191              	.LVL119:
 1192 01cc F905     		lsl	r1, r7, #23
 1193 01ce FFF7FEFF 		bl	__aeabi_fmul
 1194              	.LVL120:
 1195 01d2 7449     		ldr	r1, .L377+20
 1196 01d4 FFF7FEFF 		bl	__aeabi_fcmple
 1197              	.LVL121:
 1198 01d8 0028     		cmp	r0, #0
 1199 01da 00D1     		bne	.LCB1028
 1200 01dc 7EE7     		b	.L98	@long jump
 1201              	.LCB1028:
 1202              	.L92:
 1203              		.loc 1 587 0 is_stmt 0
 1204 01de 0020     		mov	r0, #0
 1205 01e0 8225     		mov	r5, #130
 1206 01e2 FFF7FEFF 		bl	getSpeed
 1207              	.LVL122:
 1208 01e6 E905     		lsl	r1, r5, #23
 1209 01e8 FFF7FEFF 		bl	__aeabi_fmul
 1210              	.LVL123:
 1211 01ec 6E49     		ldr	r1, .L377+24
 1212 01ee FFF7FEFF 		bl	__aeabi_fcmpgt
 1213              	.LVL124:
 1214 01f2 0028     		cmp	r0, #0
 1215 01f4 01D1     		bne	.LCB1041
 1216 01f6 00F04AFC 		bl	.L369	@far jump
 1217              	.LCB1041:
 1218              	.L96:
 1219              		.loc 1 587 0
 1220 01fa 0020     		mov	r0, #0
 1221 01fc FFF7FEFF 		bl	getSpeed
 1222              	.LVL125:
 1223 0200 8221     		mov	r1, #130
 1224 0202 C905     		lsl	r1, r1, #23
 1225 0204 FFF7FEFF 		bl	__aeabi_fmul
 1226              	.LVL126:
 1227 0208 6449     		ldr	r1, .L377+12
 1228 020a FFF7FEFF 		bl	__aeabi_fcmple
 1229              	.LVL127:
 1230 020e 0028     		cmp	r0, #0
 1231 0210 27D0     		beq	.L103
 1232              		.loc 1 587 0
 1233 0212 0020     		mov	r0, #0
 1234 0214 8227     		mov	r7, #130
 1235 0216 FFF7FEFF 		bl	getSpeed
 1236              	.LVL128:
 1237 021a F905     		lsl	r1, r7, #23
 1238 021c FFF7FEFF 		bl	__aeabi_fmul
 1239              	.LVL129:
 1240 0220 0021     		mov	r1, #0
 1241 0222 FFF7FEFF 		bl	__aeabi_fcmpge
 1242              	.LVL130:
 1243 0226 0028     		cmp	r0, #0
 1244 0228 1BD0     		beq	.L103
 1245              		.loc 1 587 0
 1246 022a 0020     		mov	r0, #0
 1247 022c 8225     		mov	r5, #130
 1248 022e FFF7FEFF 		bl	getSpeed
 1249              	.LVL131:
 1250 0232 E905     		lsl	r1, r5, #23
 1251 0234 FFF7FEFF 		bl	__aeabi_fmul
 1252              	.LVL132:
 1253 0238 5949     		ldr	r1, .L377+16
 1254 023a FFF7FEFF 		bl	__aeabi_fcmpge
 1255              	.LVL133:
 1256 023e 0028     		cmp	r0, #0
 1257 0240 01D1     		bne	.LCB1078
 1258 0242 00F0A5FC 		bl	.L118	@far jump
 1259              	.LCB1078:
 1260              		.loc 1 587 0
 1261 0246 0020     		mov	r0, #0
 1262 0248 8226     		mov	r6, #130
 1263 024a FFF7FEFF 		bl	getSpeed
 1264              	.LVL134:
 1265 024e F105     		lsl	r1, r6, #23
 1266 0250 FFF7FEFF 		bl	__aeabi_fmul
 1267              	.LVL135:
 1268 0254 5349     		ldr	r1, .L377+20
 1269 0256 FFF7FEFF 		bl	__aeabi_fcmple
 1270              	.LVL136:
 1271 025a 0028     		cmp	r0, #0
 1272 025c 01D1     		bne	.LCB1090
 1273 025e 00F097FC 		bl	.L118	@far jump
 1274              	.LCB1090:
 1275              	.L103:
 1276              		.loc 1 587 0
 1277 0262 0020     		mov	r0, #0
 1278 0264 FFF7FEFF 		bl	getSpeed
 1279              	.LVL137:
 1280 0268 8222     		mov	r2, #130
 1281 026a D105     		lsl	r1, r2, #23
 1282 026c FFF7FEFF 		bl	__aeabi_fmul
 1283              	.LVL138:
 1284 0270 4D49     		ldr	r1, .L377+24
 1285 0272 FFF7FEFF 		bl	__aeabi_fcmpgt
 1286              	.LVL139:
 1287 0276 0028     		cmp	r0, #0
 1288 0278 01D1     		bne	.LCB1103
 1289 027a 00F01AFC 		bl	.L346	@far jump
 1290              	.LCB1103:
 1291              	.L113:
 1292 027e 7F21     		mov	r1, #127
 1293              	.L107:
 1294              		.loc 1 587 0
 1295 0280 4348     		ldr	r0, .L377
 1296 0282 FFF7FEFF 		bl	uart_putchar
 1297              	.LVL140:
 588:../Sources/main.c **** 	// 4 - Speed of the left wheel
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1298              		.loc 1 589 0 is_stmt 1
 1299 0286 8225     		mov	r5, #130
 1300 0288 0120     		mov	r0, #1
 1301 028a FFF7FEFF 		bl	getSpeed
 1302              	.LVL141:
 1303 028e E905     		lsl	r1, r5, #23
 1304 0290 FFF7FEFF 		bl	__aeabi_fmul
 1305              	.LVL142:
 1306 0294 4149     		ldr	r1, .L377+12
 1307 0296 FFF7FEFF 		bl	__aeabi_fcmple
 1308              	.LVL143:
 1309 029a 0028     		cmp	r0, #0
 1310 029c 00D1     		bne	.LCB1122
 1311 029e B2E0     		b	.L124	@long jump
 1312              	.LCB1122:
 1313              		.loc 1 589 0 is_stmt 0
 1314 02a0 0120     		mov	r0, #1
 1315 02a2 8226     		mov	r6, #130
 1316 02a4 FFF7FEFF 		bl	getSpeed
 1317              	.LVL144:
 1318 02a8 F105     		lsl	r1, r6, #23
 1319 02aa FFF7FEFF 		bl	__aeabi_fmul
 1320              	.LVL145:
 1321 02ae 0021     		mov	r1, #0
 1322 02b0 FFF7FEFF 		bl	__aeabi_fcmpge
 1323              	.LVL146:
 1324 02b4 0028     		cmp	r0, #0
 1325 02b6 00D1     		bne	.LCB1134
 1326 02b8 A5E0     		b	.L124	@long jump
 1327              	.LCB1134:
 1328              		.loc 1 589 0
 1329 02ba 0120     		mov	r0, #1
 1330 02bc FFF7FEFF 		bl	getSpeed
 1331              	.LVL147:
 1332 02c0 8222     		mov	r2, #130
 1333 02c2 D105     		lsl	r1, r2, #23
 1334 02c4 FFF7FEFF 		bl	__aeabi_fmul
 1335              	.LVL148:
 1336 02c8 3549     		ldr	r1, .L377+16
 1337 02ca FFF7FEFF 		bl	__aeabi_fcmpge
 1338              	.LVL149:
 1339 02ce 0028     		cmp	r0, #0
 1340 02d0 00D0     		beq	.LCB1146
 1341 02d2 8BE0     		b	.L127	@long jump
 1342              	.LCB1146:
 1343              	.L130:
 1344              		.loc 1 589 0
 1345 02d4 0120     		mov	r0, #1
 1346 02d6 8225     		mov	r5, #130
 1347 02d8 FFF7FEFF 		bl	getSpeed
 1348              	.LVL150:
 1349 02dc E905     		lsl	r1, r5, #23
 1350 02de FFF7FEFF 		bl	__aeabi_fmul
 1351              	.LVL151:
 1352 02e2 0021     		mov	r1, #0
 1353 02e4 FFF7FEFF 		bl	__aeabi_fcmpeq
 1354              	.LVL152:
 1355 02e8 0028     		cmp	r0, #0
 1356 02ea 00D1     		bne	.LCB1159
 1357 02ec 98E0     		b	.L128	@long jump
 1358              	.LCB1159:
 1359              		.loc 1 589 0
 1360 02ee 0120     		mov	r0, #1
 1361 02f0 8226     		mov	r6, #130
 1362 02f2 FFF7FEFF 		bl	getSpeed
 1363              	.LVL153:
 1364 02f6 F105     		lsl	r1, r6, #23
 1365 02f8 FFF7FEFF 		bl	__aeabi_fmul
 1366              	.LVL154:
 1367 02fc 2749     		ldr	r1, .L377+12
 1368 02fe FFF7FEFF 		bl	__aeabi_fcmple
 1369              	.LVL155:
 1370 0302 0028     		cmp	r0, #0
 1371 0304 27D0     		beq	.L146
 1372              		.loc 1 589 0
 1373 0306 0120     		mov	r0, #1
 1374 0308 FFF7FEFF 		bl	getSpeed
 1375              	.LVL156:
 1376 030c 8222     		mov	r2, #130
 1377 030e D105     		lsl	r1, r2, #23
 1378 0310 FFF7FEFF 		bl	__aeabi_fmul
 1379              	.LVL157:
 1380 0314 0021     		mov	r1, #0
 1381 0316 FFF7FEFF 		bl	__aeabi_fcmpge
 1382              	.LVL158:
 1383 031a 0028     		cmp	r0, #0
 1384 031c 1BD0     		beq	.L146
 1385              		.loc 1 589 0
 1386 031e 0120     		mov	r0, #1
 1387 0320 FFF7FEFF 		bl	getSpeed
 1388              	.LVL159:
 1389 0324 8223     		mov	r3, #130
 1390 0326 D905     		lsl	r1, r3, #23
 1391 0328 FFF7FEFF 		bl	__aeabi_fmul
 1392              	.LVL160:
 1393 032c 1C49     		ldr	r1, .L377+16
 1394 032e FFF7FEFF 		bl	__aeabi_fcmpge
 1395              	.LVL161:
 1396 0332 0028     		cmp	r0, #0
 1397 0334 01D1     		bne	.LCB1195
 1398 0336 00F04BFC 		bl	.L150	@far jump
 1399              	.LCB1195:
 1400              		.loc 1 589 0
 1401 033a 0120     		mov	r0, #1
 1402 033c FFF7FEFF 		bl	getSpeed
 1403              	.LVL162:
 1404 0340 8221     		mov	r1, #130
 1405 0342 C905     		lsl	r1, r1, #23
 1406 0344 FFF7FEFF 		bl	__aeabi_fmul
 1407              	.LVL163:
 1408 0348 1649     		ldr	r1, .L377+20
 1409 034a FFF7FEFF 		bl	__aeabi_fcmple
 1410              	.LVL164:
 1411 034e 0028     		cmp	r0, #0
 1412 0350 01D1     		bne	.LCB1207
 1413 0352 00F03DFC 		bl	.L150	@far jump
 1414              	.LCB1207:
 1415              	.L146:
 1416              		.loc 1 589 0
 1417 0356 0120     		mov	r0, #1
 1418 0358 8227     		mov	r7, #130
 1419 035a FFF7FEFF 		bl	getSpeed
 1420              	.LVL165:
 1421 035e F905     		lsl	r1, r7, #23
 1422 0360 FFF7FEFF 		bl	__aeabi_fmul
 1423              	.LVL166:
 1424 0364 1049     		ldr	r1, .L377+24
 1425 0366 FFF7FEFF 		bl	__aeabi_fcmpgt
 1426              	.LVL167:
 1427 036a 0028     		cmp	r0, #0
 1428 036c 00D0     		beq	.LCB1220
 1429 036e 96E0     		b	.L145	@long jump
 1430              	.LCB1220:
 1431              		.loc 1 589 0
 1432 0370 0120     		mov	r0, #1
 1433 0372 8225     		mov	r5, #130
 1434 0374 FFF7FEFF 		bl	getSpeed
 1435              	.LVL168:
 1436 0378 E905     		lsl	r1, r5, #23
 1437 037a FFF7FEFF 		bl	__aeabi_fmul
 1438              	.LVL169:
 1439 037e 0849     		ldr	r1, .L377+16
 1440 0380 FFF7FEFF 		bl	__aeabi_fcmpge
 1441              	.LVL170:
 1442 0384 0028     		cmp	r0, #0
 1443 0386 01D0     		beq	.LCB1232
 1444 0388 00F052FC 		bl	.L370	@far jump
 1445              	.LCB1232:
 1446              	.L154:
 1447              		.loc 1 589 0
 1448 038c 0021     		mov	r1, #0
 1449 038e 87E0     		b	.L139
 1450              	.L378:
 1451              		.align	2
 1452              	.L377:
 1453 0390 00C00640 		.word	1074184192
 1454 0394 00000000 		.word	.LANCHOR3
 1455 0398 00000000 		.word	.LANCHOR4
 1456 039c 00807E43 		.word	1132363776
 1457 03a0 0000FF42 		.word	1124007936
 1458 03a4 00800043 		.word	1124106240
 1459 03a8 00007F43 		.word	1132396544
 1460              	.L343:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1461              		.loc 1 585 0 is_stmt 1
 1462 03ac 281C     		add	r0, r5, #0
 1463 03ae 0021     		mov	r1, #0
 1464 03b0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1465              	.LVL171:
 1466 03b4 0028     		cmp	r0, #0
 1467 03b6 14D1     		bne	.L88
 1468              	.L75:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1469              		.loc 1 585 0 is_stmt 0
 1470 03b8 281C     		add	r0, r5, #0
 1471 03ba 0021     		mov	r1, #0
 1472 03bc FFF7FEFF 		bl	__aeabi_fcmpge
 1473              	.LVL172:
 1474 03c0 0028     		cmp	r0, #0
 1475 03c2 00D1     		bne	.LCB1263
 1476 03c4 E7E6     		b	.L81	@long jump
 1477              	.LCB1263:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1478              		.loc 1 585 0
 1479 03c6 281C     		add	r0, r5, #0
 1480 03c8 9149     		ldr	r1, .L379+8
 1481 03ca FFF7FEFF 		bl	__aeabi_fcmpge
 1482              	.LVL173:
 1483 03ce 0028     		cmp	r0, #0
 1484 03d0 07D0     		beq	.L88
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1485              		.loc 1 585 0
 1486 03d2 281C     		add	r0, r5, #0
 1487 03d4 8F49     		ldr	r1, .L379+12
 1488 03d6 FFF7FEFF 		bl	__aeabi_fcmple
 1489              	.LVL174:
 1490 03da 7F26     		mov	r6, #127
 1491 03dc 0028     		cmp	r0, #0
 1492 03de 00D0     		beq	.LCB1276
 1493 03e0 52E6     		b	.L79	@long jump
 1494              	.LCB1276:
 1495              	.L88:
 585:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1496              		.loc 1 585 0
 1497 03e2 281C     		add	r0, r5, #0
 1498 03e4 FFF7FEFF 		bl	__aeabi_f2iz
 1499              	.LVL175:
 1500 03e8 C6B2     		uxtb	r6, r0
 1501 03ea 4DE6     		b	.L79
 1502              	.L127:
 1503              		.loc 1 589 0 is_stmt 1
 1504 03ec 0120     		mov	r0, #1
 1505 03ee FFF7FEFF 		bl	getSpeed
 1506              	.LVL176:
 1507 03f2 8223     		mov	r3, #130
 1508 03f4 D905     		lsl	r1, r3, #23
 1509 03f6 FFF7FEFF 		bl	__aeabi_fmul
 1510              	.LVL177:
 1511 03fa 8649     		ldr	r1, .L379+12
 1512 03fc FFF7FEFF 		bl	__aeabi_fcmple
 1513              	.LVL178:
 1514 0400 0028     		cmp	r0, #0
 1515 0402 00D1     		bne	.LCB1298
 1516 0404 66E7     		b	.L130	@long jump
 1517              	.LCB1298:
 1518              	.L124:
 1519              		.loc 1 589 0 is_stmt 0
 1520 0406 0120     		mov	r0, #1
 1521 0408 FFF7FEFF 		bl	getSpeed
 1522              	.LVL179:
 1523 040c 8221     		mov	r1, #130
 1524 040e C905     		lsl	r1, r1, #23
 1525 0410 FFF7FEFF 		bl	__aeabi_fmul
 1526              	.LVL180:
 1527 0414 8049     		ldr	r1, .L379+16
 1528 0416 FFF7FEFF 		bl	__aeabi_fcmpgt
 1529              	.LVL181:
 1530 041a 0028     		cmp	r0, #0
 1531 041c 00D1     		bne	.LCB1311
 1532 041e 25E3     		b	.L371	@long jump
 1533              	.LCB1311:
 1534              	.L128:
 1535              		.loc 1 589 0
 1536 0420 0120     		mov	r0, #1
 1537 0422 FFF7FEFF 		bl	getSpeed
 1538              	.LVL182:
 1539 0426 8222     		mov	r2, #130
 1540 0428 D105     		lsl	r1, r2, #23
 1541 042a FFF7FEFF 		bl	__aeabi_fmul
 1542              	.LVL183:
 1543 042e 7B49     		ldr	r1, .L379+20
 1544 0430 FFF7FEFF 		bl	__aeabi_fcmple
 1545              	.LVL184:
 1546 0434 0028     		cmp	r0, #0
 1547 0436 25D0     		beq	.L135
 1548              		.loc 1 589 0
 1549 0438 0120     		mov	r0, #1
 1550 043a FFF7FEFF 		bl	getSpeed
 1551              	.LVL185:
 1552 043e 8223     		mov	r3, #130
 1553 0440 D905     		lsl	r1, r3, #23
 1554 0442 FFF7FEFF 		bl	__aeabi_fmul
 1555              	.LVL186:
 1556 0446 0021     		mov	r1, #0
 1557 0448 FFF7FEFF 		bl	__aeabi_fcmpge
 1558              	.LVL187:
 1559 044c 0028     		cmp	r0, #0
 1560 044e 19D0     		beq	.L135
 1561              		.loc 1 589 0
 1562 0450 0120     		mov	r0, #1
 1563 0452 FFF7FEFF 		bl	getSpeed
 1564              	.LVL188:
 1565 0456 8221     		mov	r1, #130
 1566 0458 C905     		lsl	r1, r1, #23
 1567 045a FFF7FEFF 		bl	__aeabi_fmul
 1568              	.LVL189:
 1569 045e 6C49     		ldr	r1, .L379+8
 1570 0460 FFF7FEFF 		bl	__aeabi_fcmpge
 1571              	.LVL190:
 1572 0464 0028     		cmp	r0, #0
 1573 0466 00D1     		bne	.LCB1348
 1574 0468 B2E3     		b	.L150	@long jump
 1575              	.LCB1348:
 1576              		.loc 1 589 0
 1577 046a 0120     		mov	r0, #1
 1578 046c 8227     		mov	r7, #130
 1579 046e FFF7FEFF 		bl	getSpeed
 1580              	.LVL191:
 1581 0472 F905     		lsl	r1, r7, #23
 1582 0474 FFF7FEFF 		bl	__aeabi_fmul
 1583              	.LVL192:
 1584 0478 6649     		ldr	r1, .L379+12
 1585 047a FFF7FEFF 		bl	__aeabi_fcmple
 1586              	.LVL193:
 1587 047e 0028     		cmp	r0, #0
 1588 0480 00D1     		bne	.LCB1360
 1589 0482 A5E3     		b	.L150	@long jump
 1590              	.LCB1360:
 1591              	.L135:
 1592              		.loc 1 589 0
 1593 0484 0120     		mov	r0, #1
 1594 0486 8225     		mov	r5, #130
 1595 0488 FFF7FEFF 		bl	getSpeed
 1596              	.LVL194:
 1597 048c E905     		lsl	r1, r5, #23
 1598 048e FFF7FEFF 		bl	__aeabi_fmul
 1599              	.LVL195:
 1600 0492 6149     		ldr	r1, .L379+16
 1601 0494 FFF7FEFF 		bl	__aeabi_fcmpgt
 1602              	.LVL196:
 1603 0498 0028     		cmp	r0, #0
 1604 049a 00D1     		bne	.LCB1373
 1605 049c 28E3     		b	.L348	@long jump
 1606              	.LCB1373:
 1607              	.L145:
 1608 049e 7F21     		mov	r1, #127
 1609              	.L139:
 1610              		.loc 1 589 0
 1611 04a0 5F48     		ldr	r0, .L379+24
 1612 04a2 FFF7FEFF 		bl	uart_putchar
 1613              	.LVL197:
 590:../Sources/main.c **** 	// 5 - PWM output to right motor
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 1614              		.loc 1 591 0 is_stmt 1
 1615 04a6 0020     		mov	r0, #0
 1616 04a8 FFF7FEFF 		bl	TFC_GetMotorPWM
 1617              	.LVL198:
 1618 04ac 5D49     		ldr	r1, .L379+28
 1619 04ae FFF7FEFF 		bl	__aeabi_fmul
 1620              	.LVL199:
 1621 04b2 0021     		mov	r1, #0
 1622 04b4 FFF7FEFF 		bl	__aeabi_fcmpge
 1623              	.LVL200:
 1624 04b8 0028     		cmp	r0, #0
 1625 04ba 00D1     		bne	.LCB1391
 1626 04bc A7E2     		b	.L349	@long jump
 1627              	.LCB1391:
 1628              		.loc 1 591 0 is_stmt 0
 1629 04be 0020     		mov	r0, #0
 1630 04c0 FFF7FEFF 		bl	TFC_GetMotorPWM
 1631              	.LVL201:
 1632 04c4 5749     		ldr	r1, .L379+28
 1633 04c6 FFF7FEFF 		bl	__aeabi_fmul
 1634              	.LVL202:
 1635 04ca FFF7FEFF 		bl	__aeabi_f2d
 1636              	.LVL203:
 1637 04ce 4F4B     		ldr	r3, .L379+4
 1638 04d0 4D4A     		ldr	r2, .L379
 1639 04d2 FFF7FEFF 		bl	__aeabi_dadd
 1640              	.LVL204:
 1641 04d6 FFF7FEFF 		bl	__aeabi_d2iz
 1642              	.LVL205:
 1643 04da C1B2     		uxtb	r1, r0
 1644              	.L158:
 1645              		.loc 1 591 0
 1646 04dc 5048     		ldr	r0, .L379+24
 1647 04de FFF7FEFF 		bl	uart_putchar
 1648              	.LVL206:
 592:../Sources/main.c **** 	// 6 - PWM output to left motor
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 1649              		.loc 1 593 0 is_stmt 1
 1650 04e2 0120     		mov	r0, #1
 1651 04e4 FFF7FEFF 		bl	TFC_GetMotorPWM
 1652              	.LVL207:
 1653 04e8 4E49     		ldr	r1, .L379+28
 1654 04ea FFF7FEFF 		bl	__aeabi_fmul
 1655              	.LVL208:
 1656 04ee 0021     		mov	r1, #0
 1657 04f0 FFF7FEFF 		bl	__aeabi_fcmpge
 1658              	.LVL209:
 1659 04f4 0028     		cmp	r0, #0
 1660 04f6 00D1     		bne	.LCB1422
 1661 04f8 79E2     		b	.L350	@long jump
 1662              	.LCB1422:
 1663              		.loc 1 593 0 is_stmt 0
 1664 04fa 0120     		mov	r0, #1
 1665 04fc FFF7FEFF 		bl	TFC_GetMotorPWM
 1666              	.LVL210:
 1667 0500 4849     		ldr	r1, .L379+28
 1668 0502 FFF7FEFF 		bl	__aeabi_fmul
 1669              	.LVL211:
 1670 0506 FFF7FEFF 		bl	__aeabi_f2d
 1671              	.LVL212:
 1672 050a 404B     		ldr	r3, .L379+4
 1673 050c 3E4A     		ldr	r2, .L379
 1674 050e FFF7FEFF 		bl	__aeabi_dadd
 1675              	.LVL213:
 1676 0512 FFF7FEFF 		bl	__aeabi_d2iz
 1677              	.LVL214:
 1678 0516 C1B2     		uxtb	r1, r0
 1679              	.L161:
 1680              		.loc 1 593 0
 1681 0518 4148     		ldr	r0, .L379+24
 1682 051a FFF7FEFF 		bl	uart_putchar
 1683              	.LVL215:
 594:../Sources/main.c **** 	// 7 - Current of the right motor
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 1684              		.loc 1 595 0 is_stmt 1
 1685 051e 0020     		mov	r0, #0
 1686 0520 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1687              	.LVL216:
 1688 0524 4049     		ldr	r1, .L379+32
 1689 0526 FFF7FEFF 		bl	__aeabi_fmul
 1690              	.LVL217:
 1691 052a 3C49     		ldr	r1, .L379+20
 1692 052c FFF7FEFF 		bl	__aeabi_fcmple
 1693              	.LVL218:
 1694 0530 0028     		cmp	r0, #0
 1695 0532 00D1     		bne	.LCB1453
 1696 0534 85E0     		b	.L162	@long jump
 1697              	.LCB1453:
 1698              		.loc 1 595 0 is_stmt 0
 1699 0536 0020     		mov	r0, #0
 1700 0538 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1701              	.LVL219:
 1702 053c 3A49     		ldr	r1, .L379+32
 1703 053e FFF7FEFF 		bl	__aeabi_fmul
 1704              	.LVL220:
 1705 0542 0021     		mov	r1, #0
 1706 0544 FFF7FEFF 		bl	__aeabi_fcmpge
 1707              	.LVL221:
 1708 0548 0028     		cmp	r0, #0
 1709 054a 7AD0     		beq	.L162
 1710              		.loc 1 595 0
 1711 054c 0020     		mov	r0, #0
 1712 054e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1713              	.LVL222:
 1714 0552 3549     		ldr	r1, .L379+32
 1715 0554 FFF7FEFF 		bl	__aeabi_fmul
 1716              	.LVL223:
 1717 0558 2D49     		ldr	r1, .L379+8
 1718 055a FFF7FEFF 		bl	__aeabi_fcmpge
 1719              	.LVL224:
 1720 055e 0028     		cmp	r0, #0
 1721 0560 64D1     		bne	.L165
 1722              	.L168:
 1723              		.loc 1 595 0
 1724 0562 0020     		mov	r0, #0
 1725 0564 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1726              	.LVL225:
 1727 0568 2F49     		ldr	r1, .L379+32
 1728 056a FFF7FEFF 		bl	__aeabi_fmul
 1729              	.LVL226:
 1730 056e 0021     		mov	r1, #0
 1731 0570 FFF7FEFF 		bl	__aeabi_fcmpeq
 1732              	.LVL227:
 1733 0574 0028     		cmp	r0, #0
 1734 0576 70D0     		beq	.L166
 1735              		.loc 1 595 0
 1736 0578 0020     		mov	r0, #0
 1737 057a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1738              	.LVL228:
 1739 057e 2A49     		ldr	r1, .L379+32
 1740 0580 FFF7FEFF 		bl	__aeabi_fmul
 1741              	.LVL229:
 1742 0584 2549     		ldr	r1, .L379+20
 1743 0586 FFF7FEFF 		bl	__aeabi_fcmple
 1744              	.LVL230:
 1745 058a 0028     		cmp	r0, #0
 1746 058c 22D0     		beq	.L184
 1747              		.loc 1 595 0
 1748 058e 0020     		mov	r0, #0
 1749 0590 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1750              	.LVL231:
 1751 0594 2449     		ldr	r1, .L379+32
 1752 0596 FFF7FEFF 		bl	__aeabi_fmul
 1753              	.LVL232:
 1754 059a 0021     		mov	r1, #0
 1755 059c FFF7FEFF 		bl	__aeabi_fcmpge
 1756              	.LVL233:
 1757 05a0 0028     		cmp	r0, #0
 1758 05a2 17D0     		beq	.L184
 1759              		.loc 1 595 0
 1760 05a4 0020     		mov	r0, #0
 1761 05a6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1762              	.LVL234:
 1763 05aa 1F49     		ldr	r1, .L379+32
 1764 05ac FFF7FEFF 		bl	__aeabi_fmul
 1765              	.LVL235:
 1766 05b0 1749     		ldr	r1, .L379+8
 1767 05b2 FFF7FEFF 		bl	__aeabi_fcmpge
 1768              	.LVL236:
 1769 05b6 0028     		cmp	r0, #0
 1770 05b8 00D1     		bne	.LCB1520
 1771 05ba FFE2     		b	.L188	@long jump
 1772              	.LCB1520:
 1773              		.loc 1 595 0
 1774 05bc 0020     		mov	r0, #0
 1775 05be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1776              	.LVL237:
 1777 05c2 1949     		ldr	r1, .L379+32
 1778 05c4 FFF7FEFF 		bl	__aeabi_fmul
 1779              	.LVL238:
 1780 05c8 1249     		ldr	r1, .L379+12
 1781 05ca FFF7FEFF 		bl	__aeabi_fcmple
 1782              	.LVL239:
 1783 05ce 0028     		cmp	r0, #0
 1784 05d0 00D1     		bne	.LCB1531
 1785 05d2 F3E2     		b	.L188	@long jump
 1786              	.LCB1531:
 1787              	.L184:
 1788              		.loc 1 595 0
 1789 05d4 0020     		mov	r0, #0
 1790 05d6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1791              	.LVL240:
 1792 05da 1349     		ldr	r1, .L379+32
 1793 05dc FFF7FEFF 		bl	__aeabi_fmul
 1794              	.LVL241:
 1795 05e0 0D49     		ldr	r1, .L379+16
 1796 05e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 1797              	.LVL242:
 1798 05e6 0028     		cmp	r0, #0
 1799 05e8 71D1     		bne	.L183
 1800              		.loc 1 595 0
 1801 05ea FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1802              	.LVL243:
 1803 05ee 0E49     		ldr	r1, .L379+32
 1804 05f0 FFF7FEFF 		bl	__aeabi_fmul
 1805              	.LVL244:
 1806 05f4 0649     		ldr	r1, .L379+8
 1807 05f6 FFF7FEFF 		bl	__aeabi_fcmpge
 1808              	.LVL245:
 1809 05fa 0028     		cmp	r0, #0
 1810 05fc 00D0     		beq	.LCB1553
 1811 05fe 27E3     		b	.L372	@long jump
 1812              	.LCB1553:
 1813              	.L192:
 1814              		.loc 1 595 0
 1815 0600 0021     		mov	r1, #0
 1816 0602 65E0     		b	.L177
 1817              	.L380:
 1818 0604 C046C046 		.align	3
 1819              	.L379:
 1820 0608 00000000 		.word	0
 1821 060c 0000E03F 		.word	1071644672
 1822 0610 0000FF42 		.word	1124007936
 1823 0614 00800043 		.word	1124106240
 1824 0618 00007F43 		.word	1132396544
 1825 061c 00807E43 		.word	1132363776
 1826 0620 00C00640 		.word	1074184192
 1827 0624 0000FC42 		.word	1123811328
 1828 0628 00007042 		.word	1114636288
 1829              	.L165:
 1830              		.loc 1 595 0
 1831 062c 0020     		mov	r0, #0
 1832 062e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1833              	.LVL246:
 1834 0632 CF49     		ldr	r1, .L381+8
 1835 0634 FFF7FEFF 		bl	__aeabi_fmul
 1836              	.LVL247:
 1837 0638 CE49     		ldr	r1, .L381+12
 1838 063a FFF7FEFF 		bl	__aeabi_fcmple
 1839              	.LVL248:
 1840 063e 0028     		cmp	r0, #0
 1841 0640 8FD0     		beq	.L168
 1842              	.L162:
 1843              		.loc 1 595 0
 1844 0642 0020     		mov	r0, #0
 1845 0644 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1846              	.LVL249:
 1847 0648 C949     		ldr	r1, .L381+8
 1848 064a FFF7FEFF 		bl	__aeabi_fmul
 1849              	.LVL250:
 1850 064e CA49     		ldr	r1, .L381+16
 1851 0650 FFF7FEFF 		bl	__aeabi_fcmpgt
 1852              	.LVL251:
 1853 0654 0028     		cmp	r0, #0
 1854 0656 00D1     		bne	.LCB1595
 1855 0658 F9E1     		b	.L373	@long jump
 1856              	.LCB1595:
 1857              	.L166:
 1858              		.loc 1 595 0
 1859 065a 0020     		mov	r0, #0
 1860 065c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1861              	.LVL252:
 1862 0660 C349     		ldr	r1, .L381+8
 1863 0662 FFF7FEFF 		bl	__aeabi_fmul
 1864              	.LVL253:
 1865 0666 C549     		ldr	r1, .L381+20
 1866 0668 FFF7FEFF 		bl	__aeabi_fcmple
 1867              	.LVL254:
 1868 066c 0028     		cmp	r0, #0
 1869 066e 22D0     		beq	.L173
 1870              		.loc 1 595 0
 1871 0670 0020     		mov	r0, #0
 1872 0672 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1873              	.LVL255:
 1874 0676 BE49     		ldr	r1, .L381+8
 1875 0678 FFF7FEFF 		bl	__aeabi_fmul
 1876              	.LVL256:
 1877 067c 0021     		mov	r1, #0
 1878 067e FFF7FEFF 		bl	__aeabi_fcmpge
 1879              	.LVL257:
 1880 0682 0028     		cmp	r0, #0
 1881 0684 17D0     		beq	.L173
 1882              		.loc 1 595 0
 1883 0686 0020     		mov	r0, #0
 1884 0688 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1885              	.LVL258:
 1886 068c B849     		ldr	r1, .L381+8
 1887 068e FFF7FEFF 		bl	__aeabi_fmul
 1888              	.LVL259:
 1889 0692 BB49     		ldr	r1, .L381+24
 1890 0694 FFF7FEFF 		bl	__aeabi_fcmpge
 1891              	.LVL260:
 1892 0698 0028     		cmp	r0, #0
 1893 069a 00D1     		bne	.LCB1629
 1894 069c 8EE2     		b	.L188	@long jump
 1895              	.LCB1629:
 1896              		.loc 1 595 0
 1897 069e 0020     		mov	r0, #0
 1898 06a0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1899              	.LVL261:
 1900 06a4 B249     		ldr	r1, .L381+8
 1901 06a6 FFF7FEFF 		bl	__aeabi_fmul
 1902              	.LVL262:
 1903 06aa B249     		ldr	r1, .L381+12
 1904 06ac FFF7FEFF 		bl	__aeabi_fcmple
 1905              	.LVL263:
 1906 06b0 0028     		cmp	r0, #0
 1907 06b2 00D1     		bne	.LCB1640
 1908 06b4 82E2     		b	.L188	@long jump
 1909              	.LCB1640:
 1910              	.L173:
 1911              		.loc 1 595 0
 1912 06b6 0020     		mov	r0, #0
 1913 06b8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1914              	.LVL264:
 1915 06bc AC49     		ldr	r1, .L381+8
 1916 06be FFF7FEFF 		bl	__aeabi_fmul
 1917              	.LVL265:
 1918 06c2 AD49     		ldr	r1, .L381+16
 1919 06c4 FFF7FEFF 		bl	__aeabi_fcmpgt
 1920              	.LVL266:
 1921 06c8 0028     		cmp	r0, #0
 1922 06ca 00D1     		bne	.LCB1652
 1923 06cc 46E2     		b	.L352	@long jump
 1924              	.LCB1652:
 1925              	.L183:
 1926 06ce 7F21     		mov	r1, #127
 1927              	.L177:
 1928              		.loc 1 595 0
 1929 06d0 AC48     		ldr	r0, .L381+28
 1930 06d2 FFF7FEFF 		bl	uart_putchar
 1931              	.LVL267:
 596:../Sources/main.c **** 	// 8 - Current of the left motor
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 1932              		.loc 1 597 0 is_stmt 1
 1933 06d6 0120     		mov	r0, #1
 1934 06d8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1935              	.LVL268:
 1936 06dc A449     		ldr	r1, .L381+8
 1937 06de FFF7FEFF 		bl	__aeabi_fmul
 1938              	.LVL269:
 1939 06e2 A649     		ldr	r1, .L381+20
 1940 06e4 FFF7FEFF 		bl	__aeabi_fcmple
 1941              	.LVL270:
 1942 06e8 0028     		cmp	r0, #0
 1943 06ea 72D0     		beq	.L194
 1944              		.loc 1 597 0 is_stmt 0
 1945 06ec 0120     		mov	r0, #1
 1946 06ee FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1947              	.LVL271:
 1948 06f2 9F49     		ldr	r1, .L381+8
 1949 06f4 FFF7FEFF 		bl	__aeabi_fmul
 1950              	.LVL272:
 1951 06f8 0021     		mov	r1, #0
 1952 06fa FFF7FEFF 		bl	__aeabi_fcmpge
 1953              	.LVL273:
 1954 06fe 0028     		cmp	r0, #0
 1955 0700 67D0     		beq	.L194
 1956              		.loc 1 597 0
 1957 0702 0120     		mov	r0, #1
 1958 0704 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1959              	.LVL274:
 1960 0708 9949     		ldr	r1, .L381+8
 1961 070a FFF7FEFF 		bl	__aeabi_fmul
 1962              	.LVL275:
 1963 070e 9C49     		ldr	r1, .L381+24
 1964 0710 FFF7FEFF 		bl	__aeabi_fcmpge
 1965              	.LVL276:
 1966 0714 0028     		cmp	r0, #0
 1967 0716 51D1     		bne	.L197
 1968              	.L200:
 1969              		.loc 1 597 0
 1970 0718 0120     		mov	r0, #1
 1971 071a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1972              	.LVL277:
 1973 071e 9449     		ldr	r1, .L381+8
 1974 0720 FFF7FEFF 		bl	__aeabi_fmul
 1975              	.LVL278:
 1976 0724 0021     		mov	r1, #0
 1977 0726 FFF7FEFF 		bl	__aeabi_fcmpeq
 1978              	.LVL279:
 1979 072a 0028     		cmp	r0, #0
 1980 072c 5DD0     		beq	.L198
 1981              		.loc 1 597 0
 1982 072e 0120     		mov	r0, #1
 1983 0730 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1984              	.LVL280:
 1985 0734 8E49     		ldr	r1, .L381+8
 1986 0736 FFF7FEFF 		bl	__aeabi_fmul
 1987              	.LVL281:
 1988 073a 9049     		ldr	r1, .L381+20
 1989 073c FFF7FEFF 		bl	__aeabi_fcmple
 1990              	.LVL282:
 1991 0740 0028     		cmp	r0, #0
 1992 0742 22D0     		beq	.L216
 1993              		.loc 1 597 0
 1994 0744 0120     		mov	r0, #1
 1995 0746 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1996              	.LVL283:
 1997 074a 8949     		ldr	r1, .L381+8
 1998 074c FFF7FEFF 		bl	__aeabi_fmul
 1999              	.LVL284:
 2000 0750 0021     		mov	r1, #0
 2001 0752 FFF7FEFF 		bl	__aeabi_fcmpge
 2002              	.LVL285:
 2003 0756 0028     		cmp	r0, #0
 2004 0758 17D0     		beq	.L216
 2005              		.loc 1 597 0
 2006 075a 0120     		mov	r0, #1
 2007 075c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2008              	.LVL286:
 2009 0760 8349     		ldr	r1, .L381+8
 2010 0762 FFF7FEFF 		bl	__aeabi_fmul
 2011              	.LVL287:
 2012 0766 8649     		ldr	r1, .L381+24
 2013 0768 FFF7FEFF 		bl	__aeabi_fcmpge
 2014              	.LVL288:
 2015 076c 0028     		cmp	r0, #0
 2016 076e 00D1     		bne	.LCB1737
 2017 0770 1AE2     		b	.L220	@long jump
 2018              	.LCB1737:
 2019              		.loc 1 597 0
 2020 0772 0120     		mov	r0, #1
 2021 0774 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2022              	.LVL289:
 2023 0778 7D49     		ldr	r1, .L381+8
 2024 077a FFF7FEFF 		bl	__aeabi_fmul
 2025              	.LVL290:
 2026 077e 7D49     		ldr	r1, .L381+12
 2027 0780 FFF7FEFF 		bl	__aeabi_fcmple
 2028              	.LVL291:
 2029 0784 0028     		cmp	r0, #0
 2030 0786 00D1     		bne	.LCB1748
 2031 0788 0EE2     		b	.L220	@long jump
 2032              	.LCB1748:
 2033              	.L216:
 2034              		.loc 1 597 0
 2035 078a 0120     		mov	r0, #1
 2036 078c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2037              	.LVL292:
 2038 0790 7749     		ldr	r1, .L381+8
 2039 0792 FFF7FEFF 		bl	__aeabi_fmul
 2040              	.LVL293:
 2041 0796 7849     		ldr	r1, .L381+16
 2042 0798 FFF7FEFF 		bl	__aeabi_fcmpgt
 2043              	.LVL294:
 2044 079c 0028     		cmp	r0, #0
 2045 079e 5ED1     		bne	.L215
 2046              		.loc 1 597 0
 2047 07a0 0120     		mov	r0, #1
 2048 07a2 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2049              	.LVL295:
 2050 07a6 7249     		ldr	r1, .L381+8
 2051 07a8 FFF7FEFF 		bl	__aeabi_fmul
 2052              	.LVL296:
 2053 07ac 7449     		ldr	r1, .L381+24
 2054 07ae FFF7FEFF 		bl	__aeabi_fcmpge
 2055              	.LVL297:
 2056 07b2 0028     		cmp	r0, #0
 2057 07b4 00D0     		beq	.LCB1771
 2058 07b6 1AE2     		b	.L374	@long jump
 2059              	.LCB1771:
 2060              	.L224:
 2061              		.loc 1 597 0
 2062 07b8 0021     		mov	r1, #0
 2063 07ba 51E0     		b	.L209
 2064              	.L197:
 2065              		.loc 1 597 0
 2066 07bc 0120     		mov	r0, #1
 2067 07be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2068              	.LVL298:
 2069 07c2 6B49     		ldr	r1, .L381+8
 2070 07c4 FFF7FEFF 		bl	__aeabi_fmul
 2071              	.LVL299:
 2072 07c8 6A49     		ldr	r1, .L381+12
 2073 07ca FFF7FEFF 		bl	__aeabi_fcmple
 2074              	.LVL300:
 2075 07ce 0028     		cmp	r0, #0
 2076 07d0 A2D0     		beq	.L200
 2077              	.L194:
 2078              		.loc 1 597 0
 2079 07d2 0120     		mov	r0, #1
 2080 07d4 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2081              	.LVL301:
 2082 07d8 6549     		ldr	r1, .L381+8
 2083 07da FFF7FEFF 		bl	__aeabi_fmul
 2084              	.LVL302:
 2085 07de 6649     		ldr	r1, .L381+16
 2086 07e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 2087              	.LVL303:
 2088 07e4 0028     		cmp	r0, #0
 2089 07e6 00D1     		bne	.LCB1800
 2090 07e8 21E1     		b	.L375	@long jump
 2091              	.LCB1800:
 2092              	.L198:
 2093              		.loc 1 597 0
 2094 07ea 0120     		mov	r0, #1
 2095 07ec FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2096              	.LVL304:
 2097 07f0 5F49     		ldr	r1, .L381+8
 2098 07f2 FFF7FEFF 		bl	__aeabi_fmul
 2099              	.LVL305:
 2100 07f6 6149     		ldr	r1, .L381+20
 2101 07f8 FFF7FEFF 		bl	__aeabi_fcmple
 2102              	.LVL306:
 2103 07fc 0028     		cmp	r0, #0
 2104 07fe 22D0     		beq	.L205
 2105              		.loc 1 597 0
 2106 0800 0120     		mov	r0, #1
 2107 0802 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2108              	.LVL307:
 2109 0806 5A49     		ldr	r1, .L381+8
 2110 0808 FFF7FEFF 		bl	__aeabi_fmul
 2111              	.LVL308:
 2112 080c 0021     		mov	r1, #0
 2113 080e FFF7FEFF 		bl	__aeabi_fcmpge
 2114              	.LVL309:
 2115 0812 0028     		cmp	r0, #0
 2116 0814 17D0     		beq	.L205
 2117              		.loc 1 597 0
 2118 0816 0120     		mov	r0, #1
 2119 0818 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2120              	.LVL310:
 2121 081c 5449     		ldr	r1, .L381+8
 2122 081e FFF7FEFF 		bl	__aeabi_fmul
 2123              	.LVL311:
 2124 0822 5749     		ldr	r1, .L381+24
 2125 0824 FFF7FEFF 		bl	__aeabi_fcmpge
 2126              	.LVL312:
 2127 0828 0028     		cmp	r0, #0
 2128 082a 00D1     		bne	.LCB1834
 2129 082c BCE1     		b	.L220	@long jump
 2130              	.LCB1834:
 2131              		.loc 1 597 0
 2132 082e 0120     		mov	r0, #1
 2133 0830 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2134              	.LVL313:
 2135 0834 4E49     		ldr	r1, .L381+8
 2136 0836 FFF7FEFF 		bl	__aeabi_fmul
 2137              	.LVL314:
 2138 083a 4E49     		ldr	r1, .L381+12
 2139 083c FFF7FEFF 		bl	__aeabi_fcmple
 2140              	.LVL315:
 2141 0840 0028     		cmp	r0, #0
 2142 0842 00D1     		bne	.LCB1845
 2143 0844 B0E1     		b	.L220	@long jump
 2144              	.LCB1845:
 2145              	.L205:
 2146              		.loc 1 597 0
 2147 0846 0120     		mov	r0, #1
 2148 0848 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2149              	.LVL316:
 2150 084c 4849     		ldr	r1, .L381+8
 2151 084e FFF7FEFF 		bl	__aeabi_fmul
 2152              	.LVL317:
 2153 0852 4949     		ldr	r1, .L381+16
 2154 0854 FFF7FEFF 		bl	__aeabi_fcmpgt
 2155              	.LVL318:
 2156 0858 0028     		cmp	r0, #0
 2157 085a 00D1     		bne	.LCB1857
 2158 085c 64E1     		b	.L354	@long jump
 2159              	.LCB1857:
 2160              	.L215:
 2161 085e 7F21     		mov	r1, #127
 2162              	.L209:
 2163              		.loc 1 597 0
 2164 0860 4848     		ldr	r0, .L381+28
 2165 0862 FFF7FEFF 		bl	uart_putchar
 2166              	.LVL319:
 598:../Sources/main.c **** 	// 9 - Servo Value
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2167              		.loc 1 599 0 is_stmt 1
 2168 0866 4848     		ldr	r0, .L381+32
 2169 0868 4849     		ldr	r1, .L381+36
 2170 086a 0068     		ldr	r0, [r0]
 2171 086c FFF7FEFF 		bl	__aeabi_fmul
 2172              	.LVL320:
 2173 0870 0021     		mov	r1, #0
 2174 0872 071C     		add	r7, r0, #0
 2175 0874 FFF7FEFF 		bl	__aeabi_fcmpge
 2176              	.LVL321:
 2177 0878 0028     		cmp	r0, #0
 2178 087a 00D1     		bne	.LCB1875
 2179 087c ACE0     		b	.L355	@long jump
 2180              	.LCB1875:
 2181              		.loc 1 599 0 is_stmt 0
 2182 087e 381C     		add	r0, r7, #0
 2183 0880 FFF7FEFF 		bl	__aeabi_f2d
 2184              	.LVL322:
 2185 0884 394B     		ldr	r3, .L381+4
 2186 0886 384A     		ldr	r2, .L381
 2187 0888 FFF7FEFF 		bl	__aeabi_dadd
 2188              	.LVL323:
 2189 088c FFF7FEFF 		bl	__aeabi_d2iz
 2190              	.LVL324:
 2191 0890 C1B2     		uxtb	r1, r0
 2192              	.L228:
 2193              		.loc 1 599 0
 2194 0892 3C48     		ldr	r0, .L381+28
 2195 0894 FFF7FEFF 		bl	uart_putchar
 2196              	.LVL325:
 600:../Sources/main.c **** 	// 10 - Detected edge type - Left:100, Right:-100, Track: 0, None:50
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2197              		.loc 1 601 0 is_stmt 1
 2198 0898 6579     		ldrb	r5, [r4, #5]
 2199 089a 3221     		mov	r1, #50
 2200 089c 002D     		cmp	r5, #0
 2201 089e 06D0     		beq	.L229
 2202              		.loc 1 601 0 is_stmt 0
 2203 08a0 032D     		cmp	r5, #3
 2204 08a2 00D1     		bne	.LCB1896
 2205 08a4 9FE1     		b	.L259	@long jump
 2206              	.LCB1896:
 2207              		.loc 1 601 0
 2208 08a6 9C21     		mov	r1, #156
 2209 08a8 012D     		cmp	r5, #1
 2210 08aa 00D1     		bne	.LCB1899
 2211 08ac 9DE1     		b	.L376	@long jump
 2212              	.LCB1899:
 2213              	.L229:
 2214              		.loc 1 601 0
 2215 08ae 3548     		ldr	r0, .L381+28
 2216 08b0 FFF7FEFF 		bl	uart_putchar
 2217              	.LVL326:
 602:../Sources/main.c **** 	// 11 - Camera Exposure Time, 1 unit = 0.1 ms
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2218              		.loc 1 603 0 is_stmt 1
 2219 08b4 3649     		ldr	r1, .L381+40
 2220 08b6 0868     		ldr	r0, [r1]
 2221 08b8 FFF7FEFF 		bl	__aeabi_i2f
 2222              	.LVL327:
 2223 08bc 3549     		ldr	r1, .L381+44
 2224 08be FFF7FEFF 		bl	__aeabi_fmul
 2225              	.LVL328:
 2226 08c2 2E49     		ldr	r1, .L381+20
 2227 08c4 051C     		add	r5, r0, #0
 2228 08c6 FFF7FEFF 		bl	__aeabi_fcmple
 2229              	.LVL329:
 2230 08ca 0028     		cmp	r0, #0
 2231 08cc 36D0     		beq	.L238
 2232              		.loc 1 603 0 is_stmt 0
 2233 08ce 281C     		add	r0, r5, #0
 2234 08d0 0021     		mov	r1, #0
 2235 08d2 FFF7FEFF 		bl	__aeabi_fcmpge
 2236              	.LVL330:
 2237 08d6 0028     		cmp	r0, #0
 2238 08d8 66D0     		beq	.L232
 2239              		.loc 1 603 0
 2240 08da 281C     		add	r0, r5, #0
 2241 08dc 2849     		ldr	r1, .L381+24
 2242 08de FFF7FEFF 		bl	__aeabi_fcmpge
 2243              	.LVL331:
 2244 08e2 0028     		cmp	r0, #0
 2245 08e4 5AD0     		beq	.L357
 2246              		.loc 1 603 0
 2247 08e6 281C     		add	r0, r5, #0
 2248 08e8 2249     		ldr	r1, .L381+12
 2249 08ea FFF7FEFF 		bl	__aeabi_fcmple
 2250              	.LVL332:
 2251 08ee 7F26     		mov	r6, #127
 2252 08f0 071E     		sub	r7, r0, #0
 2253 08f2 15D1     		bne	.L236
 2254              		.loc 1 603 0
 2255 08f4 281C     		add	r0, r5, #0
 2256 08f6 0021     		mov	r1, #0
 2257 08f8 FFF7FEFF 		bl	__aeabi_fcmpeq
 2258              	.LVL333:
 2259 08fc 0028     		cmp	r0, #0
 2260 08fe 53D0     		beq	.L232
 2261              		.loc 1 603 0
 2262 0900 002F     		cmp	r7, #0
 2263 0902 64D0     		beq	.L245
 2264              		.loc 1 603 0
 2265 0904 281C     		add	r0, r5, #0
 2266 0906 1C49     		ldr	r1, .L381+16
 2267 0908 FFF7FEFF 		bl	__aeabi_fcmpgt
 2268              	.LVL334:
 2269 090c 0028     		cmp	r0, #0
 2270 090e 07D1     		bne	.L236
 2271              		.loc 1 603 0
 2272 0910 281C     		add	r0, r5, #0
 2273 0912 1B49     		ldr	r1, .L381+24
 2274 0914 FFF7FEFF 		bl	__aeabi_fcmpge
 2275              	.LVL335:
 2276 0918 7E26     		mov	r6, #126
 2277 091a 0028     		cmp	r0, #0
 2278 091c 00D1     		bne	.L236
 2279              	.L244:
 2280              		.loc 1 603 0
 2281 091e 0026     		mov	r6, #0
 2282              	.L236:
 2283              		.loc 1 603 0
 2284 0920 311C     		mov	r1, r6
 2285 0922 1848     		ldr	r0, .L381+28
 2286 0924 FFF7FEFF 		bl	uart_putchar
 2287              	.LVL336:
 604:../Sources/main.c **** 	// 12 - Loop time
 605:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)loop_time);
 2288              		.loc 1 605 0 is_stmt 1
 2289 0928 1B4A     		ldr	r2, .L381+48
 2290 092a 1648     		ldr	r0, .L381+28
 2291 092c 1178     		ldrb	r1, [r2]
 2292 092e FFF7FEFF 		bl	uart_putchar
 2293              	.LVL337:
 606:../Sources/main.c **** 	// 13 - Line Distance
 607:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineDistance);
 2294              		.loc 1 607 0
 2295 0932 217B     		ldrb	r1, [r4, #12]
 2296 0934 1348     		ldr	r0, .L381+28
 2297 0936 FFF7FEFF 		bl	uart_putchar
 2298              	.LVL338:
 608:../Sources/main.c **** 	
 609:../Sources/main.c **** }
 2299              		.loc 1 609 0
 2300              		@ sp needed for prologue
 2301 093a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2302              	.L238:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2303              		.loc 1 603 0
 2304 093c 281C     		add	r0, r5, #0
 2305 093e 0E49     		ldr	r1, .L381+16
 2306 0940 FFF7FEFF 		bl	__aeabi_fcmpgt
 2307              	.LVL339:
 2308 0944 7F26     		mov	r6, #127
 2309 0946 0028     		cmp	r0, #0
 2310 0948 EAD1     		bne	.L236
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2311              		.loc 1 603 0 is_stmt 0
 2312 094a 281C     		add	r0, r5, #0
 2313 094c 0C49     		ldr	r1, .L381+24
 2314 094e FFF7FEFF 		bl	__aeabi_fcmpge
 2315              	.LVL340:
 2316 0952 0028     		cmp	r0, #0
 2317 0954 E3D0     		beq	.L244
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2318              		.loc 1 603 0
 2319 0956 281C     		add	r0, r5, #0
 2320 0958 0649     		ldr	r1, .L381+12
 2321 095a FFF7FEFF 		bl	__aeabi_fcmple
 2322              	.LVL341:
 2323 095e 0028     		cmp	r0, #0
 2324 0960 DED1     		bne	.L236
 2325 0962 DCE7     		b	.L244
 2326              	.L382:
 2327 0964 C046C046 		.align	3
 2328              	.L381:
 2329 0968 00000000 		.word	0
 2330 096c 0000E03F 		.word	1071644672
 2331 0970 00007042 		.word	1114636288
 2332 0974 00800043 		.word	1124106240
 2333 0978 00007F43 		.word	1132396544
 2334 097c 00807E43 		.word	1132363776
 2335 0980 0000FF42 		.word	1124007936
 2336 0984 00C00640 		.word	1074184192
 2337 0988 00000000 		.word	.LANCHOR5
 2338 098c 0000FC42 		.word	1123811328
 2339 0990 00000000 		.word	newExposure
 2340 0994 CDCCCC3C 		.word	1020054733
 2341 0998 00000000 		.word	.LANCHOR6
 2342              	.L357:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2343              		.loc 1 603 0
 2344 099c 281C     		add	r0, r5, #0
 2345 099e 0021     		mov	r1, #0
 2346 09a0 FFF7FEFF 		bl	__aeabi_fcmpeq
 2347              	.LVL342:
 2348 09a4 0028     		cmp	r0, #0
 2349 09a6 12D1     		bne	.L245
 2350              	.L232:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2351              		.loc 1 603 0
 2352 09a8 281C     		add	r0, r5, #0
 2353 09aa 0021     		mov	r1, #0
 2354 09ac FFF7FEFF 		bl	__aeabi_fcmpge
 2355              	.LVL343:
 2356 09b0 0028     		cmp	r0, #0
 2357 09b2 C3D0     		beq	.L238
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2358              		.loc 1 603 0
 2359 09b4 281C     		add	r0, r5, #0
 2360 09b6 B049     		ldr	r1, .L383+8
 2361 09b8 FFF7FEFF 		bl	__aeabi_fcmpge
 2362              	.LVL344:
 2363 09bc 0028     		cmp	r0, #0
 2364 09be 06D0     		beq	.L245
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2365              		.loc 1 603 0
 2366 09c0 281C     		add	r0, r5, #0
 2367 09c2 AE49     		ldr	r1, .L383+12
 2368 09c4 FFF7FEFF 		bl	__aeabi_fcmple
 2369              	.LVL345:
 2370 09c8 7F26     		mov	r6, #127
 2371 09ca 0028     		cmp	r0, #0
 2372 09cc A8D1     		bne	.L236
 2373              	.L245:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2374              		.loc 1 603 0
 2375 09ce 281C     		add	r0, r5, #0
 2376 09d0 FFF7FEFF 		bl	__aeabi_f2iz
 2377              	.LVL346:
 2378 09d4 C6B2     		uxtb	r6, r0
 2379 09d6 A3E7     		b	.L236
 2380              	.L355:
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2381              		.loc 1 599 0 is_stmt 1
 2382 09d8 381C     		add	r0, r7, #0
 2383 09da FFF7FEFF 		bl	__aeabi_f2d
 2384              	.LVL347:
 2385 09de A54B     		ldr	r3, .L383+4
 2386 09e0 A34A     		ldr	r2, .L383
 2387 09e2 FFF7FEFF 		bl	__aeabi_dsub
 2388              	.LVL348:
 2389 09e6 FFF7FEFF 		bl	__aeabi_d2iz
 2390              	.LVL349:
 2391 09ea C1B2     		uxtb	r1, r0
 2392 09ec 51E7     		b	.L228
 2393              	.L350:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 2394              		.loc 1 593 0
 2395 09ee 0120     		mov	r0, #1
 2396 09f0 FFF7FEFF 		bl	TFC_GetMotorPWM
 2397              	.LVL350:
 2398 09f4 A249     		ldr	r1, .L383+16
 2399 09f6 FFF7FEFF 		bl	__aeabi_fmul
 2400              	.LVL351:
 2401 09fa FFF7FEFF 		bl	__aeabi_f2d
 2402              	.LVL352:
 2403 09fe 9D4B     		ldr	r3, .L383+4
 2404 0a00 9B4A     		ldr	r2, .L383
 2405 0a02 FFF7FEFF 		bl	__aeabi_dsub
 2406              	.LVL353:
 2407 0a06 FFF7FEFF 		bl	__aeabi_d2iz
 2408              	.LVL354:
 2409 0a0a C1B2     		uxtb	r1, r0
 2410 0a0c 84E5     		b	.L161
 2411              	.L349:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 2412              		.loc 1 591 0
 2413 0a0e 0020     		mov	r0, #0
 2414 0a10 FFF7FEFF 		bl	TFC_GetMotorPWM
 2415              	.LVL355:
 2416 0a14 9A49     		ldr	r1, .L383+16
 2417 0a16 FFF7FEFF 		bl	__aeabi_fmul
 2418              	.LVL356:
 2419 0a1a FFF7FEFF 		bl	__aeabi_f2d
 2420              	.LVL357:
 2421 0a1e 954B     		ldr	r3, .L383+4
 2422 0a20 934A     		ldr	r2, .L383
 2423 0a22 FFF7FEFF 		bl	__aeabi_dsub
 2424              	.LVL358:
 2425 0a26 FFF7FEFF 		bl	__aeabi_d2iz
 2426              	.LVL359:
 2427 0a2a C1B2     		uxtb	r1, r0
 2428 0a2c 56E5     		b	.L158
 2429              	.L375:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2430              		.loc 1 597 0
 2431 0a2e 0120     		mov	r0, #1
 2432 0a30 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2433              	.LVL360:
 2434 0a34 9349     		ldr	r1, .L383+20
 2435 0a36 FFF7FEFF 		bl	__aeabi_fmul
 2436              	.LVL361:
 2437 0a3a 8F49     		ldr	r1, .L383+8
 2438 0a3c FFF7FEFF 		bl	__aeabi_fcmpge
 2439              	.LVL362:
 2440 0a40 0028     		cmp	r0, #0
 2441 0a42 00D1     		bne	.LCB2126
 2442 0a44 D1E6     		b	.L198	@long jump
 2443              	.LCB2126:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2444              		.loc 1 597 0 is_stmt 0
 2445 0a46 0120     		mov	r0, #1
 2446 0a48 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2447              	.LVL363:
 2448 0a4c CDE6     		b	.L198
 2449              	.L373:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2450              		.loc 1 595 0 is_stmt 1
 2451 0a4e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2452              	.LVL364:
 2453 0a52 8C49     		ldr	r1, .L383+20
 2454 0a54 FFF7FEFF 		bl	__aeabi_fmul
 2455              	.LVL365:
 2456 0a58 8749     		ldr	r1, .L383+8
 2457 0a5a FFF7FEFF 		bl	__aeabi_fcmpge
 2458              	.LVL366:
 2459 0a5e 0028     		cmp	r0, #0
 2460 0a60 00D1     		bne	.LCB2143
 2461 0a62 FAE5     		b	.L166	@long jump
 2462              	.LCB2143:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2463              		.loc 1 595 0 is_stmt 0
 2464 0a64 0020     		mov	r0, #0
 2465 0a66 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2466              	.LVL367:
 2467 0a6a F6E5     		b	.L166
 2468              	.L371:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2469              		.loc 1 589 0 is_stmt 1
 2470 0a6c 0120     		mov	r0, #1
 2471 0a6e 8227     		mov	r7, #130
 2472 0a70 FFF7FEFF 		bl	getSpeed
 2473              	.LVL368:
 2474 0a74 F905     		lsl	r1, r7, #23
 2475 0a76 FFF7FEFF 		bl	__aeabi_fmul
 2476              	.LVL369:
 2477 0a7a 7F49     		ldr	r1, .L383+8
 2478 0a7c FFF7FEFF 		bl	__aeabi_fcmpge
 2479              	.LVL370:
 2480 0a80 0028     		cmp	r0, #0
 2481 0a82 00D1     		bne	.LCB2162
 2482 0a84 CCE4     		b	.L128	@long jump
 2483              	.LCB2162:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2484              		.loc 1 589 0 is_stmt 0
 2485 0a86 0120     		mov	r0, #1
 2486 0a88 FFF7FEFF 		bl	getSpeed
 2487              	.LVL371:
 2488 0a8c C8E4     		b	.L128
 2489              	.L369:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2490              		.loc 1 587 0 is_stmt 1
 2491 0a8e 8226     		mov	r6, #130
 2492 0a90 FFF7FEFF 		bl	getSpeed
 2493              	.LVL372:
 2494 0a94 F105     		lsl	r1, r6, #23
 2495 0a96 FFF7FEFF 		bl	__aeabi_fmul
 2496              	.LVL373:
 2497 0a9a 7749     		ldr	r1, .L383+8
 2498 0a9c FFF7FEFF 		bl	__aeabi_fcmpge
 2499              	.LVL374:
 2500 0aa0 0028     		cmp	r0, #0
 2501 0aa2 01D1     		bne	.LCB2180
 2502 0aa4 FFF7A9FB 		bl	.L96	@far jump
 2503              	.LCB2180:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2504              		.loc 1 587 0 is_stmt 0
 2505 0aa8 0020     		mov	r0, #0
 2506 0aaa FFF7FEFF 		bl	getSpeed
 2507              	.LVL375:
 2508 0aae FFF7A4FB 		bl	.L96	@ far jump
 2509              	.L346:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2510              		.loc 1 587 0
 2511 0ab2 0020     		mov	r0, #0
 2512 0ab4 FFF7FEFF 		bl	getSpeed
 2513              	.LVL376:
 2514 0ab8 8223     		mov	r3, #130
 2515 0aba D905     		lsl	r1, r3, #23
 2516 0abc FFF7FEFF 		bl	__aeabi_fmul
 2517              	.LVL377:
 2518 0ac0 6D49     		ldr	r1, .L383+8
 2519 0ac2 FFF7FEFF 		bl	__aeabi_fcmpge
 2520              	.LVL378:
 2521 0ac6 0028     		cmp	r0, #0
 2522 0ac8 01D1     		bne	.LCB2199
 2523 0aca FFF762FB 		bl	.L122	@far jump
 2524              	.LCB2199:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2525              		.loc 1 587 0
 2526 0ace 0020     		mov	r0, #0
 2527 0ad0 FFF7FEFF 		bl	getSpeed
 2528              	.LVL379:
 2529 0ad4 8221     		mov	r1, #130
 2530 0ad6 C905     		lsl	r1, r1, #23
 2531 0ad8 FFF7FEFF 		bl	__aeabi_fmul
 2532              	.LVL380:
 2533 0adc 6749     		ldr	r1, .L383+12
 2534 0ade FFF7FEFF 		bl	__aeabi_fcmple
 2535              	.LVL381:
 2536 0ae2 0028     		cmp	r0, #0
 2537 0ae4 01D0     		beq	.LCB2211
 2538 0ae6 FFF7CAFB 		bl	.L113	@far jump
 2539              	.LCB2211:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2540              		.loc 1 587 0
 2541 0aea 0021     		mov	r1, #0
 2542 0aec FFF7C8FB 		bl	.L107	@ far jump
 2543              	.L348:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2544              		.loc 1 589 0 is_stmt 1
 2545 0af0 0120     		mov	r0, #1
 2546 0af2 8226     		mov	r6, #130
 2547 0af4 FFF7FEFF 		bl	getSpeed
 2548              	.LVL382:
 2549 0af8 F105     		lsl	r1, r6, #23
 2550 0afa FFF7FEFF 		bl	__aeabi_fmul
 2551              	.LVL383:
 2552 0afe 5E49     		ldr	r1, .L383+8
 2553 0b00 FFF7FEFF 		bl	__aeabi_fcmpge
 2554              	.LVL384:
 2555 0b04 0028     		cmp	r0, #0
 2556 0b06 00D1     		bne	.LCB2228
 2557 0b08 40E4     		b	.L154	@long jump
 2558              	.LCB2228:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2559              		.loc 1 589 0 is_stmt 0
 2560 0b0a 0120     		mov	r0, #1
 2561 0b0c FFF7FEFF 		bl	getSpeed
 2562              	.LVL385:
 2563 0b10 8222     		mov	r2, #130
 2564 0b12 D105     		lsl	r1, r2, #23
 2565 0b14 FFF7FEFF 		bl	__aeabi_fmul
 2566              	.LVL386:
 2567 0b18 5849     		ldr	r1, .L383+12
 2568 0b1a FFF7FEFF 		bl	__aeabi_fcmple
 2569              	.LVL387:
 2570 0b1e 0028     		cmp	r0, #0
 2571 0b20 00D0     		beq	.LCB2240
 2572 0b22 BCE4     		b	.L145	@long jump
 2573              	.LCB2240:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2574              		.loc 1 589 0
 2575 0b24 0021     		mov	r1, #0
 2576 0b26 BBE4     		b	.L139
 2577              	.L354:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2578              		.loc 1 597 0 is_stmt 1
 2579 0b28 0120     		mov	r0, #1
 2580 0b2a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2581              	.LVL388:
 2582 0b2e 5549     		ldr	r1, .L383+20
 2583 0b30 FFF7FEFF 		bl	__aeabi_fmul
 2584              	.LVL389:
 2585 0b34 5049     		ldr	r1, .L383+8
 2586 0b36 FFF7FEFF 		bl	__aeabi_fcmpge
 2587              	.LVL390:
 2588 0b3a 0028     		cmp	r0, #0
 2589 0b3c 00D1     		bne	.LCB2256
 2590 0b3e 3BE6     		b	.L224	@long jump
 2591              	.LCB2256:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2592              		.loc 1 597 0 is_stmt 0
 2593 0b40 0120     		mov	r0, #1
 2594 0b42 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2595              	.LVL391:
 2596 0b46 4F49     		ldr	r1, .L383+20
 2597 0b48 FFF7FEFF 		bl	__aeabi_fmul
 2598              	.LVL392:
 2599 0b4c 4B49     		ldr	r1, .L383+12
 2600 0b4e FFF7FEFF 		bl	__aeabi_fcmple
 2601              	.LVL393:
 2602 0b52 0028     		cmp	r0, #0
 2603 0b54 00D0     		beq	.LCB2267
 2604 0b56 82E6     		b	.L215	@long jump
 2605              	.LCB2267:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2606              		.loc 1 597 0
 2607 0b58 0021     		mov	r1, #0
 2608 0b5a 81E6     		b	.L209
 2609              	.L352:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2610              		.loc 1 595 0 is_stmt 1
 2611 0b5c 0020     		mov	r0, #0
 2612 0b5e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2613              	.LVL394:
 2614 0b62 4849     		ldr	r1, .L383+20
 2615 0b64 FFF7FEFF 		bl	__aeabi_fmul
 2616              	.LVL395:
 2617 0b68 4349     		ldr	r1, .L383+8
 2618 0b6a FFF7FEFF 		bl	__aeabi_fcmpge
 2619              	.LVL396:
 2620 0b6e 0028     		cmp	r0, #0
 2621 0b70 00D1     		bne	.LCB2283
 2622 0b72 45E5     		b	.L192	@long jump
 2623              	.LCB2283:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2624              		.loc 1 595 0 is_stmt 0
 2625 0b74 0020     		mov	r0, #0
 2626 0b76 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2627              	.LVL397:
 2628 0b7a 4249     		ldr	r1, .L383+20
 2629 0b7c FFF7FEFF 		bl	__aeabi_fmul
 2630              	.LVL398:
 2631 0b80 3E49     		ldr	r1, .L383+12
 2632 0b82 FFF7FEFF 		bl	__aeabi_fcmple
 2633              	.LVL399:
 2634 0b86 0028     		cmp	r0, #0
 2635 0b88 00D0     		beq	.LCB2294
 2636 0b8a A0E5     		b	.L183	@long jump
 2637              	.LCB2294:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2638              		.loc 1 595 0
 2639 0b8c 0021     		mov	r1, #0
 2640 0b8e 9FE5     		b	.L177
 2641              	.L118:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2642              		.loc 1 587 0 is_stmt 1
 2643 0b90 0020     		mov	r0, #0
 2644 0b92 8227     		mov	r7, #130
 2645 0b94 FFF7FEFF 		bl	getSpeed
 2646              	.LVL400:
 2647 0b98 F905     		lsl	r1, r7, #23
 2648 0b9a FFF7FEFF 		bl	__aeabi_fmul
 2649              	.LVL401:
 2650 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 2651              	.LVL402:
 2652 0ba2 C1B2     		uxtb	r1, r0
 2653 0ba4 FFF76CFB 		bl	.L107	@ far jump
 2654              	.L220:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2655              		.loc 1 597 0
 2656 0ba8 0120     		mov	r0, #1
 2657 0baa FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2658              	.LVL403:
 2659 0bae 3549     		ldr	r1, .L383+20
 2660 0bb0 FFF7FEFF 		bl	__aeabi_fmul
 2661              	.LVL404:
 2662 0bb4 FFF7FEFF 		bl	__aeabi_f2iz
 2663              	.LVL405:
 2664 0bb8 C1B2     		uxtb	r1, r0
 2665 0bba 51E6     		b	.L209
 2666              	.L188:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2667              		.loc 1 595 0
 2668 0bbc 0020     		mov	r0, #0
 2669 0bbe FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2670              	.LVL406:
 2671 0bc2 3049     		ldr	r1, .L383+20
 2672 0bc4 FFF7FEFF 		bl	__aeabi_fmul
 2673              	.LVL407:
 2674 0bc8 FFF7FEFF 		bl	__aeabi_f2iz
 2675              	.LVL408:
 2676 0bcc C1B2     		uxtb	r1, r0
 2677 0bce 7FE5     		b	.L177
 2678              	.L150:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2679              		.loc 1 589 0
 2680 0bd0 0120     		mov	r0, #1
 2681 0bd2 FFF7FEFF 		bl	getSpeed
 2682              	.LVL409:
 2683 0bd6 8223     		mov	r3, #130
 2684 0bd8 D905     		lsl	r1, r3, #23
 2685 0bda FFF7FEFF 		bl	__aeabi_fmul
 2686              	.LVL410:
 2687 0bde FFF7FEFF 		bl	__aeabi_f2iz
 2688              	.LVL411:
 2689 0be2 C1B2     		uxtb	r1, r0
 2690 0be4 5CE4     		b	.L139
 2691              	.L259:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2692              		.loc 1 601 0
 2693 0be6 0021     		mov	r1, #0
 2694 0be8 61E6     		b	.L229
 2695              	.L376:
 2696 0bea 6421     		mov	r1, #100
 2697 0bec 5FE6     		b	.L229
 2698              	.L374:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2699              		.loc 1 597 0
 2700 0bee 0120     		mov	r0, #1
 2701 0bf0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2702              	.LVL412:
 2703 0bf4 2349     		ldr	r1, .L383+20
 2704 0bf6 FFF7FEFF 		bl	__aeabi_fmul
 2705              	.LVL413:
 2706 0bfa 2049     		ldr	r1, .L383+12
 2707 0bfc FFF7FEFF 		bl	__aeabi_fcmple
 2708              	.LVL414:
 2709 0c00 7E21     		mov	r1, #126
 2710 0c02 0028     		cmp	r0, #0
 2711 0c04 00D0     		beq	.LCB2379
 2712 0c06 2BE6     		b	.L209	@long jump
 2713              	.LCB2379:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2714              		.loc 1 597 0 is_stmt 0
 2715 0c08 0021     		mov	r1, #0
 2716 0c0a 29E6     		b	.L209
 2717              	.L368:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2718              		.loc 1 587 0 is_stmt 1
 2719 0c0c 0020     		mov	r0, #0
 2720 0c0e FFF7FEFF 		bl	getSpeed
 2721              	.LVL415:
 2722 0c12 8223     		mov	r3, #130
 2723 0c14 D905     		lsl	r1, r3, #23
 2724 0c16 FFF7FEFF 		bl	__aeabi_fmul
 2725              	.LVL416:
 2726 0c1a 1849     		ldr	r1, .L383+12
 2727 0c1c FFF7FEFF 		bl	__aeabi_fcmple
 2728              	.LVL417:
 2729 0c20 7E21     		mov	r1, #126
 2730 0c22 0028     		cmp	r0, #0
 2731 0c24 01D0     		beq	.LCB2397
 2732 0c26 FFF72BFB 		bl	.L107	@far jump
 2733              	.LCB2397:
 587:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2734              		.loc 1 587 0 is_stmt 0
 2735 0c2a 0021     		mov	r1, #0
 2736 0c2c FFF728FB 		bl	.L107	@ far jump
 2737              	.L370:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2738              		.loc 1 589 0 is_stmt 1
 2739 0c30 0120     		mov	r0, #1
 2740 0c32 8226     		mov	r6, #130
 2741 0c34 FFF7FEFF 		bl	getSpeed
 2742              	.LVL418:
 2743 0c38 F105     		lsl	r1, r6, #23
 2744 0c3a FFF7FEFF 		bl	__aeabi_fmul
 2745              	.LVL419:
 2746 0c3e 0F49     		ldr	r1, .L383+12
 2747 0c40 FFF7FEFF 		bl	__aeabi_fcmple
 2748              	.LVL420:
 2749 0c44 7E21     		mov	r1, #126
 2750 0c46 0028     		cmp	r0, #0
 2751 0c48 00D0     		beq	.LCB2415
 2752 0c4a 29E4     		b	.L139	@long jump
 2753              	.LCB2415:
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2754              		.loc 1 589 0 is_stmt 0
 2755 0c4c 0021     		mov	r1, #0
 2756 0c4e 27E4     		b	.L139
 2757              	.L372:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2758              		.loc 1 595 0 is_stmt 1
 2759 0c50 0020     		mov	r0, #0
 2760 0c52 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2761              	.LVL421:
 2762 0c56 0B49     		ldr	r1, .L383+20
 2763 0c58 FFF7FEFF 		bl	__aeabi_fmul
 2764              	.LVL422:
 2765 0c5c 0749     		ldr	r1, .L383+12
 2766 0c5e FFF7FEFF 		bl	__aeabi_fcmple
 2767              	.LVL423:
 2768 0c62 7E21     		mov	r1, #126
 2769 0c64 0028     		cmp	r0, #0
 2770 0c66 00D0     		beq	.LCB2432
 2771 0c68 32E5     		b	.L177	@long jump
 2772              	.LCB2432:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2773              		.loc 1 595 0 is_stmt 0
 2774 0c6a 0021     		mov	r1, #0
 2775 0c6c 30E5     		b	.L177
 2776              	.L384:
 2777 0c6e C046     		.align	3
 2778              	.L383:
 2779 0c70 00000000 		.word	0
 2780 0c74 0000E03F 		.word	1071644672
 2781 0c78 0000FF42 		.word	1124007936
 2782 0c7c 00800043 		.word	1124106240
 2783 0c80 0000FC42 		.word	1123811328
 2784 0c84 00007042 		.word	1114636288
 2785              		.cfi_endproc
 2786              	.LFE10:
 2788              		.global	__aeabi_ui2f
 2789              		.section	.text.BluetoothSetSpeed,"ax",%progbits
 2790              		.align	2
 2791              		.global	BluetoothSetSpeed
 2792              		.code	16
 2793              		.thumb_func
 2795              	BluetoothSetSpeed:
 2796              	.LFB12:
 610:../Sources/main.c **** 
 611:../Sources/main.c **** void telemetryReadData(){
 612:../Sources/main.c **** 	
 613:../Sources/main.c **** 	if(count==0){
 614:../Sources/main.c **** 		//if something is on the UART, get it and put it in received_byte
 615:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 616:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 618:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 619:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 620:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 621:../Sources/main.c **** 			count++;
 622:../Sources/main.c **** 		}
 623:../Sources/main.c **** 	}
 624:../Sources/main.c **** 	else if(count>0){
 625:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 626:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 627:../Sources/main.c **** 			count=0;
 628:../Sources/main.c **** 		}
 629:../Sources/main.c **** 	}
 630:../Sources/main.c **** 	
 631:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 632:../Sources/main.c **** 		switch(received_byte1){
 633:../Sources/main.c **** 		case 255: //SPEED
 634:../Sources/main.c **** 			BluetoothSetSpeed(received_byte2);
 635:../Sources/main.c **** 			break;
 636:../Sources/main.c **** 		case 251: //LED
 637:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 638:../Sources/main.c **** 			break;
 639:../Sources/main.c **** 		}
 640:../Sources/main.c **** 		//received_byte1=0;
 641:../Sources/main.c **** 		//received_byte2=0;
 642:../Sources/main.c **** 	}
 643:../Sources/main.c **** 	
 644:../Sources/main.c **** }
 645:../Sources/main.c **** 
 646:../Sources/main.c **** void BluetoothSetSpeed(uint8_t i){
 2797              		.loc 1 646 0 is_stmt 1
 2798              		.cfi_startproc
 2799              	.LVL424:
 2800 0000 38B5     		push	{r3, r4, r5, lr}
 2801              	.LCFI12:
 2802              		.cfi_def_cfa_offset 16
 2803              		.cfi_offset 3, -16
 2804              		.cfi_offset 4, -12
 2805              		.cfi_offset 5, -8
 2806              		.cfi_offset 14, -4
 647:../Sources/main.c **** 	max_speed_percent=i;
 2807              		.loc 1 647 0
 2808 0002 FFF7FEFF 		bl	__aeabi_ui2f
 2809              	.LVL425:
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 2810              		.loc 1 648 0
 2811 0006 064C     		ldr	r4, .L389
 647:../Sources/main.c **** 	max_speed_percent=i;
 2812              		.loc 1 647 0
 2813 0008 051C     		add	r5, r0, #0
 2814              		.loc 1 648 0
 2815 000a 211C     		add	r1, r4, #0
 2816 000c FFF7FEFF 		bl	__aeabi_fcmpgt
 2817              	.LVL426:
 649:../Sources/main.c **** 			max_speed_percent=100;
 2818              		.loc 1 649 0
 2819 0010 044B     		ldr	r3, .L389+4
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 2820              		.loc 1 648 0
 2821 0012 0028     		cmp	r0, #0
 2822 0014 01D0     		beq	.L388
 2823              		.loc 1 649 0
 2824 0016 1C60     		str	r4, [r3]
 2825              	.L385:
 650:../Sources/main.c **** 		}
 651:../Sources/main.c **** }
 2826              		.loc 1 651 0
 2827              		@ sp needed for prologue
 2828 0018 38BD     		pop	{r3, r4, r5, pc}
 2829              	.L388:
 647:../Sources/main.c **** 	max_speed_percent=i;
 2830              		.loc 1 647 0
 2831 001a 1D60     		str	r5, [r3]
 2832 001c FCE7     		b	.L385
 2833              	.L390:
 2834 001e C046     		.align	2
 2835              	.L389:
 2836 0020 0000C842 		.word	1120403456
 2837 0024 00000000 		.word	.LANCHOR7
 2838              		.cfi_endproc
 2839              	.LFE12:
 2841              		.section	.text.BluetoothSetLED,"ax",%progbits
 2842              		.align	2
 2843              		.global	BluetoothSetLED
 2844              		.code	16
 2845              		.thumb_func
 2847              	BluetoothSetLED:
 2848              	.LFB13:
 652:../Sources/main.c **** 
 653:../Sources/main.c **** void BluetoothSetLED(uint8_t i){	
 2849              		.loc 1 653 0
 2850              		.cfi_startproc
 2851              	.LVL427:
 2852 0000 00B5     		push	{lr}
 2853              	.LCFI13:
 2854              		.cfi_def_cfa_offset 4
 2855              		.cfi_offset 14, -4
 654:../Sources/main.c **** 		switch(i){
 2856              		.loc 1 654 0
 2857 0002 0228     		cmp	r0, #2
 2858 0004 43D0     		beq	.L394
 2859 0006 17D8     		bhi	.L397
 2860 0008 0128     		cmp	r0, #1
 2861 000a 4CD0     		beq	.L402
 2862              	.L392:
 655:../Sources/main.c **** 			case 1: 
 656:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 657:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 658:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 659:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 660:../Sources/main.c **** 				break;
 661:../Sources/main.c **** 			case 2:
 662:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 663:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 664:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 665:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 666:../Sources/main.c **** 				break;
 667:../Sources/main.c **** 			case 3:
 668:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 669:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 670:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 671:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);			
 672:../Sources/main.c **** 				break;
 673:../Sources/main.c **** 			case 4: 
 674:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 675:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 676:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 677:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 678:../Sources/main.c **** 				break;
 679:../Sources/main.c **** 			default:
 680:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2863              		.loc 1 680 0
 2864 000c 294B     		ldr	r3, .L403
 2865 000e 8022     		mov	r2, #128
 2866 0010 9968     		ldr	r1, [r3, #8]
 2867 0012 5000     		lsl	r0, r2, #1
 2868              	.LVL428:
 2869 0014 0843     		orr	r0, r1
 2870 0016 9860     		str	r0, [r3, #8]
 2871              	.L400:
 681:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2872              		.loc 1 681 0
 2873 0018 9968     		ldr	r1, [r3, #8]
 2874 001a 8022     		mov	r2, #128
 2875 001c 9000     		lsl	r0, r2, #2
 2876 001e 0843     		orr	r0, r1
 2877 0020 9860     		str	r0, [r3, #8]
 2878              	.L401:
 682:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2879              		.loc 1 682 0
 2880 0022 9968     		ldr	r1, [r3, #8]
 2881 0024 8022     		mov	r2, #128
 2882 0026 D000     		lsl	r0, r2, #3
 2883 0028 0843     		orr	r0, r1
 2884 002a 9860     		str	r0, [r3, #8]
 2885              	.L399:
 683:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 2886              		.loc 1 683 0
 2887 002c 9968     		ldr	r1, [r3, #8]
 2888 002e 8022     		mov	r2, #128
 2889 0030 1001     		lsl	r0, r2, #4
 2890 0032 0843     		orr	r0, r1
 2891 0034 9860     		str	r0, [r3, #8]
 2892              	.L391:
 684:../Sources/main.c **** 			}
 685:../Sources/main.c **** }
 2893              		.loc 1 685 0
 2894              		@ sp needed for prologue
 2895 0036 00BD     		pop	{pc}
 2896              	.LVL429:
 2897              	.L397:
 654:../Sources/main.c **** 		switch(i){
 2898              		.loc 1 654 0
 2899 0038 0328     		cmp	r0, #3
 2900 003a 17D0     		beq	.L395
 2901 003c 0428     		cmp	r0, #4
 2902 003e E5D1     		bne	.L392
 674:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2903              		.loc 1 674 0
 2904 0040 1C4B     		ldr	r3, .L403
 2905 0042 8022     		mov	r2, #128
 2906 0044 9968     		ldr	r1, [r3, #8]
 2907 0046 5000     		lsl	r0, r2, #1
 2908              	.LVL430:
 2909 0048 0843     		orr	r0, r1
 2910 004a 9860     		str	r0, [r3, #8]
 675:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2911              		.loc 1 675 0
 2912 004c 9968     		ldr	r1, [r3, #8]
 2913 004e 8022     		mov	r2, #128
 2914 0050 9000     		lsl	r0, r2, #2
 2915 0052 0843     		orr	r0, r1
 2916 0054 9860     		str	r0, [r3, #8]
 676:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2917              		.loc 1 676 0
 2918 0056 9968     		ldr	r1, [r3, #8]
 2919 0058 8022     		mov	r2, #128
 2920 005a D000     		lsl	r0, r2, #3
 2921 005c 0843     		orr	r0, r1
 2922 005e 9860     		str	r0, [r3, #8]
 677:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 2923              		.loc 1 677 0
 2924 0060 5968     		ldr	r1, [r3, #4]
 2925 0062 8022     		mov	r2, #128
 2926 0064 1001     		lsl	r0, r2, #4
 2927 0066 0843     		orr	r0, r1
 2928 0068 5860     		str	r0, [r3, #4]
 678:../Sources/main.c **** 				break;
 2929              		.loc 1 678 0
 2930 006a E4E7     		b	.L391
 2931              	.LVL431:
 2932              	.L395:
 668:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2933              		.loc 1 668 0
 2934 006c 114B     		ldr	r3, .L403
 2935 006e 8022     		mov	r2, #128
 2936 0070 9968     		ldr	r1, [r3, #8]
 2937 0072 5000     		lsl	r0, r2, #1
 2938              	.LVL432:
 2939 0074 0843     		orr	r0, r1
 2940 0076 9860     		str	r0, [r3, #8]
 669:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2941              		.loc 1 669 0
 2942 0078 9968     		ldr	r1, [r3, #8]
 2943 007a 8022     		mov	r2, #128
 2944 007c 9000     		lsl	r0, r2, #2
 2945 007e 0843     		orr	r0, r1
 2946 0080 9860     		str	r0, [r3, #8]
 670:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 2947              		.loc 1 670 0
 2948 0082 5968     		ldr	r1, [r3, #4]
 2949 0084 8022     		mov	r2, #128
 2950 0086 D000     		lsl	r0, r2, #3
 2951 0088 0843     		orr	r0, r1
 2952 008a 5860     		str	r0, [r3, #4]
 2953 008c CEE7     		b	.L399
 2954              	.LVL433:
 2955              	.L394:
 662:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2956              		.loc 1 662 0
 2957 008e 094B     		ldr	r3, .L403
 2958 0090 8022     		mov	r2, #128
 2959 0092 9968     		ldr	r1, [r3, #8]
 2960 0094 5000     		lsl	r0, r2, #1
 2961              	.LVL434:
 2962 0096 0843     		orr	r0, r1
 2963 0098 9860     		str	r0, [r3, #8]
 663:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 2964              		.loc 1 663 0
 2965 009a 5968     		ldr	r1, [r3, #4]
 2966 009c 8022     		mov	r2, #128
 2967 009e 9000     		lsl	r0, r2, #2
 2968 00a0 0843     		orr	r0, r1
 2969 00a2 5860     		str	r0, [r3, #4]
 2970 00a4 BDE7     		b	.L401
 2971              	.LVL435:
 2972              	.L402:
 656:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 2973              		.loc 1 656 0
 2974 00a6 034B     		ldr	r3, .L403
 2975 00a8 8022     		mov	r2, #128
 2976 00aa 5968     		ldr	r1, [r3, #4]
 2977 00ac 5000     		lsl	r0, r2, #1
 2978              	.LVL436:
 2979 00ae 0843     		orr	r0, r1
 2980 00b0 5860     		str	r0, [r3, #4]
 2981 00b2 B1E7     		b	.L400
 2982              	.L404:
 2983              		.align	2
 2984              	.L403:
 2985 00b4 40F00F40 		.word	1074786368
 2986              		.cfi_endproc
 2987              	.LFE13:
 2989              		.section	.text.telemetryReadData,"ax",%progbits
 2990              		.align	2
 2991              		.global	telemetryReadData
 2992              		.code	16
 2993              		.thumb_func
 2995              	telemetryReadData:
 2996              	.LFB11:
 611:../Sources/main.c **** void telemetryReadData(){
 2997              		.loc 1 611 0
 2998              		.cfi_startproc
 2999 0000 38B5     		push	{r3, r4, r5, lr}
 3000              	.LCFI14:
 3001              		.cfi_def_cfa_offset 16
 3002              		.cfi_offset 3, -16
 3003              		.cfi_offset 4, -12
 3004              		.cfi_offset 5, -8
 3005              		.cfi_offset 14, -4
 613:../Sources/main.c **** 	if(count==0){
 3006              		.loc 1 613 0
 3007 0002 284C     		ldr	r4, .L423
 615:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3008              		.loc 1 615 0
 3009 0004 2848     		ldr	r0, .L423+4
 613:../Sources/main.c **** 	if(count==0){
 3010              		.loc 1 613 0
 3011 0006 2378     		ldrb	r3, [r4]
 3012 0008 002B     		cmp	r3, #0
 3013 000a 10D0     		beq	.L421
 625:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3014              		.loc 1 625 0
 3015 000c FFF7FEFF 		bl	uart_getchar_present
 3016              	.LVL437:
 3017 0010 0028     		cmp	r0, #0
 3018 0012 3BD1     		bne	.L409
 3019              	.L420:
 3020 0014 254A     		ldr	r2, .L423+8
 3021 0016 1578     		ldrb	r5, [r2]
 3022              	.L408:
 631:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3023              		.loc 1 631 0
 3024 0018 002D     		cmp	r5, #0
 3025 001a 07D0     		beq	.L405
 631:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3026              		.loc 1 631 0 is_stmt 0
 3027 001c 244C     		ldr	r4, .L423+12
 3028 001e 2078     		ldrb	r0, [r4]
 3029 0020 0028     		cmp	r0, #0
 3030 0022 03D0     		beq	.L405
 632:../Sources/main.c **** 		switch(received_byte1){
 3031              		.loc 1 632 0 is_stmt 1
 3032 0024 FB2D     		cmp	r5, #251
 3033 0026 39D0     		beq	.L413
 3034 0028 FF2D     		cmp	r5, #255
 3035 002a 23D0     		beq	.L422
 3036              	.L405:
 644:../Sources/main.c **** }
 3037              		.loc 1 644 0
 3038              		@ sp needed for prologue
 3039 002c 38BD     		pop	{r3, r4, r5, pc}
 3040              	.L421:
 615:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3041              		.loc 1 615 0
 3042 002e FFF7FEFF 		bl	uart_getchar_present
 3043              	.LVL438:
 3044 0032 0028     		cmp	r0, #0
 3045 0034 EED0     		beq	.L420
 616:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3046              		.loc 1 616 0
 3047 0036 1C48     		ldr	r0, .L423+4
 3048 0038 FFF7FEFF 		bl	uart_getchar
 3049              	.LVL439:
 3050 003c 1B4B     		ldr	r3, .L423+8
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3051              		.loc 1 617 0
 3052 003e 1D4A     		ldr	r2, .L423+16
 616:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3053              		.loc 1 616 0
 3054 0040 1870     		strb	r0, [r3]
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3055              		.loc 1 617 0
 3056 0042 8021     		mov	r1, #128
 616:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3057              		.loc 1 616 0
 3058 0044 051C     		mov	r5, r0
 617:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3059              		.loc 1 617 0
 3060 0046 5068     		ldr	r0, [r2, #4]
 3061 0048 4B00     		lsl	r3, r1, #1
 3062 004a 0343     		orr	r3, r0
 3063 004c 5360     		str	r3, [r2, #4]
 618:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 3064              		.loc 1 618 0
 3065 004e 5068     		ldr	r0, [r2, #4]
 3066 0050 8021     		mov	r1, #128
 3067 0052 8B00     		lsl	r3, r1, #2
 3068 0054 0343     		orr	r3, r0
 3069 0056 5360     		str	r3, [r2, #4]
 619:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 3070              		.loc 1 619 0
 3071 0058 5068     		ldr	r0, [r2, #4]
 3072 005a 8021     		mov	r1, #128
 3073 005c CB00     		lsl	r3, r1, #3
 3074 005e 0343     		orr	r3, r0
 3075 0060 5360     		str	r3, [r2, #4]
 620:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 3076              		.loc 1 620 0
 3077 0062 5068     		ldr	r0, [r2, #4]
 3078 0064 8021     		mov	r1, #128
 3079 0066 0B01     		lsl	r3, r1, #4
 3080 0068 0343     		orr	r3, r0
 3081 006a 5360     		str	r3, [r2, #4]
 621:../Sources/main.c **** 			count++;
 3082              		.loc 1 621 0
 3083 006c 2278     		ldrb	r2, [r4]
 3084 006e 0132     		add	r2, r2, #1
 3085 0070 2270     		strb	r2, [r4]
 3086 0072 D1E7     		b	.L408
 3087              	.L422:
 3088              	.LVL440:
 3089              	.LBB28:
 3090              	.LBB29:
 647:../Sources/main.c **** 	max_speed_percent=i;
 3091              		.loc 1 647 0
 3092 0074 FFF7FEFF 		bl	__aeabi_ui2f
 3093              	.LVL441:
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 3094              		.loc 1 648 0
 3095 0078 0F4D     		ldr	r5, .L423+20
 647:../Sources/main.c **** 	max_speed_percent=i;
 3096              		.loc 1 647 0
 3097 007a 104C     		ldr	r4, .L423+24
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 3098              		.loc 1 648 0
 3099 007c 291C     		add	r1, r5, #0
 647:../Sources/main.c **** 	max_speed_percent=i;
 3100              		.loc 1 647 0
 3101 007e 2060     		str	r0, [r4]
 648:../Sources/main.c **** 		if(max_speed_percent>100){
 3102              		.loc 1 648 0
 3103 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 3104              	.LVL442:
 3105 0084 0028     		cmp	r0, #0
 3106 0086 D1D0     		beq	.L405
 649:../Sources/main.c **** 			max_speed_percent=100;
 3107              		.loc 1 649 0
 3108 0088 2560     		str	r5, [r4]
 3109 008a CFE7     		b	.L405
 3110              	.L409:
 3111              	.LBE29:
 3112              	.LBE28:
 626:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 3113              		.loc 1 626 0
 3114 008c 0648     		ldr	r0, .L423+4
 3115 008e FFF7FEFF 		bl	uart_getchar
 3116              	.LVL443:
 3117 0092 0749     		ldr	r1, .L423+12
 3118 0094 0870     		strb	r0, [r1]
 627:../Sources/main.c **** 			count=0;
 3119              		.loc 1 627 0
 3120 0096 0020     		mov	r0, #0
 3121 0098 2070     		strb	r0, [r4]
 3122 009a BBE7     		b	.L420
 3123              	.L413:
 637:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 3124              		.loc 1 637 0
 3125 009c FFF7FEFF 		bl	BluetoothSetLED
 3126              	.LVL444:
 638:../Sources/main.c **** 			break;
 3127              		.loc 1 638 0
 3128 00a0 C4E7     		b	.L405
 3129              	.L424:
 3130 00a2 C046     		.align	2
 3131              	.L423:
 3132 00a4 00000000 		.word	.LANCHOR8
 3133 00a8 00C00640 		.word	1074184192
 3134 00ac 00000000 		.word	.LANCHOR9
 3135 00b0 00000000 		.word	.LANCHOR10
 3136 00b4 40F00F40 		.word	1074786368
 3137 00b8 0000C842 		.word	1120403456
 3138 00bc 00000000 		.word	.LANCHOR7
 3139              		.cfi_endproc
 3140              	.LFE11:
 3142              		.global	__aeabi_fadd
 3143              		.global	__aeabi_f2uiz
 3144              		.global	__aeabi_dmul
 3145              		.global	__aeabi_d2f
 3146              		.global	__aeabi_fdiv
 3147              		.global	__aeabi_fcmplt
 3148              		.section	.text.lineFollowingMode,"ax",%progbits
 3149              		.align	2
 3150              		.global	lineFollowingMode
 3151              		.code	16
 3152              		.thumb_func
 3154              	lineFollowingMode:
 3155              	.LFB1:
 202:../Sources/main.c **** {
 3156              		.loc 1 202 0
 3157              		.cfi_startproc
 3158              	.LVL445:
 3159 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3160              	.LCFI15:
 3161              		.cfi_def_cfa_offset 24
 3162              		.cfi_offset 3, -24
 3163              		.cfi_offset 4, -20
 3164              		.cfi_offset 5, -16
 3165              		.cfi_offset 6, -12
 3166              		.cfi_offset 7, -8
 3167              		.cfi_offset 14, -4
 3168 0002 5F46     		mov	r7, fp
 3169 0004 5646     		mov	r6, sl
 3170 0006 4D46     		mov	r5, r9
 3171 0008 4446     		mov	r4, r8
 3172 000a F0B4     		push	{r4, r5, r6, r7}
 3173              	.LCFI16:
 3174              		.cfi_def_cfa_offset 40
 3175              		.cfi_offset 8, -40
 3176              		.cfi_offset 9, -36
 3177              		.cfi_offset 10, -32
 3178              		.cfi_offset 11, -28
 202:../Sources/main.c **** {
 3179              		.loc 1 202 0
 3180 000c 071C     		mov	r7, r0
 206:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 3181              		.loc 1 206 0
 3182 000e 0120     		mov	r0, #1
 3183              	.LVL446:
 3184 0010 FFF7FEFF 		bl	TFC_GetPush_Button
 3185              	.LVL447:
 3186 0014 0128     		cmp	r0, #1
 3187 0016 00D1     		bne	.LCB2795
 3188 0018 D3E0     		b	.L455	@long jump
 3189              	.LCB2795:
 3190              	.L426:
 212:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 3191              		.loc 1 212 0
 3192 001a D34C     		ldr	r4, .L468+8
 3193 001c D34D     		ldr	r5, .L468+12
 3194 001e A169     		ldr	r1, [r4, #24]
 3195 0020 A942     		cmp	r1, r5
 3196 0022 00D9     		bls	.LCB2801
 3197 0024 C6E0     		b	.L456	@long jump
 3198              	.LCB2801:
 3199              	.L427:
 219:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 3200              		.loc 1 219 0
 3201 0026 2369     		ldr	r3, [r4, #16]
 3202 0028 312B     		cmp	r3, #49
 3203 002a 00D9     		bls	.LCB2805
 3204 002c BBE0     		b	.L457	@long jump
 3205              	.LCB2805:
 3206              	.L428:
 227:../Sources/main.c **** 	if(TFC_Ticker[5]>=50){ 
 3207              		.loc 1 227 0
 3208 002e 6169     		ldr	r1, [r4, #20]
 3209 0030 3129     		cmp	r1, #49
 3210 0032 00D9     		bls	.LCB2809
 3211 0034 B1E0     		b	.L458	@long jump
 3212              	.LCB2809:
 3213              	.L429:
 245:../Sources/main.c **** 		incline_speed=max_speed_percent;
 3214              		.loc 1 245 0
 3215 0036 CE4A     		ldr	r2, .L468+16
 3216 0038 CE4E     		ldr	r6, .L468+20
 3217 003a 1368     		ldr	r3, [r2]
 3218 003c B146     		mov	r9, r6
 3219 003e 3360     		str	r3, [r6]
 248:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 3220              		.loc 1 248 0
 3221 0040 F878     		ldrb	r0, [r7, #3]
 3222 0042 0028     		cmp	r0, #0
 3223 0044 00D1     		bne	.LCB2819
 3224 0046 8FE0     		b	.L459	@long jump
 3225              	.LCB2819:
 3226              	.L430:
 257:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 3227              		.loc 1 257 0
 3228 0048 2268     		ldr	r2, [r4]
 3229 004a 632A     		cmp	r2, #99
 3230 004c 55D8     		bhi	.L460
 3231              	.L437:
 275:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 3232              		.loc 1 275 0
 3233 004e FA78     		ldrb	r2, [r7, #3]
 3234 0050 002A     		cmp	r2, #0
 3235 0052 11D1     		bne	.L441
 278:../Sources/main.c **** 		if(stopline_enable == 1)
 3236              		.loc 1 278 0
 3237 0054 C848     		ldr	r0, .L468+24
 277:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3238              		.loc 1 277 0
 3239 0056 0121     		mov	r1, #1
 278:../Sources/main.c **** 		if(stopline_enable == 1)
 3240              		.loc 1 278 0
 3241 0058 0678     		ldrb	r6, [r0]
 277:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3242              		.loc 1 277 0
 3243 005a F970     		strb	r1, [r7, #3]
 278:../Sources/main.c **** 		if(stopline_enable == 1)
 3244              		.loc 1 278 0
 3245 005c 012E     		cmp	r6, #1
 3246 005e 00D1     		bne	.LCB2833
 3247 0060 CAE0     		b	.L461	@long jump
 3248              	.LCB2833:
 3249              	.L442:
 282:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3250              		.loc 1 282 0
 3251 0062 C64B     		ldr	r3, .L468+28
 3252 0064 1868     		ldr	r0, [r3]
 3253 0066 FFF7FEFF 		bl	getTotalIntensity
 3254              	.LVL448:
 3255 006a C54D     		ldr	r5, .L468+32
 283:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3256              		.loc 1 283 0
 3257 006c C549     		ldr	r1, .L468+36
 282:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3258              		.loc 1 282 0
 3259 006e 2860     		str	r0, [r5]
 283:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3260              		.loc 1 283 0
 3261 0070 FFF7FEFF 		bl	calculateNewExposure
 3262              	.LVL449:
 3263 0074 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 3264              	.LVL450:
 3265              	.L441:
 286:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 3266              		.loc 1 286 0
 3267 0078 BA78     		ldrb	r2, [r7, #2]
 3268 007a 012A     		cmp	r2, #1
 3269 007c 00D8     		bhi	.LCB2850
 3270 007e C4E0     		b	.L462	@long jump
 3271              	.LCB2850:
 319:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 3272              		.loc 1 319 0
 3273 0080 032A     		cmp	r2, #3
 3274 0082 00D1     		bne	.LCB2852
 3275 0084 38E1     		b	.L463	@long jump
 3276              	.LCB2852:
 324:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 3277              		.loc 1 324 0
 3278 0086 022A     		cmp	r2, #2
 3279 0088 05D0     		beq	.L464
 3280              	.LVL451:
 3281              	.L425:
 361:../Sources/main.c **** }
 3282              		.loc 1 361 0
 3283              		@ sp needed for prologue
 3284 008a 3CBC     		pop	{r2, r3, r4, r5}
 3285 008c 9046     		mov	r8, r2
 3286 008e 9946     		mov	r9, r3
 3287 0090 A246     		mov	sl, r4
 3288 0092 AB46     		mov	fp, r5
 3289 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3290              	.LVL452:
 3291              	.L464:
 326:../Sources/main.c **** 		if(stopline_enable == 1)
 3292              		.loc 1 326 0
 3293 0096 B84F     		ldr	r7, .L468+24
 3294              	.LVL453:
 3295 0098 3878     		ldrb	r0, [r7]
 3296 009a 0128     		cmp	r0, #1
 3297 009c F5D1     		bne	.L425
 3298              	.LBB40:
 331:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 3299              		.loc 1 331 0
 3300 009e BA4E     		ldr	r6, .L468+40
 3301 00a0 3178     		ldrb	r1, [r6]
 3302 00a2 0029     		cmp	r1, #0
 3303 00a4 00D0     		beq	.LCB2881
 3304 00a6 33E1     		b	.L448	@long jump
 3305              	.LCB2881:
 3306              	.LBB41:
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3307              		.loc 1 334 0
 3308 00a8 6269     		ldr	r2, [r4, #20]
 333:../Sources/main.c **** 				stoplineJustDetected = 1;
 3309              		.loc 1 333 0
 3310 00aa 3070     		strb	r0, [r6]
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3311              		.loc 1 334 0
 3312 00ac B74F     		ldr	r7, .L468+44
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3313              		.loc 1 337 0
 3314 00ae B848     		ldr	r0, .L468+48
 3315 00b0 B84E     		ldr	r6, .L468+52
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3316              		.loc 1 334 0
 3317 00b2 3A60     		str	r2, [r7]
 3318              	.LVL454:
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3319              		.loc 1 337 0
 3320 00b4 3168     		ldr	r1, [r6]
 3321 00b6 0068     		ldr	r0, [r0]
 3322 00b8 FC24     		mov	r4, #252
 3323 00ba FFF7FEFF 		bl	__aeabi_fadd
 3324              	.LVL455:
 3325 00be A105     		lsl	r1, r4, #22
 3326 00c0 FFF7FEFF 		bl	__aeabi_fmul
 3327              	.LVL456:
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3328              		.loc 1 339 0
 3329 00c4 B449     		ldr	r1, .L468+56
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3330              		.loc 1 337 0
 3331 00c6 071C     		add	r7, r0, #0
 3332              	.LVL457:
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3333              		.loc 1 339 0
 3334 00c8 FFF7FEFF 		bl	__aeabi_fcmplt
 3335              	.LVL458:
 3336 00cc 0028     		cmp	r0, #0
 3337 00ce 00D1     		bne	.LCB2905
 3338 00d0 43E1     		b	.L465	@long jump
 3339              	.LCB2905:
 341:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 3340              		.loc 1 341 0
 3341 00d2 B24D     		ldr	r5, .L468+60
 3342              	.L449:
 3343              	.LVL459:
 344:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 3344              		.loc 1 344 0
 3345 00d4 B249     		ldr	r1, .L468+64
 3346 00d6 381C     		add	r0, r7, #0
 3347 00d8 FFF7FEFF 		bl	__aeabi_fmul
 3348              	.LVL460:
 3349 00dc B149     		ldr	r1, .L468+68
 3350 00de FFF7FEFF 		bl	__aeabi_fdiv
 3351              	.LVL461:
 3352 00e2 011C     		add	r1, r0, #0
 3353 00e4 281C     		add	r0, r5, #0
 3354 00e6 FFF7FEFF 		bl	__aeabi_fdiv
 3355              	.LVL462:
 3356 00ea AF49     		ldr	r1, .L468+72
 3357 00ec FFF7FEFF 		bl	__aeabi_fmul
 3358              	.LVL463:
 3359 00f0 FFF7FEFF 		bl	__aeabi_f2uiz
 3360              	.LVL464:
 3361 00f4 AD49     		ldr	r1, .L468+76
 3362 00f6 0860     		str	r0, [r1]
 3363 00f8 C7E7     		b	.L425
 3364              	.LVL465:
 3365              	.L460:
 3366              	.LBE41:
 3367              	.LBE40:
 259:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 3368              		.loc 1 259 0
 3369 00fa 0021     		mov	r1, #0
 3370 00fc 2160     		str	r1, [r4]
 260:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3371              		.loc 1 260 0
 3372 00fe 0B25     		mov	r5, #11
 3373 0100 7857     		ldrsb	r0, [r7, r5]
 3374 0102 0021     		mov	r1, #0
 3375 0104 AA4A     		ldr	r2, .L468+80
 3376 0106 FFF7FEFF 		bl	getDesiredServoValue
 3377              	.LVL466:
 262:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 3378              		.loc 1 262 0
 3379 010a 0021     		mov	r1, #0
 260:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3380              		.loc 1 260 0
 3381 010c 051C     		add	r5, r0, #0
 262:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 3382              		.loc 1 262 0
 3383 010e FFF7FEFF 		bl	__aeabi_fcmpgt
 3384              	.LVL467:
 3385 0112 0028     		cmp	r0, #0
 3386 0114 00D1     		bne	.LCB2950
 3387 0116 F8E0     		b	.L466	@long jump
 3388              	.LCB2950:
 263:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 3389              		.loc 1 263 0
 3390 0118 281C     		add	r0, r5, #0
 3391 011a A649     		ldr	r1, .L468+84
 3392 011c FFF7FEFF 		bl	__aeabi_fmul
 3393              	.LVL468:
 3394 0120 011C     		add	r1, r0, #0
 3395 0122 281C     		add	r0, r5, #0
 3396 0124 FFF7FEFF 		bl	__aeabi_fadd
 3397              	.LVL469:
 3398 0128 051C     		add	r5, r0, #0
 264:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 3399              		.loc 1 264 0
 3400 012a A348     		ldr	r0, .L468+88
 3401 012c 8246     		mov	sl, r0
 3402 012e 5146     		mov	r1, sl
 3403 0130 281C     		add	r0, r5, #0
 3404 0132 FFF7FEFF 		bl	__aeabi_fcmpgt
 3405              	.LVL470:
 266:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 3406              		.loc 1 266 0
 3407 0136 A14E     		ldr	r6, .L468+92
 264:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 3408              		.loc 1 264 0
 3409 0138 0028     		cmp	r0, #0
 3410 013a 59D1     		bne	.L440
 263:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 3411              		.loc 1 263 0
 3412 013c 3560     		str	r5, [r6]
 3413              	.L439:
 271:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 3414              		.loc 1 271 0
 3415 013e 291C     		add	r1, r5, #0
 3416 0140 0020     		mov	r0, #0
 3417 0142 FFF7FEFF 		bl	TFC_SetServo
 3418              	.LVL471:
 3419              	.LBB45:
 3420              	.LBB46:
 686:../Sources/main.c **** 
 687:../Sources/main.c **** void processRaceLine(carState_s* carState)
 688:../Sources/main.c **** {
 689:../Sources/main.c **** 	if(s_mode_enable)
 690:../Sources/main.c **** 	{	
 691:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 692:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 693:../Sources/main.c **** 				&& carState->crossSection == NO)
 694:../Sources/main.c **** 		{
 695:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 696:../Sources/main.c **** 			{
 697:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 698:../Sources/main.c **** 			}
 699:../Sources/main.c **** 		}
 700:../Sources/main.c **** 		else
 701:../Sources/main.c **** 		{
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 704:../Sources/main.c **** 		}
 705:../Sources/main.c **** 	}
 706:../Sources/main.c **** 	
 707:../Sources/main.c **** 	static float previousRaceLine = 0;
 708:../Sources/main.c **** 	
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 710:../Sources/main.c **** 	{
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 713:../Sources/main.c **** 	}
 714:../Sources/main.c **** 	else
 715:../Sources/main.c **** 	{
 716:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 718:../Sources/main.c **** 	}
 719:../Sources/main.c **** }
 720:../Sources/main.c **** 
 721:../Sources/main.c **** float targetSpeedAverage(float targetSpeed)
 722:../Sources/main.c **** {
 723:../Sources/main.c **** 	static float previousTargetSpeed = 0;
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 725:../Sources/main.c **** 	return previousTargetSpeed;
 726:../Sources/main.c **** }
 727:../Sources/main.c **** 
 728:../Sources/main.c **** float servoValueAverage(float servoValue)
 729:../Sources/main.c **** {
 730:../Sources/main.c **** 	static float previousServoValue = 0;
 731:../Sources/main.c **** 	previousServoValue = SERVO_LOWPASS_COEFF*previousServoValue + (1-SERVO_LOWPASS_COEFF)*servoValue;
 3421              		.loc 1 731 0
 3422 0146 9E4D     		ldr	r5, .L468+96
 3423 0148 9E49     		ldr	r1, .L468+100
 3424 014a 2868     		ldr	r0, [r5]
 3425 014c FFF7FEFF 		bl	__aeabi_fmul
 3426              	.LVL472:
 3427 0150 9D49     		ldr	r1, .L468+104
 3428 0152 8346     		mov	fp, r0
 3429 0154 3068     		ldr	r0, [r6]
 3430              	.LVL473:
 3431 0156 FFF7FEFF 		bl	__aeabi_fmul
 3432              	.LVL474:
 3433 015a 011C     		add	r1, r0, #0
 3434 015c 5846     		mov	r0, fp
 3435 015e FFF7FEFF 		bl	__aeabi_fadd
 3436              	.LVL475:
 3437 0162 2860     		str	r0, [r5]
 3438              	.LBE46:
 3439              	.LBE45:
 272:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 3440              		.loc 1 272 0
 3441 0164 3060     		str	r0, [r6]
 3442 0166 72E7     		b	.L437
 3443              	.L459:
 250:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3444              		.loc 1 250 0
 3445 0168 9149     		ldr	r1, .L468+80
 252:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3446              		.loc 1 252 0
 3447 016a 844D     		ldr	r5, .L468+28
 3448 016c 974E     		ldr	r6, .L468+108
 250:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3449              		.loc 1 250 0
 3450 016e 0870     		strb	r0, [r1]
 252:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3451              		.loc 1 252 0
 3452 0170 3A1C     		mov	r2, r7
 3453 0172 2868     		ldr	r0, [r5]
 3454 0174 3168     		ldr	r1, [r6]
 3455 0176 FFF7FEFF 		bl	findLine
 3456              	.LVL476:
 3457              	.LBB47:
 3458              	.LBB48:
 689:../Sources/main.c **** 	if(s_mode_enable)
 3459              		.loc 1 689 0
 3460 017a 954A     		ldr	r2, .L468+112
 3461 017c 1378     		ldrb	r3, [r2]
 3462 017e 002B     		cmp	r3, #0
 3463 0180 25D1     		bne	.L431
 3464 0182 797A     		ldrb	r1, [r7, #9]
 3465 0184 B87A     		ldrb	r0, [r7, #10]
 3466              	.L432:
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 3467              		.loc 1 709 0
 3468 0186 0129     		cmp	r1, #1
 3469 0188 00D1     		bne	.LCB3028
 3470 018a 37E1     		b	.L467	@long jump
 3471              	.LCB3028:
 3472              	.L436:
 716:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 3473              		.loc 1 716 0
 3474 018c F872     		strb	r0, [r7, #11]
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 3475              		.loc 1 717 0
 3476 018e 40B2     		sxtb	r0, r0
 3477 0190 FFF7FEFF 		bl	__aeabi_i2f
 3478              	.LVL477:
 3479 0194 8F4E     		ldr	r6, .L468+116
 3480 0196 3060     		str	r0, [r6]
 3481 0198 56E7     		b	.L430
 3482              	.LVL478:
 3483              	.L458:
 3484              	.LBE48:
 3485              	.LBE47:
 228:../Sources/main.c **** 		TFC_Ticker[5]=0;
 3486              		.loc 1 228 0
 3487 019a 0025     		mov	r5, #0
 229:../Sources/main.c **** 		LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 3488              		.loc 1 229 0
 3489 019c 381C     		mov	r0, r7
 228:../Sources/main.c **** 		TFC_Ticker[5]=0;
 3490              		.loc 1 228 0
 3491 019e 6561     		str	r5, [r4, #20]
 229:../Sources/main.c **** 		LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 3492              		.loc 1 229 0
 3493 01a0 FFF7FEFF 		bl	LCDwriteState
 3494              	.LVL479:
 3495 01a4 47E7     		b	.L429
 3496              	.L457:
 221:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 3497              		.loc 1 221 0
 3498 01a6 0020     		mov	r0, #0
 3499 01a8 2061     		str	r0, [r4, #16]
 222:../Sources/main.c **** 		telemetrySendData();
 3500              		.loc 1 222 0
 3501 01aa FFF7FEFF 		bl	telemetrySendData
 3502              	.LVL480:
 223:../Sources/main.c **** 		telemetryReadData();
 3503              		.loc 1 223 0
 3504 01ae FFF7FEFF 		bl	telemetryReadData
 3505              	.LVL481:
 3506 01b2 3CE7     		b	.L428
 3507              	.L456:
 214:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 3508              		.loc 1 214 0
 3509 01b4 0026     		mov	r6, #0
 3510 01b6 A661     		str	r6, [r4, #24]
 215:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 3511              		.loc 1 215 0
 3512 01b8 FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 3513              	.LVL482:
 3514 01bc 864A     		ldr	r2, .L468+120
 3515 01be 1060     		str	r0, [r2]
 3516 01c0 31E7     		b	.L427
 3517              	.L455:
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 3518              		.loc 1 208 0
 3519 01c2 714B     		ldr	r3, .L468+40
 3520 01c4 0022     		mov	r2, #0
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3521              		.loc 1 209 0
 3522 01c6 0320     		mov	r0, #3
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 3523              		.loc 1 208 0
 3524 01c8 1A70     		strb	r2, [r3]
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3525              		.loc 1 209 0
 3526 01ca B870     		strb	r0, [r7, #2]
 3527 01cc 25E7     		b	.L426
 3528              	.LVL483:
 3529              	.L431:
 3530              	.LBB52:
 3531              	.LBB49:
 691:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 3532              		.loc 1 691 0
 3533 01ce B87A     		ldrb	r0, [r7, #10]
 3534 01d0 45B2     		sxtb	r5, r0
 3535 01d2 092D     		cmp	r5, #9
 3536 01d4 14DC     		bgt	.L433
 692:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 3537              		.loc 1 692 0
 3538 01d6 397B     		ldrb	r1, [r7, #12]
 3539 01d8 4629     		cmp	r1, #70
 3540 01da 11D9     		bls	.L433
 693:../Sources/main.c **** 				&& carState->crossSection == NO)
 3541              		.loc 1 693 0
 3542 01dc BE79     		ldrb	r6, [r7, #6]
 3543 01de 002E     		cmp	r6, #0
 3544 01e0 0ED1     		bne	.L433
 695:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 3545              		.loc 1 695 0
 3546 01e2 E369     		ldr	r3, [r4, #28]
 3547 01e4 7D4A     		ldr	r2, .L468+124
 3548 01e6 9342     		cmp	r3, r2
 3549 01e8 00D9     		bls	.LCB3100
 3550 01ea 21E1     		b	.L434	@long jump
 3551              	.LCB3100:
 3552 01ec 797A     		ldrb	r1, [r7, #9]
 3553 01ee CAE7     		b	.L432
 3554              	.LVL484:
 3555              	.L440:
 3556              	.LBE49:
 3557              	.LBE52:
 266:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 3558              		.loc 1 266 0
 3559 01f0 5346     		mov	r3, sl
 3560 01f2 3360     		str	r3, [r6]
 3561 01f4 5546     		mov	r5, sl
 3562 01f6 A2E7     		b	.L439
 3563              	.L461:
 280:../Sources/main.c **** 			findStop(carState);
 3564              		.loc 1 280 0
 3565 01f8 381C     		mov	r0, r7
 3566 01fa FFF7FEFF 		bl	findStop
 3567              	.LVL485:
 3568 01fe 30E7     		b	.L442
 3569              	.LVL486:
 3570              	.L433:
 3571              	.LBB53:
 3572              	.LBB50:
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 3573              		.loc 1 702 0
 3574 0200 0025     		mov	r5, #0
 3575 0202 7D72     		strb	r5, [r7, #9]
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 3576              		.loc 1 703 0
 3577 0204 E561     		str	r5, [r4, #28]
 3578 0206 B87A     		ldrb	r0, [r7, #10]
 3579 0208 C0E7     		b	.L436
 3580              	.LVL487:
 3581              	.L462:
 3582              	.LBE50:
 3583              	.LBE53:
 3584              	.LBB54:
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3585              		.loc 1 288 0
 3586 020a 6C4E     		ldr	r6, .L468+92
 3587 020c 3068     		ldr	r0, [r6]
 3588 020e FFF7FEFF 		bl	getRadiusRoot
 3589              	.LVL488:
 3590 0212 7349     		ldr	r1, .L468+128
 3591 0214 021C     		add	r2, r0, #0
 3592 0216 381C     		mov	r0, r7
 3593 0218 FFF7FEFF 		bl	getDesiredSpeed
 3594              	.LVL489:
 3595              	.LBB55:
 3596              	.LBB56:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3597              		.loc 1 724 0
 3598 021c 714C     		ldr	r4, .L468+132
 3599              	.LBE56:
 3600              	.LBE55:
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3601              		.loc 1 288 0
 3602 021e 8046     		mov	r8, r0
 3603              	.LVL490:
 3604              	.LBB59:
 3605              	.LBB57:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3606              		.loc 1 724 0
 3607 0220 7149     		ldr	r1, .L468+136
 3608 0222 2068     		ldr	r0, [r4]
 3609              	.LVL491:
 3610 0224 FFF7FEFF 		bl	__aeabi_fmul
 3611              	.LVL492:
 3612 0228 FFF7FEFF 		bl	__aeabi_f2d
 3613              	.LVL493:
 3614 022c A246     		mov	sl, r4
 3615 022e 041C     		mov	r4, r0
 3616 0230 4046     		mov	r0, r8
 3617 0232 0D1C     		mov	r5, r1
 3618 0234 FFF7FEFF 		bl	__aeabi_f2d
 3619              	.LVL494:
 3620 0238 4A4B     		ldr	r3, .L468+4
 3621 023a 494A     		ldr	r2, .L468
 3622 023c FFF7FEFF 		bl	__aeabi_dmul
 3623              	.LVL495:
 3624 0240 021C     		mov	r2, r0
 3625 0242 0B1C     		mov	r3, r1
 3626 0244 201C     		mov	r0, r4
 3627 0246 291C     		mov	r1, r5
 3628 0248 FFF7FEFF 		bl	__aeabi_dadd
 3629              	.LVL496:
 3630 024c FFF7FEFF 		bl	__aeabi_d2f
 3631              	.LVL497:
 3632              	.LBE57:
 3633              	.LBE59:
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3634              		.loc 1 288 0
 3635 0250 664C     		ldr	r4, .L468+140
 3636              	.LBB60:
 3637              	.LBB58:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3638              		.loc 1 724 0
 3639 0252 5146     		mov	r1, sl
 3640 0254 0860     		str	r0, [r1]
 3641              	.LBE58:
 3642              	.LBE60:
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3643              		.loc 1 288 0
 3644 0256 2060     		str	r0, [r4]
 291:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 3645              		.loc 1 291 0
 3646 0258 0021     		mov	r1, #0
 3647 025a 3068     		ldr	r0, [r6]
 3648 025c FFF7FEFF 		bl	getActiveDifferentialModifier
 3649              	.LVL498:
 3650 0260 0121     		mov	r1, #1
 3651 0262 8346     		mov	fp, r0
 3652              	.LVL499:
 3653 0264 3068     		ldr	r0, [r6]
 3654              	.LVL500:
 3655 0266 FFF7FEFF 		bl	getActiveDifferentialModifier
 3656              	.LVL501:
 3657 026a 8246     		mov	sl, r0
 3658              	.LVL502:
 295:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 3659              		.loc 1 295 0
 3660 026c 0020     		mov	r0, #0
 3661              	.LVL503:
 3662 026e FFF7FEFF 		bl	getSpeed
 3663              	.LVL504:
 3664 0272 484E     		ldr	r6, .L468+52
 3665 0274 3060     		str	r0, [r6]
 296:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 3666              		.loc 1 296 0
 3667 0276 0120     		mov	r0, #1
 3668 0278 FFF7FEFF 		bl	getSpeed
 3669              	.LVL505:
 3670 027c 444D     		ldr	r5, .L468+48
 3671 027e 2860     		str	r0, [r5]
 308:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 3672              		.loc 1 308 0
 3673 0280 7F78     		ldrb	r7, [r7, #1]
 3674              	.LVL506:
 3675 0282 012F     		cmp	r7, #1
 3676 0284 00D0     		beq	.LCB3223
 3677 0286 00E7     		b	.L425	@long jump
 3678              	.LCB3223:
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 3679              		.loc 1 311 0
 3680 0288 4B46     		mov	r3, r9
 3681 028a 1868     		ldr	r0, [r3]
 3682 028c 5849     		ldr	r1, .L468+144
 3683 028e FFF7FEFF 		bl	__aeabi_fdiv
 3684              	.LVL507:
 3685 0292 2168     		ldr	r1, [r4]
 3686 0294 8046     		mov	r8, r0
 3687              	.LVL508:
 3688 0296 5846     		mov	r0, fp
 3689 0298 FFF7FEFF 		bl	__aeabi_fmul
 3690              	.LVL509:
 3691 029c 071C     		add	r7, r0, #0
 3692 029e 0020     		mov	r0, #0
 3693 02a0 3668     		ldr	r6, [r6]
 3694 02a2 FFF7FEFF 		bl	isANewmeasurementAvailable
 3695              	.LVL510:
 3696 02a6 0023     		mov	r3, #0
 3697 02a8 021C     		mov	r2, r0
 3698 02aa 311C     		add	r1, r6, #0
 3699 02ac 381C     		add	r0, r7, #0
 3700 02ae FFF7FEFF 		bl	getDesiredMotorPWM
 3701              	.LVL511:
 3702 02b2 011C     		add	r1, r0, #0
 310:../Sources/main.c **** 			TFC_SetMotorPWM(
 3703              		.loc 1 310 0
 3704 02b4 4046     		mov	r0, r8
 3705 02b6 FFF7FEFF 		bl	__aeabi_fmul
 3706              	.LVL512:
 312:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3707              		.loc 1 312 0
 3708 02ba 4A46     		mov	r2, r9
 310:../Sources/main.c **** 			TFC_SetMotorPWM(
 3709              		.loc 1 310 0
 3710 02bc 061C     		add	r6, r0, #0
 312:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3711              		.loc 1 312 0
 3712 02be 4C49     		ldr	r1, .L468+144
 3713 02c0 1068     		ldr	r0, [r2]
 3714 02c2 FFF7FEFF 		bl	__aeabi_fdiv
 3715              	.LVL513:
 3716 02c6 2168     		ldr	r1, [r4]
 3717 02c8 071C     		add	r7, r0, #0
 3718 02ca 5046     		mov	r0, sl
 3719 02cc FFF7FEFF 		bl	__aeabi_fmul
 3720              	.LVL514:
 3721 02d0 8146     		mov	r9, r0
 3722 02d2 0120     		mov	r0, #1
 3723 02d4 2C68     		ldr	r4, [r5]
 3724 02d6 FFF7FEFF 		bl	isANewmeasurementAvailable
 3725              	.LVL515:
 3726 02da 211C     		add	r1, r4, #0
 3727 02dc 021C     		mov	r2, r0
 3728 02de 0123     		mov	r3, #1
 3729 02e0 4846     		mov	r0, r9
 3730 02e2 FFF7FEFF 		bl	getDesiredMotorPWM
 3731              	.LVL516:
 3732 02e6 011C     		add	r1, r0, #0
 310:../Sources/main.c **** 			TFC_SetMotorPWM(
 3733              		.loc 1 310 0
 3734 02e8 381C     		add	r0, r7, #0
 3735 02ea FFF7FEFF 		bl	__aeabi_fmul
 3736              	.LVL517:
 3737 02ee 011C     		add	r1, r0, #0
 3738 02f0 301C     		add	r0, r6, #0
 3739 02f2 FFF7FEFF 		bl	TFC_SetMotorPWM
 3740              	.LVL518:
 3741 02f6 C8E6     		b	.L425
 3742              	.LVL519:
 3743              	.L463:
 3744              	.LBE54:
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 3745              		.loc 1 321 0
 3746 02f8 8023     		mov	r3, #128
 3747 02fa 3E48     		ldr	r0, .L468+148
 3748 02fc 9A03     		lsl	r2, r3, #14
 3749 02fe 8260     		str	r2, [r0, #8]
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 3750              		.loc 1 322 0
 3751 0300 0020     		mov	r0, #0
 3752 0302 011C     		add	r1, r0, #0
 3753 0304 FFF7FEFF 		bl	TFC_SetMotorPWM
 3754              	.LVL520:
 3755 0308 BFE6     		b	.L425
 3756              	.L466:
 260:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3757              		.loc 1 260 0
 3758 030a 2C4E     		ldr	r6, .L468+92
 3759 030c 3560     		str	r5, [r6]
 3760 030e 16E7     		b	.L439
 3761              	.LVL521:
 3762              	.L448:
 3763              	.LBB61:
 346:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 3764              		.loc 1 346 0
 3765 0310 1E4B     		ldr	r3, .L468+44
 3766 0312 264F     		ldr	r7, .L468+76
 3767 0314 6469     		ldr	r4, [r4, #20]
 3768 0316 1D68     		ldr	r5, [r3]
 3769 0318 3868     		ldr	r0, [r7]
 3770 031a 621B     		sub	r2, r4, r5
 3771 031c 8242     		cmp	r2, r0
 3772 031e 00D2     		bcs	.LCB3317
 3773 0320 B3E6     		b	.L425	@long jump
 3774              	.LCB3317:
 3775              	.LBB42:
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3776              		.loc 1 348 0
 3777 0322 0020     		mov	r0, #0
 3778 0324 FFF7FEFF 		bl	getSpeed
 3779              	.LVL522:
 3780 0328 061C     		add	r6, r0, #0
 3781              	.LVL523:
 3782 032a 0120     		mov	r0, #1
 3783              	.LVL524:
 3784 032c FFF7FEFF 		bl	getSpeed
 3785              	.LVL525:
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3786              		.loc 1 350 0
 3787 0330 8021     		mov	r1, #128
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3788              		.loc 1 348 0
 3789 0332 041C     		add	r4, r0, #0
 3790              	.LVL526:
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3791              		.loc 1 350 0
 3792 0334 C905     		lsl	r1, r1, #23
 3793 0336 301C     		add	r0, r6, #0
 3794              	.LVL527:
 3795 0338 FFF7FEFF 		bl	__aeabi_fcmpgt
 3796              	.LVL528:
 3797 033c 0028     		cmp	r0, #0
 3798 033e 06D1     		bne	.L450
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3799              		.loc 1 350 0 is_stmt 0
 3800 0340 8023     		mov	r3, #128
 3801 0342 201C     		add	r0, r4, #0
 3802 0344 D905     		lsl	r1, r3, #23
 3803 0346 FFF7FEFF 		bl	__aeabi_fcmpgt
 3804              	.LVL529:
 3805 034a 0028     		cmp	r0, #0
 3806 034c 73D0     		beq	.L454
 3807              	.L450:
 352:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 3808              		.loc 1 352 0 is_stmt 1
 3809 034e BF25     		mov	r5, #191
 3810 0350 2806     		lsl	r0, r5, #24
 3811 0352 011C     		add	r1, r0, #0
 3812 0354 FFF7FEFF 		bl	TFC_SetMotorPWM
 3813              	.LVL530:
 3814 0358 97E6     		b	.L425
 3815              	.LVL531:
 3816              	.L465:
 3817              	.LBE42:
 3818              	.LBB43:
 336:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 3819              		.loc 1 336 0
 3820 035a 274D     		ldr	r5, .L468+152
 3821 035c BAE6     		b	.L449
 3822              	.L469:
 3823 035e C046     		.align	3
 3824              	.L468:
 3825 0360 9A999999 		.word	-1717986918
 3826 0364 9999B93F 		.word	1069128089
 3827 0368 00000000 		.word	TFC_Ticker
 3828 036c E7030000 		.word	999
 3829 0370 00000000 		.word	.LANCHOR7
 3830 0374 00000000 		.word	incline_speed
 3831 0378 00000000 		.word	.LANCHOR16
 3832 037c 00000000 		.word	LineScanImage0
 3833 0380 00000000 		.word	.LANCHOR17
 3834 0384 E0930400 		.word	300000
 3835 0388 00000000 		.word	.LANCHOR11
 3836 038c 00000000 		.word	.LANCHOR21
 3837 0390 00000000 		.word	.LANCHOR20
 3838 0394 00000000 		.word	.LANCHOR19
 3839 0398 00002041 		.word	1092616192
 3840 039c 6666263F 		.word	1059481190
 3841 03a0 F90F4940 		.word	1078530041
 3842 03a4 0000A041 		.word	1101004800
 3843 03a8 00401C46 		.word	1176256512
 3844 03ac 00000000 		.word	.LANCHOR22
 3845 03b0 00000000 		.word	.LANCHOR12
 3846 03b4 9A99993E 		.word	1050253722
 3847 03b8 F628DC3E 		.word	1054615798
 3848 03bc 00000000 		.word	.LANCHOR5
 3849 03c0 00000000 		.word	.LANCHOR15
 3850 03c4 CDCC4C3F 		.word	1061997773
 3851 03c8 CCCC4C3E 		.word	1045220556
 3852 03cc 00000000 		.word	LineScanImage1
 3853 03d0 00000000 		.word	.LANCHOR13
 3854 03d4 00000000 		.word	.LANCHOR14
 3855 03d8 00000000 		.word	.LANCHOR2
 3856 03dc 94110000 		.word	4500
 3857 03e0 00807A43 		.word	1132101632
 3858 03e4 00000000 		.word	.LANCHOR18
 3859 03e8 6666663F 		.word	1063675494
 3860 03ec 00000000 		.word	.LANCHOR4
 3861 03f0 0000C842 		.word	1120403456
 3862 03f4 00F10F40 		.word	1074786560
 3863 03f8 CDCCCC3E 		.word	1053609165
 3864              	.LVL532:
 3865              	.L467:
 3866 03fc 45B2     		sxtb	r5, r0
 3867              	.L435:
 3868              	.LBE43:
 3869              	.LBE61:
 3870              	.LBB62:
 3871              	.LBB51:
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3872              		.loc 1 711 0
 3873 03fe 104E     		ldr	r6, .L470
 3874 0400 1049     		ldr	r1, .L470+4
 3875 0402 3068     		ldr	r0, [r6]
 3876 0404 FFF7FEFF 		bl	__aeabi_fmul
 3877              	.LVL533:
 3878 0408 8046     		mov	r8, r0
 3879 040a 281C     		mov	r0, r5
 3880 040c FFF7FEFF 		bl	__aeabi_i2f
 3881              	.LVL534:
 3882 0410 0D49     		ldr	r1, .L470+8
 3883 0412 FFF7FEFF 		bl	__aeabi_fmul
 3884              	.LVL535:
 3885 0416 011C     		add	r1, r0, #0
 3886 0418 4046     		mov	r0, r8
 3887 041a FFF7FEFF 		bl	__aeabi_fadd
 3888              	.LVL536:
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3889              		.loc 1 712 0
 3890 041e FC23     		mov	r3, #252
 3891 0420 9905     		lsl	r1, r3, #22
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3892              		.loc 1 711 0
 3893 0422 3060     		str	r0, [r6]
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3894              		.loc 1 712 0
 3895 0424 FFF7FEFF 		bl	__aeabi_fadd
 3896              	.LVL537:
 3897 0428 FFF7FEFF 		bl	__aeabi_f2uiz
 3898              	.LVL538:
 3899 042c F872     		strb	r0, [r7, #11]
 3900 042e 0BE6     		b	.L430
 3901              	.L434:
 697:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 3902              		.loc 1 697 0
 3903 0430 0120     		mov	r0, #1
 3904 0432 7872     		strb	r0, [r7, #9]
 3905 0434 E3E7     		b	.L435
 3906              	.LVL539:
 3907              	.L454:
 3908              	.LBE51:
 3909              	.LBE62:
 3910              	.LBB63:
 3911              	.LBB44:
 356:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 3912              		.loc 1 356 0
 3913 0436 0020     		mov	r0, #0
 3914 0438 011C     		add	r1, r0, #0
 3915 043a FFF7FEFF 		bl	TFC_SetMotorPWM
 3916              	.LVL540:
 3917 043e 24E6     		b	.L425
 3918              	.L471:
 3919              		.align	2
 3920              	.L470:
 3921 0440 00000000 		.word	.LANCHOR14
 3922 0444 6666663F 		.word	1063675494
 3923 0448 D0CCCC3D 		.word	1036831952
 3924              	.LBE44:
 3925              	.LBE63:
 3926              		.cfi_endproc
 3927              	.LFE1:
 3929 044c C046C046 		.section	.text.startup.main,"ax",%progbits
 3930              		.align	2
 3931              		.global	main
 3932              		.code	16
 3933              		.thumb_func
 3935              	main:
 3936              	.LFB0:
 121:../Sources/main.c **** {
 3937              		.loc 1 121 0
 3938              		.cfi_startproc
 3939 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3940              	.LCFI17:
 3941              		.cfi_def_cfa_offset 20
 3942              		.cfi_offset 4, -20
 3943              		.cfi_offset 5, -16
 3944              		.cfi_offset 6, -12
 3945              		.cfi_offset 7, -8
 3946              		.cfi_offset 14, -4
 3947 0002 5F46     		mov	r7, fp
 3948 0004 4D46     		mov	r5, r9
 3949 0006 5646     		mov	r6, sl
 3950 0008 4446     		mov	r4, r8
 3951 000a F0B4     		push	{r4, r5, r6, r7}
 3952              	.LCFI18:
 3953              		.cfi_def_cfa_offset 36
 3954              		.cfi_offset 8, -36
 3955              		.cfi_offset 9, -32
 3956              		.cfi_offset 10, -28
 3957              		.cfi_offset 11, -24
 122:../Sources/main.c **** 	TFC_Init(&carState);
 3958              		.loc 1 122 0
 3959 000c DC49     		ldr	r1, .L569
 121:../Sources/main.c **** {
 3960              		.loc 1 121 0
 3961 000e CDB0     		sub	sp, sp, #308
 3962              	.LCFI19:
 3963              		.cfi_def_cfa_offset 344
 122:../Sources/main.c **** 	TFC_Init(&carState);
 3964              		.loc 1 122 0
 3965 0010 081C     		mov	r0, r1
 3966 0012 8B46     		mov	fp, r1
 3967 0014 FFF7FEFF 		bl	TFC_Init
 3968              	.LVL541:
 3969 0018 DA4A     		ldr	r2, .L569+4
 123:../Sources/main.c **** 	while(TFC_Ticker[5]<=10000){
 3970              		.loc 1 123 0
 3971 001a DB4B     		ldr	r3, .L569+8
 3972 001c 9146     		mov	r9, r2
 3973              	.L473:
 123:../Sources/main.c **** 	while(TFC_Ticker[5]<=10000){
 3974              		.loc 1 123 0 is_stmt 0
 3975 001e 4846     		mov	r0, r9
 3976 0020 4469     		ldr	r4, [r0, #20]
 3977 0022 9C42     		cmp	r4, r3
 3978 0024 FBD9     		bls	.L473
 3979 0026 D94D     		ldr	r5, .L569+12
 3980 0028 D94E     		ldr	r6, .L569+16
 3981 002a A846     		mov	r8, r5
 3982 002c D94F     		ldr	r7, .L569+20
 3983 002e DA4D     		ldr	r5, .L569+24
 3984 0030 71E0     		b	.L525
 3985              	.LVL542:
 3986              	.L555:
 3987              	.LBB94:
 3988              	.LBB95:
 479:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 3989              		.loc 1 479 0 is_stmt 1
 3990 0032 DA4A     		ldr	r2, .L569+28
 3991 0034 9068     		ldr	r0, [r2, #8]
 3992 0036 4405     		lsl	r4, r0, #21
 3993 0038 650F     		lsr	r5, r4, #29
 3994 003a 022D     		cmp	r5, #2
 3995 003c 76D0     		beq	.L474
 3996              	.L475:
 481:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 3997              		.loc 1 481 0
 3998 003e D74D     		ldr	r5, .L569+28
 3999 0040 D74A     		ldr	r2, .L569+32
 4000 0042 A968     		ldr	r1, [r5, #8]
 482:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 4001              		.loc 1 482 0
 4002 0044 8020     		mov	r0, #128
 481:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4003              		.loc 1 481 0
 4004 0046 0A40     		and	r2, r1
 4005 0048 AA60     		str	r2, [r5, #8]
 482:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 4006              		.loc 1 482 0
 4007 004a AB68     		ldr	r3, [r5, #8]
 4008 004c 8400     		lsl	r4, r0, #2
 4009 004e 1C43     		orr	r4, r3
 4010 0050 AC60     		str	r4, [r5, #8]
 483:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 4011              		.loc 1 483 0
 4012 0052 0C20     		mov	r0, #12
 4013 0054 FFF7FEFF 		bl	enable_irq
 4014              	.LVL543:
 484:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 4015              		.loc 1 484 0
 4016 0058 0025     		mov	r5, #0
 4017 005a 5946     		mov	r1, fp
 4018 005c 4D70     		strb	r5, [r1, #1]
 4019              	.L477:
 4020              	.LVL544:
 4021              	.LBE95:
 4022              	.LBE94:
 4023              	.LBB98:
 4024              	.LBB99:
 465:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 4025              		.loc 1 465 0
 4026 005e FFF7FEFF 		bl	TFC_GetDIP_Switch
 4027              	.LVL545:
 4028              	.LBE99:
 4029 0062 0124     		mov	r4, #1
 4030              	.LBB100:
 4031 0064 0442     		tst	r4, r0
 4032 0066 00D1     		bne	.LCB3597
 4033 0068 84E0     		b	.L480	@long jump
 4034              	.LCB3597:
 4035              	.L556:
 467:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 4036              		.loc 1 467 0
 4037 006a 8025     		mov	r5, #128
 4038 006c CD4A     		ldr	r2, .L569+36
 4039 006e A903     		lsl	r1, r5, #14
 468:../Sources/main.c **** 		carState->motorState = RUNNING;
 4040              		.loc 1 468 0
 4041 0070 5846     		mov	r0, fp
 467:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 4042              		.loc 1 467 0
 4043 0072 5160     		str	r1, [r2, #4]
 468:../Sources/main.c **** 		carState->motorState = RUNNING;
 4044              		.loc 1 468 0
 4045 0074 0470     		strb	r4, [r0]
 4046              	.L481:
 4047              	.LVL546:
 4048              	.LBE100:
 4049              	.LBE98:
 4050              	.LBB103:
 4051              	.LBB104:
 498:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 4052              		.loc 1 498 0
 4053 0076 CC4C     		ldr	r4, .L569+40
 4054 0078 CC49     		ldr	r1, .L569+44
 4055 007a 2068     		ldr	r0, [r4]
 4056 007c FFF7FEFF 		bl	__aeabi_fcmpgt
 4057              	.LVL547:
 4058 0080 0028     		cmp	r0, #0
 4059 0082 00D1     		bne	.LCB3618
 4060 0084 8BE0     		b	.L536	@long jump
 4061              	.LCB3618:
 4062              	.L557:
 500:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 4063              		.loc 1 500 0
 4064 0086 5B46     		mov	r3, fp
 4065 0088 9878     		ldrb	r0, [r3, #2]
 4066 008a 0228     		cmp	r0, #2
 4067 008c 00D1     		bne	.LCB3623
 4068 008e BBE1     		b	.L546	@long jump
 4069              	.LCB3623:
 508:../Sources/main.c **** 		else if(carState->crossSection == YES)
 4070              		.loc 1 508 0
 4071 0090 9A79     		ldrb	r2, [r3, #6]
 4072 0092 5946     		mov	r1, fp
 4073 0094 012A     		cmp	r2, #1
 4074 0096 00D1     		bne	.LCB3627
 4075 0098 C2E1     		b	.L547	@long jump
 4076              	.LCB3627:
 516:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 4077              		.loc 1 516 0
 4078 009a 5D7A     		ldrb	r5, [r3, #9]
 4079 009c 5C46     		mov	r4, fp
 4080 009e 012D     		cmp	r5, #1
 4081 00a0 00D1     		bne	.LCB3631
 4082 00a2 41E2     		b	.L548	@long jump
 4083              	.LCB3631:
 523:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 4084              		.loc 1 523 0
 4085 00a4 0979     		ldrb	r1, [r1, #4]
 4086 00a6 0229     		cmp	r1, #2
 4087 00a8 00D1     		bne	.LCB3634
 4088 00aa 87E2     		b	.L549	@long jump
 4089              	.LCB3634:
 530:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 4090              		.loc 1 530 0
 4091 00ac 6479     		ldrb	r4, [r4, #5]
 4092 00ae 012C     		cmp	r4, #1
 4093 00b0 00D1     		bne	.LCB3637
 4094 00b2 94E2     		b	.L550	@long jump
 4095              	.LCB3637:
 537:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 4096              		.loc 1 537 0
 4097 00b4 022C     		cmp	r4, #2
 4098 00b6 00D1     		bne	.LCB3639
 4099 00b8 D1E2     		b	.L551	@long jump
 4100              	.LCB3639:
 544:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 4101              		.loc 1 544 0
 4102 00ba 0128     		cmp	r0, #1
 4103 00bc 00D1     		bne	.LCB3641
 4104 00be 69E3     		b	.L552	@long jump
 4105              	.LCB3641:
 551:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 4106              		.loc 1 551 0
 4107 00c0 0328     		cmp	r0, #3
 4108 00c2 00D1     		bne	.LCB3643
 4109 00c4 5BE3     		b	.L553	@long jump
 4110              	.LCB3643:
 4111              	.L485:
 4112              	.LBE104:
 4113              	.LBE103:
 148:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 4114              		.loc 1 148 0
 4115 00c6 0120     		mov	r0, #1
 4116 00c8 FFF7FEFF 		bl	getSpeed
 4117              	.LVL548:
 4118 00cc FFF7FEFF 		bl	__aeabi_f2d
 4119              	.LVL549:
 4120 00d0 0B1C     		mov	r3, r1
 4121 00d2 021C     		mov	r2, r0
 4122 00d4 391C     		mov	r1, r7
 4123 00d6 301C     		mov	r0, r6
 4124 00d8 FFF7FEFF 		bl	Qprintf
 4125              	.LVL550:
 151:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 4126              		.loc 1 151 0
 4127 00dc FFF7FEFF 		bl	TFC_GetDIP_Switch
 4128              	.LVL551:
 4129 00e0 4307     		lsl	r3, r0, #29
 4130 00e2 9C0F     		lsr	r4, r3, #30
 4131 00e4 022C     		cmp	r4, #2
 4132 00e6 00D1     		bne	.LCB3665
 4133 00e8 FAE0     		b	.L494	@long jump
 4134              	.LCB3665:
 4135 00ea 032C     		cmp	r4, #3
 4136 00ec 73D0     		beq	.L495
 4137 00ee 012C     		cmp	r4, #1
 4138 00f0 00D1     		bne	.LCB3669
 4139 00f2 E9E0     		b	.L493	@long jump
 4140              	.LCB3669:
 4141              	.LVL552:
 4142              	.LBB112:
 4143              	.LBB113:
 365:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 4144              		.loc 1 365 0
 4145 00f4 4846     		mov	r0, r9
 4146 00f6 0168     		ldr	r1, [r0]
 4147 00f8 C729     		cmp	r1, #199
 4148 00fa 04D9     		bls	.L497
 4149 00fc 5A46     		mov	r2, fp
 4150 00fe D578     		ldrb	r5, [r2, #3]
 4151 0100 002D     		cmp	r5, #0
 4152 0102 00D1     		bne	.LCB3680
 4153 0104 26E2     		b	.L554	@long jump
 4154              	.LCB3680:
 4155              	.LVL553:
 4156              	.L497:
 4157              	.LBE113:
 4158              	.LBE112:
 194:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 4159              		.loc 1 194 0
 4160 0106 A44C     		ldr	r4, .L569+24
 4161 0108 4D46     		mov	r5, r9
 4162 010a 6869     		ldr	r0, [r5, #20]
 4163 010c 2388     		ldrh	r3, [r4]
 4164 010e A84A     		ldr	r2, .L569+48
 4165 0110 C11A     		sub	r1, r0, r3
 4166 0112 1180     		strh	r1, [r2]
 4167 0114 251C     		mov	r5, r4
 4168              	.LVL554:
 4169              	.L525:
 135:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 4170              		.loc 1 135 0
 4171 0116 4946     		mov	r1, r9
 4172 0118 4B69     		ldr	r3, [r1, #20]
 4173 011a 2B80     		strh	r3, [r5]
 4174              	.LBB117:
 4175              	.LBB118:
 458:../Sources/main.c **** 	TFC_UART_Process();
 4176              		.loc 1 458 0
 4177 011c FFF7FEFF 		bl	TFC_UART_Process
 4178              	.LVL555:
 460:../Sources/main.c **** 	TFC_ProcessTerminal();
 4179              		.loc 1 460 0
 4180 0120 FFF7FEFF 		bl	TFC_ProcessTerminal
 4181              	.LVL556:
 4182              	.LBE118:
 4183              	.LBE117:
 4184              	.LBB119:
 4185              	.LBB96:
 479:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 4186              		.loc 1 479 0
 4187 0124 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4188              	.LVL557:
 4189 0128 0307     		lsl	r3, r0, #28
 4190 012a 82D5     		bpl	.L555
 4191              	.L474:
 4192 012c 5946     		mov	r1, fp
 4193 012e 4B78     		ldrb	r3, [r1, #1]
 4194 0130 022B     		cmp	r3, #2
 4195 0132 84D0     		beq	.L475
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 4196              		.loc 1 487 0
 4197 0134 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4198              	.LVL558:
 4199 0138 0307     		lsl	r3, r0, #28
 4200 013a 46D5     		bpl	.L478
 4201 013c 974A     		ldr	r2, .L569+28
 4202 013e 9068     		ldr	r0, [r2, #8]
 4203 0140 4405     		lsl	r4, r0, #21
 4204 0142 650F     		lsr	r5, r4, #29
 4205 0144 032D     		cmp	r5, #3
 4206 0146 40D0     		beq	.L478
 4207              	.L479:
 489:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4208              		.loc 1 489 0
 4209 0148 9448     		ldr	r0, .L569+28
 4210 014a 954A     		ldr	r2, .L569+32
 4211 014c 8468     		ldr	r4, [r0, #8]
 490:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 4212              		.loc 1 490 0
 4213 014e C021     		mov	r1, #192
 489:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 4214              		.loc 1 489 0
 4215 0150 2240     		and	r2, r4
 4216 0152 8260     		str	r2, [r0, #8]
 490:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 4217              		.loc 1 490 0
 4218 0154 8568     		ldr	r5, [r0, #8]
 4219 0156 8B00     		lsl	r3, r1, #2
 4220 0158 2B43     		orr	r3, r5
 4221 015a 8360     		str	r3, [r0, #8]
 491:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 4222              		.loc 1 491 0
 4223 015c 0C20     		mov	r0, #12
 4224 015e FFF7FEFF 		bl	disable_irq
 4225              	.LVL559:
 492:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 4226              		.loc 1 492 0
 4227 0162 5C46     		mov	r4, fp
 4228 0164 0120     		mov	r0, #1
 4229 0166 6070     		strb	r0, [r4, #1]
 4230              	.LVL560:
 4231              	.LBE96:
 4232              	.LBE119:
 4233              	.LBB120:
 4234              	.LBB101:
 465:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 4235              		.loc 1 465 0
 4236 0168 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4237              	.LVL561:
 4238              	.LBE101:
 4239 016c 0124     		mov	r4, #1
 4240              	.LBB102:
 4241 016e 0442     		tst	r4, r0
 4242 0170 00D0     		beq	.LCB3768
 4243 0172 7AE7     		b	.L556	@long jump
 4244              	.LCB3768:
 4245              	.L480:
 470:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 4246              		.loc 1 470 0
 4247 0174 FFF7FEFF 		bl	TFC_GetDIP_Switch
 4248              	.LVL562:
 4249 0178 0442     		tst	r4, r0
 4250 017a 00D0     		beq	.LCB3776
 4251 017c 7BE7     		b	.L481	@long jump
 4252              	.LCB3776:
 472:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4253              		.loc 1 472 0
 4254 017e 8022     		mov	r2, #128
 4255 0180 884B     		ldr	r3, .L569+36
 4256 0182 9003     		lsl	r0, r2, #14
 4257 0184 9860     		str	r0, [r3, #8]
 473:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4258              		.loc 1 473 0
 4259 0186 0020     		mov	r0, #0
 4260 0188 011C     		add	r1, r0, #0
 4261 018a FFF7FEFF 		bl	TFC_SetMotorPWM
 4262              	.LVL563:
 4263              	.LBE102:
 4264              	.LBE120:
 4265              	.LBB121:
 4266              	.LBB105:
 498:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 4267              		.loc 1 498 0
 4268 018e 864C     		ldr	r4, .L569+40
 4269 0190 8649     		ldr	r1, .L569+44
 4270 0192 2068     		ldr	r0, [r4]
 4271 0194 FFF7FEFF 		bl	__aeabi_fcmpgt
 4272              	.LVL564:
 4273 0198 0028     		cmp	r0, #0
 4274 019a 00D0     		beq	.LCB3796
 4275 019c 73E7     		b	.L557	@long jump
 4276              	.LCB3796:
 4277              	.L536:
 561:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 4278              		.loc 1 561 0
 4279 019e 854B     		ldr	r3, .L569+52
 4280 01a0 8021     		mov	r1, #128
 4281 01a2 5D68     		ldr	r5, [r3, #4]
 4282 01a4 4A00     		lsl	r2, r1, #1
 4283 01a6 2A43     		orr	r2, r5
 4284 01a8 5A60     		str	r2, [r3, #4]
 562:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 4285              		.loc 1 562 0
 4286 01aa 5868     		ldr	r0, [r3, #4]
 4287 01ac 8024     		mov	r4, #128
 4288 01ae A500     		lsl	r5, r4, #2
 4289 01b0 0543     		orr	r5, r0
 4290 01b2 5D60     		str	r5, [r3, #4]
 4291              	.L538:
 563:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 4292              		.loc 1 563 0
 4293 01b4 5D68     		ldr	r5, [r3, #4]
 4294 01b6 8021     		mov	r1, #128
 4295 01b8 CC00     		lsl	r4, r1, #3
 4296 01ba 2C43     		orr	r4, r5
 4297 01bc 5C60     		str	r4, [r3, #4]
 4298              	.L539:
 564:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 4299              		.loc 1 564 0
 4300 01be 5868     		ldr	r0, [r3, #4]
 4301 01c0 8022     		mov	r2, #128
 4302 01c2 1501     		lsl	r5, r2, #4
 4303 01c4 0543     		orr	r5, r0
 4304 01c6 5D60     		str	r5, [r3, #4]
 4305 01c8 7DE7     		b	.L485
 4306              	.LVL565:
 4307              	.L478:
 4308              	.LBE105:
 4309              	.LBE121:
 4310              	.LBB122:
 4311              	.LBB97:
 487:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 4312              		.loc 1 487 0
 4313 01ca 5946     		mov	r1, fp
 4314 01cc 4B78     		ldrb	r3, [r1, #1]
 4315 01ce 022B     		cmp	r3, #2
 4316 01d0 00D0     		beq	.LCB3836
 4317 01d2 44E7     		b	.L477	@long jump
 4318              	.LCB3836:
 4319 01d4 B8E7     		b	.L479
 4320              	.LVL566:
 4321              	.L495:
 4322              	.LBE97:
 4323              	.LBE122:
 4324              	.LBB123:
 4325              	.LBB124:
 206:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 4326              		.loc 1 206 0
 4327 01d6 0120     		mov	r0, #1
 4328 01d8 FFF7FEFF 		bl	TFC_GetPush_Button
 4329              	.LVL567:
 4330 01dc 0128     		cmp	r0, #1
 4331 01de 00D1     		bne	.LCB3852
 4332 01e0 9CE1     		b	.L558	@long jump
 4333              	.LCB3852:
 4334              	.L501:
 212:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 4335              		.loc 1 212 0
 4336 01e2 4C46     		mov	r4, r9
 4337 01e4 A569     		ldr	r5, [r4, #24]
 4338 01e6 7449     		ldr	r1, .L569+56
 4339 01e8 8D42     		cmp	r5, r1
 4340 01ea 00D9     		bls	.LCB3858
 4341 01ec 8FE1     		b	.L559	@long jump
 4342              	.LCB3858:
 4343              	.L502:
 219:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 4344              		.loc 1 219 0
 4345 01ee 4846     		mov	r0, r9
 4346 01f0 0469     		ldr	r4, [r0, #16]
 4347 01f2 312C     		cmp	r4, #49
 4348 01f4 00D9     		bls	.LCB3863
 4349 01f6 83E1     		b	.L560	@long jump
 4350              	.LCB3863:
 4351              	.L503:
 227:../Sources/main.c **** 	if(TFC_Ticker[5]>=50){ 
 4352              		.loc 1 227 0
 4353 01f8 4946     		mov	r1, r9
 4354 01fa 4B69     		ldr	r3, [r1, #20]
 4355 01fc 312B     		cmp	r3, #49
 4356 01fe 00D9     		bls	.LCB3868
 4357 0200 78E1     		b	.L561	@long jump
 4358              	.LCB3868:
 4359              	.L504:
 245:../Sources/main.c **** 		incline_speed=max_speed_percent;
 4360              		.loc 1 245 0
 4361 0202 6E48     		ldr	r0, .L569+60
 4362 0204 6E4D     		ldr	r5, .L569+64
 4363 0206 0468     		ldr	r4, [r0]
 248:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 4364              		.loc 1 248 0
 4365 0208 5946     		mov	r1, fp
 245:../Sources/main.c **** 		incline_speed=max_speed_percent;
 4366              		.loc 1 245 0
 4367 020a 2C60     		str	r4, [r5]
 248:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 4368              		.loc 1 248 0
 4369 020c CB78     		ldrb	r3, [r1, #3]
 4370 020e 002B     		cmp	r3, #0
 4371 0210 00D1     		bne	.LCB3877
 4372 0212 50E1     		b	.L562	@long jump
 4373              	.LCB3877:
 4374              	.L505:
 257:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 4375              		.loc 1 257 0
 4376 0214 4846     		mov	r0, r9
 4377 0216 0168     		ldr	r1, [r0]
 4378 0218 6329     		cmp	r1, #99
 4379 021a 00D9     		bls	.LCB3882
 4380 021c 11E1     		b	.L563	@long jump
 4381              	.LCB3882:
 4382              	.L512:
 275:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 4383              		.loc 1 275 0
 4384 021e 5846     		mov	r0, fp
 4385 0220 C378     		ldrb	r3, [r0, #3]
 4386 0222 002B     		cmp	r3, #0
 4387 0224 11D1     		bne	.L516
 278:../Sources/main.c **** 		if(stopline_enable == 1)
 4388              		.loc 1 278 0
 4389 0226 674A     		ldr	r2, .L569+68
 277:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4390              		.loc 1 277 0
 4391 0228 0125     		mov	r5, #1
 278:../Sources/main.c **** 		if(stopline_enable == 1)
 4392              		.loc 1 278 0
 4393 022a 1178     		ldrb	r1, [r2]
 277:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4394              		.loc 1 277 0
 4395 022c C570     		strb	r5, [r0, #3]
 278:../Sources/main.c **** 		if(stopline_enable == 1)
 4396              		.loc 1 278 0
 4397 022e 0129     		cmp	r1, #1
 4398 0230 00D1     		bne	.LCB3893
 4399 0232 01E3     		b	.L564	@long jump
 4400              	.LCB3893:
 4401              	.L517:
 282:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 4402              		.loc 1 282 0
 4403 0234 4446     		mov	r4, r8
 4404 0236 2068     		ldr	r0, [r4]
 4405 0238 FFF7FEFF 		bl	getTotalIntensity
 4406              	.LVL568:
 4407 023c 624B     		ldr	r3, .L569+72
 283:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 4408              		.loc 1 283 0
 4409 023e 6349     		ldr	r1, .L569+76
 282:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 4410              		.loc 1 282 0
 4411 0240 1860     		str	r0, [r3]
 283:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 4412              		.loc 1 283 0
 4413 0242 FFF7FEFF 		bl	calculateNewExposure
 4414              	.LVL569:
 4415 0246 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4416              	.LVL570:
 4417              	.L516:
 286:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 4418              		.loc 1 286 0
 4419 024a 5846     		mov	r0, fp
 4420 024c 8578     		ldrb	r5, [r0, #2]
 4421 024e 012D     		cmp	r5, #1
 4422 0250 00D8     		bhi	.LCB3912
 4423 0252 0BE2     		b	.L565	@long jump
 4424              	.LCB3912:
 319:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 4425              		.loc 1 319 0
 4426 0254 032D     		cmp	r5, #3
 4427 0256 00D1     		bne	.LCB3914
 4428 0258 E2E2     		b	.L566	@long jump
 4429              	.LCB3914:
 324:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 4430              		.loc 1 324 0
 4431 025a 022D     		cmp	r5, #2
 4432 025c 00D0     		beq	.LCB3916
 4433 025e 52E7     		b	.L497	@long jump
 4434              	.LCB3916:
 326:../Sources/main.c **** 		if(stopline_enable == 1)
 4435              		.loc 1 326 0
 4436 0260 584A     		ldr	r2, .L569+68
 4437 0262 1478     		ldrb	r4, [r2]
 4438 0264 012C     		cmp	r4, #1
 4439 0266 00D0     		beq	.LCB3920
 4440 0268 4DE7     		b	.L497	@long jump
 4441              	.LCB3920:
 4442              	.LBB125:
 331:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 4443              		.loc 1 331 0
 4444 026a 5949     		ldr	r1, .L569+80
 4445 026c 0B78     		ldrb	r3, [r1]
 4446 026e 002B     		cmp	r3, #0
 4447 0270 00D0     		beq	.LCB3925
 4448 0272 E5E2     		b	.L520	@long jump
 4449              	.LCB3925:
 4450              	.LBB126:
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4451              		.loc 1 334 0
 4452 0274 4846     		mov	r0, r9
 333:../Sources/main.c **** 				stoplineJustDetected = 1;
 4453              		.loc 1 333 0
 4454 0276 0C70     		strb	r4, [r1]
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4455              		.loc 1 334 0
 4456 0278 4569     		ldr	r5, [r0, #20]
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4457              		.loc 1 337 0
 4458 027a 564A     		ldr	r2, .L569+84
 4459 027c 564B     		ldr	r3, .L569+88
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4460              		.loc 1 334 0
 4461 027e 574C     		ldr	r4, .L569+92
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4462              		.loc 1 337 0
 4463 0280 1968     		ldr	r1, [r3]
 334:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 4464              		.loc 1 334 0
 4465 0282 2560     		str	r5, [r4]
 4466              	.LVL571:
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4467              		.loc 1 337 0
 4468 0284 1068     		ldr	r0, [r2]
 4469 0286 FFF7FEFF 		bl	__aeabi_fadd
 4470              	.LVL572:
 4471 028a FC21     		mov	r1, #252
 4472 028c 8905     		lsl	r1, r1, #22
 4473 028e FFF7FEFF 		bl	__aeabi_fmul
 4474              	.LVL573:
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 4475              		.loc 1 339 0
 4476 0292 5349     		ldr	r1, .L569+96
 337:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 4477              		.loc 1 337 0
 4478 0294 041C     		add	r4, r0, #0
 4479              	.LVL574:
 339:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 4480              		.loc 1 339 0
 4481 0296 FFF7FEFF 		bl	__aeabi_fcmplt
 4482              	.LVL575:
 4483 029a 0028     		cmp	r0, #0
 4484 029c 00D1     		bne	.LCB3950
 4485 029e F5E2     		b	.L567	@long jump
 4486              	.LCB3950:
 341:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 4487              		.loc 1 341 0
 4488 02a0 504D     		ldr	r5, .L569+100
 4489              	.L521:
 4490              	.LVL576:
 344:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 4491              		.loc 1 344 0
 4492 02a2 5149     		ldr	r1, .L569+104
 4493 02a4 201C     		add	r0, r4, #0
 4494 02a6 FFF7FEFF 		bl	__aeabi_fmul
 4495              	.LVL577:
 4496 02aa 5049     		ldr	r1, .L569+108
 4497 02ac FFF7FEFF 		bl	__aeabi_fdiv
 4498              	.LVL578:
 4499 02b0 011C     		add	r1, r0, #0
 4500 02b2 281C     		add	r0, r5, #0
 4501 02b4 FFF7FEFF 		bl	__aeabi_fdiv
 4502              	.LVL579:
 4503 02b8 4D49     		ldr	r1, .L569+112
 4504 02ba FFF7FEFF 		bl	__aeabi_fmul
 4505              	.LVL580:
 4506 02be FFF7FEFF 		bl	__aeabi_f2uiz
 4507              	.LVL581:
 4508 02c2 4C4A     		ldr	r2, .L569+116
 4509 02c4 1060     		str	r0, [r2]
 4510 02c6 1EE7     		b	.L497
 4511              	.LVL582:
 4512              	.L493:
 4513              	.LBE126:
 4514              	.LBE125:
 4515              	.LBE124:
 4516              	.LBE123:
 4517              	.LBB158:
 4518              	.LBB159:
 570:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 4519              		.loc 1 570 0
 4520 02c8 4C46     		mov	r4, r9
 4521 02ca 2568     		ldr	r5, [r4]
 4522 02cc C72D     		cmp	r5, #199
 4523 02ce 00D8     		bhi	.LCB3989
 4524 02d0 19E7     		b	.L497	@long jump
 4525              	.LCB3989:
 4526              	.LBB160:
 572:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4527              		.loc 1 572 0
 4528 02d2 0021     		mov	r1, #0
 4529 02d4 2160     		str	r1, [r4]
 4530              	.LVL583:
 574:../Sources/main.c **** 		TFC_SetServo(0, offset);
 4531              		.loc 1 574 0
 4532 02d6 0020     		mov	r0, #0
 4533 02d8 4749     		ldr	r1, .L569+120
 4534 02da FFF7FEFF 		bl	TFC_SetServo
 4535              	.LVL584:
 4536 02de 12E7     		b	.L497
 4537              	.LVL585:
 4538              	.L494:
 4539              	.LBE160:
 4540              	.LBE159:
 4541              	.LBE158:
 4542              	.LBB161:
 4543              	.LBB162:
 388:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 4544              		.loc 1 388 0
 4545 02e0 4A46     		mov	r2, r9
 4546 02e2 1368     		ldr	r3, [r2]
 4547 02e4 C72B     		cmp	r3, #199
 4548 02e6 00D8     		bhi	.LCB4012
 4549 02e8 0DE7     		b	.L497	@long jump
 4550              	.LCB4012:
 4551 02ea 5846     		mov	r0, fp
 4552 02ec C578     		ldrb	r5, [r0, #3]
 4553 02ee 002D     		cmp	r5, #0
 4554 02f0 00D0     		beq	.LCB4016
 4555 02f2 08E7     		b	.L497	@long jump
 4556              	.LCB4016:
 4557              	.LBB163:
 391:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4558              		.loc 1 391 0
 4559 02f4 0121     		mov	r1, #1
 4560 02f6 C170     		strb	r1, [r0, #3]
 393:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4561              		.loc 1 393 0
 4562 02f8 0020     		mov	r0, #0
 4563 02fa 0021     		mov	r1, #0
 390:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4564              		.loc 1 390 0
 4565 02fc 1560     		str	r5, [r2]
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4566              		.loc 1 394 0
 4567 02fe 8024     		mov	r4, #128
 393:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4568              		.loc 1 393 0
 4569 0300 FFF7FEFF 		bl	TFC_SetServo
 4570              	.LVL586:
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4571              		.loc 1 394 0
 4572 0304 274B     		ldr	r3, .L569+36
 4573 0306 A203     		lsl	r2, r4, #14
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4574              		.loc 1 395 0
 4575 0308 0020     		mov	r0, #0
 394:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4576              		.loc 1 394 0
 4577 030a 9A60     		str	r2, [r3, #8]
 395:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4578              		.loc 1 395 0
 4579 030c 011C     		add	r1, r0, #0
 4580 030e FFF7FEFF 		bl	TFC_SetMotorPWM
 4581              	.LVL587:
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4582              		.loc 1 397 0
 4583 0312 4046     		mov	r0, r8
 4584 0314 0068     		ldr	r0, [r0]
 4585 0316 FFF7FEFF 		bl	getTotalIntensity
 4586              	.LVL588:
 4587 031a 2C49     		ldr	r1, .L569+76
 4588 031c FFF7FEFF 		bl	calculateNewExposure
 4589              	.LVL589:
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4590              		.loc 1 400 0
 4591 0320 4D46     		mov	r5, r9
 397:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4592              		.loc 1 397 0
 4593 0322 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4594              	.LVL590:
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4595              		.loc 1 400 0
 4596 0326 6C69     		ldr	r4, [r5, #20]
 4597 0328 3449     		ldr	r1, .L569+124
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 4598              		.loc 1 401 0
 4599 032a 4246     		mov	r2, r8
 400:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 4600              		.loc 1 400 0
 4601 032c 0C60     		str	r4, [r1]
 401:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 4602              		.loc 1 401 0
 4603 032e 1068     		ldr	r0, [r2]
 4604 0330 0CA9     		add	r1, sp, #48
 4605 0332 8022     		mov	r2, #128
 4606 0334 FFF7FEFF 		bl	edgeDetection
 4607              	.LVL591:
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 4608              		.loc 1 402 0
 4609 0338 6869     		ldr	r0, [r5, #20]
 4610 033a 304D     		ldr	r5, .L569+124
 4611 033c 3049     		ldr	r1, .L569+128
 4612 033e 2C68     		ldr	r4, [r5]
 120:../Sources/main.c **** int main(void)
 4613              		.loc 1 120 0
 4614 0340 4CAB     		add	r3, sp, #304
 402:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 4615              		.loc 1 402 0
 4616 0342 021B     		sub	r2, r0, r4
 4617 0344 0A60     		str	r2, [r1]
 4618              	.LVL592:
 4619 0346 0CAD     		add	r5, sp, #48
 120:../Sources/main.c **** int main(void)
 4620              		.loc 1 120 0
 4621 0348 9A46     		mov	sl, r3
 4622              	.LVL593:
 4623              	.L500:
 4624              	.LBB164:
 407:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 4625              		.loc 1 407 0
 4626 034a 0023     		mov	r3, #0
 4627 034c E85E     		ldrsh	r0, [r5, r3]
 4628 034e 391C     		mov	r1, r7
 4629 0350 C417     		asr	r4, r0, #31
 4630 0352 0219     		add	r2, r0, r4
 4631 0354 6240     		eor	r2, r4
 4632 0356 301C     		mov	r0, r6
 4633 0358 FFF7FEFF 		bl	Qprintf
 4634              	.LVL594:
 4635 035c 0223     		mov	r3, #2
 4636 035e EA5E     		ldrsh	r2, [r5, r3]
 4637 0360 301C     		mov	r0, r6
 4638 0362 D117     		asr	r1, r2, #31
 4639 0364 5218     		add	r2, r2, r1
 4640 0366 4A40     		eor	r2, r1
 4641 0368 0435     		add	r5, r5, #4
 4642 036a 391C     		mov	r1, r7
 4643 036c FFF7FEFF 		bl	Qprintf
 4644              	.LVL595:
 405:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4645              		.loc 1 405 0
 4646 0370 5545     		cmp	r5, sl
 4647 0372 EAD1     		bne	.L500
 4648              	.LBE164:
 409:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 4649              		.loc 1 409 0
 4650 0374 301C     		mov	r0, r6
 4651 0376 2349     		ldr	r1, .L569+132
 4652 0378 FFF7FEFF 		bl	Qprintf
 4653              	.LVL596:
 4654 037c C3E6     		b	.L497
 4655              	.L570:
 4656 037e C046     		.align	2
 4657              	.L569:
 4658 0380 00000000 		.word	.LANCHOR3
 4659 0384 00000000 		.word	TFC_Ticker
 4660 0388 10270000 		.word	10000
 4661 038c 00000000 		.word	LineScanImage0
 4662 0390 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 4663 0394 00000000 		.word	.LC3
 4664 0398 00000000 		.word	.LANCHOR23
 4665 039c 00900440 		.word	1074040832
 4666 03a0 FFF8FFFF 		.word	-1793
 4667 03a4 00F10F40 		.word	1074786560
 4668 03a8 00000000 		.word	.LANCHOR2
 4669 03ac 0000F040 		.word	1089470464
 4670 03b0 00000000 		.word	.LANCHOR6
 4671 03b4 40F00F40 		.word	1074786368
 4672 03b8 E7030000 		.word	999
 4673 03bc 00000000 		.word	.LANCHOR7
 4674 03c0 00000000 		.word	incline_speed
 4675 03c4 00000000 		.word	.LANCHOR16
 4676 03c8 00000000 		.word	.LANCHOR17
 4677 03cc E0930400 		.word	300000
 4678 03d0 00000000 		.word	.LANCHOR11
 4679 03d4 00000000 		.word	.LANCHOR20
 4680 03d8 00000000 		.word	.LANCHOR19
 4681 03dc 00000000 		.word	.LANCHOR21
 4682 03e0 00002041 		.word	1092616192
 4683 03e4 6666263F 		.word	1059481190
 4684 03e8 F90F4940 		.word	1078530041
 4685 03ec 0000A041 		.word	1101004800
 4686 03f0 00401C46 		.word	1176256512
 4687 03f4 00000000 		.word	.LANCHOR22
 4688 03f8 00A08C45 		.word	1166843904
 4689 03fc 00000000 		.word	.LANCHOR0
 4690 0400 00000000 		.word	.LANCHOR1
 4691 0404 04000000 		.word	.LC5
 4692              	.LVL597:
 4693              	.L546:
 4694              	.LBE163:
 4695              	.LBE162:
 4696              	.LBE161:
 4697              	.LBB167:
 4698              	.LBB106:
 502:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 4699              		.loc 1 502 0
 4700 0408 EB4B     		ldr	r3, .L571+8
 4701 040a 8025     		mov	r5, #128
 4702 040c 9868     		ldr	r0, [r3, #8]
 4703 040e 6900     		lsl	r1, r5, #1
 4704 0410 0143     		orr	r1, r0
 4705 0412 9960     		str	r1, [r3, #8]
 503:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 4706              		.loc 1 503 0
 4707 0414 9C68     		ldr	r4, [r3, #8]
 4708 0416 8022     		mov	r2, #128
 4709 0418 9000     		lsl	r0, r2, #2
 4710 041a 2043     		orr	r0, r4
 4711 041c 9860     		str	r0, [r3, #8]
 4712 041e C9E6     		b	.L538
 4713              	.L547:
 510:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 4714              		.loc 1 510 0
 4715 0420 E54B     		ldr	r3, .L571+8
 4716 0422 8022     		mov	r2, #128
 4717 0424 5D68     		ldr	r5, [r3, #4]
 4718 0426 5100     		lsl	r1, r2, #1
 4719 0428 2943     		orr	r1, r5
 4720 042a 5960     		str	r1, [r3, #4]
 4721              	.L544:
 554:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 4722              		.loc 1 554 0
 4723 042c 9C68     		ldr	r4, [r3, #8]
 4724 042e 8020     		mov	r0, #128
 4725 0430 8500     		lsl	r5, r0, #2
 4726 0432 2543     		orr	r5, r4
 4727 0434 9D60     		str	r5, [r3, #8]
 555:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 4728              		.loc 1 555 0
 4729 0436 9968     		ldr	r1, [r3, #8]
 4730 0438 8022     		mov	r2, #128
 4731 043a D400     		lsl	r4, r2, #3
 4732 043c 0C43     		orr	r4, r1
 4733 043e 9C60     		str	r4, [r3, #8]
 4734 0440 BDE6     		b	.L539
 4735              	.LVL598:
 4736              	.L563:
 4737              	.LBE106:
 4738              	.LBE167:
 4739              	.LBB168:
 4740              	.LBB153:
 259:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4741              		.loc 1 259 0
 4742 0442 0025     		mov	r5, #0
 4743 0444 0560     		str	r5, [r0]
 260:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 4744              		.loc 1 260 0
 4745 0446 5C46     		mov	r4, fp
 4746 0448 0B23     		mov	r3, #11
 4747 044a E056     		ldrsb	r0, [r4, r3]
 4748 044c 0021     		mov	r1, #0
 4749 044e DB4A     		ldr	r2, .L571+12
 4750 0450 FFF7FEFF 		bl	getDesiredServoValue
 4751              	.LVL599:
 262:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 4752              		.loc 1 262 0
 4753 0454 0021     		mov	r1, #0
 260:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 4754              		.loc 1 260 0
 4755 0456 041C     		add	r4, r0, #0
 262:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 4756              		.loc 1 262 0
 4757 0458 FFF7FEFF 		bl	__aeabi_fcmpgt
 4758              	.LVL600:
 4759 045c 0028     		cmp	r0, #0
 4760 045e 00D1     		bne	.LCB4200
 4761 0460 E7E1     		b	.L568	@long jump
 4762              	.LCB4200:
 263:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 4763              		.loc 1 263 0
 4764 0462 201C     		add	r0, r4, #0
 4765 0464 D649     		ldr	r1, .L571+16
 4766 0466 FFF7FEFF 		bl	__aeabi_fmul
 4767              	.LVL601:
 4768 046a 011C     		add	r1, r0, #0
 4769 046c 201C     		add	r0, r4, #0
 4770 046e FFF7FEFF 		bl	__aeabi_fadd
 4771              	.LVL602:
 264:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 4772              		.loc 1 264 0
 4773 0472 D44D     		ldr	r5, .L571+20
 263:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 4774              		.loc 1 263 0
 4775 0474 041C     		add	r4, r0, #0
 264:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 4776              		.loc 1 264 0
 4777 0476 291C     		add	r1, r5, #0
 4778 0478 FFF7FEFF 		bl	__aeabi_fcmpgt
 4779              	.LVL603:
 4780 047c 0028     		cmp	r0, #0
 4781 047e 00D0     		beq	.LCB4215
 4782 0480 84E1     		b	.L515	@long jump
 4783              	.LCB4215:
 263:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 4784              		.loc 1 263 0
 4785 0482 D148     		ldr	r0, .L571+24
 4786 0484 0460     		str	r4, [r0]
 4787              	.L514:
 271:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4788              		.loc 1 271 0
 4789 0486 211C     		add	r1, r4, #0
 4790 0488 0020     		mov	r0, #0
 4791 048a FFF7FEFF 		bl	TFC_SetServo
 4792              	.LVL604:
 4793              	.LBB130:
 4794              	.LBB131:
 4795              		.loc 1 731 0
 4796 048e CF4B     		ldr	r3, .L571+28
 4797 0490 CF49     		ldr	r1, .L571+32
 4798 0492 1868     		ldr	r0, [r3]
 4799 0494 FFF7FEFF 		bl	__aeabi_fmul
 4800              	.LVL605:
 4801 0498 CB4A     		ldr	r2, .L571+24
 4802 049a 051C     		add	r5, r0, #0
 4803 049c CD49     		ldr	r1, .L571+36
 4804 049e 1068     		ldr	r0, [r2]
 4805              	.LVL606:
 4806 04a0 FFF7FEFF 		bl	__aeabi_fmul
 4807              	.LVL607:
 4808 04a4 011C     		add	r1, r0, #0
 4809 04a6 281C     		add	r0, r5, #0
 4810 04a8 FFF7FEFF 		bl	__aeabi_fadd
 4811              	.LVL608:
 4812 04ac C749     		ldr	r1, .L571+28
 4813              	.LBE131:
 4814              	.LBE130:
 272:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 4815              		.loc 1 272 0
 4816 04ae C64C     		ldr	r4, .L571+24
 4817              	.LBB133:
 4818              	.LBB132:
 4819              		.loc 1 731 0
 4820 04b0 0860     		str	r0, [r1]
 4821              	.LBE132:
 4822              	.LBE133:
 272:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 4823              		.loc 1 272 0
 4824 04b2 2060     		str	r0, [r4]
 4825 04b4 B3E6     		b	.L512
 4826              	.L562:
 252:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4827              		.loc 1 252 0
 4828 04b6 C848     		ldr	r0, .L571+40
 250:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 4829              		.loc 1 250 0
 4830 04b8 C04A     		ldr	r2, .L571+12
 252:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4831              		.loc 1 252 0
 4832 04ba 0468     		ldr	r4, [r0]
 4833 04bc 4546     		mov	r5, r8
 250:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 4834              		.loc 1 250 0
 4835 04be 1370     		strb	r3, [r2]
 252:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 4836              		.loc 1 252 0
 4837 04c0 211C     		mov	r1, r4
 4838 04c2 2868     		ldr	r0, [r5]
 4839 04c4 5A46     		mov	r2, fp
 4840 04c6 0694     		str	r4, [sp, #24]
 4841 04c8 FFF7FEFF 		bl	findLine
 4842              	.LVL609:
 4843              	.LBB134:
 4844              	.LBB135:
 689:../Sources/main.c **** 	if(s_mode_enable)
 4845              		.loc 1 689 0
 4846 04cc C349     		ldr	r1, .L571+44
 4847 04ce 0B78     		ldrb	r3, [r1]
 4848 04d0 002B     		cmp	r3, #0
 4849 04d2 00D0     		beq	.LCB4278
 4850 04d4 8FE0     		b	.L506	@long jump
 4851              	.LCB4278:
 4852 04d6 5846     		mov	r0, fp
 4853 04d8 837A     		ldrb	r3, [r0, #10]
 4854 04da 417A     		ldrb	r1, [r0, #9]
 4855 04dc 5CB2     		sxtb	r4, r3
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 4856              		.loc 1 709 0
 4857 04de 0129     		cmp	r1, #1
 4858 04e0 00D1     		bne	.LCB4284
 4859 04e2 A1E0     		b	.L510	@long jump
 4860              	.LCB4284:
 4861              	.L511:
 716:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 4862              		.loc 1 716 0
 4863 04e4 5846     		mov	r0, fp
 4864 04e6 C372     		strb	r3, [r0, #11]
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 4865              		.loc 1 717 0
 4866 04e8 201C     		mov	r0, r4
 4867 04ea FFF7FEFF 		bl	__aeabi_i2f
 4868              	.LVL610:
 4869 04ee BC4B     		ldr	r3, .L571+48
 4870 04f0 1860     		str	r0, [r3]
 4871 04f2 8FE6     		b	.L505
 4872              	.LVL611:
 4873              	.L561:
 4874              	.LBE135:
 4875              	.LBE134:
 228:../Sources/main.c **** 		TFC_Ticker[5]=0;
 4876              		.loc 1 228 0
 4877 04f4 0022     		mov	r2, #0
 229:../Sources/main.c **** 		LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 4878              		.loc 1 229 0
 4879 04f6 5846     		mov	r0, fp
 228:../Sources/main.c **** 		TFC_Ticker[5]=0;
 4880              		.loc 1 228 0
 4881 04f8 4A61     		str	r2, [r1, #20]
 229:../Sources/main.c **** 		LCDwriteState(carState); 				//gives feedback for car state by the LCD display
 4882              		.loc 1 229 0
 4883 04fa FFF7FEFF 		bl	LCDwriteState
 4884              	.LVL612:
 4885 04fe 80E6     		b	.L504
 4886              	.L560:
 221:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 4887              		.loc 1 221 0
 4888 0500 0025     		mov	r5, #0
 4889 0502 0561     		str	r5, [r0, #16]
 222:../Sources/main.c **** 		telemetrySendData();
 4890              		.loc 1 222 0
 4891 0504 FFF7FEFF 		bl	telemetrySendData
 4892              	.LVL613:
 223:../Sources/main.c **** 		telemetryReadData();
 4893              		.loc 1 223 0
 4894 0508 FFF7FEFF 		bl	telemetryReadData
 4895              	.LVL614:
 4896 050c 74E6     		b	.L503
 4897              	.L559:
 214:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 4898              		.loc 1 214 0
 4899 050e 0023     		mov	r3, #0
 4900 0510 A361     		str	r3, [r4, #24]
 215:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 4901              		.loc 1 215 0
 4902 0512 FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 4903              	.LVL615:
 4904 0516 B34A     		ldr	r2, .L571+52
 4905 0518 1060     		str	r0, [r2]
 4906 051a 68E6     		b	.L502
 4907              	.L558:
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 4908              		.loc 1 208 0
 4909 051c B24A     		ldr	r2, .L571+56
 4910 051e 0023     		mov	r3, #0
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 4911              		.loc 1 209 0
 4912 0520 5846     		mov	r0, fp
 208:../Sources/main.c **** 		stoplineJustDetected = 0;
 4913              		.loc 1 208 0
 4914 0522 1370     		strb	r3, [r2]
 209:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 4915              		.loc 1 209 0
 4916 0524 8470     		strb	r4, [r0, #2]
 4917 0526 5CE6     		b	.L501
 4918              	.LVL616:
 4919              	.L548:
 4920              	.LBE153:
 4921              	.LBE168:
 4922              	.LBB169:
 4923              	.LBB107:
 518:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 4924              		.loc 1 518 0
 4925 0528 A34B     		ldr	r3, .L571+8
 4926 052a 8022     		mov	r2, #128
 4927 052c 9C68     		ldr	r4, [r3, #8]
 4928 052e 5000     		lsl	r0, r2, #1
 4929 0530 2043     		orr	r0, r4
 4930 0532 9860     		str	r0, [r3, #8]
 519:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 4931              		.loc 1 519 0
 4932 0534 5D68     		ldr	r5, [r3, #4]
 4933 0536 8021     		mov	r1, #128
 4934 0538 8C00     		lsl	r4, r1, #2
 4935 053a 2C43     		orr	r4, r5
 4936 053c 5C60     		str	r4, [r3, #4]
 4937              	.L540:
 548:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 4938              		.loc 1 548 0
 4939 053e 5868     		ldr	r0, [r3, #4]
 4940 0540 8022     		mov	r2, #128
 4941 0542 D500     		lsl	r5, r2, #3
 4942 0544 0543     		orr	r5, r0
 4943 0546 5D60     		str	r5, [r3, #4]
 4944              	.L541:
 549:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 4945              		.loc 1 549 0
 4946 0548 9968     		ldr	r1, [r3, #8]
 4947 054a 8024     		mov	r4, #128
 4948 054c 2001     		lsl	r0, r4, #4
 4949 054e 0843     		orr	r0, r1
 4950 0550 9860     		str	r0, [r3, #8]
 4951 0552 B8E5     		b	.L485
 4952              	.LVL617:
 4953              	.L554:
 4954              	.LBE107:
 4955              	.LBE169:
 4956              	.LBB170:
 4957              	.LBB116:
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4958              		.loc 1 368 0
 4959 0554 0123     		mov	r3, #1
 367:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 4960              		.loc 1 367 0
 4961 0556 0560     		str	r5, [r0]
 370:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4962              		.loc 1 370 0
 4963 0558 0021     		mov	r1, #0
 4964 055a 0020     		mov	r0, #0
 368:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 4965              		.loc 1 368 0
 4966 055c D370     		strb	r3, [r2, #3]
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4967              		.loc 1 371 0
 4968 055e 8024     		mov	r4, #128
 370:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 4969              		.loc 1 370 0
 4970 0560 FFF7FEFF 		bl	TFC_SetServo
 4971              	.LVL618:
 371:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 4972              		.loc 1 371 0
 4973 0564 A149     		ldr	r1, .L571+60
 4974 0566 A003     		lsl	r0, r4, #14
 4975 0568 8860     		str	r0, [r1, #8]
 372:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 4976              		.loc 1 372 0
 4977 056a 0020     		mov	r0, #0
 4978 056c 011C     		add	r1, r0, #0
 4979 056e FFF7FEFF 		bl	TFC_SetMotorPWM
 4980              	.LVL619:
 374:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4981              		.loc 1 374 0
 4982 0572 4246     		mov	r2, r8
 4983 0574 1068     		ldr	r0, [r2]
 4984 0576 FFF7FEFF 		bl	getTotalIntensity
 4985              	.LVL620:
 4986 057a 9D49     		ldr	r1, .L571+64
 4987 057c FFF7FEFF 		bl	calculateNewExposure
 4988              	.LVL621:
 4989 0580 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 4990              	.LVL622:
 4991              	.LBB114:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4992              		.loc 1 377 0
 4993 0584 8025     		mov	r5, #128
 4994              	.LBE114:
 374:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 4995              		.loc 1 374 0
 4996 0586 0024     		mov	r4, #0
 4997              	.LBB115:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 4998              		.loc 1 377 0
 4999 0588 6D00     		lsl	r5, r5, #1
 5000              	.LVL623:
 5001              	.L499:
 379:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 5002              		.loc 1 379 0
 5003 058a 4346     		mov	r3, r8
 5004 058c 1868     		ldr	r0, [r3]
 5005 058e 0119     		add	r1, r0, r4
 5006 0590 0A88     		ldrh	r2, [r1]
 5007 0592 301C     		mov	r0, r6
 5008 0594 391C     		mov	r1, r7
 5009 0596 FFF7FEFF 		bl	Qprintf
 5010              	.LVL624:
 5011 059a 4246     		mov	r2, r8
 5012 059c 1368     		ldr	r3, [r2]
 5013 059e 0234     		add	r4, r4, #2
 5014 05a0 1819     		add	r0, r3, r4
 5015 05a2 0288     		ldrh	r2, [r0]
 5016 05a4 391C     		mov	r1, r7
 5017 05a6 301C     		mov	r0, r6
 5018 05a8 0234     		add	r4, r4, #2
 5019 05aa FFF7FEFF 		bl	Qprintf
 5020              	.LVL625:
 377:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 5021              		.loc 1 377 0
 5022 05ae AC42     		cmp	r4, r5
 5023 05b0 EBD1     		bne	.L499
 5024              	.LBE115:
 5025              	.LBE116:
 5026              	.LBE170:
 5027              	.LBB171:
 5028              	.LBB166:
 5029              	.LBB165:
 409:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 5030              		.loc 1 409 0
 5031 05b2 301C     		mov	r0, r6
 5032 05b4 8F49     		ldr	r1, .L571+68
 5033 05b6 FFF7FEFF 		bl	Qprintf
 5034              	.LVL626:
 5035 05ba A4E5     		b	.L497
 5036              	.LVL627:
 5037              	.L549:
 5038              	.LBE165:
 5039              	.LBE166:
 5040              	.LBE171:
 5041              	.LBB172:
 5042              	.LBB108:
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 5043              		.loc 1 525 0
 5044 05bc 7E4B     		ldr	r3, .L571+8
 5045 05be 8020     		mov	r0, #128
 5046 05c0 5C68     		ldr	r4, [r3, #4]
 5047 05c2 4500     		lsl	r5, r0, #1
 5048 05c4 2543     		orr	r5, r4
 5049 05c6 5D60     		str	r5, [r3, #4]
 5050              	.L545:
 540:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 5051              		.loc 1 540 0
 5052 05c8 5968     		ldr	r1, [r3, #4]
 5053 05ca 8022     		mov	r2, #128
 5054 05cc 9400     		lsl	r4, r2, #2
 5055 05ce 0C43     		orr	r4, r1
 5056 05d0 5C60     		str	r4, [r3, #4]
 5057              	.L543:
 534:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 5058              		.loc 1 534 0
 5059 05d2 9868     		ldr	r0, [r3, #8]
 5060 05d4 8025     		mov	r5, #128
 5061 05d6 E900     		lsl	r1, r5, #3
 5062 05d8 0143     		orr	r1, r0
 5063 05da 9960     		str	r1, [r3, #8]
 5064 05dc B4E7     		b	.L541
 5065              	.L550:
 532:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 5066              		.loc 1 532 0
 5067 05de 764B     		ldr	r3, .L571+8
 5068 05e0 8024     		mov	r4, #128
 5069 05e2 5968     		ldr	r1, [r3, #4]
 5070 05e4 6000     		lsl	r0, r4, #1
 5071 05e6 0843     		orr	r0, r1
 5072 05e8 5860     		str	r0, [r3, #4]
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 5073              		.loc 1 533 0
 5074 05ea 9D68     		ldr	r5, [r3, #8]
 5075 05ec 8022     		mov	r2, #128
 5076 05ee 9100     		lsl	r1, r2, #2
 5077 05f0 2943     		orr	r1, r5
 5078 05f2 9960     		str	r1, [r3, #8]
 5079 05f4 EDE7     		b	.L543
 5080              	.LVL628:
 5081              	.L506:
 5082              	.LBE108:
 5083              	.LBE172:
 5084              	.LBB173:
 5085              	.LBB154:
 5086              	.LBB139:
 5087              	.LBB136:
 691:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 5088              		.loc 1 691 0
 5089 05f6 5D46     		mov	r5, fp
 5090 05f8 AB7A     		ldrb	r3, [r5, #10]
 5091 05fa 5CB2     		sxtb	r4, r3
 5092 05fc 092C     		cmp	r4, #9
 5093 05fe 00DD     		ble	.LCB4510
 5094 0600 B7E0     		b	.L508	@long jump
 5095              	.LCB4510:
 692:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 5096              		.loc 1 692 0
 5097 0602 2A7B     		ldrb	r2, [r5, #12]
 5098 0604 462A     		cmp	r2, #70
 5099 0606 00D8     		bhi	.LCB4513
 5100 0608 B3E0     		b	.L508	@long jump
 5101              	.LCB4513:
 693:../Sources/main.c **** 				&& carState->crossSection == NO)
 5102              		.loc 1 693 0
 5103 060a A979     		ldrb	r1, [r5, #6]
 5104 060c 0029     		cmp	r1, #0
 5105 060e 00D0     		beq	.LCB4516
 5106 0610 AFE0     		b	.L508	@long jump
 5107              	.LCB4516:
 695:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 5108              		.loc 1 695 0
 5109 0612 4946     		mov	r1, r9
 5110 0614 C869     		ldr	r0, [r1, #28]
 5111 0616 784D     		ldr	r5, .L571+72
 5112 0618 A842     		cmp	r0, r5
 5113 061a 00D9     		bls	.LCB4521
 5114 061c 38E1     		b	.L509	@long jump
 5115              	.LCB4521:
 5116 061e 5A46     		mov	r2, fp
 5117 0620 517A     		ldrb	r1, [r2, #9]
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 5118              		.loc 1 709 0
 5119 0622 0129     		cmp	r1, #1
 5120 0624 00D0     		beq	.LCB4525
 5121 0626 5DE7     		b	.L511	@long jump
 5122              	.LCB4525:
 5123              	.L510:
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5124              		.loc 1 711 0
 5125 0628 6D49     		ldr	r1, .L571+48
 5126 062a 0868     		ldr	r0, [r1]
 5127 062c 7349     		ldr	r1, .L571+76
 5128 062e FFF7FEFF 		bl	__aeabi_fmul
 5129              	.LVL629:
 5130 0632 051C     		add	r5, r0, #0
 5131 0634 201C     		mov	r0, r4
 5132 0636 FFF7FEFF 		bl	__aeabi_i2f
 5133              	.LVL630:
 5134 063a 7149     		ldr	r1, .L571+80
 5135 063c FFF7FEFF 		bl	__aeabi_fmul
 5136              	.LVL631:
 5137 0640 011C     		add	r1, r0, #0
 5138 0642 281C     		add	r0, r5, #0
 5139 0644 FFF7FEFF 		bl	__aeabi_fadd
 5140              	.LVL632:
 5141 0648 654C     		ldr	r4, .L571+48
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5142              		.loc 1 712 0
 5143 064a FC23     		mov	r3, #252
 5144 064c 9905     		lsl	r1, r3, #22
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5145              		.loc 1 711 0
 5146 064e 2060     		str	r0, [r4]
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5147              		.loc 1 712 0
 5148 0650 FFF7FEFF 		bl	__aeabi_fadd
 5149              	.LVL633:
 5150 0654 FFF7FEFF 		bl	__aeabi_f2uiz
 5151              	.LVL634:
 5152 0658 5A46     		mov	r2, fp
 5153 065a D072     		strb	r0, [r2, #11]
 5154 065c DAE5     		b	.L505
 5155              	.LVL635:
 5156              	.L551:
 5157              	.LBE136:
 5158              	.LBE139:
 5159              	.LBE154:
 5160              	.LBE173:
 5161              	.LBB174:
 5162              	.LBB109:
 539:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5163              		.loc 1 539 0
 5164 065e 564B     		ldr	r3, .L571+8
 5165 0660 8022     		mov	r2, #128
 5166 0662 9868     		ldr	r0, [r3, #8]
 5167 0664 5500     		lsl	r5, r2, #1
 5168 0666 0543     		orr	r5, r0
 5169 0668 9D60     		str	r5, [r3, #8]
 5170 066a ADE7     		b	.L545
 5171              	.LVL636:
 5172              	.L565:
 5173              	.LBE109:
 5174              	.LBE174:
 5175              	.LBB175:
 5176              	.LBB155:
 5177              	.LBB140:
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5178              		.loc 1 288 0
 5179 066c 564C     		ldr	r4, .L571+24
 5180 066e 2568     		ldr	r5, [r4]
 5181 0670 281C     		add	r0, r5, #0
 5182 0672 0595     		str	r5, [sp, #20]
 5183 0674 FFF7FEFF 		bl	getRadiusRoot
 5184              	.LVL637:
 5185 0678 6249     		ldr	r1, .L571+84
 5186 067a 021C     		add	r2, r0, #0
 5187 067c 5846     		mov	r0, fp
 5188 067e FFF7FEFF 		bl	getDesiredSpeed
 5189              	.LVL638:
 5190              	.LBB141:
 5191              	.LBB142:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5192              		.loc 1 724 0
 5193 0682 614A     		ldr	r2, .L571+88
 5194              	.LBE142:
 5195              	.LBE141:
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5196              		.loc 1 288 0
 5197 0684 8246     		mov	sl, r0
 5198              	.LVL639:
 5199              	.LBB146:
 5200              	.LBB143:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5201              		.loc 1 724 0
 5202 0686 5D49     		ldr	r1, .L571+76
 5203 0688 1068     		ldr	r0, [r2]
 5204              	.LVL640:
 5205 068a FFF7FEFF 		bl	__aeabi_fmul
 5206              	.LVL641:
 5207 068e FFF7FEFF 		bl	__aeabi_f2d
 5208              	.LVL642:
 5209 0692 041C     		mov	r4, r0
 5210 0694 5046     		mov	r0, sl
 5211 0696 0D1C     		mov	r5, r1
 5212 0698 FFF7FEFF 		bl	__aeabi_f2d
 5213              	.LVL643:
 5214 069c 454B     		ldr	r3, .L571+4
 5215 069e 444A     		ldr	r2, .L571
 5216 06a0 FFF7FEFF 		bl	__aeabi_dmul
 5217              	.LVL644:
 5218 06a4 021C     		mov	r2, r0
 5219 06a6 0B1C     		mov	r3, r1
 5220 06a8 201C     		mov	r0, r4
 5221 06aa 291C     		mov	r1, r5
 5222 06ac FFF7FEFF 		bl	__aeabi_dadd
 5223              	.LVL645:
 5224 06b0 FFF7FEFF 		bl	__aeabi_d2f
 5225              	.LVL646:
 5226              	.LBE143:
 5227              	.LBE146:
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5228              		.loc 1 288 0
 5229 06b4 554B     		ldr	r3, .L571+92
 5230              	.LBB147:
 5231              	.LBB144:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5232              		.loc 1 724 0
 5233 06b6 5449     		ldr	r1, .L571+88
 5234              	.LBE144:
 5235              	.LBE147:
 288:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 5236              		.loc 1 288 0
 5237 06b8 1860     		str	r0, [r3]
 5238              	.LBB148:
 5239              	.LBB145:
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5240              		.loc 1 724 0
 5241 06ba 0860     		str	r0, [r1]
 5242              	.LBE145:
 5243              	.LBE148:
 291:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 5244              		.loc 1 291 0
 5245 06bc 4248     		ldr	r0, .L571+24
 5246 06be 0021     		mov	r1, #0
 5247 06c0 0268     		ldr	r2, [r0]
 5248 06c2 101C     		add	r0, r2, #0
 5249 06c4 0492     		str	r2, [sp, #16]
 5250 06c6 FFF7FEFF 		bl	getActiveDifferentialModifier
 5251              	.LVL647:
 5252 06ca 3F4C     		ldr	r4, .L571+24
 5253 06cc 051C     		add	r5, r0, #0
 5254              	.LVL648:
 5255 06ce 2168     		ldr	r1, [r4]
 5256 06d0 0391     		str	r1, [sp, #12]
 5257 06d2 081C     		add	r0, r1, #0
 5258              	.LVL649:
 5259 06d4 0121     		mov	r1, #1
 5260 06d6 FFF7FEFF 		bl	getActiveDifferentialModifier
 5261              	.LVL650:
 5262 06da 041C     		add	r4, r0, #0
 5263              	.LVL651:
 295:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 5264              		.loc 1 295 0
 5265 06dc 0020     		mov	r0, #0
 5266              	.LVL652:
 5267 06de FFF7FEFF 		bl	getSpeed
 5268              	.LVL653:
 5269 06e2 4B4B     		ldr	r3, .L571+96
 5270 06e4 1860     		str	r0, [r3]
 296:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 5271              		.loc 1 296 0
 5272 06e6 0120     		mov	r0, #1
 5273 06e8 FFF7FEFF 		bl	getSpeed
 5274              	.LVL654:
 5275 06ec 494A     		ldr	r2, .L571+100
 5276 06ee 1060     		str	r0, [r2]
 308:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 5277              		.loc 1 308 0
 5278 06f0 5846     		mov	r0, fp
 5279 06f2 4178     		ldrb	r1, [r0, #1]
 5280 06f4 0129     		cmp	r1, #1
 5281 06f6 00D0     		beq	.LCB4671
 5282 06f8 05E5     		b	.L497	@long jump
 5283              	.LCB4671:
 311:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 5284              		.loc 1 311 0
 5285 06fa 474B     		ldr	r3, .L571+104
 5286 06fc 4749     		ldr	r1, .L571+108
 5287 06fe 1868     		ldr	r0, [r3]
 5288 0700 FFF7FEFF 		bl	__aeabi_fdiv
 5289              	.LVL655:
 5290 0704 0B90     		str	r0, [sp, #44]
 5291 0706 281C     		add	r0, r5, #0
 5292 0708 404D     		ldr	r5, .L571+92
 5293              	.LVL656:
 5294 070a 2968     		ldr	r1, [r5]
 5295 070c FFF7FEFF 		bl	__aeabi_fmul
 5296              	.LVL657:
 5297 0710 3F4A     		ldr	r2, .L571+96
 5298 0712 8246     		mov	sl, r0
 5299              	.LVL658:
 5300 0714 0020     		mov	r0, #0
 5301 0716 1568     		ldr	r5, [r2]
 5302 0718 FFF7FEFF 		bl	isANewmeasurementAvailable
 5303              	.LVL659:
 5304 071c 0023     		mov	r3, #0
 5305 071e 021C     		mov	r2, r0
 5306 0720 291C     		add	r1, r5, #0
 5307 0722 5046     		mov	r0, sl
 5308 0724 FFF7FEFF 		bl	getDesiredMotorPWM
 5309              	.LVL660:
 5310 0728 011C     		add	r1, r0, #0
 310:../Sources/main.c **** 			TFC_SetMotorPWM(
 5311              		.loc 1 310 0
 5312 072a 0B98     		ldr	r0, [sp, #44]
 5313 072c FFF7FEFF 		bl	__aeabi_fmul
 5314              	.LVL661:
 5315 0730 0B90     		str	r0, [sp, #44]
 312:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 5316              		.loc 1 312 0
 5317 0732 3948     		ldr	r0, .L571+104
 5318 0734 3949     		ldr	r1, .L571+108
 5319 0736 0068     		ldr	r0, [r0]
 5320 0738 FFF7FEFF 		bl	__aeabi_fdiv
 5321              	.LVL662:
 5322 073c 051C     		add	r5, r0, #0
 5323 073e 201C     		add	r0, r4, #0
 5324 0740 324C     		ldr	r4, .L571+92
 5325              	.LVL663:
 5326 0742 2168     		ldr	r1, [r4]
 5327 0744 FFF7FEFF 		bl	__aeabi_fmul
 5328              	.LVL664:
 5329 0748 3249     		ldr	r1, .L571+100
 5330 074a 8246     		mov	sl, r0
 5331 074c 0120     		mov	r0, #1
 5332 074e 0C68     		ldr	r4, [r1]
 5333 0750 FFF7FEFF 		bl	isANewmeasurementAvailable
 5334              	.LVL665:
 5335 0754 211C     		add	r1, r4, #0
 5336 0756 021C     		mov	r2, r0
 5337 0758 0123     		mov	r3, #1
 5338 075a 5046     		mov	r0, sl
 5339 075c FFF7FEFF 		bl	getDesiredMotorPWM
 5340              	.LVL666:
 5341 0760 011C     		add	r1, r0, #0
 310:../Sources/main.c **** 			TFC_SetMotorPWM(
 5342              		.loc 1 310 0
 5343 0762 281C     		add	r0, r5, #0
 5344 0764 FFF7FEFF 		bl	__aeabi_fmul
 5345              	.LVL667:
 5346 0768 011C     		add	r1, r0, #0
 5347 076a 0B98     		ldr	r0, [sp, #44]
 5348 076c FFF7FEFF 		bl	TFC_SetMotorPWM
 5349              	.LVL668:
 5350 0770 C9E4     		b	.L497
 5351              	.LVL669:
 5352              	.L508:
 5353              	.LBE140:
 5354              	.LBB149:
 5355              	.LBB137:
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5356              		.loc 1 702 0
 5357 0772 0020     		mov	r0, #0
 5358 0774 5D46     		mov	r5, fp
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5359              		.loc 1 703 0
 5360 0776 4A46     		mov	r2, r9
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5361              		.loc 1 702 0
 5362 0778 6872     		strb	r0, [r5, #9]
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5363              		.loc 1 703 0
 5364 077a D061     		str	r0, [r2, #28]
 5365 077c B2E6     		b	.L511
 5366              	.LVL670:
 5367              	.L553:
 5368              	.LBE137:
 5369              	.LBE149:
 5370              	.LBE155:
 5371              	.LBE175:
 5372              	.LBB176:
 5373              	.LBB110:
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5374              		.loc 1 553 0
 5375 077e 0E4B     		ldr	r3, .L571+8
 5376 0780 8025     		mov	r5, #128
 5377 0782 9868     		ldr	r0, [r3, #8]
 5378 0784 6900     		lsl	r1, r5, #1
 5379 0786 0143     		orr	r1, r0
 5380 0788 9960     		str	r1, [r3, #8]
 5381 078a 4FE6     		b	.L544
 5382              	.LVL671:
 5383              	.L515:
 5384              	.LBE110:
 5385              	.LBE176:
 5386              	.LBB177:
 5387              	.LBB156:
 266:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 5388              		.loc 1 266 0
 5389 078c 0E49     		ldr	r1, .L571+24
 5390 078e 2C1C     		add	r4, r5, #0
 5391 0790 0D60     		str	r5, [r1]
 5392 0792 78E6     		b	.L514
 5393              	.LVL672:
 5394              	.L552:
 5395              	.LBE156:
 5396              	.LBE177:
 5397              	.LBB178:
 5398              	.LBB111:
 546:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 5399              		.loc 1 546 0
 5400 0794 084B     		ldr	r3, .L571+8
 5401 0796 8022     		mov	r2, #128
 5402 0798 9C68     		ldr	r4, [r3, #8]
 5403 079a 5000     		lsl	r0, r2, #1
 5404 079c 2043     		orr	r0, r4
 5405 079e 9860     		str	r0, [r3, #8]
 547:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 5406              		.loc 1 547 0
 5407 07a0 9D68     		ldr	r5, [r3, #8]
 5408 07a2 8021     		mov	r1, #128
 5409 07a4 8C00     		lsl	r4, r1, #2
 5410 07a6 2C43     		orr	r4, r5
 5411 07a8 9C60     		str	r4, [r3, #8]
 5412 07aa C8E6     		b	.L540
 5413              	.L572:
 5414 07ac C046C046 		.align	3
 5415              	.L571:
 5416 07b0 9A999999 		.word	-1717986918
 5417 07b4 9999B93F 		.word	1069128089
 5418 07b8 40F00F40 		.word	1074786368
 5419 07bc 00000000 		.word	.LANCHOR12
 5420 07c0 9A99993E 		.word	1050253722
 5421 07c4 F628DC3E 		.word	1054615798
 5422 07c8 00000000 		.word	.LANCHOR5
 5423 07cc 00000000 		.word	.LANCHOR15
 5424 07d0 CDCC4C3F 		.word	1061997773
 5425 07d4 CCCC4C3E 		.word	1045220556
 5426 07d8 00000000 		.word	LineScanImage1
 5427 07dc 00000000 		.word	.LANCHOR13
 5428 07e0 00000000 		.word	.LANCHOR14
 5429 07e4 00000000 		.word	.LANCHOR2
 5430 07e8 00000000 		.word	.LANCHOR11
 5431 07ec 00F10F40 		.word	1074786560
 5432 07f0 E0930400 		.word	300000
 5433 07f4 04000000 		.word	.LC5
 5434 07f8 94110000 		.word	4500
 5435 07fc 6666663F 		.word	1063675494
 5436 0800 D0CCCC3D 		.word	1036831952
 5437 0804 00807A43 		.word	1132101632
 5438 0808 00000000 		.word	.LANCHOR18
 5439 080c 00000000 		.word	.LANCHOR4
 5440 0810 00000000 		.word	.LANCHOR19
 5441 0814 00000000 		.word	.LANCHOR20
 5442 0818 00000000 		.word	incline_speed
 5443 081c 0000C842 		.word	1120403456
 5444              	.LVL673:
 5445              	.L566:
 5446              	.LBE111:
 5447              	.LBE178:
 5448              	.LBB179:
 5449              	.LBB157:
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 5450              		.loc 1 321 0
 5451 0820 8020     		mov	r0, #128
 5452 0822 204B     		ldr	r3, .L573
 5453 0824 8103     		lsl	r1, r0, #14
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 5454              		.loc 1 322 0
 5455 0826 0020     		mov	r0, #0
 321:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 5456              		.loc 1 321 0
 5457 0828 9960     		str	r1, [r3, #8]
 322:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 5458              		.loc 1 322 0
 5459 082a 011C     		add	r1, r0, #0
 5460 082c FFF7FEFF 		bl	TFC_SetMotorPWM
 5461              	.LVL674:
 5462 0830 69E4     		b	.L497
 5463              	.L568:
 260:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 5464              		.loc 1 260 0
 5465 0832 1D4A     		ldr	r2, .L573+4
 5466 0834 1460     		str	r4, [r2]
 5467 0836 26E6     		b	.L514
 5468              	.L564:
 280:../Sources/main.c **** 			findStop(carState);
 5469              		.loc 1 280 0
 5470 0838 5846     		mov	r0, fp
 5471 083a FFF7FEFF 		bl	findStop
 5472              	.LVL675:
 5473 083e F9E4     		b	.L517
 5474              	.L520:
 5475              	.LBB150:
 346:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 5476              		.loc 1 346 0
 5477 0840 1A4A     		ldr	r2, .L573+8
 5478 0842 1B49     		ldr	r1, .L573+12
 5479 0844 4846     		mov	r0, r9
 5480 0846 4569     		ldr	r5, [r0, #20]
 5481 0848 1468     		ldr	r4, [r2]
 5482 084a 0868     		ldr	r0, [r1]
 5483 084c 2B1B     		sub	r3, r5, r4
 5484 084e 8342     		cmp	r3, r0
 5485 0850 00D2     		bcs	.LCB4877
 5486 0852 58E4     		b	.L497	@long jump
 5487              	.LCB4877:
 5488              	.LBB127:
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 5489              		.loc 1 348 0
 5490 0854 0020     		mov	r0, #0
 5491 0856 FFF7FEFF 		bl	getSpeed
 5492              	.LVL676:
 5493 085a 051C     		add	r5, r0, #0
 5494              	.LVL677:
 5495 085c 0120     		mov	r0, #1
 5496              	.LVL678:
 5497 085e FFF7FEFF 		bl	getSpeed
 5498              	.LVL679:
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 5499              		.loc 1 350 0
 5500 0862 8022     		mov	r2, #128
 348:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 5501              		.loc 1 348 0
 5502 0864 041C     		add	r4, r0, #0
 5503              	.LVL680:
 350:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 5504              		.loc 1 350 0
 5505 0866 D105     		lsl	r1, r2, #23
 5506 0868 281C     		add	r0, r5, #0
 5507              	.LVL681:
 5508 086a FFF7FEFF 		bl	__aeabi_fcmpgt
 5509              	.LVL682:
 5510 086e 0028     		cmp	r0, #0
 5511 0870 06D1     		bne	.L522
 5512 0872 8023     		mov	r3, #128
 5513 0874 201C     		add	r0, r4, #0
 5514 0876 D905     		lsl	r1, r3, #23
 5515 0878 FFF7FEFF 		bl	__aeabi_fcmpgt
 5516              	.LVL683:
 5517 087c 0028     		cmp	r0, #0
 5518 087e 0BD0     		beq	.L537
 5519              	.L522:
 352:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 5520              		.loc 1 352 0
 5521 0880 BF21     		mov	r1, #191
 5522 0882 0806     		lsl	r0, r1, #24
 5523 0884 011C     		add	r1, r0, #0
 5524 0886 FFF7FEFF 		bl	TFC_SetMotorPWM
 5525              	.LVL684:
 5526 088a 3CE4     		b	.L497
 5527              	.LVL685:
 5528              	.L567:
 5529              	.LBE127:
 5530              	.LBB128:
 336:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 5531              		.loc 1 336 0
 5532 088c 094D     		ldr	r5, .L573+16
 5533 088e 08E5     		b	.L521
 5534              	.LVL686:
 5535              	.L509:
 5536              	.LBE128:
 5537              	.LBE150:
 5538              	.LBB151:
 5539              	.LBB138:
 697:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 5540              		.loc 1 697 0
 5541 0890 0125     		mov	r5, #1
 5542 0892 5A46     		mov	r2, fp
 5543 0894 5572     		strb	r5, [r2, #9]
 5544 0896 C7E6     		b	.L510
 5545              	.LVL687:
 5546              	.L537:
 5547              	.LBE138:
 5548              	.LBE151:
 5549              	.LBB152:
 5550              	.LBB129:
 356:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 5551              		.loc 1 356 0
 5552 0898 0020     		mov	r0, #0
 5553 089a 011C     		add	r1, r0, #0
 5554 089c FFF7FEFF 		bl	TFC_SetMotorPWM
 5555              	.LVL688:
 5556 08a0 31E4     		b	.L497
 5557              	.L574:
 5558 08a2 C046     		.align	2
 5559              	.L573:
 5560 08a4 00F10F40 		.word	1074786560
 5561 08a8 00000000 		.word	.LANCHOR5
 5562 08ac 00000000 		.word	.LANCHOR21
 5563 08b0 00000000 		.word	.LANCHOR22
 5564 08b4 CDCCCC3E 		.word	1053609165
 5565              	.LBE129:
 5566              	.LBE152:
 5567              	.LBE157:
 5568              	.LBE179:
 5569              		.cfi_endproc
 5570              	.LFE0:
 5572              		.section	.text.processRaceLine,"ax",%progbits
 5573              		.align	2
 5574              		.global	processRaceLine
 5575              		.code	16
 5576              		.thumb_func
 5578              	processRaceLine:
 5579              	.LFB14:
 688:../Sources/main.c **** {
 5580              		.loc 1 688 0
 5581              		.cfi_startproc
 5582              	.LVL689:
 5583 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5584              	.LCFI20:
 5585              		.cfi_def_cfa_offset 24
 5586              		.cfi_offset 3, -24
 5587              		.cfi_offset 4, -20
 5588              		.cfi_offset 5, -16
 5589              		.cfi_offset 6, -12
 5590              		.cfi_offset 7, -8
 5591              		.cfi_offset 14, -4
 689:../Sources/main.c **** 	if(s_mode_enable)
 5592              		.loc 1 689 0
 5593 0002 234B     		ldr	r3, .L585
 688:../Sources/main.c **** {
 5594              		.loc 1 688 0
 5595 0004 041C     		mov	r4, r0
 689:../Sources/main.c **** 	if(s_mode_enable)
 5596              		.loc 1 689 0
 5597 0006 1878     		ldrb	r0, [r3]
 5598              	.LVL690:
 5599 0008 0028     		cmp	r0, #0
 5600 000a 0CD1     		bne	.L576
 5601 000c 617A     		ldrb	r1, [r4, #9]
 5602 000e A67A     		ldrb	r6, [r4, #10]
 5603              	.L577:
 709:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 5604              		.loc 1 709 0
 5605 0010 0129     		cmp	r1, #1
 5606 0012 20D0     		beq	.L583
 5607              	.L581:
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 5608              		.loc 1 717 0
 5609 0014 70B2     		sxtb	r0, r6
 5610 0016 FFF7FEFF 		bl	__aeabi_i2f
 5611              	.LVL691:
 716:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 5612              		.loc 1 716 0
 5613 001a 351C     		mov	r5, r6
 5614 001c 1D4E     		ldr	r6, .L585+4
 717:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 5615              		.loc 1 717 0
 5616 001e 071C     		add	r7, r0, #0
 5617              	.L582:
 5618 0020 3760     		str	r7, [r6]
 5619 0022 E572     		strb	r5, [r4, #11]
 719:../Sources/main.c **** }
 5620              		.loc 1 719 0
 5621              		@ sp needed for prologue
 5622              	.LVL692:
 5623 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5624              	.LVL693:
 5625              	.L576:
 691:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 5626              		.loc 1 691 0
 5627 0026 A67A     		ldrb	r6, [r4, #10]
 5628 0028 75B2     		sxtb	r5, r6
 5629 002a 092D     		cmp	r5, #9
 5630 002c 0DDC     		bgt	.L578
 692:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 5631              		.loc 1 692 0
 5632 002e 227B     		ldrb	r2, [r4, #12]
 5633 0030 462A     		cmp	r2, #70
 5634 0032 0AD9     		bls	.L578
 693:../Sources/main.c **** 				&& carState->crossSection == NO)
 5635              		.loc 1 693 0
 5636 0034 A179     		ldrb	r1, [r4, #6]
 5637 0036 0029     		cmp	r1, #0
 5638 0038 07D1     		bne	.L578
 695:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 5639              		.loc 1 695 0
 5640 003a 174B     		ldr	r3, .L585+8
 5641 003c 174A     		ldr	r2, .L585+12
 5642 003e D869     		ldr	r0, [r3, #28]
 5643 0040 9042     		cmp	r0, r2
 5644 0042 22D9     		bls	.L584
 697:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 5645              		.loc 1 697 0
 5646 0044 0123     		mov	r3, #1
 5647 0046 6372     		strb	r3, [r4, #9]
 5648 0048 06E0     		b	.L580
 5649              	.L578:
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5650              		.loc 1 703 0
 5651 004a 134F     		ldr	r7, .L585+8
 702:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 5652              		.loc 1 702 0
 5653 004c 0025     		mov	r5, #0
 5654 004e 6572     		strb	r5, [r4, #9]
 703:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 5655              		.loc 1 703 0
 5656 0050 FD61     		str	r5, [r7, #28]
 5657 0052 A67A     		ldrb	r6, [r4, #10]
 5658 0054 DEE7     		b	.L581
 5659              	.L583:
 5660 0056 75B2     		sxtb	r5, r6
 5661              	.L580:
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5662              		.loc 1 711 0
 5663 0058 0E4E     		ldr	r6, .L585+4
 5664 005a 1149     		ldr	r1, .L585+16
 5665 005c 3068     		ldr	r0, [r6]
 5666 005e FFF7FEFF 		bl	__aeabi_fmul
 5667              	.LVL694:
 5668 0062 071C     		add	r7, r0, #0
 5669 0064 281C     		mov	r0, r5
 5670 0066 FFF7FEFF 		bl	__aeabi_i2f
 5671              	.LVL695:
 5672 006a 0E49     		ldr	r1, .L585+20
 5673 006c FFF7FEFF 		bl	__aeabi_fmul
 5674              	.LVL696:
 5675 0070 011C     		add	r1, r0, #0
 5676 0072 381C     		add	r0, r7, #0
 5677 0074 FFF7FEFF 		bl	__aeabi_fadd
 5678              	.LVL697:
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5679              		.loc 1 712 0
 5680 0078 FC22     		mov	r2, #252
 5681 007a 9105     		lsl	r1, r2, #22
 711:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 5682              		.loc 1 711 0
 5683 007c 071C     		add	r7, r0, #0
 712:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 5684              		.loc 1 712 0
 5685 007e FFF7FEFF 		bl	__aeabi_fadd
 5686              	.LVL698:
 5687 0082 FFF7FEFF 		bl	__aeabi_f2uiz
 5688              	.LVL699:
 5689 0086 C5B2     		uxtb	r5, r0
 5690 0088 CAE7     		b	.L582
 5691              	.L584:
 5692 008a 617A     		ldrb	r1, [r4, #9]
 5693 008c C0E7     		b	.L577
 5694              	.L586:
 5695 008e C046     		.align	2
 5696              	.L585:
 5697 0090 00000000 		.word	.LANCHOR13
 5698 0094 00000000 		.word	.LANCHOR14
 5699 0098 00000000 		.word	TFC_Ticker
 5700 009c 94110000 		.word	4500
 5701 00a0 6666663F 		.word	1063675494
 5702 00a4 D0CCCC3D 		.word	1036831952
 5703              		.cfi_endproc
 5704              	.LFE14:
 5706              		.section	.text.targetSpeedAverage,"ax",%progbits
 5707              		.align	2
 5708              		.global	targetSpeedAverage
 5709              		.code	16
 5710              		.thumb_func
 5712              	targetSpeedAverage:
 5713              	.LFB15:
 722:../Sources/main.c **** {
 5714              		.loc 1 722 0
 5715              		.cfi_startproc
 5716              	.LVL700:
 5717 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5718              	.LCFI21:
 5719              		.cfi_def_cfa_offset 24
 5720              		.cfi_offset 3, -24
 5721              		.cfi_offset 4, -20
 5722              		.cfi_offset 5, -16
 5723              		.cfi_offset 6, -12
 5724              		.cfi_offset 7, -8
 5725              		.cfi_offset 14, -4
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5726              		.loc 1 724 0
 5727 0002 0F4E     		ldr	r6, .L588+8
 722:../Sources/main.c **** {
 5728              		.loc 1 722 0
 5729 0004 071C     		add	r7, r0, #0
 724:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 5730              		.loc 1 724 0
 5731 0006 0F49     		ldr	r1, .L588+12
 5732 0008 3068     		ldr	r0, [r6]
 5733              	.LVL701:
 5734 000a FFF7FEFF 		bl	__aeabi_fmul
 5735              	.LVL702:
 5736 000e FFF7FEFF 		bl	__aeabi_f2d
 5737              	.LVL703:
 5738 0012 041C     		mov	r4, r0
 5739 0014 381C     		add	r0, r7, #0
 5740 0016 0D1C     		mov	r5, r1
 5741 0018 FFF7FEFF 		bl	__aeabi_f2d
 5742              	.LVL704:
 5743 001c 074B     		ldr	r3, .L588+4
 5744 001e 064A     		ldr	r2, .L588
 5745 0020 FFF7FEFF 		bl	__aeabi_dmul
 5746              	.LVL705:
 5747 0024 021C     		mov	r2, r0
 5748 0026 0B1C     		mov	r3, r1
 5749 0028 201C     		mov	r0, r4
 5750 002a 291C     		mov	r1, r5
 5751 002c FFF7FEFF 		bl	__aeabi_dadd
 5752              	.LVL706:
 5753 0030 FFF7FEFF 		bl	__aeabi_d2f
 5754              	.LVL707:
 5755 0034 3060     		str	r0, [r6]
 726:../Sources/main.c **** }
 5756              		.loc 1 726 0
 5757              		@ sp needed for prologue
 5758              	.LVL708:
 5759 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5760              	.L589:
 5761              		.align	3
 5762              	.L588:
 5763 0038 9A999999 		.word	-1717986918
 5764 003c 9999B93F 		.word	1069128089
 5765 0040 00000000 		.word	.LANCHOR18
 5766 0044 6666663F 		.word	1063675494
 5767              		.cfi_endproc
 5768              	.LFE15:
 5770              		.section	.text.servoValueAverage,"ax",%progbits
 5771              		.align	2
 5772              		.global	servoValueAverage
 5773              		.code	16
 5774              		.thumb_func
 5776              	servoValueAverage:
 5777              	.LFB16:
 729:../Sources/main.c **** {
 5778              		.loc 1 729 0
 5779              		.cfi_startproc
 5780              	.LVL709:
 5781 0000 70B5     		push	{r4, r5, r6, lr}
 5782              	.LCFI22:
 5783              		.cfi_def_cfa_offset 16
 5784              		.cfi_offset 4, -16
 5785              		.cfi_offset 5, -12
 5786              		.cfi_offset 6, -8
 5787              		.cfi_offset 14, -4
 5788              		.loc 1 731 0
 5789 0002 084C     		ldr	r4, .L591
 729:../Sources/main.c **** {
 5790              		.loc 1 729 0
 5791 0004 061C     		add	r6, r0, #0
 5792              		.loc 1 731 0
 5793 0006 0849     		ldr	r1, .L591+4
 5794 0008 2068     		ldr	r0, [r4]
 5795              	.LVL710:
 5796 000a FFF7FEFF 		bl	__aeabi_fmul
 5797              	.LVL711:
 5798 000e 0749     		ldr	r1, .L591+8
 5799 0010 051C     		add	r5, r0, #0
 5800 0012 301C     		add	r0, r6, #0
 5801 0014 FFF7FEFF 		bl	__aeabi_fmul
 5802              	.LVL712:
 5803 0018 011C     		add	r1, r0, #0
 5804 001a 281C     		add	r0, r5, #0
 5805 001c FFF7FEFF 		bl	__aeabi_fadd
 5806              	.LVL713:
 5807 0020 2060     		str	r0, [r4]
 732:../Sources/main.c **** 	return previousServoValue;
 733:../Sources/main.c **** }
 5808              		.loc 1 733 0
 5809              		@ sp needed for prologue
 5810              	.LVL714:
 5811 0022 70BD     		pop	{r4, r5, r6, pc}
 5812              	.L592:
 5813              		.align	2
 5814              	.L591:
 5815 0024 00000000 		.word	.LANCHOR15
 5816 0028 CDCC4C3F 		.word	1061997773
 5817 002c CCCC4C3E 		.word	1045220556
 5818              		.cfi_endproc
 5819              	.LFE16:
 5821              		.global	test_time
 5822              		.global	test_begin
 5823              		.global	stopline_enable
 5824              		.global	cross_section_enable
 5825              		.global	s_mode_enable
 5826              		.comm	camera_output,128,4
 5827              		.global	i
 5828              		.global	friction_correct
 5829              		.global	count
 5830              		.global	received_byte2
 5831              		.global	received_byte1
 5832              		.global	max_speed_percent
 5833              		.global	speedR
 5834              		.global	speedL
 5835              		.comm	incline_speed,4,4
 5836              		.global	batteryLevel
 5837              		.global	loop_begin
 5838              		.global	loop_time
 5839              		.section	.data.carState,"aw",%progbits
 5840              		.align	2
 5841              		.set	.LANCHOR3,. + 0
 5844              	carState:
 5845 0000 00       		.byte	0
 5846 0001 02       		.byte	2
 5847 0002 03       		.byte	3
 5848 0003 01       		.byte	1
 5849 0004 00       		.byte	0
 5850 0005 00       		.byte	0
 5851 0006 00       		.byte	0
 5852 0007 00       		.byte	0
 5853 0008 00       		.byte	0
 5854 0009 00       		.byte	0
 5855 000a 0000     		.space	2
 5856 000c 78       		.byte	120
 5857 000d 000000   		.section	.bss.steeringControlUpdate.6160,"aw",%nobits
 5858              		.set	.LANCHOR12,. + 0
 5861              	steeringControlUpdate.6160:
 5862 0000 00       		.space	1
 5863              		.section	.bss.s_mode_enable,"aw",%nobits
 5864              		.set	.LANCHOR13,. + 0
 5867              	s_mode_enable:
 5868 0000 00       		.space	1
 5869              		.section	.bss.stopDelayTime.6164,"aw",%nobits
 5870              		.align	2
 5871              		.set	.LANCHOR22,. + 0
 5874              	stopDelayTime.6164:
 5875 0000 00000000 		.space	4
 5876              		.section	.bss.loop_time,"aw",%nobits
 5877              		.align	1
 5878              		.set	.LANCHOR6,. + 0
 5881              	loop_time:
 5882 0000 0000     		.space	2
 5883              		.section	.bss.loop_begin,"aw",%nobits
 5884              		.align	1
 5885              		.set	.LANCHOR23,. + 0
 5888              	loop_begin:
 5889 0000 0000     		.space	2
 5890              		.section	.bss.speedL,"aw",%nobits
 5891              		.align	2
 5892              		.set	.LANCHOR20,. + 0
 5895              	speedL:
 5896 0000 00000000 		.space	4
 5897              		.section	.bss.stopline_enable,"aw",%nobits
 5898              		.set	.LANCHOR16,. + 0
 5901              	stopline_enable:
 5902 0000 00       		.space	1
 5903              		.section	.bss.batteryLevel,"aw",%nobits
 5904              		.align	2
 5905              		.set	.LANCHOR2,. + 0
 5908              	batteryLevel:
 5909 0000 00000000 		.space	4
 5910              		.section	.bss.previousTargetSpeed.6226,"aw",%nobits
 5911              		.align	2
 5912              		.set	.LANCHOR18,. + 0
 5915              	previousTargetSpeed.6226:
 5916 0000 00000000 		.space	4
 5917              		.section	.bss.test_begin,"aw",%nobits
 5918              		.align	2
 5919              		.set	.LANCHOR0,. + 0
 5922              	test_begin:
 5923 0000 00000000 		.space	4
 5924              		.section	.bss.speedR,"aw",%nobits
 5925              		.align	2
 5926              		.set	.LANCHOR19,. + 0
 5929              	speedR:
 5930 0000 00000000 		.space	4
 5931              		.section	.bss.received_byte1,"aw",%nobits
 5932              		.set	.LANCHOR9,. + 0
 5935              	received_byte1:
 5936 0000 00       		.space	1
 5937              		.section	.bss.received_byte2,"aw",%nobits
 5938              		.set	.LANCHOR10,. + 0
 5941              	received_byte2:
 5942 0000 00       		.space	1
 5943              		.section	.rodata.str1.4,"aMS",%progbits,1
 5944              		.align	2
 5945              	.LC3:
 5946 0000 25582C00 		.ascii	"%X,\000"
 5947              	.LC5:
 5948 0004 0D0A00   		.ascii	"\015\012\000"
 5949 0007 00       		.section	.bss.test_time,"aw",%nobits
 5950              		.align	2
 5951              		.set	.LANCHOR1,. + 0
 5954              	test_time:
 5955 0000 00000000 		.space	4
 5956              		.section	.bss.i,"aw",%nobits
 5957              		.align	2
 5960              	i:
 5961 0000 00000000 		.space	4
 5962              		.section	.data.max_speed_percent,"aw",%progbits
 5963              		.align	2
 5964              		.set	.LANCHOR7,. + 0
 5967              	max_speed_percent:
 5968 0000 0000F041 		.word	1106247680
 5969              		.section	.bss.stoplineJustDetected,"aw",%nobits
 5970              		.set	.LANCHOR11,. + 0
 5973              	stoplineJustDetected:
 5974 0000 00       		.space	1
 5975              		.section	.bss.count,"aw",%nobits
 5976              		.set	.LANCHOR8,. + 0
 5979              	count:
 5980 0000 00       		.space	1
 5981              		.section	.bss.friction_correct,"aw",%nobits
 5982              		.align	2
 5985              	friction_correct:
 5986 0000 00000000 		.space	4
 5987              		.section	.bss.totalIntensity.6161,"aw",%nobits
 5988              		.align	2
 5989              		.set	.LANCHOR17,. + 0
 5992              	totalIntensity.6161:
 5993 0000 00000000 		.space	4
 5994              		.section	.data.cross_section_enable,"aw",%progbits
 5997              	cross_section_enable:
 5998 0000 01       		.byte	1
 5999              		.section	.bss.previousRaceLine.6222,"aw",%nobits
 6000              		.align	2
 6001              		.set	.LANCHOR14,. + 0
 6004              	previousRaceLine.6222:
 6005 0000 00000000 		.space	4
 6006              		.section	.bss.stoplineDetectedMoment.6163,"aw",%nobits
 6007              		.align	2
 6008              		.set	.LANCHOR21,. + 0
 6011              	stoplineDetectedMoment.6163:
 6012 0000 00000000 		.space	4
 6013              		.section	.bss.servoValue,"aw",%nobits
 6014              		.align	2
 6015              		.set	.LANCHOR5,. + 0
 6018              	servoValue:
 6019 0000 00000000 		.space	4
 6020              		.section	.bss.targetSpeed,"aw",%nobits
 6021              		.align	2
 6022              		.set	.LANCHOR4,. + 0
 6025              	targetSpeed:
 6026 0000 00000000 		.space	4
 6027              		.section	.bss.previousServoValue.6230,"aw",%nobits
 6028              		.align	2
 6029              		.set	.LANCHOR15,. + 0
 6032              	previousServoValue.6230:
 6033 0000 00000000 		.space	4
 6034              		.text
 6035              	.Letext0:
 6036              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 6037              		.file 3 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 6038              		.file 4 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 6039              		.file 5 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 6040              		.file 6 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 6041              		.file 7 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 6042              		.file 8 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:18     .text.rawFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:23     .text.rawFocussingMode:00000000 rawFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:138    .text.rawFocussingMode:00000084 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:149    .text.derivativeFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:154    .text.derivativeFocussingMode:00000000 derivativeFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:295    .text.derivativeFocussingMode:000000a8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:309    .text.TFC_Init:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:314    .text.TFC_Init:00000000 TFC_Init
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:390    .text.TFC_Init:0000005c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:395    .text.TFC_Task:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:400    .text.TFC_Task:00000000 TFC_Task
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:423    .text.evaluateMotorState:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:428    .text.evaluateMotorState:00000000 evaluateMotorState
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:481    .text.evaluateMotorState:00000034 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:486    .text.evaluateUARTorSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:491    .text.evaluateUARTorSpeed:00000000 evaluateUARTorSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:588    .text.evaluateUARTorSpeed:0000007c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:595    .text.LEDfeedback:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:600    .text.LEDfeedback:00000000 LEDfeedback
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:839    .text.LEDfeedback:00000140 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:846    .text.servoAlignment:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:851    .text.servoAlignment:00000000 servoAlignment
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:883    .text.servoAlignment:00000018 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:899    .text.telemetrySendData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:904    .text.telemetrySendData:00000000 telemetrySendData
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:1453   .text.telemetrySendData:00000390 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:1462   .text.telemetrySendData:000003ac $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:1820   .text.telemetrySendData:00000608 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:1831   .text.telemetrySendData:0000062c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2329   .text.telemetrySendData:00000968 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2344   .text.telemetrySendData:0000099c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2779   .text.telemetrySendData:00000c70 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2790   .text.BluetoothSetSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2795   .text.BluetoothSetSpeed:00000000 BluetoothSetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2836   .text.BluetoothSetSpeed:00000020 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2842   .text.BluetoothSetLED:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2847   .text.BluetoothSetLED:00000000 BluetoothSetLED
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2985   .text.BluetoothSetLED:000000b4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2990   .text.telemetryReadData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:2995   .text.telemetryReadData:00000000 telemetryReadData
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3132   .text.telemetryReadData:000000a4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3149   .text.lineFollowingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3154   .text.lineFollowingMode:00000000 lineFollowingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3825   .text.lineFollowingMode:00000360 $d
                            *COM*:00000004 incline_speed
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3866   .text.lineFollowingMode:000003fc $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3921   .text.lineFollowingMode:00000440 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3930   .text.startup.main:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3935   .text.startup.main:00000000 main
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:4658   .text.startup.main:00000380 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:4700   .text.startup.main:00000408 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5416   .text.startup.main:000007b0 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5451   .text.startup.main:00000820 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5560   .text.startup.main:000008a4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5573   .text.processRaceLine:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5578   .text.processRaceLine:00000000 processRaceLine
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5697   .text.processRaceLine:00000090 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5707   .text.targetSpeedAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5712   .text.targetSpeedAverage:00000000 targetSpeedAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5763   .text.targetSpeedAverage:00000038 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5771   .text.servoValueAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5776   .text.servoValueAverage:00000000 servoValueAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5815   .text.servoValueAverage:00000024 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5954   .bss.test_time:00000000 test_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5922   .bss.test_begin:00000000 test_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5901   .bss.stopline_enable:00000000 stopline_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5997   .data.cross_section_enable:00000000 cross_section_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5867   .bss.s_mode_enable:00000000 s_mode_enable
                            *COM*:00000080 camera_output
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5960   .bss.i:00000000 i
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5985   .bss.friction_correct:00000000 friction_correct
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5979   .bss.count:00000000 count
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5941   .bss.received_byte2:00000000 received_byte2
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5935   .bss.received_byte1:00000000 received_byte1
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5967   .data.max_speed_percent:00000000 max_speed_percent
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5929   .bss.speedR:00000000 speedR
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5895   .bss.speedL:00000000 speedL
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5908   .bss.batteryLevel:00000000 batteryLevel
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5888   .bss.loop_begin:00000000 loop_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5881   .bss.loop_time:00000000 loop_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5840   .data.carState:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5844   .data.carState:00000000 carState
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5861   .bss.steeringControlUpdate.6160:00000000 steeringControlUpdate.6160
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5862   .bss.steeringControlUpdate.6160:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5868   .bss.s_mode_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5870   .bss.stopDelayTime.6164:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5874   .bss.stopDelayTime.6164:00000000 stopDelayTime.6164
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5877   .bss.loop_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5884   .bss.loop_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5891   .bss.speedL:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5902   .bss.stopline_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5904   .bss.batteryLevel:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5911   .bss.previousTargetSpeed.6226:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5915   .bss.previousTargetSpeed.6226:00000000 previousTargetSpeed.6226
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5918   .bss.test_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5925   .bss.speedR:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5936   .bss.received_byte1:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5942   .bss.received_byte2:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5944   .rodata.str1.4:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5950   .bss.test_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5957   .bss.i:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5963   .data.max_speed_percent:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5973   .bss.stoplineJustDetected:00000000 stoplineJustDetected
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5974   .bss.stoplineJustDetected:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5980   .bss.count:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5982   .bss.friction_correct:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5988   .bss.totalIntensity.6161:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:5992   .bss.totalIntensity.6161:00000000 totalIntensity.6161
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6000   .bss.previousRaceLine.6222:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6004   .bss.previousRaceLine.6222:00000000 previousRaceLine.6222
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6007   .bss.stoplineDetectedMoment.6163:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6011   .bss.stoplineDetectedMoment.6163:00000000 stoplineDetectedMoment.6163
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6014   .bss.servoValue:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6018   .bss.servoValue:00000000 servoValue
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6021   .bss.targetSpeed:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6025   .bss.targetSpeed:00000000 targetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6028   .bss.previousServoValue.6230:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:6032   .bss.previousServoValue.6230:00000000 previousServoValue.6230
                     .debug_frame:00000010 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccDW3e3a.s:3929   .text.lineFollowingMode:0000044c $t

UNDEFINED SYMBOLS
TFC_SetServo
TFC_SetMotorPWM
getTotalIntensity
calculateNewExposure
TFC_SetLineScanExposureTime
Qprintf
TFC_Ticker
LineScanImage0
SDA_SERIAL_OUTGOING_QUEUE
edgeDetection
TFC_InitClock
TFC_InitSysTick
TFC_InitGPIO
TFC_InitServos
TFC_InitMotorPWM
TFC_InitADCs
TFC_InitLineScanCamera
TFC_InitUARTs
TFC_InitTerminal
TFC_InitSpeedSensor
preloadProbabilityTables
generateKernel
TFC_UART_Process
TFC_ProcessTerminal
TFC_GetDIP_Switch
enable_irq
disable_irq
__aeabi_fcmpgt
__aeabi_fmul
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_f2iz
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dadd
__aeabi_d2iz
__aeabi_dsub
__aeabi_i2f
uart_putchar
getSpeed
TFC_GetMotorPWM
TFC_ReadMotorCurrent
newExposure
__aeabi_ui2f
uart_getchar_present
uart_getchar
__aeabi_fadd
__aeabi_f2uiz
__aeabi_dmul
__aeabi_d2f
__aeabi_fdiv
__aeabi_fcmplt
TFC_GetPush_Button
getDesiredServoValue
findLine
LCDwriteState
TFC_ReadBatteryVoltage
findStop
getRadiusRoot
getDesiredSpeed
getActiveDifferentialModifier
isANewmeasurementAvailable
getDesiredMotorPWM
LineScanImage1
