   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.rawFocussingMode,"ax",%progbits
  18              		.align	2
  19              		.global	rawFocussingMode
  20              		.code	16
  21              		.thumb_func
  23              	rawFocussingMode:
  24              	.LFB2:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** 
   2:../Sources/main.c **** /*************************************
   3:../Sources/main.c **** //// Shield Interfaces Description /////////////////
   4:../Sources/main.c **** 
   5:../Sources/main.c **** //// DIP /////////////////
   6:../Sources/main.c **** 
   7:../Sources/main.c **** Standard Mode:
   8:../Sources/main.c **** 
   9:../Sources/main.c **** 1	2	3	4
  10:../Sources/main.c **** X	0  	0	X	Raw Focusing Mode
  11:../Sources/main.c **** X	1	0	X	Servo Alignment
  12:../Sources/main.c **** X	0	1	X	Derivative Focusing Mode
  13:../Sources/main.c **** X	1	1	X	Line Following Mode
  14:../Sources/main.c **** Pin 1:	1 HBRIDGE enabled, RunningState;	0 HBRIDGE DISSABLED;
  15:../Sources/main.c **** Pin 4:	0 SingleSpeed_SingleUart;	1 DualSpeed_NoUart
  16:../Sources/main.c **** 
  17:../Sources/main.c **** Race Mode:
  18:../Sources/main.c **** 
  19:../Sources/main.c **** Pin 1: HBRIDGE enabled
  20:../Sources/main.c **** Pin 2: S-Mode enabled
  21:../Sources/main.c **** Pin 3: Cross Detection enabled
  22:../Sources/main.c **** Pin 4: Stopline Detection enabled
  23:../Sources/main.c **** 
  24:../Sources/main.c **** 
  25:../Sources/main.c **** //// LEDs /////////////////		0 LED_ON	x LED_OFF
  26:../Sources/main.c **** 
  27:../Sources/main.c **** 0xxx	Line lost
  28:../Sources/main.c **** x0xx	Line temporarily lost
  29:../Sources/main.c **** xx0x	Right edge following
  30:../Sources/main.c **** xxx0	Left edge following
  31:../Sources/main.c **** xx00	Double line following
  32:../Sources/main.c **** 0xx0	Cross Section detected
  33:../Sources/main.c **** 00xx	Stop Line detected
  34:../Sources/main.c **** x00x	S-Mode active
  35:../Sources/main.c **** 0000	Low battery
  36:../Sources/main.c **** 
  37:../Sources/main.c **** 
  38:../Sources/main.c **** //// Pots ///////////
  39:../Sources/main.c **** 
  40:../Sources/main.c **** Standard mode:
  41:../Sources/main.c **** Pot_1	Max Speed percent
  42:../Sources/main.c **** Pot_2	No Function
  43:../Sources/main.c **** 
  44:../Sources/main.c **** Race mode:
  45:../Sources/main.c **** Pot_1	Max Speed percent
  46:../Sources/main.c **** Pot_2	Friction Coefficient Correction - rotate clockwise to decrease friction coefficient
  47:../Sources/main.c **** 
  48:../Sources/main.c **** 
  49:../Sources/main.c **** //// Push Buttons ///////////
  50:../Sources/main.c **** 
  51:../Sources/main.c **** Switch_1	Stop Line reset
  52:../Sources/main.c **** 
  53:../Sources/main.c **** **************************************/
  54:../Sources/main.c **** 
  55:../Sources/main.c **** #include "main.h"
  56:../Sources/main.c **** 
  57:../Sources/main.c **** #define CHANNEL_0 0
  58:../Sources/main.c **** #define CHANNEL_1 1
  59:../Sources/main.c **** #define PUSH_BUTTON_1 1
  60:../Sources/main.c **** #define PUSH_BUTTON_2 2
  61:../Sources/main.c **** //#define TESTING
  62:../Sources/main.c **** 
  63:../Sources/main.c **** 
  64:../Sources/main.c **** #define BLUETOOTH_FLAG	-128
  65:../Sources/main.c **** 
  66:../Sources/main.c **** #define FLOAT_TO_CHAR(x)	(x >= 0.0) ? (signed char)(x + 0.5) : (signed char)(x - 0.5)		
  67:../Sources/main.c **** #define LIMIT_255(x)		(x <= 254.5f && x >= 0.0f && !(x >= 127.5f && x <= 128.5f)) ? x : ((x > 255.0
  68:../Sources/main.c **** #define LIMIT_ABS_127(x)	(x <= 126.9f && x >= -126.9f) ? x : ((x > 126.9f) ? 126.9f : -126.9f)
  69:../Sources/main.c **** 
  70:../Sources/main.c **** #define LINE_SCAN_IMAGE(x)	LINE_SCAN_IMAGE_EXAPND(x)	// Second level of indirection needed to expan
  71:../Sources/main.c **** #define LINE_SCAN_IMAGE_EXAPND(x)	LineScanImage##x
  72:../Sources/main.c **** 
  73:../Sources/main.c **** // carState struct initialization - keeps the main parameters of the car state
  74:../Sources/main.c **** static carState_s carState =
  75:../Sources/main.c **** {   .motorState = FORCED_DISABLED, .UARTSpeedState = UNDEFINED, 
  76:../Sources/main.c ****     .lineDetectionState = LINE_LOST, .lineScanState = NO_NEW_LINESCAN_IMAGE, 
  77:../Sources/main.c **** 	.detectedType = NONE, .edge = NO_EDGE, .crossSection = NO, .crossSectionPosition = NO_CROSS,
  78:../Sources/main.c **** 	.lineDistance = STRAIGHT_DISTANCE_DEFAULT, .carMode = NORMAL_MODE, .sMode = S_MODE_OFF};
  79:../Sources/main.c **** 
  80:../Sources/main.c **** uint16_t loop_time = 0, loop_begin = 0;
  81:../Sources/main.c **** float batteryLevel = 0;
  82:../Sources/main.c **** static float targetSpeed = 0;
  83:../Sources/main.c **** float incline_speed;
  84:../Sources/main.c **** float speedL = 0;
  85:../Sources/main.c **** float speedR = 0;
  86:../Sources/main.c **** static float servoValue = 0;
  87:../Sources/main.c **** extern int32_t newExposure;
  88:../Sources/main.c **** float max_speed_percent = 30;
  89:../Sources/main.c **** uint8_t received_byte1 = 0; //received byte from bluetooth 0 to 255
  90:../Sources/main.c **** uint8_t received_byte2 = 0;
  91:../Sources/main.c **** uint8_t count = 0; //bluetooth count
  92:../Sources/main.c **** static uint8_t stoplineJustDetected = 0;
  93:../Sources/main.c **** float friction_correct = 0;
  94:../Sources/main.c **** float i =0; // for testing pwm speed for torque control
  95:../Sources/main.c **** uint8_t camera_output[128];
  96:../Sources/main.c **** #ifdef S_MODE_ENABLE
  97:../Sources/main.c **** uint8_t s_mode_enable = 1;
  98:../Sources/main.c **** #else
  99:../Sources/main.c **** uint8_t s_mode_enable = 0;
 100:../Sources/main.c **** #endif
 101:../Sources/main.c **** 
 102:../Sources/main.c **** #ifdef CROSS_DETECTION_ENABLE
 103:../Sources/main.c **** uint8_t cross_section_enable = 1;
 104:../Sources/main.c **** #else
 105:../Sources/main.c **** uint8_t cross_section_enable = 0;
 106:../Sources/main.c **** #endif
 107:../Sources/main.c **** 
 108:../Sources/main.c **** #ifdef STOPLINE_ENABLE
 109:../Sources/main.c **** uint8_t stopline_enable = 1;
 110:../Sources/main.c **** #else
 111:../Sources/main.c **** uint8_t stopline_enable = 0;
 112:../Sources/main.c **** #endif
 113:../Sources/main.c **** 
 114:../Sources/main.c **** // Test timer ////////////////////
 115:../Sources/main.c **** uint32_t test_begin = 0;
 116:../Sources/main.c **** uint32_t test_time  = 0;
 117:../Sources/main.c **** //////////////////////////////////
 118:../Sources/main.c **** 
 119:../Sources/main.c **** 
 120:../Sources/main.c **** int main(void)
 121:../Sources/main.c **** {
 122:../Sources/main.c **** 	TFC_Init(&carState);
 123:../Sources/main.c **** 	
 124:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 125:../Sources/main.c **** 		Init_I2C();
 126:../Sources/main.c **** 		Init_Accelerometer();
 127:../Sources/main.c **** 	#endif
 128:../Sources/main.c **** 			
 129:../Sources/main.c **** 	while(1){
 130:../Sources/main.c **** 		TFC_SetServo(0,0.5f);
 131:../Sources/main.c **** 	}
 132:../Sources/main.c **** 	while (1)
 133:../Sources/main.c **** 	{
 134:../Sources/main.c **** 		loop_begin = TFC_Ticker[5];
 135:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 136:../Sources/main.c **** 			TFC_Task();
 137:../Sources/main.c **** 		#endif
 138:../Sources/main.c **** 		
 139:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS	
 140:../Sources/main.c **** 			evaluateUARTorSpeed(&carState);		// Checks DIP switch
 141:../Sources/main.c **** 		#endif
 142:../Sources/main.c **** 		
 143:../Sources/main.c **** 		evaluateMotorState(&carState);		// Checks DIP switch
 144:../Sources/main.c **** 		
 145:../Sources/main.c **** 		LEDfeedback(&carState);				// Gives feedback for car state by the 4 LEDs
 146:../Sources/main.c **** 		
 147:../Sources/main.c **** 		TERMINAL_PRINTF("%X,", getSpeed(CHANNEL_1));
 148:../Sources/main.c **** 		
 149:../Sources/main.c **** 		#ifndef RACE_MODE_CONTROLS
 150:../Sources/main.c **** 			switch ((TFC_GetDIP_Switch() >> 1) & 0x03)
 151:../Sources/main.c **** 			{
 152:../Sources/main.c **** 			default:
 153:../Sources/main.c **** 			case 0:
 154:../Sources/main.c **** 				rawFocussingMode(&carState);
 155:../Sources/main.c **** 				break;
 156:../Sources/main.c **** 	
 157:../Sources/main.c **** 			case 1:
 158:../Sources/main.c **** 				servoAlignment();
 159:../Sources/main.c **** 				break;
 160:../Sources/main.c **** 	
 161:../Sources/main.c **** 			case 2:
 162:../Sources/main.c **** 				derivativeFocussingMode(&carState);
 163:../Sources/main.c **** 				break;
 164:../Sources/main.c **** 	
 165:../Sources/main.c **** 			case 3:
 166:../Sources/main.c **** 				lineFollowingMode(&carState);
 167:../Sources/main.c **** 				break;
 168:../Sources/main.c **** 			}
 169:../Sources/main.c **** 		#else
 170:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 1) & 0x01) == 1)
 171:../Sources/main.c **** 				s_mode_enable = 1;
 172:../Sources/main.c **** 			else
 173:../Sources/main.c **** 				s_mode_enable = 0;
 174:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 2) & 0x01) == 1)
 175:../Sources/main.c **** 				cross_section_enable = 1;
 176:../Sources/main.c **** 			else
 177:../Sources/main.c **** 				cross_section_enable = 0;
 178:../Sources/main.c **** 			if(((TFC_GetDIP_Switch() >> 3) & 0x01) == 1)
 179:../Sources/main.c **** 			{
 180:../Sources/main.c **** 				stopline_enable = 1;
 181:../Sources/main.c **** 			}
 182:../Sources/main.c **** 			else
 183:../Sources/main.c **** 			{
 184:../Sources/main.c **** 				stopline_enable = 0;
 185:../Sources/main.c **** 			}
 186:../Sources/main.c **** 			
 187:../Sources/main.c **** 			friction_correct = ((0 + 1.0f)/2)*MAX_FRICTION_CORRECT;
 188:../Sources/main.c **** 			
 189:../Sources/main.c **** 			lineFollowingMode(&carState);
 190:../Sources/main.c **** 		#endif
 191:../Sources/main.c **** 		
 192:../Sources/main.c **** 		
 193:../Sources/main.c **** 		loop_time = TFC_Ticker[5] - loop_begin;
 194:../Sources/main.c **** 	}
 195:../Sources/main.c **** 	
 196:../Sources/main.c **** 	return 0;
 197:../Sources/main.c **** }
 198:../Sources/main.c **** 
 199:../Sources/main.c **** 
 200:../Sources/main.c **** void lineFollowingMode(carState_s* carState)
 201:../Sources/main.c **** {
 202:../Sources/main.c **** 	static lineScanState_t steeringControlUpdate;
 203:../Sources/main.c **** 	static uint32_t totalIntensity = 0;
 204:../Sources/main.c **** 	
 205:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 206:../Sources/main.c **** 	{
 207:../Sources/main.c **** 		stoplineJustDetected = 0;
 208:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 209:../Sources/main.c **** 	}
 210:../Sources/main.c **** 
 211:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 212:../Sources/main.c **** 	{
 213:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 214:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 215:../Sources/main.c **** 	}
 216:../Sources/main.c **** 	
 217:../Sources/main.c **** 	#ifdef TELEMETRY_ENABLE
 218:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 219:../Sources/main.c **** 	{
 220:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 221:../Sources/main.c **** 		telemetrySendData();
 222:../Sources/main.c **** 		telemetryReadData();
 223:../Sources/main.c **** 	}
 224:../Sources/main.c **** 	#endif
 225:../Sources/main.c **** 	
 226:../Sources/main.c **** 	#ifdef ACCELEROMETER_ENABLE
 227:../Sources/main.c **** 		if(TFC_Ticker[8]>=1000){
 228:../Sources/main.c **** 			TFC_Ticker[8]=0;
 229:../Sources/main.c **** 			//accel_z=getZAcc();
 230:../Sources/main.c **** 			if(getZAcc<-1){
 231:../Sources/main.c **** 				incline_speed=max_speed_percent+10;
 232:../Sources/main.c **** 			}
 233:../Sources/main.c **** 			else{
 234:../Sources/main.c **** 				incline_speed=max_speed_percent;
 235:../Sources/main.c **** 				}
 236:../Sources/main.c **** 		}
 237:../Sources/main.c **** 	#endif
 238:../Sources/main.c **** 	#ifndef ACCELEROMETER_ENABLE
 239:../Sources/main.c **** 		incline_speed=max_speed_percent;
 240:../Sources/main.c **** 	#endif
 241:../Sources/main.c **** 		
 242:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 243:../Sources/main.c **** 	{
 244:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 245:../Sources/main.c **** 	//	test_begin = TFC_Ticker[5];
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 247:../Sources/main.c **** 	//	test_time = TFC_Ticker[5] - test_begin;
 248:../Sources/main.c **** 		processRaceLine(carState);
 249:../Sources/main.c **** 	}
 250:../Sources/main.c **** 		
 251:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 252:../Sources/main.c **** 	{
 253:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 255:../Sources/main.c **** 		
 256:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 257:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 258:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 259:../Sources/main.c **** 					{
 260:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 261:../Sources/main.c **** 					}
 262:../Sources/main.c **** 			}
 263:../Sources/main.c **** 	
 264:../Sources/main.c **** 		
 265:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 266:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 267:../Sources/main.c **** 	}
 268:../Sources/main.c **** 
 269:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 270:../Sources/main.c **** 	{
 271:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 272:../Sources/main.c **** 		if(stopline_enable == 1)
 273:../Sources/main.c **** 		{
 274:../Sources/main.c **** 			findStop(carState);
 275:../Sources/main.c **** 		}
 276:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 277:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 278:../Sources/main.c **** #ifdef CAMERA_FEED
 279:../Sources/main.c **** 		
 280:../Sources/main.c **** #endif
 281:../Sources/main.c **** 	}
 282:../Sources/main.c **** 
 283:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 284:../Sources/main.c **** 	{
 285:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 286:../Sources/main.c **** 		
 287:../Sources/main.c **** 		float activeDifferentialModifier[] =
 288:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 289:../Sources/main.c **** 		
 290:../Sources/main.c **** 		// Speed measurement depending on the particular mode which is used
 291:../Sources/main.c **** 		#if (SPEED_DETECTION_MODE == 0)
 292:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 293:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 294:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 1)
 295:../Sources/main.c **** 			speedR = (getSpeed(CHANNEL_0) + getSpeed(CHANNEL_1))/2;
 296:../Sources/main.c **** 			speedL = speedR;
 297:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 2)
 298:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 299:../Sources/main.c **** 			speedL = speedR;
 300:../Sources/main.c **** 		#elif (SPEED_DETECTION_MODE == 3)
 301:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 302:../Sources/main.c **** 			speedR = speedL;
 303:../Sources/main.c **** 		#endif
 304:../Sources/main.c **** 
 305:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 306:../Sources/main.c **** 		{//50000=1sec
 307:../Sources/main.c **** #ifdef TESTING
 308:../Sources/main.c **** 			if(TFC_Ticker[5]>50000){
 309:../Sources/main.c **** 				TFC_Ticker[5]=0;
 310:../Sources/main.c **** 				i+=0.1f;
 311:../Sources/main.c **** 				TFC_SetMotorPWM(i,i);
 312:../Sources/main.c **** 			}
 313:../Sources/main.c **** #endif
 314:../Sources/main.c **** #ifndef TESTING
 315:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 316:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 317:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 318:../Sources/main.c **** #endif
 319:../Sources/main.c **** 		}
 320:../Sources/main.c **** 		else if (carState->UARTSpeedState == SINGLE_SPEED_SINGLE_UART)
 321:../Sources/main.c **** 		{
 322:../Sources/main.c **** 			// Missing setup - Normally this mode is not used
 323:../Sources/main.c **** 		}
 324:../Sources/main.c **** 	}
 325:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 326:../Sources/main.c **** 	{
 327:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 328:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 329:../Sources/main.c **** 	}
 330:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 331:../Sources/main.c **** 	{
 332:../Sources/main.c **** 		if(stopline_enable == 1)
 333:../Sources/main.c **** 		{	
 334:../Sources/main.c **** 			static uint32_t stoplineDetectedMoment = 0;
 335:../Sources/main.c **** 			static uint32_t stopDelayTime = 0;
 336:../Sources/main.c **** 			
 337:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 338:../Sources/main.c **** 			{
 339:../Sources/main.c **** 				stoplineJustDetected = 1;
 340:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 341:../Sources/main.c **** 				
 342:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 343:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 344:../Sources/main.c **** 				
 345:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 346:../Sources/main.c **** 				{
 347:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 348:../Sources/main.c **** 				}
 349:../Sources/main.c **** 				
 350:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 351:../Sources/main.c **** 			}
 352:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 353:../Sources/main.c **** 			{
 354:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 355:../Sources/main.c **** 				
 356:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 357:../Sources/main.c **** 				{
 358:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 359:../Sources/main.c **** 				}
 360:../Sources/main.c **** 				else
 361:../Sources/main.c **** 				{
 362:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 363:../Sources/main.c **** 				}
 364:../Sources/main.c **** 			}
 365:../Sources/main.c **** 		}	
 366:../Sources/main.c **** 	}
 367:../Sources/main.c **** }
 368:../Sources/main.c **** 
 369:../Sources/main.c **** void rawFocussingMode(carState_s* carState)
 370:../Sources/main.c **** {
  26              		.loc 1 370 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
 371:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
  37              		.loc 1 371 0
  38 0002 204B     		ldr	r3, .L8
 370:../Sources/main.c **** {
  39              		.loc 1 370 0
  40 0004 4746     		mov	r7, r8
  41              		.loc 1 371 0
  42 0006 1A68     		ldr	r2, [r3]
 370:../Sources/main.c **** {
  43              		.loc 1 370 0
  44 0008 80B4     		push	{r7}
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47              		.cfi_offset 8, -24
  48              		.loc 1 371 0
  49 000a C72A     		cmp	r2, #199
  50 000c 02D9     		bls	.L1
  51              		.loc 1 371 0 is_stmt 0
  52 000e C178     		ldrb	r1, [r0, #3]
  53 0010 0029     		cmp	r1, #0
  54 0012 02D0     		beq	.L7
  55              	.LVL1:
  56              	.L1:
 372:../Sources/main.c **** 	{
 373:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 374:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 375:../Sources/main.c **** 
 376:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 377:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 378:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 379:../Sources/main.c **** 
 380:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 381:../Sources/main.c **** 		
 382:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 383:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 384:../Sources/main.c **** 			{
 385:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 386:../Sources/main.c **** 			}
 387:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 388:../Sources/main.c **** 		#endif		
 389:../Sources/main.c **** 	}
 390:../Sources/main.c **** }
  57              		.loc 1 390 0 is_stmt 1
  58              		@ sp needed for prologue
  59 0014 04BC     		pop	{r2}
  60 0016 9046     		mov	r8, r2
  61 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
  62              	.LVL2:
  63              	.L7:
 374:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  64              		.loc 1 374 0
  65 001a 0124     		mov	r4, #1
 373:../Sources/main.c **** 		TFC_Ticker[0] = 0;
  66              		.loc 1 373 0
  67 001c 1960     		str	r1, [r3]
 374:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
  68              		.loc 1 374 0
  69 001e C470     		strb	r4, [r0, #3]
 376:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
  70              		.loc 1 376 0
  71 0020 0021     		mov	r1, #0
  72 0022 0020     		mov	r0, #0
  73              	.LVL3:
  74 0024 FFF7FEFF 		bl	TFC_SetServo
  75              	.LVL4:
 377:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  76              		.loc 1 377 0
  77 0028 174E     		ldr	r6, .L8+4
  78 002a 8020     		mov	r0, #128
  79 002c 8503     		lsl	r5, r0, #14
 378:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  80              		.loc 1 378 0
  81 002e 0020     		mov	r0, #0
  82 0030 011C     		add	r1, r0, #0
 377:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
  83              		.loc 1 377 0
  84 0032 B560     		str	r5, [r6, #8]
 378:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
  85              		.loc 1 378 0
  86 0034 FFF7FEFF 		bl	TFC_SetMotorPWM
  87              	.LVL5:
 380:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
  88              		.loc 1 380 0
  89 0038 144E     		ldr	r6, .L8+8
  90 003a 0024     		mov	r4, #0
  91 003c 3068     		ldr	r0, [r6]
  92 003e FFF7FEFF 		bl	getTotalIntensity
  93              	.LVL6:
  94 0042 1349     		ldr	r1, .L8+12
  95 0044 FFF7FEFF 		bl	calculateNewExposure
  96              	.LVL7:
  97 0048 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
  98              	.LVL8:
  99              	.LBB12:
 383:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 100              		.loc 1 383 0
 101 004c 8023     		mov	r3, #128
 102 004e 5A00     		lsl	r2, r3, #1
 103 0050 104D     		ldr	r5, .L8+16
 104 0052 114F     		ldr	r7, .L8+20
 105 0054 9046     		mov	r8, r2
 106              	.LVL9:
 107              	.L3:
 385:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA)[i]);
 108              		.loc 1 385 0
 109 0056 3168     		ldr	r1, [r6]
 110 0058 0819     		add	r0, r1, r4
 111 005a 0288     		ldrh	r2, [r0]
 112 005c 391C     		mov	r1, r7
 113 005e 281C     		mov	r0, r5
 114 0060 FFF7FEFF 		bl	Qprintf
 115              	.LVL10:
 116 0064 3368     		ldr	r3, [r6]
 117 0066 0234     		add	r4, r4, #2
 118 0068 1A19     		add	r2, r3, r4
 119 006a 1288     		ldrh	r2, [r2]
 120 006c 281C     		mov	r0, r5
 121 006e 391C     		mov	r1, r7
 122 0070 0234     		add	r4, r4, #2
 123 0072 FFF7FEFF 		bl	Qprintf
 124              	.LVL11:
 383:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 125              		.loc 1 383 0
 126 0076 4445     		cmp	r4, r8
 127 0078 EDD1     		bne	.L3
 128              	.LBE12:
 387:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 129              		.loc 1 387 0
 130 007a 281C     		mov	r0, r5
 131 007c 0749     		ldr	r1, .L8+24
 132 007e FFF7FEFF 		bl	Qprintf
 133              	.LVL12:
 134 0082 C7E7     		b	.L1
 135              	.L9:
 136              		.align	2
 137              	.L8:
 138 0084 00000000 		.word	TFC_Ticker
 139 0088 00F10F40 		.word	1074786560
 140 008c 00000000 		.word	LineScanImage0
 141 0090 E0930400 		.word	300000
 142 0094 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 143 0098 00000000 		.word	.LC3
 144 009c 04000000 		.word	.LC5
 145              		.cfi_endproc
 146              	.LFE2:
 148              		.section	.text.derivativeFocussingMode,"ax",%progbits
 149              		.align	2
 150              		.global	derivativeFocussingMode
 151              		.code	16
 152              		.thumb_func
 154              	derivativeFocussingMode:
 155              	.LFB3:
 391:../Sources/main.c **** 
 392:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 393:../Sources/main.c **** {
 156              		.loc 1 393 0
 157              		.cfi_startproc
 158              	.LVL13:
 159 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 20
 162              		.cfi_offset 4, -20
 163              		.cfi_offset 5, -16
 164              		.cfi_offset 6, -12
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 4746     		mov	r7, r8
 168 0004 80B4     		push	{r7}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 24
 171              		.cfi_offset 8, -24
 394:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200 && carState->lineScanState == LINESCAN_IMAGE_READY)
 172              		.loc 1 394 0
 173 0006 284C     		ldr	r4, .L16
 393:../Sources/main.c **** {
 174              		.loc 1 393 0
 175 0008 C0B0     		sub	sp, sp, #256
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 280
 178              		.loc 1 394 0
 179 000a 2368     		ldr	r3, [r4]
 180 000c C72B     		cmp	r3, #199
 181 000e 02D9     		bls	.L10
 182              		.loc 1 394 0 is_stmt 0
 183 0010 C178     		ldrb	r1, [r0, #3]
 184 0012 0029     		cmp	r1, #0
 185 0014 03D0     		beq	.L15
 186              	.LVL14:
 187              	.L10:
 395:../Sources/main.c **** 	{
 396:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 397:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 398:../Sources/main.c **** 
 399:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 400:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 401:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 402:../Sources/main.c **** 
 403:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 404:../Sources/main.c **** 		int16_t temp[128];
 405:../Sources/main.c **** 		
 406:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 407:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 408:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 409:../Sources/main.c **** 		
 410:../Sources/main.c **** 		#ifdef TERMINAL_ENABLED
 411:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 412:../Sources/main.c **** 			{
 413:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 414:../Sources/main.c **** 			}
 415:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 416:../Sources/main.c **** 		#endif	
 417:../Sources/main.c **** 	}
 418:../Sources/main.c **** }
 188              		.loc 1 418 0 is_stmt 1
 189 0016 40B0     		add	sp, sp, #256
 190              		@ sp needed for prologue
 191 0018 04BC     		pop	{r2}
 192 001a 9046     		mov	r8, r2
 193 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 194              	.LVL15:
 195              	.L15:
 196              	.LBB13:
 397:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 197              		.loc 1 397 0
 198 001e 0122     		mov	r2, #1
 396:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 199              		.loc 1 396 0
 200 0020 2160     		str	r1, [r4]
 397:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 201              		.loc 1 397 0
 202 0022 C270     		strb	r2, [r0, #3]
 399:../Sources/main.c **** 		TFC_SetServo(0, -SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 203              		.loc 1 399 0
 204 0024 0021     		mov	r1, #0
 205 0026 0020     		mov	r0, #0
 206              	.LVL16:
 207 0028 FFF7FEFF 		bl	TFC_SetServo
 208              	.LVL17:
 400:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 209              		.loc 1 400 0
 210 002c 1F4E     		ldr	r6, .L16+4
 211 002e 8020     		mov	r0, #128
 212 0030 8503     		lsl	r5, r0, #14
 401:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 213              		.loc 1 401 0
 214 0032 0020     		mov	r0, #0
 215 0034 011C     		add	r1, r0, #0
 400:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 216              		.loc 1 400 0
 217 0036 B560     		str	r5, [r6, #8]
 401:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 218              		.loc 1 401 0
 219 0038 FFF7FEFF 		bl	TFC_SetMotorPWM
 220              	.LVL18:
 403:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 221              		.loc 1 403 0
 222 003c 1C4F     		ldr	r7, .L16+8
 392:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 223              		.loc 1 392 0
 224 003e 40AE     		add	r6, sp, #256
 403:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(getTotalIntensity(LineScanImage0), TARGET_TOTAL_
 225              		.loc 1 403 0
 226 0040 3868     		ldr	r0, [r7]
 227 0042 FFF7FEFF 		bl	getTotalIntensity
 228              	.LVL19:
 229 0046 1B49     		ldr	r1, .L16+12
 230 0048 FFF7FEFF 		bl	calculateNewExposure
 231              	.LVL20:
 232 004c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 233              	.LVL21:
 406:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 234              		.loc 1 406 0
 235 0050 194D     		ldr	r5, .L16+16
 236 0052 6369     		ldr	r3, [r4, #20]
 407:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 237              		.loc 1 407 0
 238 0054 3868     		ldr	r0, [r7]
 239 0056 6946     		mov	r1, sp
 240 0058 8022     		mov	r2, #128
 406:../Sources/main.c **** 		test_begin = TFC_Ticker[5];
 241              		.loc 1 406 0
 242 005a 2B60     		str	r3, [r5]
 407:../Sources/main.c **** 		edgeDetection(LINE_SCAN_IMAGE(CAMERA_SERIAL_DATA), temp, 128);
 243              		.loc 1 407 0
 244 005c FFF7FEFF 		bl	edgeDetection
 245              	.LVL22:
 408:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 246              		.loc 1 408 0
 247 0060 6469     		ldr	r4, [r4, #20]
 248 0062 2968     		ldr	r1, [r5]
 249 0064 1548     		ldr	r0, .L16+20
 250 0066 621A     		sub	r2, r4, r1
 392:../Sources/main.c **** void derivativeFocussingMode(carState_s* carState)
 251              		.loc 1 392 0
 252 0068 B046     		mov	r8, r6
 253 006a 154D     		ldr	r5, .L16+24
 254 006c 154E     		ldr	r6, .L16+28
 408:../Sources/main.c **** 		test_time = TFC_Ticker[5] - test_begin;
 255              		.loc 1 408 0
 256 006e 0260     		str	r2, [r0]
 257              	.LVL23:
 258 0070 6C46     		mov	r4, sp
 259              	.LVL24:
 260              	.L12:
 261              	.LBB14:
 413:../Sources/main.c **** 				TERMINAL_PRINTF("%X,", abs(temp[i]));
 262              		.loc 1 413 0
 263 0072 0023     		mov	r3, #0
 264 0074 E75E     		ldrsh	r7, [r4, r3]
 265 0076 311C     		mov	r1, r6
 266 0078 FB17     		asr	r3, r7, #31
 267 007a FA18     		add	r2, r7, r3
 268 007c 5A40     		eor	r2, r3
 269 007e 281C     		mov	r0, r5
 270 0080 FFF7FEFF 		bl	Qprintf
 271              	.LVL25:
 272 0084 0223     		mov	r3, #2
 273 0086 E15E     		ldrsh	r1, [r4, r3]
 274 0088 0434     		add	r4, r4, #4
 275 008a C817     		asr	r0, r1, #31
 276 008c 0A18     		add	r2, r1, r0
 277 008e 4240     		eor	r2, r0
 278 0090 311C     		mov	r1, r6
 279 0092 281C     		mov	r0, r5
 280 0094 FFF7FEFF 		bl	Qprintf
 281              	.LVL26:
 411:../Sources/main.c **** 			for (uint8_t i = 0; i < 128; i++)
 282              		.loc 1 411 0
 283 0098 4445     		cmp	r4, r8
 284 009a EAD1     		bne	.L12
 285              	.LBE14:
 415:../Sources/main.c **** 			TERMINAL_PRINTF("\r\n");
 286              		.loc 1 415 0
 287 009c 281C     		mov	r0, r5
 288 009e 0A49     		ldr	r1, .L16+32
 289 00a0 FFF7FEFF 		bl	Qprintf
 290              	.LVL27:
 291 00a4 B7E7     		b	.L10
 292              	.L17:
 293 00a6 C046     		.align	2
 294              	.L16:
 295 00a8 00000000 		.word	TFC_Ticker
 296 00ac 00F10F40 		.word	1074786560
 297 00b0 00000000 		.word	LineScanImage0
 298 00b4 E0930400 		.word	300000
 299 00b8 00000000 		.word	.LANCHOR0
 300 00bc 00000000 		.word	.LANCHOR1
 301 00c0 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 302 00c4 00000000 		.word	.LC3
 303 00c8 04000000 		.word	.LC5
 304              	.LBE13:
 305              		.cfi_endproc
 306              	.LFE3:
 308              		.section	.text.TFC_Init,"ax",%progbits
 309              		.align	2
 310              		.global	TFC_Init
 311              		.code	16
 312              		.thumb_func
 314              	TFC_Init:
 315              	.LFB4:
 419:../Sources/main.c **** 
 420:../Sources/main.c **** 
 421:../Sources/main.c **** void TFC_Init(carState_s* carState)
 422:../Sources/main.c **** {
 316              		.loc 1 422 0
 317              		.cfi_startproc
 318              	.LVL28:
 319 0000 10B5     		push	{r4, lr}
 320              	.LCFI5:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 14, -4
 324              		.loc 1 422 0
 325 0002 041C     		mov	r4, r0
 423:../Sources/main.c **** 	TFC_InitClock();
 326              		.loc 1 423 0
 327 0004 FFF7FEFF 		bl	TFC_InitClock
 328              	.LVL29:
 424:../Sources/main.c **** 	TFC_InitSysTick();
 329              		.loc 1 424 0
 330 0008 FFF7FEFF 		bl	TFC_InitSysTick
 331              	.LVL30:
 425:../Sources/main.c **** 	TFC_InitGPIO();
 332              		.loc 1 425 0
 333 000c FFF7FEFF 		bl	TFC_InitGPIO
 334              	.LVL31:
 426:../Sources/main.c **** 	TFC_InitServos();
 335              		.loc 1 426 0
 336 0010 FFF7FEFF 		bl	TFC_InitServos
 337              	.LVL32:
 427:../Sources/main.c **** 	TFC_InitMotorPWM();
 338              		.loc 1 427 0
 339 0014 FFF7FEFF 		bl	TFC_InitMotorPWM
 340              	.LVL33:
 428:../Sources/main.c **** 	TFC_InitADCs(carState);
 341              		.loc 1 428 0
 342 0018 201C     		mov	r0, r4
 343 001a FFF7FEFF 		bl	TFC_InitADCs
 344              	.LVL34:
 429:../Sources/main.c **** 	TFC_InitLineScanCamera();
 345              		.loc 1 429 0
 346 001e FFF7FEFF 		bl	TFC_InitLineScanCamera
 347              	.LVL35:
 430:../Sources/main.c **** 	
 431:../Sources/main.c **** 	#ifdef CHANGE_BLUETOOTH_BAUD_RATE
 432:../Sources/main.c **** 		TFC_InitUARTs(SDA_SERIAL_BAUD, 38400);	// 38400 is default for the BL module in AT mode 2
 433:../Sources/main.c **** 		int dummy_timee = TFC_Ticker[0];
 434:../Sources/main.c **** 		while(TFC_Ticker[0] - dummy_timee < 30000)
 435:../Sources/main.c **** 		{}
 436:../Sources/main.c **** 		TFC_BluetoothModuleSetBaud(BLUETOOTH_BAUD);		// Need to manually power the AT pin on the module
 437:../Sources/main.c **** 	#endif
 438:../Sources/main.c **** 	
 439:../Sources/main.c **** 	TFC_InitUARTs(SDA_SERIAL_BAUD, BLUETOOTH_BAUD);
 348              		.loc 1 439 0
 349 0022 E121     		mov	r1, #225
 350 0024 4902     		lsl	r1, r1, #9
 351 0026 081C     		mov	r0, r1
 352 0028 FFF7FEFF 		bl	TFC_InitUARTs
 353              	.LVL36:
 440:../Sources/main.c **** 	
 441:../Sources/main.c **** 	#ifdef TERMINAL_ENABLED
 442:../Sources/main.c **** 		TFC_InitTerminal();
 354              		.loc 1 442 0
 355 002c FFF7FEFF 		bl	TFC_InitTerminal
 356              	.LVL37:
 443:../Sources/main.c **** 	#endif
 444:../Sources/main.c **** 		
 445:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 357              		.loc 1 445 0
 358 0030 8022     		mov	r2, #128
 359 0032 094B     		ldr	r3, .L19
 360 0034 9003     		lsl	r0, r2, #14
 446:../Sources/main.c **** 	TFC_SetMotorPWM(0, 0);
 361              		.loc 1 446 0
 362 0036 0024     		mov	r4, #0
 363              	.LVL38:
 445:../Sources/main.c **** 	TFC_HBRIDGE_DISABLE;
 364              		.loc 1 445 0
 365 0038 9860     		str	r0, [r3, #8]
 366              		.loc 1 446 0
 367 003a 211C     		add	r1, r4, #0
 368 003c 201C     		add	r0, r4, #0
 369 003e FFF7FEFF 		bl	TFC_SetMotorPWM
 370              	.LVL39:
 447:../Sources/main.c **** 	TFC_InitSpeedSensor();
 371              		.loc 1 447 0
 372 0042 FFF7FEFF 		bl	TFC_InitSpeedSensor
 373              	.LVL40:
 448:../Sources/main.c **** 	preloadProbabilityTables(); //Prevents probability tables for stop line evaluation from being crea
 374              		.loc 1 448 0
 375 0046 FFF7FEFF 		bl	preloadProbabilityTables
 376              	.LVL41:
 449:../Sources/main.c **** 	generateKernel();
 377              		.loc 1 449 0
 378 004a FFF7FEFF 		bl	generateKernel
 379              	.LVL42:
 450:../Sources/main.c **** 	
 451:../Sources/main.c **** 	#ifdef RACE_MODE_CONTROLS
 452:../Sources/main.c **** 	PORTA_PCR2 &= 0xFFFFF8FF;
 453:../Sources/main.c **** 	PORTA_PCR2 |= 0x00000300;
 454:../Sources/main.c **** 	disable_irq(INT_UART0-16);
 455:../Sources/main.c **** 	carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 456:../Sources/main.c **** 	#endif
 457:../Sources/main.c **** 	
 458:../Sources/main.c **** 	TFC_SetServo(0, 0);
 380              		.loc 1 458 0
 381 004e 0020     		mov	r0, #0
 382 0050 211C     		add	r1, r4, #0
 383 0052 FFF7FEFF 		bl	TFC_SetServo
 384              	.LVL43:
 459:../Sources/main.c **** }
 385              		.loc 1 459 0
 386              		@ sp needed for prologue
 387 0056 10BD     		pop	{r4, pc}
 388              	.L20:
 389              		.align	2
 390              	.L19:
 391 0058 00F10F40 		.word	1074786560
 392              		.cfi_endproc
 393              	.LFE4:
 395              		.section	.text.startup.main,"ax",%progbits
 396              		.align	2
 397              		.global	main
 398              		.code	16
 399              		.thumb_func
 401              	main:
 402              	.LFB0:
 121:../Sources/main.c **** {
 403              		.loc 1 121 0
 404              		.cfi_startproc
 405 0000 08B5     		push	{r3, lr}
 406              	.LCFI6:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 3, -8
 409              		.cfi_offset 14, -4
 122:../Sources/main.c **** 	TFC_Init(&carState);
 410              		.loc 1 122 0
 411 0002 0448     		ldr	r0, .L23
 412 0004 FFF7FEFF 		bl	TFC_Init
 413              	.LVL44:
 414              	.L22:
 130:../Sources/main.c **** 		TFC_SetServo(0,0.5f);
 415              		.loc 1 130 0
 416 0008 FC21     		mov	r1, #252
 417 000a 0020     		mov	r0, #0
 418 000c 8905     		lsl	r1, r1, #22
 419 000e FFF7FEFF 		bl	TFC_SetServo
 420              	.LVL45:
 421 0012 F9E7     		b	.L22
 422              	.L24:
 423              		.align	2
 424              	.L23:
 425 0014 00000000 		.word	.LANCHOR2
 426              		.cfi_endproc
 427              	.LFE0:
 429              		.section	.text.TFC_Task,"ax",%progbits
 430              		.align	2
 431              		.global	TFC_Task
 432              		.code	16
 433              		.thumb_func
 435              	TFC_Task:
 436              	.LFB5:
 460:../Sources/main.c **** 
 461:../Sources/main.c **** void TFC_Task()
 462:../Sources/main.c **** {
 437              		.loc 1 462 0
 438              		.cfi_startproc
 439 0000 08B5     		push	{r3, lr}
 440              	.LCFI7:
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 3, -8
 443              		.cfi_offset 14, -4
 463:../Sources/main.c **** #if defined(TERMINAL_USE_SDA_SERIAL)
 464:../Sources/main.c **** 	TFC_UART_Process();
 444              		.loc 1 464 0
 445 0002 FFF7FEFF 		bl	TFC_UART_Process
 446              	.LVL46:
 465:../Sources/main.c **** #endif
 466:../Sources/main.c **** 	TFC_ProcessTerminal();
 467:../Sources/main.c **** }
 447              		.loc 1 467 0
 448              		@ sp needed for prologue
 466:../Sources/main.c **** 	TFC_ProcessTerminal();
 449              		.loc 1 466 0
 450 0006 FFF7FEFF 		bl	TFC_ProcessTerminal
 451              	.LVL47:
 452              		.loc 1 467 0
 453 000a 08BD     		pop	{r3, pc}
 454              		.cfi_endproc
 455              	.LFE5:
 457              		.section	.text.evaluateMotorState,"ax",%progbits
 458              		.align	2
 459              		.global	evaluateMotorState
 460              		.code	16
 461              		.thumb_func
 463              	evaluateMotorState:
 464              	.LFB6:
 468:../Sources/main.c **** 
 469:../Sources/main.c **** void evaluateMotorState(carState_s* carState)
 470:../Sources/main.c **** {
 465              		.loc 1 470 0
 466              		.cfi_startproc
 467              	.LVL48:
 468 0000 38B5     		push	{r3, r4, r5, lr}
 469              	.LCFI8:
 470              		.cfi_def_cfa_offset 16
 471              		.cfi_offset 3, -16
 472              		.cfi_offset 4, -12
 473              		.cfi_offset 5, -8
 474              		.cfi_offset 14, -4
 475              		.loc 1 470 0
 476 0002 051C     		mov	r5, r0
 471:../Sources/main.c **** 	if ((TFC_GetDIP_Switch() & 0x01) == 1)
 477              		.loc 1 471 0
 478 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 479              	.LVL49:
 480 0008 0124     		mov	r4, #1
 481 000a 0442     		tst	r4, r0
 482 000c 05D0     		beq	.L27
 472:../Sources/main.c **** 	{
 473:../Sources/main.c **** 		TFC_HBRIDGE_ENABLE;
 483              		.loc 1 473 0
 484 000e 8021     		mov	r1, #128
 485 0010 0848     		ldr	r0, .L29
 486 0012 8A03     		lsl	r2, r1, #14
 487 0014 4260     		str	r2, [r0, #4]
 474:../Sources/main.c **** 		carState->motorState = RUNNING;
 488              		.loc 1 474 0
 489 0016 2C70     		strb	r4, [r5]
 490              	.L26:
 475:../Sources/main.c **** 	}
 476:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 477:../Sources/main.c **** 	{
 478:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 479:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 480:../Sources/main.c **** 	}
 481:../Sources/main.c **** }
 491              		.loc 1 481 0
 492              		@ sp needed for prologue
 493              	.LVL50:
 494 0018 38BD     		pop	{r3, r4, r5, pc}
 495              	.LVL51:
 496              	.L27:
 476:../Sources/main.c **** 	else if ((TFC_GetDIP_Switch() & 0x01) == 0)
 497              		.loc 1 476 0
 498 001a FFF7FEFF 		bl	TFC_GetDIP_Switch
 499              	.LVL52:
 500 001e 0442     		tst	r4, r0
 501 0020 FAD1     		bne	.L26
 478:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 502              		.loc 1 478 0
 503 0022 8022     		mov	r2, #128
 504 0024 034B     		ldr	r3, .L29
 505 0026 9003     		lsl	r0, r2, #14
 506 0028 9860     		str	r0, [r3, #8]
 479:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 507              		.loc 1 479 0
 508 002a 0020     		mov	r0, #0
 509 002c 011C     		add	r1, r0, #0
 510 002e FFF7FEFF 		bl	TFC_SetMotorPWM
 511              	.LVL53:
 512 0032 F1E7     		b	.L26
 513              	.L30:
 514              		.align	2
 515              	.L29:
 516 0034 00F10F40 		.word	1074786560
 517              		.cfi_endproc
 518              	.LFE6:
 520              		.section	.text.evaluateUARTorSpeed,"ax",%progbits
 521              		.align	2
 522              		.global	evaluateUARTorSpeed
 523              		.code	16
 524              		.thumb_func
 526              	evaluateUARTorSpeed:
 527              	.LFB7:
 482:../Sources/main.c **** 
 483:../Sources/main.c **** void evaluateUARTorSpeed(carState_s* carState)
 484:../Sources/main.c **** {
 528              		.loc 1 484 0
 529              		.cfi_startproc
 530              	.LVL54:
 531 0000 10B5     		push	{r4, lr}
 532              	.LCFI9:
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 4, -8
 535              		.cfi_offset 14, -4
 536              		.loc 1 484 0
 537 0002 041C     		mov	r4, r0
 485:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 538              		.loc 1 485 0
 539 0004 FFF7FEFF 		bl	TFC_GetDIP_Switch
 540              	.LVL55:
 541 0008 0307     		lsl	r3, r0, #28
 542 000a 15D4     		bmi	.L32
 543              		.loc 1 485 0 is_stmt 0
 544 000c 1B4B     		ldr	r3, .L41
 545 000e 9868     		ldr	r0, [r3, #8]
 546 0010 4105     		lsl	r1, r0, #21
 547 0012 4A0F     		lsr	r2, r1, #29
 548 0014 022A     		cmp	r2, #2
 549 0016 0FD0     		beq	.L32
 550              	.L33:
 486:../Sources/main.c **** 	{
 487:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 551              		.loc 1 487 0 is_stmt 1
 552 0018 1848     		ldr	r0, .L41
 553 001a 194A     		ldr	r2, .L41+4
 554 001c 8168     		ldr	r1, [r0, #8]
 555 001e 0A40     		and	r2, r1
 556 0020 8260     		str	r2, [r0, #8]
 488:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000200;
 557              		.loc 1 488 0
 558 0022 8368     		ldr	r3, [r0, #8]
 559 0024 8021     		mov	r1, #128
 560 0026 8A00     		lsl	r2, r1, #2
 561 0028 1A43     		orr	r2, r3
 562 002a 8260     		str	r2, [r0, #8]
 489:../Sources/main.c **** 		enable_irq(INT_UART0-16);
 563              		.loc 1 489 0
 564 002c 0C20     		mov	r0, #12
 565 002e FFF7FEFF 		bl	enable_irq
 566              	.LVL56:
 490:../Sources/main.c **** 		carState->UARTSpeedState = SINGLE_SPEED_SINGLE_UART;
 567              		.loc 1 490 0
 568 0032 0020     		mov	r0, #0
 569 0034 6070     		strb	r0, [r4, #1]
 570              	.L31:
 491:../Sources/main.c **** 	}
 492:../Sources/main.c **** 
 493:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 494:../Sources/main.c **** 	{
 495:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 496:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 497:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 498:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 499:../Sources/main.c **** 	}
 500:../Sources/main.c **** }
 571              		.loc 1 500 0
 572              		@ sp needed for prologue
 573              	.LVL57:
 574 0036 10BD     		pop	{r4, pc}
 575              	.LVL58:
 576              	.L32:
 485:../Sources/main.c **** 	if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x00) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x000000
 577              		.loc 1 485 0
 578 0038 6378     		ldrb	r3, [r4, #1]
 579 003a 022B     		cmp	r3, #2
 580 003c ECD0     		beq	.L33
 493:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 581              		.loc 1 493 0
 582 003e FFF7FEFF 		bl	TFC_GetDIP_Switch
 583              	.LVL59:
 584 0042 0307     		lsl	r3, r0, #28
 585 0044 15D5     		bpl	.L36
 493:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 586              		.loc 1 493 0 is_stmt 0
 587 0046 0D48     		ldr	r0, .L41
 588 0048 8168     		ldr	r1, [r0, #8]
 589 004a 4A05     		lsl	r2, r1, #21
 590 004c 530F     		lsr	r3, r2, #29
 591 004e 032B     		cmp	r3, #3
 592 0050 0FD0     		beq	.L36
 593              	.L37:
 495:../Sources/main.c **** 		PORTA_PCR2 &= 0xFFFFF8FF;
 594              		.loc 1 495 0 is_stmt 1
 595 0052 0A4B     		ldr	r3, .L41
 596 0054 0A4A     		ldr	r2, .L41+4
 597 0056 9968     		ldr	r1, [r3, #8]
 598 0058 0A40     		and	r2, r1
 599 005a 9A60     		str	r2, [r3, #8]
 496:../Sources/main.c **** 		PORTA_PCR2 |= 0x00000300;
 600              		.loc 1 496 0
 601 005c 9868     		ldr	r0, [r3, #8]
 602 005e C021     		mov	r1, #192
 603 0060 8A00     		lsl	r2, r1, #2
 604 0062 0243     		orr	r2, r0
 605 0064 9A60     		str	r2, [r3, #8]
 497:../Sources/main.c **** 		disable_irq(INT_UART0-16);
 606              		.loc 1 497 0
 607 0066 0C20     		mov	r0, #12
 608 0068 FFF7FEFF 		bl	disable_irq
 609              	.LVL60:
 498:../Sources/main.c **** 		carState->UARTSpeedState = DUAL_SPEED_NO_UART;
 610              		.loc 1 498 0
 611 006c 0123     		mov	r3, #1
 612 006e 6370     		strb	r3, [r4, #1]
 613 0070 E1E7     		b	.L31
 614              	.L36:
 493:../Sources/main.c **** 	else if (((((TFC_GetDIP_Switch() >> 3) & 0x01) == 0x01) && ((PORTA_PCR2 >> 8) & 0x00000007) != 0x0
 615              		.loc 1 493 0
 616 0072 6078     		ldrb	r0, [r4, #1]
 617 0074 0228     		cmp	r0, #2
 618 0076 DED1     		bne	.L31
 619 0078 EBE7     		b	.L37
 620              	.L42:
 621 007a C046     		.align	2
 622              	.L41:
 623 007c 00900440 		.word	1074040832
 624 0080 FFF8FFFF 		.word	-1793
 625              		.cfi_endproc
 626              	.LFE7:
 628              		.global	__aeabi_fcmpgt
 629              		.section	.text.LEDfeedback,"ax",%progbits
 630              		.align	2
 631              		.global	LEDfeedback
 632              		.code	16
 633              		.thumb_func
 635              	LEDfeedback:
 636              	.LFB8:
 501:../Sources/main.c **** 
 502:../Sources/main.c **** void LEDfeedback(carState_s* carState)
 503:../Sources/main.c **** {
 637              		.loc 1 503 0
 638              		.cfi_startproc
 639              	.LVL61:
 504:../Sources/main.c **** 	if(batteryLevel > LOW_BATTERY)
 640              		.loc 1 504 0
 641 0000 4F4B     		ldr	r3, .L70
 503:../Sources/main.c **** {
 642              		.loc 1 503 0
 643 0002 10B5     		push	{r4, lr}
 644              	.LCFI10:
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 4, -8
 647              		.cfi_offset 14, -4
 648              		.loc 1 504 0
 649 0004 4F49     		ldr	r1, .L70+4
 503:../Sources/main.c **** {
 650              		.loc 1 503 0
 651 0006 041C     		mov	r4, r0
 652              		.loc 1 504 0
 653 0008 1868     		ldr	r0, [r3]
 654              	.LVL62:
 655 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 656              	.LVL63:
 657 000e 0028     		cmp	r0, #0
 658 0010 1DD0     		beq	.L55
 505:../Sources/main.c **** 	{
 506:../Sources/main.c **** 		if(carState->lineDetectionState == STOPLINE_DETECTED)	// Also set in lineFollowingMode()
 659              		.loc 1 506 0
 660 0012 A078     		ldrb	r0, [r4, #2]
 661 0014 0228     		cmp	r0, #2
 662 0016 30D0     		beq	.L63
 507:../Sources/main.c **** 		{
 508:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 509:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 510:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 511:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 512:../Sources/main.c **** 		}
 513:../Sources/main.c **** 		#ifdef CROSS_DETECTION_ENABLE
 514:../Sources/main.c **** 		else if(carState->crossSection == YES)
 663              		.loc 1 514 0
 664 0018 A379     		ldrb	r3, [r4, #6]
 665 001a 012B     		cmp	r3, #1
 666 001c 39D0     		beq	.L64
 515:../Sources/main.c **** 		{
 516:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 517:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 518:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 519:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 520:../Sources/main.c **** 		}
 521:../Sources/main.c **** 		#endif
 522:../Sources/main.c **** 		else if(carState->sMode == S_MODE_ON)
 667              		.loc 1 522 0
 668 001e 617A     		ldrb	r1, [r4, #9]
 669 0020 0129     		cmp	r1, #1
 670 0022 47D0     		beq	.L65
 523:../Sources/main.c **** 		{
 524:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 526:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 527:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 528:../Sources/main.c **** 		}
 529:../Sources/main.c **** 		else if(carState->detectedType == DOUBLE_EDGE)
 671              		.loc 1 529 0
 672 0024 2279     		ldrb	r2, [r4, #4]
 673 0026 022A     		cmp	r2, #2
 674 0028 5AD0     		beq	.L66
 530:../Sources/main.c **** 		{
 531:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 532:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 533:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 534:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 535:../Sources/main.c **** 		}
 536:../Sources/main.c **** 		else if (carState->edge == LEFT_EDGE)
 675              		.loc 1 536 0
 676 002a 6479     		ldrb	r4, [r4, #5]
 677              	.LVL64:
 678 002c 012C     		cmp	r4, #1
 679 002e 68D0     		beq	.L67
 537:../Sources/main.c **** 		{	
 538:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 539:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 540:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 541:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 542:../Sources/main.c **** 		}
 543:../Sources/main.c **** 		else if (carState->edge == RIGHT_EDGE)
 680              		.loc 1 543 0
 681 0030 022C     		cmp	r4, #2
 682 0032 00D1     		bne	.LCB579
 683 0034 71E0     		b	.L68	@long jump
 684              	.LCB579:
 544:../Sources/main.c **** 		{	
 545:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 546:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 547:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 548:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 549:../Sources/main.c **** 		}
 550:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_TEMPORARILY_LOST)
 685              		.loc 1 550 0
 686 0036 0128     		cmp	r0, #1
 687 0038 00D1     		bne	.LCB581
 688 003a 75E0     		b	.L69	@long jump
 689              	.LCB581:
 551:../Sources/main.c **** 		{	
 552:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 554:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 555:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 556:../Sources/main.c **** 		}
 557:../Sources/main.c **** 		else if (carState->lineDetectionState == LINE_LOST)
 690              		.loc 1 557 0
 691 003c 0328     		cmp	r0, #3
 692 003e 1BD1     		bne	.L43
 558:../Sources/main.c **** 		{	
 559:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 693              		.loc 1 559 0
 694 0040 4148     		ldr	r0, .L70+8
 695 0042 8021     		mov	r1, #128
 696 0044 8368     		ldr	r3, [r0, #8]
 697 0046 4A00     		lsl	r2, r1, #1
 698 0048 1A43     		orr	r2, r3
 699 004a 8260     		str	r2, [r0, #8]
 700 004c 27E0     		b	.L62
 701              	.LVL65:
 702              	.L55:
 560:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 561:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 562:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 563:../Sources/main.c **** 		}
 564:../Sources/main.c **** 	}
 565:../Sources/main.c **** 	else
 566:../Sources/main.c **** 	{
 567:../Sources/main.c **** 		GPIOB_PSOR |= (1<<8);
 703              		.loc 1 567 0
 704 004e 3E48     		ldr	r0, .L70+8
 705 0050 8022     		mov	r2, #128
 706 0052 4168     		ldr	r1, [r0, #4]
 707 0054 5400     		lsl	r4, r2, #1
 708              	.LVL66:
 709 0056 0C43     		orr	r4, r1
 710 0058 4460     		str	r4, [r0, #4]
 568:../Sources/main.c **** 		GPIOB_PSOR |= (1<<9);
 711              		.loc 1 568 0
 712 005a 4368     		ldr	r3, [r0, #4]
 713 005c 8021     		mov	r1, #128
 714 005e 8A00     		lsl	r2, r1, #2
 715 0060 1A43     		orr	r2, r3
 716 0062 4260     		str	r2, [r0, #4]
 717              	.L56:
 569:../Sources/main.c **** 		GPIOB_PSOR |= (1<<10);
 718              		.loc 1 569 0
 719 0064 4368     		ldr	r3, [r0, #4]
 720 0066 8021     		mov	r1, #128
 721 0068 CA00     		lsl	r2, r1, #3
 722 006a 1A43     		orr	r2, r3
 723 006c 4260     		str	r2, [r0, #4]
 724              	.L57:
 570:../Sources/main.c **** 		GPIOB_PSOR |= (1<<11);		
 725              		.loc 1 570 0
 726 006e 4468     		ldr	r4, [r0, #4]
 727 0070 8023     		mov	r3, #128
 728 0072 1901     		lsl	r1, r3, #4
 729 0074 2143     		orr	r1, r4
 730 0076 4160     		str	r1, [r0, #4]
 731              	.L43:
 571:../Sources/main.c **** 	}
 572:../Sources/main.c **** }
 732              		.loc 1 572 0
 733              		@ sp needed for prologue
 734 0078 10BD     		pop	{r4, pc}
 735              	.LVL67:
 736              	.L63:
 508:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 737              		.loc 1 508 0
 738 007a 3348     		ldr	r0, .L70+8
 739 007c 8024     		mov	r4, #128
 740              	.LVL68:
 741 007e 8168     		ldr	r1, [r0, #8]
 742 0080 6300     		lsl	r3, r4, #1
 743 0082 0B43     		orr	r3, r1
 744 0084 8360     		str	r3, [r0, #8]
 509:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 745              		.loc 1 509 0
 746 0086 8168     		ldr	r1, [r0, #8]
 747 0088 8022     		mov	r2, #128
 748 008a 9400     		lsl	r4, r2, #2
 749 008c 0C43     		orr	r4, r1
 750 008e 8460     		str	r4, [r0, #8]
 751 0090 E8E7     		b	.L56
 752              	.LVL69:
 753              	.L64:
 516:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 754              		.loc 1 516 0
 755 0092 2D48     		ldr	r0, .L70+8
 756 0094 8021     		mov	r1, #128
 757 0096 4368     		ldr	r3, [r0, #4]
 758 0098 4C00     		lsl	r4, r1, #1
 759              	.LVL70:
 760 009a 1C43     		orr	r4, r3
 761 009c 4460     		str	r4, [r0, #4]
 762              	.L62:
 560:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 763              		.loc 1 560 0
 764 009e 8368     		ldr	r3, [r0, #8]
 765 00a0 8022     		mov	r2, #128
 766 00a2 9100     		lsl	r1, r2, #2
 767 00a4 1943     		orr	r1, r3
 768 00a6 8160     		str	r1, [r0, #8]
 561:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 769              		.loc 1 561 0
 770 00a8 8468     		ldr	r4, [r0, #8]
 771 00aa 8023     		mov	r3, #128
 772 00ac DA00     		lsl	r2, r3, #3
 773 00ae 2243     		orr	r2, r4
 774 00b0 8260     		str	r2, [r0, #8]
 775 00b2 DCE7     		b	.L57
 776              	.LVL71:
 777              	.L65:
 524:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 778              		.loc 1 524 0
 779 00b4 2448     		ldr	r0, .L70+8
 780 00b6 8021     		mov	r1, #128
 781 00b8 8368     		ldr	r3, [r0, #8]
 782 00ba 4A00     		lsl	r2, r1, #1
 783 00bc 1A43     		orr	r2, r3
 784 00be 8260     		str	r2, [r0, #8]
 525:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 785              		.loc 1 525 0
 786 00c0 4468     		ldr	r4, [r0, #4]
 787              	.LVL72:
 788 00c2 8023     		mov	r3, #128
 789 00c4 9900     		lsl	r1, r3, #2
 790 00c6 2143     		orr	r1, r4
 791 00c8 4160     		str	r1, [r0, #4]
 792              	.L59:
 554:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 793              		.loc 1 554 0
 794 00ca 4468     		ldr	r4, [r0, #4]
 795 00cc 8022     		mov	r2, #128
 796 00ce D300     		lsl	r3, r2, #3
 797 00d0 2343     		orr	r3, r4
 798 00d2 4360     		str	r3, [r0, #4]
 799              	.L58:
 555:../Sources/main.c **** 			GPIOB_PCOR |= (1<<11);
 800              		.loc 1 555 0
 801 00d4 8168     		ldr	r1, [r0, #8]
 802 00d6 8024     		mov	r4, #128
 803 00d8 2201     		lsl	r2, r4, #4
 804 00da 0A43     		orr	r2, r1
 805 00dc 8260     		str	r2, [r0, #8]
 806 00de CBE7     		b	.L43
 807              	.LVL73:
 808              	.L66:
 531:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 809              		.loc 1 531 0
 810 00e0 1948     		ldr	r0, .L70+8
 811 00e2 8023     		mov	r3, #128
 812 00e4 4468     		ldr	r4, [r0, #4]
 813              	.LVL74:
 814 00e6 5A00     		lsl	r2, r3, #1
 815 00e8 2243     		orr	r2, r4
 816 00ea 4260     		str	r2, [r0, #4]
 817              	.L61:
 546:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 818              		.loc 1 546 0
 819 00ec 4168     		ldr	r1, [r0, #4]
 820 00ee 8024     		mov	r4, #128
 821 00f0 A300     		lsl	r3, r4, #2
 822 00f2 0B43     		orr	r3, r1
 823 00f4 4360     		str	r3, [r0, #4]
 824              	.L60:
 547:../Sources/main.c **** 			GPIOB_PCOR |= (1<<10);
 825              		.loc 1 547 0
 826 00f6 8168     		ldr	r1, [r0, #8]
 827 00f8 8022     		mov	r2, #128
 828 00fa D400     		lsl	r4, r2, #3
 829 00fc 0C43     		orr	r4, r1
 830 00fe 8460     		str	r4, [r0, #8]
 831 0100 E8E7     		b	.L58
 832              	.L67:
 538:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 833              		.loc 1 538 0
 834 0102 1148     		ldr	r0, .L70+8
 835 0104 8021     		mov	r1, #128
 836 0106 4368     		ldr	r3, [r0, #4]
 837 0108 4C00     		lsl	r4, r1, #1
 838 010a 1C43     		orr	r4, r3
 839 010c 4460     		str	r4, [r0, #4]
 539:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 840              		.loc 1 539 0
 841 010e 8368     		ldr	r3, [r0, #8]
 842 0110 8022     		mov	r2, #128
 843 0112 9100     		lsl	r1, r2, #2
 844 0114 1943     		orr	r1, r3
 845 0116 8160     		str	r1, [r0, #8]
 846 0118 EDE7     		b	.L60
 847              	.L68:
 545:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 848              		.loc 1 545 0
 849 011a 0B48     		ldr	r0, .L70+8
 850 011c 8024     		mov	r4, #128
 851 011e 8168     		ldr	r1, [r0, #8]
 852 0120 6200     		lsl	r2, r4, #1
 853 0122 0A43     		orr	r2, r1
 854 0124 8260     		str	r2, [r0, #8]
 855 0126 E1E7     		b	.L61
 856              	.L69:
 552:../Sources/main.c **** 			GPIOB_PCOR |= (1<<8);
 857              		.loc 1 552 0
 858 0128 0748     		ldr	r0, .L70+8
 859 012a 8023     		mov	r3, #128
 860 012c 8468     		ldr	r4, [r0, #8]
 861 012e 5900     		lsl	r1, r3, #1
 862 0130 2143     		orr	r1, r4
 863 0132 8160     		str	r1, [r0, #8]
 553:../Sources/main.c **** 			GPIOB_PCOR |= (1<<9);
 864              		.loc 1 553 0
 865 0134 8468     		ldr	r4, [r0, #8]
 866 0136 8022     		mov	r2, #128
 867 0138 9300     		lsl	r3, r2, #2
 868 013a 2343     		orr	r3, r4
 869 013c 8360     		str	r3, [r0, #8]
 870 013e C4E7     		b	.L59
 871              	.L71:
 872              		.align	2
 873              	.L70:
 874 0140 00000000 		.word	.LANCHOR3
 875 0144 0000F040 		.word	1089470464
 876 0148 40F00F40 		.word	1074786368
 877              		.cfi_endproc
 878              	.LFE8:
 880              		.section	.text.servoAlignment,"ax",%progbits
 881              		.align	2
 882              		.global	servoAlignment
 883              		.code	16
 884              		.thumb_func
 886              	servoAlignment:
 887              	.LFB9:
 573:../Sources/main.c **** 
 574:../Sources/main.c **** void servoAlignment()		// Helps setting the servo offset value by debugging
 575:../Sources/main.c **** {
 888              		.loc 1 575 0
 889              		.cfi_startproc
 890 0000 08B5     		push	{r3, lr}
 891              	.LCFI11:
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 3, -8
 894              		.cfi_offset 14, -4
 576:../Sources/main.c **** 	if (TFC_Ticker[0] >= 200)
 895              		.loc 1 576 0
 896 0002 054B     		ldr	r3, .L74
 897 0004 1A68     		ldr	r2, [r3]
 898 0006 C72A     		cmp	r2, #199
 899 0008 05D9     		bls	.L72
 900              	.LBB15:
 577:../Sources/main.c **** 	{
 578:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 901              		.loc 1 578 0
 902 000a 0020     		mov	r0, #0
 903 000c 1860     		str	r0, [r3]
 904              	.LVL75:
 579:../Sources/main.c **** 		float offset = 30000 * 0.15f;
 580:../Sources/main.c **** 		TFC_SetServo(0, offset);
 905              		.loc 1 580 0
 906 000e 0349     		ldr	r1, .L74+4
 907 0010 0020     		mov	r0, #0
 908 0012 FFF7FEFF 		bl	TFC_SetServo
 909              	.LVL76:
 910              	.L72:
 911              	.LBE15:
 581:../Sources/main.c **** 	}
 582:../Sources/main.c **** }
 912              		.loc 1 582 0
 913              		@ sp needed for prologue
 914 0016 08BD     		pop	{r3, pc}
 915              	.L75:
 916              		.align	2
 917              	.L74:
 918 0018 00000000 		.word	TFC_Ticker
 919 001c 00A08C45 		.word	1166843904
 920              		.cfi_endproc
 921              	.LFE9:
 923              		.global	__aeabi_fmul
 924              		.global	__aeabi_fcmple
 925              		.global	__aeabi_fcmpge
 926              		.global	__aeabi_f2iz
 927              		.global	__aeabi_fcmpeq
 928              		.global	__aeabi_f2d
 929              		.global	__aeabi_dadd
 930              		.global	__aeabi_d2iz
 931              		.global	__aeabi_dsub
 932              		.global	__aeabi_i2f
 933              		.section	.text.telemetrySendData,"ax",%progbits
 934              		.align	2
 935              		.global	telemetrySendData
 936              		.code	16
 937              		.thumb_func
 939              	telemetrySendData:
 940              	.LFB10:
 583:../Sources/main.c **** 
 584:../Sources/main.c **** void telemetrySendData()
 585:../Sources/main.c **** {
 941              		.loc 1 585 0
 942              		.cfi_startproc
 943 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 944              	.LCFI12:
 945              		.cfi_def_cfa_offset 24
 946              		.cfi_offset 3, -24
 947              		.cfi_offset 4, -20
 948              		.cfi_offset 5, -16
 949              		.cfi_offset 6, -12
 950              		.cfi_offset 7, -8
 951              		.cfi_offset 14, -4
 586:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, BLUETOOTH_FLAG);
 952              		.loc 1 586 0
 953 0002 E348     		ldr	r0, .L381
 954 0004 8021     		mov	r1, #128
 955 0006 FFF7FEFF 		bl	uart_putchar
 956              	.LVL77:
 587:../Sources/main.c **** 	
 588:../Sources/main.c **** 	// 1 - Track Centre Detected by the Camera
 589:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineCenter);
 957              		.loc 1 589 0
 958 000a E24C     		ldr	r4, .L381+4
 959 000c E048     		ldr	r0, .L381
 960 000e A17A     		ldrb	r1, [r4, #10]
 961 0010 FFF7FEFF 		bl	uart_putchar
 962              	.LVL78:
 590:../Sources/main.c **** 	// 2 - Calculated Target Speed
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 963              		.loc 1 591 0
 964 0014 E04B     		ldr	r3, .L381+8
 965 0016 8221     		mov	r1, #130
 966 0018 C905     		lsl	r1, r1, #23
 967 001a 1868     		ldr	r0, [r3]
 968 001c FFF7FEFF 		bl	__aeabi_fmul
 969              	.LVL79:
 970 0020 DE49     		ldr	r1, .L381+12
 971 0022 051C     		add	r5, r0, #0
 972 0024 FFF7FEFF 		bl	__aeabi_fcmple
 973              	.LVL80:
 974 0028 0028     		cmp	r0, #0
 975 002a 00D1     		bne	.LCB845
 976 002c B3E0     		b	.L85	@long jump
 977              	.LCB845:
 978              		.loc 1 591 0 is_stmt 0
 979 002e 281C     		add	r0, r5, #0
 980 0030 0021     		mov	r1, #0
 981 0032 FFF7FEFF 		bl	__aeabi_fcmpge
 982              	.LVL81:
 983 0036 0028     		cmp	r0, #0
 984 0038 00D1     		bne	.LCB851
 985 003a BDE1     		b	.L79	@long jump
 986              	.LCB851:
 987              		.loc 1 591 0
 988 003c 281C     		add	r0, r5, #0
 989 003e D849     		ldr	r1, .L381+16
 990 0040 FFF7FEFF 		bl	__aeabi_fcmpge
 991              	.LVL82:
 992 0044 0028     		cmp	r0, #0
 993 0046 00D1     		bne	.LCB857
 994 0048 B0E1     		b	.L347	@long jump
 995              	.LCB857:
 996              		.loc 1 591 0
 997 004a 281C     		add	r0, r5, #0
 998 004c D549     		ldr	r1, .L381+20
 999 004e FFF7FEFF 		bl	__aeabi_fcmple
 1000              	.LVL83:
 1001 0052 7F26     		mov	r6, #127
 1002 0054 071E     		sub	r7, r0, #0
 1003 0056 17D1     		bne	.L83
 1004              		.loc 1 591 0
 1005 0058 281C     		add	r0, r5, #0
 1006 005a 0021     		mov	r1, #0
 1007 005c FFF7FEFF 		bl	__aeabi_fcmpeq
 1008              	.LVL84:
 1009 0060 0028     		cmp	r0, #0
 1010 0062 00D1     		bne	.LCB871
 1011 0064 A8E1     		b	.L79	@long jump
 1012              	.LCB871:
 1013              		.loc 1 591 0
 1014 0066 002F     		cmp	r7, #0
 1015 0068 00D1     		bne	.LCB873
 1016 006a BAE1     		b	.L92	@long jump
 1017              	.LCB873:
 1018              		.loc 1 591 0
 1019 006c 281C     		add	r0, r5, #0
 1020 006e CE49     		ldr	r1, .L381+24
 1021 0070 FFF7FEFF 		bl	__aeabi_fcmpgt
 1022              	.LVL85:
 1023 0074 0028     		cmp	r0, #0
 1024 0076 07D1     		bne	.L83
 1025              		.loc 1 591 0
 1026 0078 281C     		add	r0, r5, #0
 1027 007a C949     		ldr	r1, .L381+16
 1028 007c FFF7FEFF 		bl	__aeabi_fcmpge
 1029              	.LVL86:
 1030 0080 7E26     		mov	r6, #126
 1031 0082 0028     		cmp	r0, #0
 1032 0084 00D1     		bne	.LCB886
 1033 0086 9BE0     		b	.L91	@long jump
 1034              	.LCB886:
 1035              	.L83:
 1036              		.loc 1 591 0
 1037 0088 311C     		mov	r1, r6
 1038 008a C148     		ldr	r0, .L381
 1039 008c FFF7FEFF 		bl	uart_putchar
 1040              	.LVL87:
 592:../Sources/main.c **** 	// 3 - Speed of the right wheel
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 1041              		.loc 1 593 0 is_stmt 1
 1042 0090 0020     		mov	r0, #0
 1043 0092 FFF7FEFF 		bl	getSpeed
 1044              	.LVL88:
 1045 0096 8222     		mov	r2, #130
 1046 0098 D105     		lsl	r1, r2, #23
 1047 009a FFF7FEFF 		bl	__aeabi_fmul
 1048              	.LVL89:
 1049 009e BF49     		ldr	r1, .L381+12
 1050 00a0 FFF7FEFF 		bl	__aeabi_fcmple
 1051              	.LVL90:
 1052 00a4 0028     		cmp	r0, #0
 1053 00a6 00D1     		bne	.LCB903
 1054 00a8 99E0     		b	.L96	@long jump
 1055              	.LCB903:
 1056              		.loc 1 593 0 is_stmt 0
 1057 00aa 0020     		mov	r0, #0
 1058 00ac FFF7FEFF 		bl	getSpeed
 1059              	.LVL91:
 1060 00b0 8223     		mov	r3, #130
 1061 00b2 D905     		lsl	r1, r3, #23
 1062 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1063              	.LVL92:
 1064 00b8 0021     		mov	r1, #0
 1065 00ba FFF7FEFF 		bl	__aeabi_fcmpge
 1066              	.LVL93:
 1067 00be 0028     		cmp	r0, #0
 1068 00c0 00D1     		bne	.LCB915
 1069 00c2 8CE0     		b	.L96	@long jump
 1070              	.LCB915:
 1071              		.loc 1 593 0
 1072 00c4 0020     		mov	r0, #0
 1073 00c6 FFF7FEFF 		bl	getSpeed
 1074              	.LVL94:
 1075 00ca 8221     		mov	r1, #130
 1076 00cc C905     		lsl	r1, r1, #23
 1077 00ce FFF7FEFF 		bl	__aeabi_fmul
 1078              	.LVL95:
 1079 00d2 B349     		ldr	r1, .L381+16
 1080 00d4 FFF7FEFF 		bl	__aeabi_fcmpge
 1081              	.LVL96:
 1082 00d8 0028     		cmp	r0, #0
 1083 00da 73D1     		bne	.L99
 1084              	.L102:
 1085              		.loc 1 593 0
 1086 00dc 0020     		mov	r0, #0
 1087 00de FFF7FEFF 		bl	getSpeed
 1088              	.LVL97:
 1089 00e2 8222     		mov	r2, #130
 1090 00e4 D105     		lsl	r1, r2, #23
 1091 00e6 FFF7FEFF 		bl	__aeabi_fmul
 1092              	.LVL98:
 1093 00ea 0021     		mov	r1, #0
 1094 00ec FFF7FEFF 		bl	__aeabi_fcmpeq
 1095              	.LVL99:
 1096 00f0 0028     		cmp	r0, #0
 1097 00f2 00D1     		bne	.LCB940
 1098 00f4 81E0     		b	.L100	@long jump
 1099              	.LCB940:
 1100              		.loc 1 593 0
 1101 00f6 0020     		mov	r0, #0
 1102 00f8 FFF7FEFF 		bl	getSpeed
 1103              	.LVL100:
 1104 00fc 8223     		mov	r3, #130
 1105 00fe D905     		lsl	r1, r3, #23
 1106 0100 FFF7FEFF 		bl	__aeabi_fmul
 1107              	.LVL101:
 1108 0104 A549     		ldr	r1, .L381+12
 1109 0106 FFF7FEFF 		bl	__aeabi_fcmple
 1110              	.LVL102:
 1111 010a 0028     		cmp	r0, #0
 1112 010c 27D0     		beq	.L118
 1113              		.loc 1 593 0
 1114 010e 0020     		mov	r0, #0
 1115 0110 FFF7FEFF 		bl	getSpeed
 1116              	.LVL103:
 1117 0114 8221     		mov	r1, #130
 1118 0116 C905     		lsl	r1, r1, #23
 1119 0118 FFF7FEFF 		bl	__aeabi_fmul
 1120              	.LVL104:
 1121 011c 0021     		mov	r1, #0
 1122 011e FFF7FEFF 		bl	__aeabi_fcmpge
 1123              	.LVL105:
 1124 0122 0028     		cmp	r0, #0
 1125 0124 1BD0     		beq	.L118
 1126              		.loc 1 593 0
 1127 0126 0020     		mov	r0, #0
 1128 0128 8227     		mov	r7, #130
 1129 012a FFF7FEFF 		bl	getSpeed
 1130              	.LVL106:
 1131 012e F905     		lsl	r1, r7, #23
 1132 0130 FFF7FEFF 		bl	__aeabi_fmul
 1133              	.LVL107:
 1134 0134 9A49     		ldr	r1, .L381+16
 1135 0136 FFF7FEFF 		bl	__aeabi_fcmpge
 1136              	.LVL108:
 1137 013a 0028     		cmp	r0, #0
 1138 013c 01D1     		bne	.LCB976
 1139 013e 00F027FD 		bl	.L122	@far jump
 1140              	.LCB976:
 1141              		.loc 1 593 0
 1142 0142 0020     		mov	r0, #0
 1143 0144 8225     		mov	r5, #130
 1144 0146 FFF7FEFF 		bl	getSpeed
 1145              	.LVL109:
 1146 014a E905     		lsl	r1, r5, #23
 1147 014c FFF7FEFF 		bl	__aeabi_fmul
 1148              	.LVL110:
 1149 0150 9449     		ldr	r1, .L381+20
 1150 0152 FFF7FEFF 		bl	__aeabi_fcmple
 1151              	.LVL111:
 1152 0156 0028     		cmp	r0, #0
 1153 0158 01D1     		bne	.LCB988
 1154 015a 00F019FD 		bl	.L122	@far jump
 1155              	.LCB988:
 1156              	.L118:
 1157              		.loc 1 593 0
 1158 015e 0020     		mov	r0, #0
 1159 0160 8226     		mov	r6, #130
 1160 0162 FFF7FEFF 		bl	getSpeed
 1161              	.LVL112:
 1162 0166 F105     		lsl	r1, r6, #23
 1163 0168 FFF7FEFF 		bl	__aeabi_fmul
 1164              	.LVL113:
 1165 016c 8E49     		ldr	r1, .L381+24
 1166 016e FFF7FEFF 		bl	__aeabi_fcmpgt
 1167              	.LVL114:
 1168 0172 0028     		cmp	r0, #0
 1169 0174 00D0     		beq	.LCB1001
 1170 0176 82E0     		b	.L117	@long jump
 1171              	.LCB1001:
 1172              		.loc 1 593 0
 1173 0178 FFF7FEFF 		bl	getSpeed
 1174              	.LVL115:
 1175 017c 8222     		mov	r2, #130
 1176 017e D105     		lsl	r1, r2, #23
 1177 0180 FFF7FEFF 		bl	__aeabi_fmul
 1178              	.LVL116:
 1179 0184 8649     		ldr	r1, .L381+16
 1180 0186 FFF7FEFF 		bl	__aeabi_fcmpge
 1181              	.LVL117:
 1182 018a 0028     		cmp	r0, #0
 1183 018c 01D0     		beq	.LCB1012
 1184 018e 00F03DFD 		bl	.L372	@far jump
 1185              	.LCB1012:
 1186              	.L126:
 1187              		.loc 1 593 0
 1188 0192 0021     		mov	r1, #0
 1189 0194 74E0     		b	.L111
 1190              	.L85:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1191              		.loc 1 591 0 is_stmt 1
 1192 0196 281C     		add	r0, r5, #0
 1193 0198 8349     		ldr	r1, .L381+24
 1194 019a FFF7FEFF 		bl	__aeabi_fcmpgt
 1195              	.LVL118:
 1196 019e 7F26     		mov	r6, #127
 1197 01a0 0028     		cmp	r0, #0
 1198 01a2 00D0     		beq	.LCB1025
 1199 01a4 70E7     		b	.L83	@long jump
 1200              	.LCB1025:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1201              		.loc 1 591 0 is_stmt 0
 1202 01a6 281C     		add	r0, r5, #0
 1203 01a8 7D49     		ldr	r1, .L381+16
 1204 01aa FFF7FEFF 		bl	__aeabi_fcmpge
 1205              	.LVL119:
 1206 01ae 0028     		cmp	r0, #0
 1207 01b0 06D0     		beq	.L91
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1208              		.loc 1 591 0
 1209 01b2 281C     		add	r0, r5, #0
 1210 01b4 7B49     		ldr	r1, .L381+20
 1211 01b6 FFF7FEFF 		bl	__aeabi_fcmple
 1212              	.LVL120:
 1213 01ba 0028     		cmp	r0, #0
 1214 01bc 00D0     		beq	.LCB1037
 1215 01be 63E7     		b	.L83	@long jump
 1216              	.LCB1037:
 1217              	.L91:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1218              		.loc 1 591 0
 1219 01c0 0026     		mov	r6, #0
 1220 01c2 61E7     		b	.L83
 1221              	.L99:
 1222              		.loc 1 593 0 is_stmt 1
 1223 01c4 0020     		mov	r0, #0
 1224 01c6 8227     		mov	r7, #130
 1225 01c8 FFF7FEFF 		bl	getSpeed
 1226              	.LVL121:
 1227 01cc F905     		lsl	r1, r7, #23
 1228 01ce FFF7FEFF 		bl	__aeabi_fmul
 1229              	.LVL122:
 1230 01d2 7449     		ldr	r1, .L381+20
 1231 01d4 FFF7FEFF 		bl	__aeabi_fcmple
 1232              	.LVL123:
 1233 01d8 0028     		cmp	r0, #0
 1234 01da 00D1     		bne	.LCB1055
 1235 01dc 7EE7     		b	.L102	@long jump
 1236              	.LCB1055:
 1237              	.L96:
 1238              		.loc 1 593 0 is_stmt 0
 1239 01de 0020     		mov	r0, #0
 1240 01e0 8225     		mov	r5, #130
 1241 01e2 FFF7FEFF 		bl	getSpeed
 1242              	.LVL124:
 1243 01e6 E905     		lsl	r1, r5, #23
 1244 01e8 FFF7FEFF 		bl	__aeabi_fmul
 1245              	.LVL125:
 1246 01ec 6E49     		ldr	r1, .L381+24
 1247 01ee FFF7FEFF 		bl	__aeabi_fcmpgt
 1248              	.LVL126:
 1249 01f2 0028     		cmp	r0, #0
 1250 01f4 01D1     		bne	.LCB1068
 1251 01f6 00F04AFC 		bl	.L373	@far jump
 1252              	.LCB1068:
 1253              	.L100:
 1254              		.loc 1 593 0
 1255 01fa 0020     		mov	r0, #0
 1256 01fc FFF7FEFF 		bl	getSpeed
 1257              	.LVL127:
 1258 0200 8221     		mov	r1, #130
 1259 0202 C905     		lsl	r1, r1, #23
 1260 0204 FFF7FEFF 		bl	__aeabi_fmul
 1261              	.LVL128:
 1262 0208 6449     		ldr	r1, .L381+12
 1263 020a FFF7FEFF 		bl	__aeabi_fcmple
 1264              	.LVL129:
 1265 020e 0028     		cmp	r0, #0
 1266 0210 27D0     		beq	.L107
 1267              		.loc 1 593 0
 1268 0212 0020     		mov	r0, #0
 1269 0214 8227     		mov	r7, #130
 1270 0216 FFF7FEFF 		bl	getSpeed
 1271              	.LVL130:
 1272 021a F905     		lsl	r1, r7, #23
 1273 021c FFF7FEFF 		bl	__aeabi_fmul
 1274              	.LVL131:
 1275 0220 0021     		mov	r1, #0
 1276 0222 FFF7FEFF 		bl	__aeabi_fcmpge
 1277              	.LVL132:
 1278 0226 0028     		cmp	r0, #0
 1279 0228 1BD0     		beq	.L107
 1280              		.loc 1 593 0
 1281 022a 0020     		mov	r0, #0
 1282 022c 8225     		mov	r5, #130
 1283 022e FFF7FEFF 		bl	getSpeed
 1284              	.LVL133:
 1285 0232 E905     		lsl	r1, r5, #23
 1286 0234 FFF7FEFF 		bl	__aeabi_fmul
 1287              	.LVL134:
 1288 0238 5949     		ldr	r1, .L381+16
 1289 023a FFF7FEFF 		bl	__aeabi_fcmpge
 1290              	.LVL135:
 1291 023e 0028     		cmp	r0, #0
 1292 0240 01D1     		bne	.LCB1105
 1293 0242 00F0A5FC 		bl	.L122	@far jump
 1294              	.LCB1105:
 1295              		.loc 1 593 0
 1296 0246 0020     		mov	r0, #0
 1297 0248 8226     		mov	r6, #130
 1298 024a FFF7FEFF 		bl	getSpeed
 1299              	.LVL136:
 1300 024e F105     		lsl	r1, r6, #23
 1301 0250 FFF7FEFF 		bl	__aeabi_fmul
 1302              	.LVL137:
 1303 0254 5349     		ldr	r1, .L381+20
 1304 0256 FFF7FEFF 		bl	__aeabi_fcmple
 1305              	.LVL138:
 1306 025a 0028     		cmp	r0, #0
 1307 025c 01D1     		bne	.LCB1117
 1308 025e 00F097FC 		bl	.L122	@far jump
 1309              	.LCB1117:
 1310              	.L107:
 1311              		.loc 1 593 0
 1312 0262 0020     		mov	r0, #0
 1313 0264 FFF7FEFF 		bl	getSpeed
 1314              	.LVL139:
 1315 0268 8222     		mov	r2, #130
 1316 026a D105     		lsl	r1, r2, #23
 1317 026c FFF7FEFF 		bl	__aeabi_fmul
 1318              	.LVL140:
 1319 0270 4D49     		ldr	r1, .L381+24
 1320 0272 FFF7FEFF 		bl	__aeabi_fcmpgt
 1321              	.LVL141:
 1322 0276 0028     		cmp	r0, #0
 1323 0278 01D1     		bne	.LCB1130
 1324 027a 00F01AFC 		bl	.L350	@far jump
 1325              	.LCB1130:
 1326              	.L117:
 1327 027e 7F21     		mov	r1, #127
 1328              	.L111:
 1329              		.loc 1 593 0
 1330 0280 4348     		ldr	r0, .L381
 1331 0282 FFF7FEFF 		bl	uart_putchar
 1332              	.LVL142:
 594:../Sources/main.c **** 	// 4 - Speed of the left wheel
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 1333              		.loc 1 595 0 is_stmt 1
 1334 0286 8225     		mov	r5, #130
 1335 0288 0120     		mov	r0, #1
 1336 028a FFF7FEFF 		bl	getSpeed
 1337              	.LVL143:
 1338 028e E905     		lsl	r1, r5, #23
 1339 0290 FFF7FEFF 		bl	__aeabi_fmul
 1340              	.LVL144:
 1341 0294 4149     		ldr	r1, .L381+12
 1342 0296 FFF7FEFF 		bl	__aeabi_fcmple
 1343              	.LVL145:
 1344 029a 0028     		cmp	r0, #0
 1345 029c 00D1     		bne	.LCB1149
 1346 029e B2E0     		b	.L128	@long jump
 1347              	.LCB1149:
 1348              		.loc 1 595 0 is_stmt 0
 1349 02a0 0120     		mov	r0, #1
 1350 02a2 8226     		mov	r6, #130
 1351 02a4 FFF7FEFF 		bl	getSpeed
 1352              	.LVL146:
 1353 02a8 F105     		lsl	r1, r6, #23
 1354 02aa FFF7FEFF 		bl	__aeabi_fmul
 1355              	.LVL147:
 1356 02ae 0021     		mov	r1, #0
 1357 02b0 FFF7FEFF 		bl	__aeabi_fcmpge
 1358              	.LVL148:
 1359 02b4 0028     		cmp	r0, #0
 1360 02b6 00D1     		bne	.LCB1161
 1361 02b8 A5E0     		b	.L128	@long jump
 1362              	.LCB1161:
 1363              		.loc 1 595 0
 1364 02ba 0120     		mov	r0, #1
 1365 02bc FFF7FEFF 		bl	getSpeed
 1366              	.LVL149:
 1367 02c0 8222     		mov	r2, #130
 1368 02c2 D105     		lsl	r1, r2, #23
 1369 02c4 FFF7FEFF 		bl	__aeabi_fmul
 1370              	.LVL150:
 1371 02c8 3549     		ldr	r1, .L381+16
 1372 02ca FFF7FEFF 		bl	__aeabi_fcmpge
 1373              	.LVL151:
 1374 02ce 0028     		cmp	r0, #0
 1375 02d0 00D0     		beq	.LCB1173
 1376 02d2 8BE0     		b	.L131	@long jump
 1377              	.LCB1173:
 1378              	.L134:
 1379              		.loc 1 595 0
 1380 02d4 0120     		mov	r0, #1
 1381 02d6 8225     		mov	r5, #130
 1382 02d8 FFF7FEFF 		bl	getSpeed
 1383              	.LVL152:
 1384 02dc E905     		lsl	r1, r5, #23
 1385 02de FFF7FEFF 		bl	__aeabi_fmul
 1386              	.LVL153:
 1387 02e2 0021     		mov	r1, #0
 1388 02e4 FFF7FEFF 		bl	__aeabi_fcmpeq
 1389              	.LVL154:
 1390 02e8 0028     		cmp	r0, #0
 1391 02ea 00D1     		bne	.LCB1186
 1392 02ec 98E0     		b	.L132	@long jump
 1393              	.LCB1186:
 1394              		.loc 1 595 0
 1395 02ee 0120     		mov	r0, #1
 1396 02f0 8226     		mov	r6, #130
 1397 02f2 FFF7FEFF 		bl	getSpeed
 1398              	.LVL155:
 1399 02f6 F105     		lsl	r1, r6, #23
 1400 02f8 FFF7FEFF 		bl	__aeabi_fmul
 1401              	.LVL156:
 1402 02fc 2749     		ldr	r1, .L381+12
 1403 02fe FFF7FEFF 		bl	__aeabi_fcmple
 1404              	.LVL157:
 1405 0302 0028     		cmp	r0, #0
 1406 0304 27D0     		beq	.L150
 1407              		.loc 1 595 0
 1408 0306 0120     		mov	r0, #1
 1409 0308 FFF7FEFF 		bl	getSpeed
 1410              	.LVL158:
 1411 030c 8222     		mov	r2, #130
 1412 030e D105     		lsl	r1, r2, #23
 1413 0310 FFF7FEFF 		bl	__aeabi_fmul
 1414              	.LVL159:
 1415 0314 0021     		mov	r1, #0
 1416 0316 FFF7FEFF 		bl	__aeabi_fcmpge
 1417              	.LVL160:
 1418 031a 0028     		cmp	r0, #0
 1419 031c 1BD0     		beq	.L150
 1420              		.loc 1 595 0
 1421 031e 0120     		mov	r0, #1
 1422 0320 FFF7FEFF 		bl	getSpeed
 1423              	.LVL161:
 1424 0324 8223     		mov	r3, #130
 1425 0326 D905     		lsl	r1, r3, #23
 1426 0328 FFF7FEFF 		bl	__aeabi_fmul
 1427              	.LVL162:
 1428 032c 1C49     		ldr	r1, .L381+16
 1429 032e FFF7FEFF 		bl	__aeabi_fcmpge
 1430              	.LVL163:
 1431 0332 0028     		cmp	r0, #0
 1432 0334 01D1     		bne	.LCB1222
 1433 0336 00F04BFC 		bl	.L154	@far jump
 1434              	.LCB1222:
 1435              		.loc 1 595 0
 1436 033a 0120     		mov	r0, #1
 1437 033c FFF7FEFF 		bl	getSpeed
 1438              	.LVL164:
 1439 0340 8221     		mov	r1, #130
 1440 0342 C905     		lsl	r1, r1, #23
 1441 0344 FFF7FEFF 		bl	__aeabi_fmul
 1442              	.LVL165:
 1443 0348 1649     		ldr	r1, .L381+20
 1444 034a FFF7FEFF 		bl	__aeabi_fcmple
 1445              	.LVL166:
 1446 034e 0028     		cmp	r0, #0
 1447 0350 01D1     		bne	.LCB1234
 1448 0352 00F03DFC 		bl	.L154	@far jump
 1449              	.LCB1234:
 1450              	.L150:
 1451              		.loc 1 595 0
 1452 0356 0120     		mov	r0, #1
 1453 0358 8227     		mov	r7, #130
 1454 035a FFF7FEFF 		bl	getSpeed
 1455              	.LVL167:
 1456 035e F905     		lsl	r1, r7, #23
 1457 0360 FFF7FEFF 		bl	__aeabi_fmul
 1458              	.LVL168:
 1459 0364 1049     		ldr	r1, .L381+24
 1460 0366 FFF7FEFF 		bl	__aeabi_fcmpgt
 1461              	.LVL169:
 1462 036a 0028     		cmp	r0, #0
 1463 036c 00D0     		beq	.LCB1247
 1464 036e 96E0     		b	.L149	@long jump
 1465              	.LCB1247:
 1466              		.loc 1 595 0
 1467 0370 0120     		mov	r0, #1
 1468 0372 8225     		mov	r5, #130
 1469 0374 FFF7FEFF 		bl	getSpeed
 1470              	.LVL170:
 1471 0378 E905     		lsl	r1, r5, #23
 1472 037a FFF7FEFF 		bl	__aeabi_fmul
 1473              	.LVL171:
 1474 037e 0849     		ldr	r1, .L381+16
 1475 0380 FFF7FEFF 		bl	__aeabi_fcmpge
 1476              	.LVL172:
 1477 0384 0028     		cmp	r0, #0
 1478 0386 01D0     		beq	.LCB1259
 1479 0388 00F052FC 		bl	.L374	@far jump
 1480              	.LCB1259:
 1481              	.L158:
 1482              		.loc 1 595 0
 1483 038c 0021     		mov	r1, #0
 1484 038e 87E0     		b	.L143
 1485              	.L382:
 1486              		.align	2
 1487              	.L381:
 1488 0390 00C00640 		.word	1074184192
 1489 0394 00000000 		.word	.LANCHOR2
 1490 0398 00000000 		.word	.LANCHOR4
 1491 039c 00807E43 		.word	1132363776
 1492 03a0 0000FF42 		.word	1124007936
 1493 03a4 00800043 		.word	1124106240
 1494 03a8 00007F43 		.word	1132396544
 1495              	.L347:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1496              		.loc 1 591 0 is_stmt 1
 1497 03ac 281C     		add	r0, r5, #0
 1498 03ae 0021     		mov	r1, #0
 1499 03b0 FFF7FEFF 		bl	__aeabi_fcmpeq
 1500              	.LVL173:
 1501 03b4 0028     		cmp	r0, #0
 1502 03b6 14D1     		bne	.L92
 1503              	.L79:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1504              		.loc 1 591 0 is_stmt 0
 1505 03b8 281C     		add	r0, r5, #0
 1506 03ba 0021     		mov	r1, #0
 1507 03bc FFF7FEFF 		bl	__aeabi_fcmpge
 1508              	.LVL174:
 1509 03c0 0028     		cmp	r0, #0
 1510 03c2 00D1     		bne	.LCB1290
 1511 03c4 E7E6     		b	.L85	@long jump
 1512              	.LCB1290:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1513              		.loc 1 591 0
 1514 03c6 281C     		add	r0, r5, #0
 1515 03c8 9149     		ldr	r1, .L383+8
 1516 03ca FFF7FEFF 		bl	__aeabi_fcmpge
 1517              	.LVL175:
 1518 03ce 0028     		cmp	r0, #0
 1519 03d0 07D0     		beq	.L92
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1520              		.loc 1 591 0
 1521 03d2 281C     		add	r0, r5, #0
 1522 03d4 8F49     		ldr	r1, .L383+12
 1523 03d6 FFF7FEFF 		bl	__aeabi_fcmple
 1524              	.LVL176:
 1525 03da 7F26     		mov	r6, #127
 1526 03dc 0028     		cmp	r0, #0
 1527 03de 00D0     		beq	.LCB1303
 1528 03e0 52E6     		b	.L83	@long jump
 1529              	.LCB1303:
 1530              	.L92:
 591:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*targetSpeed)));
 1531              		.loc 1 591 0
 1532 03e2 281C     		add	r0, r5, #0
 1533 03e4 FFF7FEFF 		bl	__aeabi_f2iz
 1534              	.LVL177:
 1535 03e8 C6B2     		uxtb	r6, r0
 1536 03ea 4DE6     		b	.L83
 1537              	.L131:
 1538              		.loc 1 595 0 is_stmt 1
 1539 03ec 0120     		mov	r0, #1
 1540 03ee FFF7FEFF 		bl	getSpeed
 1541              	.LVL178:
 1542 03f2 8223     		mov	r3, #130
 1543 03f4 D905     		lsl	r1, r3, #23
 1544 03f6 FFF7FEFF 		bl	__aeabi_fmul
 1545              	.LVL179:
 1546 03fa 8649     		ldr	r1, .L383+12
 1547 03fc FFF7FEFF 		bl	__aeabi_fcmple
 1548              	.LVL180:
 1549 0400 0028     		cmp	r0, #0
 1550 0402 00D1     		bne	.LCB1325
 1551 0404 66E7     		b	.L134	@long jump
 1552              	.LCB1325:
 1553              	.L128:
 1554              		.loc 1 595 0 is_stmt 0
 1555 0406 0120     		mov	r0, #1
 1556 0408 FFF7FEFF 		bl	getSpeed
 1557              	.LVL181:
 1558 040c 8221     		mov	r1, #130
 1559 040e C905     		lsl	r1, r1, #23
 1560 0410 FFF7FEFF 		bl	__aeabi_fmul
 1561              	.LVL182:
 1562 0414 8049     		ldr	r1, .L383+16
 1563 0416 FFF7FEFF 		bl	__aeabi_fcmpgt
 1564              	.LVL183:
 1565 041a 0028     		cmp	r0, #0
 1566 041c 00D1     		bne	.LCB1338
 1567 041e 25E3     		b	.L375	@long jump
 1568              	.LCB1338:
 1569              	.L132:
 1570              		.loc 1 595 0
 1571 0420 0120     		mov	r0, #1
 1572 0422 FFF7FEFF 		bl	getSpeed
 1573              	.LVL184:
 1574 0426 8222     		mov	r2, #130
 1575 0428 D105     		lsl	r1, r2, #23
 1576 042a FFF7FEFF 		bl	__aeabi_fmul
 1577              	.LVL185:
 1578 042e 7B49     		ldr	r1, .L383+20
 1579 0430 FFF7FEFF 		bl	__aeabi_fcmple
 1580              	.LVL186:
 1581 0434 0028     		cmp	r0, #0
 1582 0436 25D0     		beq	.L139
 1583              		.loc 1 595 0
 1584 0438 0120     		mov	r0, #1
 1585 043a FFF7FEFF 		bl	getSpeed
 1586              	.LVL187:
 1587 043e 8223     		mov	r3, #130
 1588 0440 D905     		lsl	r1, r3, #23
 1589 0442 FFF7FEFF 		bl	__aeabi_fmul
 1590              	.LVL188:
 1591 0446 0021     		mov	r1, #0
 1592 0448 FFF7FEFF 		bl	__aeabi_fcmpge
 1593              	.LVL189:
 1594 044c 0028     		cmp	r0, #0
 1595 044e 19D0     		beq	.L139
 1596              		.loc 1 595 0
 1597 0450 0120     		mov	r0, #1
 1598 0452 FFF7FEFF 		bl	getSpeed
 1599              	.LVL190:
 1600 0456 8221     		mov	r1, #130
 1601 0458 C905     		lsl	r1, r1, #23
 1602 045a FFF7FEFF 		bl	__aeabi_fmul
 1603              	.LVL191:
 1604 045e 6C49     		ldr	r1, .L383+8
 1605 0460 FFF7FEFF 		bl	__aeabi_fcmpge
 1606              	.LVL192:
 1607 0464 0028     		cmp	r0, #0
 1608 0466 00D1     		bne	.LCB1375
 1609 0468 B2E3     		b	.L154	@long jump
 1610              	.LCB1375:
 1611              		.loc 1 595 0
 1612 046a 0120     		mov	r0, #1
 1613 046c 8227     		mov	r7, #130
 1614 046e FFF7FEFF 		bl	getSpeed
 1615              	.LVL193:
 1616 0472 F905     		lsl	r1, r7, #23
 1617 0474 FFF7FEFF 		bl	__aeabi_fmul
 1618              	.LVL194:
 1619 0478 6649     		ldr	r1, .L383+12
 1620 047a FFF7FEFF 		bl	__aeabi_fcmple
 1621              	.LVL195:
 1622 047e 0028     		cmp	r0, #0
 1623 0480 00D1     		bne	.LCB1387
 1624 0482 A5E3     		b	.L154	@long jump
 1625              	.LCB1387:
 1626              	.L139:
 1627              		.loc 1 595 0
 1628 0484 0120     		mov	r0, #1
 1629 0486 8225     		mov	r5, #130
 1630 0488 FFF7FEFF 		bl	getSpeed
 1631              	.LVL196:
 1632 048c E905     		lsl	r1, r5, #23
 1633 048e FFF7FEFF 		bl	__aeabi_fmul
 1634              	.LVL197:
 1635 0492 6149     		ldr	r1, .L383+16
 1636 0494 FFF7FEFF 		bl	__aeabi_fcmpgt
 1637              	.LVL198:
 1638 0498 0028     		cmp	r0, #0
 1639 049a 00D1     		bne	.LCB1400
 1640 049c 28E3     		b	.L352	@long jump
 1641              	.LCB1400:
 1642              	.L149:
 1643 049e 7F21     		mov	r1, #127
 1644              	.L143:
 1645              		.loc 1 595 0
 1646 04a0 5F48     		ldr	r0, .L383+24
 1647 04a2 FFF7FEFF 		bl	uart_putchar
 1648              	.LVL199:
 596:../Sources/main.c **** 	// 5 - PWM output to right motor
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 1649              		.loc 1 597 0 is_stmt 1
 1650 04a6 0020     		mov	r0, #0
 1651 04a8 FFF7FEFF 		bl	TFC_GetMotorPWM
 1652              	.LVL200:
 1653 04ac 5D49     		ldr	r1, .L383+28
 1654 04ae FFF7FEFF 		bl	__aeabi_fmul
 1655              	.LVL201:
 1656 04b2 0021     		mov	r1, #0
 1657 04b4 FFF7FEFF 		bl	__aeabi_fcmpge
 1658              	.LVL202:
 1659 04b8 0028     		cmp	r0, #0
 1660 04ba 00D1     		bne	.LCB1418
 1661 04bc A7E2     		b	.L353	@long jump
 1662              	.LCB1418:
 1663              		.loc 1 597 0 is_stmt 0
 1664 04be 0020     		mov	r0, #0
 1665 04c0 FFF7FEFF 		bl	TFC_GetMotorPWM
 1666              	.LVL203:
 1667 04c4 5749     		ldr	r1, .L383+28
 1668 04c6 FFF7FEFF 		bl	__aeabi_fmul
 1669              	.LVL204:
 1670 04ca FFF7FEFF 		bl	__aeabi_f2d
 1671              	.LVL205:
 1672 04ce 4F4B     		ldr	r3, .L383+4
 1673 04d0 4D4A     		ldr	r2, .L383
 1674 04d2 FFF7FEFF 		bl	__aeabi_dadd
 1675              	.LVL206:
 1676 04d6 FFF7FEFF 		bl	__aeabi_d2iz
 1677              	.LVL207:
 1678 04da C1B2     		uxtb	r1, r0
 1679              	.L162:
 1680              		.loc 1 597 0
 1681 04dc 5048     		ldr	r0, .L383+24
 1682 04de FFF7FEFF 		bl	uart_putchar
 1683              	.LVL208:
 598:../Sources/main.c **** 	// 6 - PWM output to left motor
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 1684              		.loc 1 599 0 is_stmt 1
 1685 04e2 0120     		mov	r0, #1
 1686 04e4 FFF7FEFF 		bl	TFC_GetMotorPWM
 1687              	.LVL209:
 1688 04e8 4E49     		ldr	r1, .L383+28
 1689 04ea FFF7FEFF 		bl	__aeabi_fmul
 1690              	.LVL210:
 1691 04ee 0021     		mov	r1, #0
 1692 04f0 FFF7FEFF 		bl	__aeabi_fcmpge
 1693              	.LVL211:
 1694 04f4 0028     		cmp	r0, #0
 1695 04f6 00D1     		bne	.LCB1449
 1696 04f8 79E2     		b	.L354	@long jump
 1697              	.LCB1449:
 1698              		.loc 1 599 0 is_stmt 0
 1699 04fa 0120     		mov	r0, #1
 1700 04fc FFF7FEFF 		bl	TFC_GetMotorPWM
 1701              	.LVL212:
 1702 0500 4849     		ldr	r1, .L383+28
 1703 0502 FFF7FEFF 		bl	__aeabi_fmul
 1704              	.LVL213:
 1705 0506 FFF7FEFF 		bl	__aeabi_f2d
 1706              	.LVL214:
 1707 050a 404B     		ldr	r3, .L383+4
 1708 050c 3E4A     		ldr	r2, .L383
 1709 050e FFF7FEFF 		bl	__aeabi_dadd
 1710              	.LVL215:
 1711 0512 FFF7FEFF 		bl	__aeabi_d2iz
 1712              	.LVL216:
 1713 0516 C1B2     		uxtb	r1, r0
 1714              	.L165:
 1715              		.loc 1 599 0
 1716 0518 4148     		ldr	r0, .L383+24
 1717 051a FFF7FEFF 		bl	uart_putchar
 1718              	.LVL217:
 600:../Sources/main.c **** 	// 7 - Current of the right motor
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 1719              		.loc 1 601 0 is_stmt 1
 1720 051e 0020     		mov	r0, #0
 1721 0520 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1722              	.LVL218:
 1723 0524 4049     		ldr	r1, .L383+32
 1724 0526 FFF7FEFF 		bl	__aeabi_fmul
 1725              	.LVL219:
 1726 052a 3C49     		ldr	r1, .L383+20
 1727 052c FFF7FEFF 		bl	__aeabi_fcmple
 1728              	.LVL220:
 1729 0530 0028     		cmp	r0, #0
 1730 0532 00D1     		bne	.LCB1480
 1731 0534 85E0     		b	.L166	@long jump
 1732              	.LCB1480:
 1733              		.loc 1 601 0 is_stmt 0
 1734 0536 0020     		mov	r0, #0
 1735 0538 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1736              	.LVL221:
 1737 053c 3A49     		ldr	r1, .L383+32
 1738 053e FFF7FEFF 		bl	__aeabi_fmul
 1739              	.LVL222:
 1740 0542 0021     		mov	r1, #0
 1741 0544 FFF7FEFF 		bl	__aeabi_fcmpge
 1742              	.LVL223:
 1743 0548 0028     		cmp	r0, #0
 1744 054a 7AD0     		beq	.L166
 1745              		.loc 1 601 0
 1746 054c 0020     		mov	r0, #0
 1747 054e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1748              	.LVL224:
 1749 0552 3549     		ldr	r1, .L383+32
 1750 0554 FFF7FEFF 		bl	__aeabi_fmul
 1751              	.LVL225:
 1752 0558 2D49     		ldr	r1, .L383+8
 1753 055a FFF7FEFF 		bl	__aeabi_fcmpge
 1754              	.LVL226:
 1755 055e 0028     		cmp	r0, #0
 1756 0560 64D1     		bne	.L169
 1757              	.L172:
 1758              		.loc 1 601 0
 1759 0562 0020     		mov	r0, #0
 1760 0564 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1761              	.LVL227:
 1762 0568 2F49     		ldr	r1, .L383+32
 1763 056a FFF7FEFF 		bl	__aeabi_fmul
 1764              	.LVL228:
 1765 056e 0021     		mov	r1, #0
 1766 0570 FFF7FEFF 		bl	__aeabi_fcmpeq
 1767              	.LVL229:
 1768 0574 0028     		cmp	r0, #0
 1769 0576 70D0     		beq	.L170
 1770              		.loc 1 601 0
 1771 0578 0020     		mov	r0, #0
 1772 057a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1773              	.LVL230:
 1774 057e 2A49     		ldr	r1, .L383+32
 1775 0580 FFF7FEFF 		bl	__aeabi_fmul
 1776              	.LVL231:
 1777 0584 2549     		ldr	r1, .L383+20
 1778 0586 FFF7FEFF 		bl	__aeabi_fcmple
 1779              	.LVL232:
 1780 058a 0028     		cmp	r0, #0
 1781 058c 22D0     		beq	.L188
 1782              		.loc 1 601 0
 1783 058e 0020     		mov	r0, #0
 1784 0590 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1785              	.LVL233:
 1786 0594 2449     		ldr	r1, .L383+32
 1787 0596 FFF7FEFF 		bl	__aeabi_fmul
 1788              	.LVL234:
 1789 059a 0021     		mov	r1, #0
 1790 059c FFF7FEFF 		bl	__aeabi_fcmpge
 1791              	.LVL235:
 1792 05a0 0028     		cmp	r0, #0
 1793 05a2 17D0     		beq	.L188
 1794              		.loc 1 601 0
 1795 05a4 0020     		mov	r0, #0
 1796 05a6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1797              	.LVL236:
 1798 05aa 1F49     		ldr	r1, .L383+32
 1799 05ac FFF7FEFF 		bl	__aeabi_fmul
 1800              	.LVL237:
 1801 05b0 1749     		ldr	r1, .L383+8
 1802 05b2 FFF7FEFF 		bl	__aeabi_fcmpge
 1803              	.LVL238:
 1804 05b6 0028     		cmp	r0, #0
 1805 05b8 00D1     		bne	.LCB1547
 1806 05ba FFE2     		b	.L192	@long jump
 1807              	.LCB1547:
 1808              		.loc 1 601 0
 1809 05bc 0020     		mov	r0, #0
 1810 05be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1811              	.LVL239:
 1812 05c2 1949     		ldr	r1, .L383+32
 1813 05c4 FFF7FEFF 		bl	__aeabi_fmul
 1814              	.LVL240:
 1815 05c8 1249     		ldr	r1, .L383+12
 1816 05ca FFF7FEFF 		bl	__aeabi_fcmple
 1817              	.LVL241:
 1818 05ce 0028     		cmp	r0, #0
 1819 05d0 00D1     		bne	.LCB1558
 1820 05d2 F3E2     		b	.L192	@long jump
 1821              	.LCB1558:
 1822              	.L188:
 1823              		.loc 1 601 0
 1824 05d4 0020     		mov	r0, #0
 1825 05d6 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1826              	.LVL242:
 1827 05da 1349     		ldr	r1, .L383+32
 1828 05dc FFF7FEFF 		bl	__aeabi_fmul
 1829              	.LVL243:
 1830 05e0 0D49     		ldr	r1, .L383+16
 1831 05e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 1832              	.LVL244:
 1833 05e6 0028     		cmp	r0, #0
 1834 05e8 71D1     		bne	.L187
 1835              		.loc 1 601 0
 1836 05ea FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1837              	.LVL245:
 1838 05ee 0E49     		ldr	r1, .L383+32
 1839 05f0 FFF7FEFF 		bl	__aeabi_fmul
 1840              	.LVL246:
 1841 05f4 0649     		ldr	r1, .L383+8
 1842 05f6 FFF7FEFF 		bl	__aeabi_fcmpge
 1843              	.LVL247:
 1844 05fa 0028     		cmp	r0, #0
 1845 05fc 00D0     		beq	.LCB1580
 1846 05fe 27E3     		b	.L376	@long jump
 1847              	.LCB1580:
 1848              	.L196:
 1849              		.loc 1 601 0
 1850 0600 0021     		mov	r1, #0
 1851 0602 65E0     		b	.L181
 1852              	.L384:
 1853 0604 C046C046 		.align	3
 1854              	.L383:
 1855 0608 00000000 		.word	0
 1856 060c 0000E03F 		.word	1071644672
 1857 0610 0000FF42 		.word	1124007936
 1858 0614 00800043 		.word	1124106240
 1859 0618 00007F43 		.word	1132396544
 1860 061c 00807E43 		.word	1132363776
 1861 0620 00C00640 		.word	1074184192
 1862 0624 0000FC42 		.word	1123811328
 1863 0628 00007042 		.word	1114636288
 1864              	.L169:
 1865              		.loc 1 601 0
 1866 062c 0020     		mov	r0, #0
 1867 062e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1868              	.LVL248:
 1869 0632 CF49     		ldr	r1, .L385+8
 1870 0634 FFF7FEFF 		bl	__aeabi_fmul
 1871              	.LVL249:
 1872 0638 CE49     		ldr	r1, .L385+12
 1873 063a FFF7FEFF 		bl	__aeabi_fcmple
 1874              	.LVL250:
 1875 063e 0028     		cmp	r0, #0
 1876 0640 8FD0     		beq	.L172
 1877              	.L166:
 1878              		.loc 1 601 0
 1879 0642 0020     		mov	r0, #0
 1880 0644 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1881              	.LVL251:
 1882 0648 C949     		ldr	r1, .L385+8
 1883 064a FFF7FEFF 		bl	__aeabi_fmul
 1884              	.LVL252:
 1885 064e CA49     		ldr	r1, .L385+16
 1886 0650 FFF7FEFF 		bl	__aeabi_fcmpgt
 1887              	.LVL253:
 1888 0654 0028     		cmp	r0, #0
 1889 0656 00D1     		bne	.LCB1622
 1890 0658 F9E1     		b	.L377	@long jump
 1891              	.LCB1622:
 1892              	.L170:
 1893              		.loc 1 601 0
 1894 065a 0020     		mov	r0, #0
 1895 065c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1896              	.LVL254:
 1897 0660 C349     		ldr	r1, .L385+8
 1898 0662 FFF7FEFF 		bl	__aeabi_fmul
 1899              	.LVL255:
 1900 0666 C549     		ldr	r1, .L385+20
 1901 0668 FFF7FEFF 		bl	__aeabi_fcmple
 1902              	.LVL256:
 1903 066c 0028     		cmp	r0, #0
 1904 066e 22D0     		beq	.L177
 1905              		.loc 1 601 0
 1906 0670 0020     		mov	r0, #0
 1907 0672 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1908              	.LVL257:
 1909 0676 BE49     		ldr	r1, .L385+8
 1910 0678 FFF7FEFF 		bl	__aeabi_fmul
 1911              	.LVL258:
 1912 067c 0021     		mov	r1, #0
 1913 067e FFF7FEFF 		bl	__aeabi_fcmpge
 1914              	.LVL259:
 1915 0682 0028     		cmp	r0, #0
 1916 0684 17D0     		beq	.L177
 1917              		.loc 1 601 0
 1918 0686 0020     		mov	r0, #0
 1919 0688 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1920              	.LVL260:
 1921 068c B849     		ldr	r1, .L385+8
 1922 068e FFF7FEFF 		bl	__aeabi_fmul
 1923              	.LVL261:
 1924 0692 BB49     		ldr	r1, .L385+24
 1925 0694 FFF7FEFF 		bl	__aeabi_fcmpge
 1926              	.LVL262:
 1927 0698 0028     		cmp	r0, #0
 1928 069a 00D1     		bne	.LCB1656
 1929 069c 8EE2     		b	.L192	@long jump
 1930              	.LCB1656:
 1931              		.loc 1 601 0
 1932 069e 0020     		mov	r0, #0
 1933 06a0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1934              	.LVL263:
 1935 06a4 B249     		ldr	r1, .L385+8
 1936 06a6 FFF7FEFF 		bl	__aeabi_fmul
 1937              	.LVL264:
 1938 06aa B249     		ldr	r1, .L385+12
 1939 06ac FFF7FEFF 		bl	__aeabi_fcmple
 1940              	.LVL265:
 1941 06b0 0028     		cmp	r0, #0
 1942 06b2 00D1     		bne	.LCB1667
 1943 06b4 82E2     		b	.L192	@long jump
 1944              	.LCB1667:
 1945              	.L177:
 1946              		.loc 1 601 0
 1947 06b6 0020     		mov	r0, #0
 1948 06b8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1949              	.LVL266:
 1950 06bc AC49     		ldr	r1, .L385+8
 1951 06be FFF7FEFF 		bl	__aeabi_fmul
 1952              	.LVL267:
 1953 06c2 AD49     		ldr	r1, .L385+16
 1954 06c4 FFF7FEFF 		bl	__aeabi_fcmpgt
 1955              	.LVL268:
 1956 06c8 0028     		cmp	r0, #0
 1957 06ca 00D1     		bne	.LCB1679
 1958 06cc 46E2     		b	.L356	@long jump
 1959              	.LCB1679:
 1960              	.L187:
 1961 06ce 7F21     		mov	r1, #127
 1962              	.L181:
 1963              		.loc 1 601 0
 1964 06d0 AC48     		ldr	r0, .L385+28
 1965 06d2 FFF7FEFF 		bl	uart_putchar
 1966              	.LVL269:
 602:../Sources/main.c **** 	// 8 - Current of the left motor
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 1967              		.loc 1 603 0 is_stmt 1
 1968 06d6 0120     		mov	r0, #1
 1969 06d8 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1970              	.LVL270:
 1971 06dc A449     		ldr	r1, .L385+8
 1972 06de FFF7FEFF 		bl	__aeabi_fmul
 1973              	.LVL271:
 1974 06e2 A649     		ldr	r1, .L385+20
 1975 06e4 FFF7FEFF 		bl	__aeabi_fcmple
 1976              	.LVL272:
 1977 06e8 0028     		cmp	r0, #0
 1978 06ea 72D0     		beq	.L198
 1979              		.loc 1 603 0 is_stmt 0
 1980 06ec 0120     		mov	r0, #1
 1981 06ee FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1982              	.LVL273:
 1983 06f2 9F49     		ldr	r1, .L385+8
 1984 06f4 FFF7FEFF 		bl	__aeabi_fmul
 1985              	.LVL274:
 1986 06f8 0021     		mov	r1, #0
 1987 06fa FFF7FEFF 		bl	__aeabi_fcmpge
 1988              	.LVL275:
 1989 06fe 0028     		cmp	r0, #0
 1990 0700 67D0     		beq	.L198
 1991              		.loc 1 603 0
 1992 0702 0120     		mov	r0, #1
 1993 0704 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 1994              	.LVL276:
 1995 0708 9949     		ldr	r1, .L385+8
 1996 070a FFF7FEFF 		bl	__aeabi_fmul
 1997              	.LVL277:
 1998 070e 9C49     		ldr	r1, .L385+24
 1999 0710 FFF7FEFF 		bl	__aeabi_fcmpge
 2000              	.LVL278:
 2001 0714 0028     		cmp	r0, #0
 2002 0716 51D1     		bne	.L201
 2003              	.L204:
 2004              		.loc 1 603 0
 2005 0718 0120     		mov	r0, #1
 2006 071a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2007              	.LVL279:
 2008 071e 9449     		ldr	r1, .L385+8
 2009 0720 FFF7FEFF 		bl	__aeabi_fmul
 2010              	.LVL280:
 2011 0724 0021     		mov	r1, #0
 2012 0726 FFF7FEFF 		bl	__aeabi_fcmpeq
 2013              	.LVL281:
 2014 072a 0028     		cmp	r0, #0
 2015 072c 5DD0     		beq	.L202
 2016              		.loc 1 603 0
 2017 072e 0120     		mov	r0, #1
 2018 0730 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2019              	.LVL282:
 2020 0734 8E49     		ldr	r1, .L385+8
 2021 0736 FFF7FEFF 		bl	__aeabi_fmul
 2022              	.LVL283:
 2023 073a 9049     		ldr	r1, .L385+20
 2024 073c FFF7FEFF 		bl	__aeabi_fcmple
 2025              	.LVL284:
 2026 0740 0028     		cmp	r0, #0
 2027 0742 22D0     		beq	.L220
 2028              		.loc 1 603 0
 2029 0744 0120     		mov	r0, #1
 2030 0746 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2031              	.LVL285:
 2032 074a 8949     		ldr	r1, .L385+8
 2033 074c FFF7FEFF 		bl	__aeabi_fmul
 2034              	.LVL286:
 2035 0750 0021     		mov	r1, #0
 2036 0752 FFF7FEFF 		bl	__aeabi_fcmpge
 2037              	.LVL287:
 2038 0756 0028     		cmp	r0, #0
 2039 0758 17D0     		beq	.L220
 2040              		.loc 1 603 0
 2041 075a 0120     		mov	r0, #1
 2042 075c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2043              	.LVL288:
 2044 0760 8349     		ldr	r1, .L385+8
 2045 0762 FFF7FEFF 		bl	__aeabi_fmul
 2046              	.LVL289:
 2047 0766 8649     		ldr	r1, .L385+24
 2048 0768 FFF7FEFF 		bl	__aeabi_fcmpge
 2049              	.LVL290:
 2050 076c 0028     		cmp	r0, #0
 2051 076e 00D1     		bne	.LCB1764
 2052 0770 1AE2     		b	.L224	@long jump
 2053              	.LCB1764:
 2054              		.loc 1 603 0
 2055 0772 0120     		mov	r0, #1
 2056 0774 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2057              	.LVL291:
 2058 0778 7D49     		ldr	r1, .L385+8
 2059 077a FFF7FEFF 		bl	__aeabi_fmul
 2060              	.LVL292:
 2061 077e 7D49     		ldr	r1, .L385+12
 2062 0780 FFF7FEFF 		bl	__aeabi_fcmple
 2063              	.LVL293:
 2064 0784 0028     		cmp	r0, #0
 2065 0786 00D1     		bne	.LCB1775
 2066 0788 0EE2     		b	.L224	@long jump
 2067              	.LCB1775:
 2068              	.L220:
 2069              		.loc 1 603 0
 2070 078a 0120     		mov	r0, #1
 2071 078c FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2072              	.LVL294:
 2073 0790 7749     		ldr	r1, .L385+8
 2074 0792 FFF7FEFF 		bl	__aeabi_fmul
 2075              	.LVL295:
 2076 0796 7849     		ldr	r1, .L385+16
 2077 0798 FFF7FEFF 		bl	__aeabi_fcmpgt
 2078              	.LVL296:
 2079 079c 0028     		cmp	r0, #0
 2080 079e 5ED1     		bne	.L219
 2081              		.loc 1 603 0
 2082 07a0 0120     		mov	r0, #1
 2083 07a2 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2084              	.LVL297:
 2085 07a6 7249     		ldr	r1, .L385+8
 2086 07a8 FFF7FEFF 		bl	__aeabi_fmul
 2087              	.LVL298:
 2088 07ac 7449     		ldr	r1, .L385+24
 2089 07ae FFF7FEFF 		bl	__aeabi_fcmpge
 2090              	.LVL299:
 2091 07b2 0028     		cmp	r0, #0
 2092 07b4 00D0     		beq	.LCB1798
 2093 07b6 1AE2     		b	.L378	@long jump
 2094              	.LCB1798:
 2095              	.L228:
 2096              		.loc 1 603 0
 2097 07b8 0021     		mov	r1, #0
 2098 07ba 51E0     		b	.L213
 2099              	.L201:
 2100              		.loc 1 603 0
 2101 07bc 0120     		mov	r0, #1
 2102 07be FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2103              	.LVL300:
 2104 07c2 6B49     		ldr	r1, .L385+8
 2105 07c4 FFF7FEFF 		bl	__aeabi_fmul
 2106              	.LVL301:
 2107 07c8 6A49     		ldr	r1, .L385+12
 2108 07ca FFF7FEFF 		bl	__aeabi_fcmple
 2109              	.LVL302:
 2110 07ce 0028     		cmp	r0, #0
 2111 07d0 A2D0     		beq	.L204
 2112              	.L198:
 2113              		.loc 1 603 0
 2114 07d2 0120     		mov	r0, #1
 2115 07d4 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2116              	.LVL303:
 2117 07d8 6549     		ldr	r1, .L385+8
 2118 07da FFF7FEFF 		bl	__aeabi_fmul
 2119              	.LVL304:
 2120 07de 6649     		ldr	r1, .L385+16
 2121 07e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 2122              	.LVL305:
 2123 07e4 0028     		cmp	r0, #0
 2124 07e6 00D1     		bne	.LCB1827
 2125 07e8 21E1     		b	.L379	@long jump
 2126              	.LCB1827:
 2127              	.L202:
 2128              		.loc 1 603 0
 2129 07ea 0120     		mov	r0, #1
 2130 07ec FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2131              	.LVL306:
 2132 07f0 5F49     		ldr	r1, .L385+8
 2133 07f2 FFF7FEFF 		bl	__aeabi_fmul
 2134              	.LVL307:
 2135 07f6 6149     		ldr	r1, .L385+20
 2136 07f8 FFF7FEFF 		bl	__aeabi_fcmple
 2137              	.LVL308:
 2138 07fc 0028     		cmp	r0, #0
 2139 07fe 22D0     		beq	.L209
 2140              		.loc 1 603 0
 2141 0800 0120     		mov	r0, #1
 2142 0802 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2143              	.LVL309:
 2144 0806 5A49     		ldr	r1, .L385+8
 2145 0808 FFF7FEFF 		bl	__aeabi_fmul
 2146              	.LVL310:
 2147 080c 0021     		mov	r1, #0
 2148 080e FFF7FEFF 		bl	__aeabi_fcmpge
 2149              	.LVL311:
 2150 0812 0028     		cmp	r0, #0
 2151 0814 17D0     		beq	.L209
 2152              		.loc 1 603 0
 2153 0816 0120     		mov	r0, #1
 2154 0818 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2155              	.LVL312:
 2156 081c 5449     		ldr	r1, .L385+8
 2157 081e FFF7FEFF 		bl	__aeabi_fmul
 2158              	.LVL313:
 2159 0822 5749     		ldr	r1, .L385+24
 2160 0824 FFF7FEFF 		bl	__aeabi_fcmpge
 2161              	.LVL314:
 2162 0828 0028     		cmp	r0, #0
 2163 082a 00D1     		bne	.LCB1861
 2164 082c BCE1     		b	.L224	@long jump
 2165              	.LCB1861:
 2166              		.loc 1 603 0
 2167 082e 0120     		mov	r0, #1
 2168 0830 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2169              	.LVL315:
 2170 0834 4E49     		ldr	r1, .L385+8
 2171 0836 FFF7FEFF 		bl	__aeabi_fmul
 2172              	.LVL316:
 2173 083a 4E49     		ldr	r1, .L385+12
 2174 083c FFF7FEFF 		bl	__aeabi_fcmple
 2175              	.LVL317:
 2176 0840 0028     		cmp	r0, #0
 2177 0842 00D1     		bne	.LCB1872
 2178 0844 B0E1     		b	.L224	@long jump
 2179              	.LCB1872:
 2180              	.L209:
 2181              		.loc 1 603 0
 2182 0846 0120     		mov	r0, #1
 2183 0848 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2184              	.LVL318:
 2185 084c 4849     		ldr	r1, .L385+8
 2186 084e FFF7FEFF 		bl	__aeabi_fmul
 2187              	.LVL319:
 2188 0852 4949     		ldr	r1, .L385+16
 2189 0854 FFF7FEFF 		bl	__aeabi_fcmpgt
 2190              	.LVL320:
 2191 0858 0028     		cmp	r0, #0
 2192 085a 00D1     		bne	.LCB1884
 2193 085c 64E1     		b	.L358	@long jump
 2194              	.LCB1884:
 2195              	.L219:
 2196 085e 7F21     		mov	r1, #127
 2197              	.L213:
 2198              		.loc 1 603 0
 2199 0860 4848     		ldr	r0, .L385+28
 2200 0862 FFF7FEFF 		bl	uart_putchar
 2201              	.LVL321:
 604:../Sources/main.c **** 	// 9 - Servo Value
 605:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2202              		.loc 1 605 0 is_stmt 1
 2203 0866 4848     		ldr	r0, .L385+32
 2204 0868 4849     		ldr	r1, .L385+36
 2205 086a 0068     		ldr	r0, [r0]
 2206 086c FFF7FEFF 		bl	__aeabi_fmul
 2207              	.LVL322:
 2208 0870 0021     		mov	r1, #0
 2209 0872 071C     		add	r7, r0, #0
 2210 0874 FFF7FEFF 		bl	__aeabi_fcmpge
 2211              	.LVL323:
 2212 0878 0028     		cmp	r0, #0
 2213 087a 00D1     		bne	.LCB1902
 2214 087c ACE0     		b	.L359	@long jump
 2215              	.LCB1902:
 2216              		.loc 1 605 0 is_stmt 0
 2217 087e 381C     		add	r0, r7, #0
 2218 0880 FFF7FEFF 		bl	__aeabi_f2d
 2219              	.LVL324:
 2220 0884 394B     		ldr	r3, .L385+4
 2221 0886 384A     		ldr	r2, .L385
 2222 0888 FFF7FEFF 		bl	__aeabi_dadd
 2223              	.LVL325:
 2224 088c FFF7FEFF 		bl	__aeabi_d2iz
 2225              	.LVL326:
 2226 0890 C1B2     		uxtb	r1, r0
 2227              	.L232:
 2228              		.loc 1 605 0
 2229 0892 3C48     		ldr	r0, .L385+28
 2230 0894 FFF7FEFF 		bl	uart_putchar
 2231              	.LVL327:
 606:../Sources/main.c **** 	// 10 - Detected edge type - Left:100, Right:-100, Track: 0, None:50
 607:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2232              		.loc 1 607 0 is_stmt 1
 2233 0898 6579     		ldrb	r5, [r4, #5]
 2234 089a 3221     		mov	r1, #50
 2235 089c 002D     		cmp	r5, #0
 2236 089e 06D0     		beq	.L233
 2237              		.loc 1 607 0 is_stmt 0
 2238 08a0 032D     		cmp	r5, #3
 2239 08a2 00D1     		bne	.LCB1923
 2240 08a4 9FE1     		b	.L263	@long jump
 2241              	.LCB1923:
 2242              		.loc 1 607 0
 2243 08a6 9C21     		mov	r1, #156
 2244 08a8 012D     		cmp	r5, #1
 2245 08aa 00D1     		bne	.LCB1926
 2246 08ac 9DE1     		b	.L380	@long jump
 2247              	.LCB1926:
 2248              	.L233:
 2249              		.loc 1 607 0
 2250 08ae 3548     		ldr	r0, .L385+28
 2251 08b0 FFF7FEFF 		bl	uart_putchar
 2252              	.LVL328:
 608:../Sources/main.c **** 	// 11 - Camera Exposure Time, 1 unit = 0.1 ms
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2253              		.loc 1 609 0 is_stmt 1
 2254 08b4 3649     		ldr	r1, .L385+40
 2255 08b6 0868     		ldr	r0, [r1]
 2256 08b8 FFF7FEFF 		bl	__aeabi_i2f
 2257              	.LVL329:
 2258 08bc 3549     		ldr	r1, .L385+44
 2259 08be FFF7FEFF 		bl	__aeabi_fmul
 2260              	.LVL330:
 2261 08c2 2E49     		ldr	r1, .L385+20
 2262 08c4 051C     		add	r5, r0, #0
 2263 08c6 FFF7FEFF 		bl	__aeabi_fcmple
 2264              	.LVL331:
 2265 08ca 0028     		cmp	r0, #0
 2266 08cc 36D0     		beq	.L242
 2267              		.loc 1 609 0 is_stmt 0
 2268 08ce 281C     		add	r0, r5, #0
 2269 08d0 0021     		mov	r1, #0
 2270 08d2 FFF7FEFF 		bl	__aeabi_fcmpge
 2271              	.LVL332:
 2272 08d6 0028     		cmp	r0, #0
 2273 08d8 66D0     		beq	.L236
 2274              		.loc 1 609 0
 2275 08da 281C     		add	r0, r5, #0
 2276 08dc 2849     		ldr	r1, .L385+24
 2277 08de FFF7FEFF 		bl	__aeabi_fcmpge
 2278              	.LVL333:
 2279 08e2 0028     		cmp	r0, #0
 2280 08e4 5AD0     		beq	.L361
 2281              		.loc 1 609 0
 2282 08e6 281C     		add	r0, r5, #0
 2283 08e8 2249     		ldr	r1, .L385+12
 2284 08ea FFF7FEFF 		bl	__aeabi_fcmple
 2285              	.LVL334:
 2286 08ee 7F26     		mov	r6, #127
 2287 08f0 071E     		sub	r7, r0, #0
 2288 08f2 15D1     		bne	.L240
 2289              		.loc 1 609 0
 2290 08f4 281C     		add	r0, r5, #0
 2291 08f6 0021     		mov	r1, #0
 2292 08f8 FFF7FEFF 		bl	__aeabi_fcmpeq
 2293              	.LVL335:
 2294 08fc 0028     		cmp	r0, #0
 2295 08fe 53D0     		beq	.L236
 2296              		.loc 1 609 0
 2297 0900 002F     		cmp	r7, #0
 2298 0902 64D0     		beq	.L249
 2299              		.loc 1 609 0
 2300 0904 281C     		add	r0, r5, #0
 2301 0906 1C49     		ldr	r1, .L385+16
 2302 0908 FFF7FEFF 		bl	__aeabi_fcmpgt
 2303              	.LVL336:
 2304 090c 0028     		cmp	r0, #0
 2305 090e 07D1     		bne	.L240
 2306              		.loc 1 609 0
 2307 0910 281C     		add	r0, r5, #0
 2308 0912 1B49     		ldr	r1, .L385+24
 2309 0914 FFF7FEFF 		bl	__aeabi_fcmpge
 2310              	.LVL337:
 2311 0918 7E26     		mov	r6, #126
 2312 091a 0028     		cmp	r0, #0
 2313 091c 00D1     		bne	.L240
 2314              	.L248:
 2315              		.loc 1 609 0
 2316 091e 0026     		mov	r6, #0
 2317              	.L240:
 2318              		.loc 1 609 0
 2319 0920 311C     		mov	r1, r6
 2320 0922 1848     		ldr	r0, .L385+28
 2321 0924 FFF7FEFF 		bl	uart_putchar
 2322              	.LVL338:
 610:../Sources/main.c **** 	// 12 - Loop time
 611:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)loop_time);
 2323              		.loc 1 611 0 is_stmt 1
 2324 0928 1B4A     		ldr	r2, .L385+48
 2325 092a 1648     		ldr	r0, .L385+28
 2326 092c 1178     		ldrb	r1, [r2]
 2327 092e FFF7FEFF 		bl	uart_putchar
 2328              	.LVL339:
 612:../Sources/main.c **** 	// 13 - Line Distance
 613:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)carState.lineDistance);
 2329              		.loc 1 613 0
 2330 0932 217B     		ldrb	r1, [r4, #12]
 2331 0934 1348     		ldr	r0, .L385+28
 2332 0936 FFF7FEFF 		bl	uart_putchar
 2333              	.LVL340:
 614:../Sources/main.c **** 	
 615:../Sources/main.c **** }
 2334              		.loc 1 615 0
 2335              		@ sp needed for prologue
 2336 093a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2337              	.L242:
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2338              		.loc 1 609 0
 2339 093c 281C     		add	r0, r5, #0
 2340 093e 0E49     		ldr	r1, .L385+16
 2341 0940 FFF7FEFF 		bl	__aeabi_fcmpgt
 2342              	.LVL341:
 2343 0944 7F26     		mov	r6, #127
 2344 0946 0028     		cmp	r0, #0
 2345 0948 EAD1     		bne	.L240
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2346              		.loc 1 609 0 is_stmt 0
 2347 094a 281C     		add	r0, r5, #0
 2348 094c 0C49     		ldr	r1, .L385+24
 2349 094e FFF7FEFF 		bl	__aeabi_fcmpge
 2350              	.LVL342:
 2351 0952 0028     		cmp	r0, #0
 2352 0954 E3D0     		beq	.L248
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2353              		.loc 1 609 0
 2354 0956 281C     		add	r0, r5, #0
 2355 0958 0649     		ldr	r1, .L385+12
 2356 095a FFF7FEFF 		bl	__aeabi_fcmple
 2357              	.LVL343:
 2358 095e 0028     		cmp	r0, #0
 2359 0960 DED1     		bne	.L240
 2360 0962 DCE7     		b	.L248
 2361              	.L386:
 2362 0964 C046C046 		.align	3
 2363              	.L385:
 2364 0968 00000000 		.word	0
 2365 096c 0000E03F 		.word	1071644672
 2366 0970 00007042 		.word	1114636288
 2367 0974 00800043 		.word	1124106240
 2368 0978 00007F43 		.word	1132396544
 2369 097c 00807E43 		.word	1132363776
 2370 0980 0000FF42 		.word	1124007936
 2371 0984 00C00640 		.word	1074184192
 2372 0988 00000000 		.word	.LANCHOR5
 2373 098c 0000FC42 		.word	1123811328
 2374 0990 00000000 		.word	newExposure
 2375 0994 CDCCCC3C 		.word	1020054733
 2376 0998 00000000 		.word	.LANCHOR6
 2377              	.L361:
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2378              		.loc 1 609 0
 2379 099c 281C     		add	r0, r5, #0
 2380 099e 0021     		mov	r1, #0
 2381 09a0 FFF7FEFF 		bl	__aeabi_fcmpeq
 2382              	.LVL344:
 2383 09a4 0028     		cmp	r0, #0
 2384 09a6 12D1     		bne	.L249
 2385              	.L236:
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2386              		.loc 1 609 0
 2387 09a8 281C     		add	r0, r5, #0
 2388 09aa 0021     		mov	r1, #0
 2389 09ac FFF7FEFF 		bl	__aeabi_fcmpge
 2390              	.LVL345:
 2391 09b0 0028     		cmp	r0, #0
 2392 09b2 C3D0     		beq	.L242
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2393              		.loc 1 609 0
 2394 09b4 281C     		add	r0, r5, #0
 2395 09b6 B049     		ldr	r1, .L387+8
 2396 09b8 FFF7FEFF 		bl	__aeabi_fcmpge
 2397              	.LVL346:
 2398 09bc 0028     		cmp	r0, #0
 2399 09be 06D0     		beq	.L249
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2400              		.loc 1 609 0
 2401 09c0 281C     		add	r0, r5, #0
 2402 09c2 AE49     		ldr	r1, .L387+12
 2403 09c4 FFF7FEFF 		bl	__aeabi_fcmple
 2404              	.LVL347:
 2405 09c8 7F26     		mov	r6, #127
 2406 09ca 0028     		cmp	r0, #0
 2407 09cc A8D1     		bne	.L240
 2408              	.L249:
 609:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255((float)newExposure*0.025f)));
 2409              		.loc 1 609 0
 2410 09ce 281C     		add	r0, r5, #0
 2411 09d0 FFF7FEFF 		bl	__aeabi_f2iz
 2412              	.LVL348:
 2413 09d4 C6B2     		uxtb	r6, r0
 2414 09d6 A3E7     		b	.L240
 2415              	.L359:
 605:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*servoValue));
 2416              		.loc 1 605 0 is_stmt 1
 2417 09d8 381C     		add	r0, r7, #0
 2418 09da FFF7FEFF 		bl	__aeabi_f2d
 2419              	.LVL349:
 2420 09de A54B     		ldr	r3, .L387+4
 2421 09e0 A34A     		ldr	r2, .L387
 2422 09e2 FFF7FEFF 		bl	__aeabi_dsub
 2423              	.LVL350:
 2424 09e6 FFF7FEFF 		bl	__aeabi_d2iz
 2425              	.LVL351:
 2426 09ea C1B2     		uxtb	r1, r0
 2427 09ec 51E7     		b	.L232
 2428              	.L354:
 599:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_1)));
 2429              		.loc 1 599 0
 2430 09ee 0120     		mov	r0, #1
 2431 09f0 FFF7FEFF 		bl	TFC_GetMotorPWM
 2432              	.LVL352:
 2433 09f4 A249     		ldr	r1, .L387+16
 2434 09f6 FFF7FEFF 		bl	__aeabi_fmul
 2435              	.LVL353:
 2436 09fa FFF7FEFF 		bl	__aeabi_f2d
 2437              	.LVL354:
 2438 09fe 9D4B     		ldr	r3, .L387+4
 2439 0a00 9B4A     		ldr	r2, .L387
 2440 0a02 FFF7FEFF 		bl	__aeabi_dsub
 2441              	.LVL355:
 2442 0a06 FFF7FEFF 		bl	__aeabi_d2iz
 2443              	.LVL356:
 2444 0a0a C1B2     		uxtb	r1, r0
 2445 0a0c 84E5     		b	.L165
 2446              	.L353:
 597:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(126*TFC_GetMotorPWM(CHANNEL_0)));
 2447              		.loc 1 597 0
 2448 0a0e 0020     		mov	r0, #0
 2449 0a10 FFF7FEFF 		bl	TFC_GetMotorPWM
 2450              	.LVL357:
 2451 0a14 9A49     		ldr	r1, .L387+16
 2452 0a16 FFF7FEFF 		bl	__aeabi_fmul
 2453              	.LVL358:
 2454 0a1a FFF7FEFF 		bl	__aeabi_f2d
 2455              	.LVL359:
 2456 0a1e 954B     		ldr	r3, .L387+4
 2457 0a20 934A     		ldr	r2, .L387
 2458 0a22 FFF7FEFF 		bl	__aeabi_dsub
 2459              	.LVL360:
 2460 0a26 FFF7FEFF 		bl	__aeabi_d2iz
 2461              	.LVL361:
 2462 0a2a C1B2     		uxtb	r1, r0
 2463 0a2c 56E5     		b	.L162
 2464              	.L379:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2465              		.loc 1 603 0
 2466 0a2e 0120     		mov	r0, #1
 2467 0a30 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2468              	.LVL362:
 2469 0a34 9349     		ldr	r1, .L387+20
 2470 0a36 FFF7FEFF 		bl	__aeabi_fmul
 2471              	.LVL363:
 2472 0a3a 8F49     		ldr	r1, .L387+8
 2473 0a3c FFF7FEFF 		bl	__aeabi_fcmpge
 2474              	.LVL364:
 2475 0a40 0028     		cmp	r0, #0
 2476 0a42 00D1     		bne	.LCB2153
 2477 0a44 D1E6     		b	.L202	@long jump
 2478              	.LCB2153:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2479              		.loc 1 603 0 is_stmt 0
 2480 0a46 0120     		mov	r0, #1
 2481 0a48 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2482              	.LVL365:
 2483 0a4c CDE6     		b	.L202
 2484              	.L377:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2485              		.loc 1 601 0 is_stmt 1
 2486 0a4e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2487              	.LVL366:
 2488 0a52 8C49     		ldr	r1, .L387+20
 2489 0a54 FFF7FEFF 		bl	__aeabi_fmul
 2490              	.LVL367:
 2491 0a58 8749     		ldr	r1, .L387+8
 2492 0a5a FFF7FEFF 		bl	__aeabi_fcmpge
 2493              	.LVL368:
 2494 0a5e 0028     		cmp	r0, #0
 2495 0a60 00D1     		bne	.LCB2170
 2496 0a62 FAE5     		b	.L170	@long jump
 2497              	.LCB2170:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2498              		.loc 1 601 0 is_stmt 0
 2499 0a64 0020     		mov	r0, #0
 2500 0a66 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2501              	.LVL369:
 2502 0a6a F6E5     		b	.L170
 2503              	.L375:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2504              		.loc 1 595 0 is_stmt 1
 2505 0a6c 0120     		mov	r0, #1
 2506 0a6e 8227     		mov	r7, #130
 2507 0a70 FFF7FEFF 		bl	getSpeed
 2508              	.LVL370:
 2509 0a74 F905     		lsl	r1, r7, #23
 2510 0a76 FFF7FEFF 		bl	__aeabi_fmul
 2511              	.LVL371:
 2512 0a7a 7F49     		ldr	r1, .L387+8
 2513 0a7c FFF7FEFF 		bl	__aeabi_fcmpge
 2514              	.LVL372:
 2515 0a80 0028     		cmp	r0, #0
 2516 0a82 00D1     		bne	.LCB2189
 2517 0a84 CCE4     		b	.L132	@long jump
 2518              	.LCB2189:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2519              		.loc 1 595 0 is_stmt 0
 2520 0a86 0120     		mov	r0, #1
 2521 0a88 FFF7FEFF 		bl	getSpeed
 2522              	.LVL373:
 2523 0a8c C8E4     		b	.L132
 2524              	.L373:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2525              		.loc 1 593 0 is_stmt 1
 2526 0a8e 8226     		mov	r6, #130
 2527 0a90 FFF7FEFF 		bl	getSpeed
 2528              	.LVL374:
 2529 0a94 F105     		lsl	r1, r6, #23
 2530 0a96 FFF7FEFF 		bl	__aeabi_fmul
 2531              	.LVL375:
 2532 0a9a 7749     		ldr	r1, .L387+8
 2533 0a9c FFF7FEFF 		bl	__aeabi_fcmpge
 2534              	.LVL376:
 2535 0aa0 0028     		cmp	r0, #0
 2536 0aa2 01D1     		bne	.LCB2207
 2537 0aa4 FFF7A9FB 		bl	.L100	@far jump
 2538              	.LCB2207:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2539              		.loc 1 593 0 is_stmt 0
 2540 0aa8 0020     		mov	r0, #0
 2541 0aaa FFF7FEFF 		bl	getSpeed
 2542              	.LVL377:
 2543 0aae FFF7A4FB 		bl	.L100	@ far jump
 2544              	.L350:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2545              		.loc 1 593 0
 2546 0ab2 0020     		mov	r0, #0
 2547 0ab4 FFF7FEFF 		bl	getSpeed
 2548              	.LVL378:
 2549 0ab8 8223     		mov	r3, #130
 2550 0aba D905     		lsl	r1, r3, #23
 2551 0abc FFF7FEFF 		bl	__aeabi_fmul
 2552              	.LVL379:
 2553 0ac0 6D49     		ldr	r1, .L387+8
 2554 0ac2 FFF7FEFF 		bl	__aeabi_fcmpge
 2555              	.LVL380:
 2556 0ac6 0028     		cmp	r0, #0
 2557 0ac8 01D1     		bne	.LCB2226
 2558 0aca FFF762FB 		bl	.L126	@far jump
 2559              	.LCB2226:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2560              		.loc 1 593 0
 2561 0ace 0020     		mov	r0, #0
 2562 0ad0 FFF7FEFF 		bl	getSpeed
 2563              	.LVL381:
 2564 0ad4 8221     		mov	r1, #130
 2565 0ad6 C905     		lsl	r1, r1, #23
 2566 0ad8 FFF7FEFF 		bl	__aeabi_fmul
 2567              	.LVL382:
 2568 0adc 6749     		ldr	r1, .L387+12
 2569 0ade FFF7FEFF 		bl	__aeabi_fcmple
 2570              	.LVL383:
 2571 0ae2 0028     		cmp	r0, #0
 2572 0ae4 01D0     		beq	.LCB2238
 2573 0ae6 FFF7CAFB 		bl	.L117	@far jump
 2574              	.LCB2238:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2575              		.loc 1 593 0
 2576 0aea 0021     		mov	r1, #0
 2577 0aec FFF7C8FB 		bl	.L111	@ far jump
 2578              	.L352:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2579              		.loc 1 595 0 is_stmt 1
 2580 0af0 0120     		mov	r0, #1
 2581 0af2 8226     		mov	r6, #130
 2582 0af4 FFF7FEFF 		bl	getSpeed
 2583              	.LVL384:
 2584 0af8 F105     		lsl	r1, r6, #23
 2585 0afa FFF7FEFF 		bl	__aeabi_fmul
 2586              	.LVL385:
 2587 0afe 5E49     		ldr	r1, .L387+8
 2588 0b00 FFF7FEFF 		bl	__aeabi_fcmpge
 2589              	.LVL386:
 2590 0b04 0028     		cmp	r0, #0
 2591 0b06 00D1     		bne	.LCB2255
 2592 0b08 40E4     		b	.L158	@long jump
 2593              	.LCB2255:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2594              		.loc 1 595 0 is_stmt 0
 2595 0b0a 0120     		mov	r0, #1
 2596 0b0c FFF7FEFF 		bl	getSpeed
 2597              	.LVL387:
 2598 0b10 8222     		mov	r2, #130
 2599 0b12 D105     		lsl	r1, r2, #23
 2600 0b14 FFF7FEFF 		bl	__aeabi_fmul
 2601              	.LVL388:
 2602 0b18 5849     		ldr	r1, .L387+12
 2603 0b1a FFF7FEFF 		bl	__aeabi_fcmple
 2604              	.LVL389:
 2605 0b1e 0028     		cmp	r0, #0
 2606 0b20 00D0     		beq	.LCB2267
 2607 0b22 BCE4     		b	.L149	@long jump
 2608              	.LCB2267:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2609              		.loc 1 595 0
 2610 0b24 0021     		mov	r1, #0
 2611 0b26 BBE4     		b	.L143
 2612              	.L358:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2613              		.loc 1 603 0 is_stmt 1
 2614 0b28 0120     		mov	r0, #1
 2615 0b2a FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2616              	.LVL390:
 2617 0b2e 5549     		ldr	r1, .L387+20
 2618 0b30 FFF7FEFF 		bl	__aeabi_fmul
 2619              	.LVL391:
 2620 0b34 5049     		ldr	r1, .L387+8
 2621 0b36 FFF7FEFF 		bl	__aeabi_fcmpge
 2622              	.LVL392:
 2623 0b3a 0028     		cmp	r0, #0
 2624 0b3c 00D1     		bne	.LCB2283
 2625 0b3e 3BE6     		b	.L228	@long jump
 2626              	.LCB2283:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2627              		.loc 1 603 0 is_stmt 0
 2628 0b40 0120     		mov	r0, #1
 2629 0b42 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2630              	.LVL393:
 2631 0b46 4F49     		ldr	r1, .L387+20
 2632 0b48 FFF7FEFF 		bl	__aeabi_fmul
 2633              	.LVL394:
 2634 0b4c 4B49     		ldr	r1, .L387+12
 2635 0b4e FFF7FEFF 		bl	__aeabi_fcmple
 2636              	.LVL395:
 2637 0b52 0028     		cmp	r0, #0
 2638 0b54 00D0     		beq	.LCB2294
 2639 0b56 82E6     		b	.L219	@long jump
 2640              	.LCB2294:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2641              		.loc 1 603 0
 2642 0b58 0021     		mov	r1, #0
 2643 0b5a 81E6     		b	.L213
 2644              	.L356:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2645              		.loc 1 601 0 is_stmt 1
 2646 0b5c 0020     		mov	r0, #0
 2647 0b5e FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2648              	.LVL396:
 2649 0b62 4849     		ldr	r1, .L387+20
 2650 0b64 FFF7FEFF 		bl	__aeabi_fmul
 2651              	.LVL397:
 2652 0b68 4349     		ldr	r1, .L387+8
 2653 0b6a FFF7FEFF 		bl	__aeabi_fcmpge
 2654              	.LVL398:
 2655 0b6e 0028     		cmp	r0, #0
 2656 0b70 00D1     		bne	.LCB2310
 2657 0b72 45E5     		b	.L196	@long jump
 2658              	.LCB2310:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2659              		.loc 1 601 0 is_stmt 0
 2660 0b74 0020     		mov	r0, #0
 2661 0b76 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2662              	.LVL399:
 2663 0b7a 4249     		ldr	r1, .L387+20
 2664 0b7c FFF7FEFF 		bl	__aeabi_fmul
 2665              	.LVL400:
 2666 0b80 3E49     		ldr	r1, .L387+12
 2667 0b82 FFF7FEFF 		bl	__aeabi_fcmple
 2668              	.LVL401:
 2669 0b86 0028     		cmp	r0, #0
 2670 0b88 00D0     		beq	.LCB2321
 2671 0b8a A0E5     		b	.L187	@long jump
 2672              	.LCB2321:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2673              		.loc 1 601 0
 2674 0b8c 0021     		mov	r1, #0
 2675 0b8e 9FE5     		b	.L181
 2676              	.L122:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2677              		.loc 1 593 0 is_stmt 1
 2678 0b90 0020     		mov	r0, #0
 2679 0b92 8227     		mov	r7, #130
 2680 0b94 FFF7FEFF 		bl	getSpeed
 2681              	.LVL402:
 2682 0b98 F905     		lsl	r1, r7, #23
 2683 0b9a FFF7FEFF 		bl	__aeabi_fmul
 2684              	.LVL403:
 2685 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 2686              	.LVL404:
 2687 0ba2 C1B2     		uxtb	r1, r0
 2688 0ba4 FFF76CFB 		bl	.L111	@ far jump
 2689              	.L224:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2690              		.loc 1 603 0
 2691 0ba8 0120     		mov	r0, #1
 2692 0baa FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2693              	.LVL405:
 2694 0bae 3549     		ldr	r1, .L387+20
 2695 0bb0 FFF7FEFF 		bl	__aeabi_fmul
 2696              	.LVL406:
 2697 0bb4 FFF7FEFF 		bl	__aeabi_f2iz
 2698              	.LVL407:
 2699 0bb8 C1B2     		uxtb	r1, r0
 2700 0bba 51E6     		b	.L213
 2701              	.L192:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2702              		.loc 1 601 0
 2703 0bbc 0020     		mov	r0, #0
 2704 0bbe FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2705              	.LVL408:
 2706 0bc2 3049     		ldr	r1, .L387+20
 2707 0bc4 FFF7FEFF 		bl	__aeabi_fmul
 2708              	.LVL409:
 2709 0bc8 FFF7FEFF 		bl	__aeabi_f2iz
 2710              	.LVL410:
 2711 0bcc C1B2     		uxtb	r1, r0
 2712 0bce 7FE5     		b	.L181
 2713              	.L154:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2714              		.loc 1 595 0
 2715 0bd0 0120     		mov	r0, #1
 2716 0bd2 FFF7FEFF 		bl	getSpeed
 2717              	.LVL411:
 2718 0bd6 8223     		mov	r3, #130
 2719 0bd8 D905     		lsl	r1, r3, #23
 2720 0bda FFF7FEFF 		bl	__aeabi_fmul
 2721              	.LVL412:
 2722 0bde FFF7FEFF 		bl	__aeabi_f2iz
 2723              	.LVL413:
 2724 0be2 C1B2     		uxtb	r1, r0
 2725 0be4 5CE4     		b	.L143
 2726              	.L263:
 607:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, (signed char)(carState.edge==NO_EDGE)?(50):((carState.edge==BOTH_EDGE
 2727              		.loc 1 607 0
 2728 0be6 0021     		mov	r1, #0
 2729 0be8 61E6     		b	.L233
 2730              	.L380:
 2731 0bea 6421     		mov	r1, #100
 2732 0bec 5FE6     		b	.L233
 2733              	.L378:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2734              		.loc 1 603 0
 2735 0bee 0120     		mov	r0, #1
 2736 0bf0 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2737              	.LVL414:
 2738 0bf4 2349     		ldr	r1, .L387+20
 2739 0bf6 FFF7FEFF 		bl	__aeabi_fmul
 2740              	.LVL415:
 2741 0bfa 2049     		ldr	r1, .L387+12
 2742 0bfc FFF7FEFF 		bl	__aeabi_fcmple
 2743              	.LVL416:
 2744 0c00 7E21     		mov	r1, #126
 2745 0c02 0028     		cmp	r0, #0
 2746 0c04 00D0     		beq	.LCB2406
 2747 0c06 2BE6     		b	.L213	@long jump
 2748              	.LCB2406:
 603:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_1))));
 2749              		.loc 1 603 0 is_stmt 0
 2750 0c08 0021     		mov	r1, #0
 2751 0c0a 29E6     		b	.L213
 2752              	.L372:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2753              		.loc 1 593 0 is_stmt 1
 2754 0c0c 0020     		mov	r0, #0
 2755 0c0e FFF7FEFF 		bl	getSpeed
 2756              	.LVL417:
 2757 0c12 8223     		mov	r3, #130
 2758 0c14 D905     		lsl	r1, r3, #23
 2759 0c16 FFF7FEFF 		bl	__aeabi_fmul
 2760              	.LVL418:
 2761 0c1a 1849     		ldr	r1, .L387+12
 2762 0c1c FFF7FEFF 		bl	__aeabi_fcmple
 2763              	.LVL419:
 2764 0c20 7E21     		mov	r1, #126
 2765 0c22 0028     		cmp	r0, #0
 2766 0c24 01D0     		beq	.LCB2424
 2767 0c26 FFF72BFB 		bl	.L111	@far jump
 2768              	.LCB2424:
 593:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_0))));
 2769              		.loc 1 593 0 is_stmt 0
 2770 0c2a 0021     		mov	r1, #0
 2771 0c2c FFF728FB 		bl	.L111	@ far jump
 2772              	.L374:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2773              		.loc 1 595 0 is_stmt 1
 2774 0c30 0120     		mov	r0, #1
 2775 0c32 8226     		mov	r6, #130
 2776 0c34 FFF7FEFF 		bl	getSpeed
 2777              	.LVL420:
 2778 0c38 F105     		lsl	r1, r6, #23
 2779 0c3a FFF7FEFF 		bl	__aeabi_fmul
 2780              	.LVL421:
 2781 0c3e 0F49     		ldr	r1, .L387+12
 2782 0c40 FFF7FEFF 		bl	__aeabi_fcmple
 2783              	.LVL422:
 2784 0c44 7E21     		mov	r1, #126
 2785 0c46 0028     		cmp	r0, #0
 2786 0c48 00D0     		beq	.LCB2442
 2787 0c4a 29E4     		b	.L143	@long jump
 2788              	.LCB2442:
 595:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(8*getSpeed(CHANNEL_1))));
 2789              		.loc 1 595 0 is_stmt 0
 2790 0c4c 0021     		mov	r1, #0
 2791 0c4e 27E4     		b	.L143
 2792              	.L376:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2793              		.loc 1 601 0 is_stmt 1
 2794 0c50 0020     		mov	r0, #0
 2795 0c52 FFF7FEFF 		bl	TFC_ReadMotorCurrent
 2796              	.LVL423:
 2797 0c56 0B49     		ldr	r1, .L387+20
 2798 0c58 FFF7FEFF 		bl	__aeabi_fmul
 2799              	.LVL424:
 2800 0c5c 0749     		ldr	r1, .L387+12
 2801 0c5e FFF7FEFF 		bl	__aeabi_fcmple
 2802              	.LVL425:
 2803 0c62 7E21     		mov	r1, #126
 2804 0c64 0028     		cmp	r0, #0
 2805 0c66 00D0     		beq	.LCB2459
 2806 0c68 32E5     		b	.L181	@long jump
 2807              	.LCB2459:
 601:../Sources/main.c **** 	uart_putchar(UART2_BASE_PTR, FLOAT_TO_CHAR(LIMIT_255(60*TFC_ReadMotorCurrent(CHANNEL_0))));
 2808              		.loc 1 601 0 is_stmt 0
 2809 0c6a 0021     		mov	r1, #0
 2810 0c6c 30E5     		b	.L181
 2811              	.L388:
 2812 0c6e C046     		.align	3
 2813              	.L387:
 2814 0c70 00000000 		.word	0
 2815 0c74 0000E03F 		.word	1071644672
 2816 0c78 0000FF42 		.word	1124007936
 2817 0c7c 00800043 		.word	1124106240
 2818 0c80 0000FC42 		.word	1123811328
 2819 0c84 00007042 		.word	1114636288
 2820              		.cfi_endproc
 2821              	.LFE10:
 2823              		.global	__aeabi_ui2f
 2824              		.section	.text.BluetoothSetSpeed,"ax",%progbits
 2825              		.align	2
 2826              		.global	BluetoothSetSpeed
 2827              		.code	16
 2828              		.thumb_func
 2830              	BluetoothSetSpeed:
 2831              	.LFB12:
 616:../Sources/main.c **** 
 617:../Sources/main.c **** void telemetryReadData(){
 618:../Sources/main.c **** 	
 619:../Sources/main.c **** 	if(count==0){
 620:../Sources/main.c **** 		//if something is on the UART, get it and put it in received_byte
 621:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 622:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 623:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 624:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 625:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 626:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 627:../Sources/main.c **** 			count++;
 628:../Sources/main.c **** 		}
 629:../Sources/main.c **** 	}
 630:../Sources/main.c **** 	else if(count>0){
 631:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 632:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 633:../Sources/main.c **** 			count=0;
 634:../Sources/main.c **** 		}
 635:../Sources/main.c **** 	}
 636:../Sources/main.c **** 	
 637:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 638:../Sources/main.c **** 		switch(received_byte1){
 639:../Sources/main.c **** 		case 255: //SPEED
 640:../Sources/main.c **** 			BluetoothSetSpeed(received_byte2);
 641:../Sources/main.c **** 			break;
 642:../Sources/main.c **** 		case 251: //LED
 643:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 644:../Sources/main.c **** 			break;
 645:../Sources/main.c **** 		}
 646:../Sources/main.c **** 		//received_byte1=0;
 647:../Sources/main.c **** 		//received_byte2=0;
 648:../Sources/main.c **** 	}
 649:../Sources/main.c **** 	
 650:../Sources/main.c **** }
 651:../Sources/main.c **** 
 652:../Sources/main.c **** void BluetoothSetSpeed(uint8_t i){
 2832              		.loc 1 652 0 is_stmt 1
 2833              		.cfi_startproc
 2834              	.LVL426:
 2835 0000 38B5     		push	{r3, r4, r5, lr}
 2836              	.LCFI13:
 2837              		.cfi_def_cfa_offset 16
 2838              		.cfi_offset 3, -16
 2839              		.cfi_offset 4, -12
 2840              		.cfi_offset 5, -8
 2841              		.cfi_offset 14, -4
 653:../Sources/main.c **** 	max_speed_percent=i;
 2842              		.loc 1 653 0
 2843 0002 FFF7FEFF 		bl	__aeabi_ui2f
 2844              	.LVL427:
 654:../Sources/main.c **** 		if(max_speed_percent>100){
 2845              		.loc 1 654 0
 2846 0006 064C     		ldr	r4, .L393
 653:../Sources/main.c **** 	max_speed_percent=i;
 2847              		.loc 1 653 0
 2848 0008 051C     		add	r5, r0, #0
 2849              		.loc 1 654 0
 2850 000a 211C     		add	r1, r4, #0
 2851 000c FFF7FEFF 		bl	__aeabi_fcmpgt
 2852              	.LVL428:
 655:../Sources/main.c **** 			max_speed_percent=100;
 2853              		.loc 1 655 0
 2854 0010 044B     		ldr	r3, .L393+4
 654:../Sources/main.c **** 		if(max_speed_percent>100){
 2855              		.loc 1 654 0
 2856 0012 0028     		cmp	r0, #0
 2857 0014 01D0     		beq	.L392
 2858              		.loc 1 655 0
 2859 0016 1C60     		str	r4, [r3]
 2860              	.L389:
 656:../Sources/main.c **** 		}
 657:../Sources/main.c **** }
 2861              		.loc 1 657 0
 2862              		@ sp needed for prologue
 2863 0018 38BD     		pop	{r3, r4, r5, pc}
 2864              	.L392:
 653:../Sources/main.c **** 	max_speed_percent=i;
 2865              		.loc 1 653 0
 2866 001a 1D60     		str	r5, [r3]
 2867 001c FCE7     		b	.L389
 2868              	.L394:
 2869 001e C046     		.align	2
 2870              	.L393:
 2871 0020 0000C842 		.word	1120403456
 2872 0024 00000000 		.word	.LANCHOR7
 2873              		.cfi_endproc
 2874              	.LFE12:
 2876              		.section	.text.BluetoothSetLED,"ax",%progbits
 2877              		.align	2
 2878              		.global	BluetoothSetLED
 2879              		.code	16
 2880              		.thumb_func
 2882              	BluetoothSetLED:
 2883              	.LFB13:
 658:../Sources/main.c **** 
 659:../Sources/main.c **** void BluetoothSetLED(uint8_t i){	
 2884              		.loc 1 659 0
 2885              		.cfi_startproc
 2886              	.LVL429:
 2887 0000 00B5     		push	{lr}
 2888              	.LCFI14:
 2889              		.cfi_def_cfa_offset 4
 2890              		.cfi_offset 14, -4
 660:../Sources/main.c **** 		switch(i){
 2891              		.loc 1 660 0
 2892 0002 0228     		cmp	r0, #2
 2893 0004 43D0     		beq	.L398
 2894 0006 17D8     		bhi	.L401
 2895 0008 0128     		cmp	r0, #1
 2896 000a 4CD0     		beq	.L406
 2897              	.L396:
 661:../Sources/main.c **** 			case 1: 
 662:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 663:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 664:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 665:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 666:../Sources/main.c **** 				break;
 667:../Sources/main.c **** 			case 2:
 668:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 669:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 670:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 671:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 672:../Sources/main.c **** 				break;
 673:../Sources/main.c **** 			case 3:
 674:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 675:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 676:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 677:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);			
 678:../Sources/main.c **** 				break;
 679:../Sources/main.c **** 			case 4: 
 680:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 681:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 682:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 683:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 684:../Sources/main.c **** 				break;
 685:../Sources/main.c **** 			default:
 686:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2898              		.loc 1 686 0
 2899 000c 294B     		ldr	r3, .L407
 2900 000e 8022     		mov	r2, #128
 2901 0010 9968     		ldr	r1, [r3, #8]
 2902 0012 5000     		lsl	r0, r2, #1
 2903              	.LVL430:
 2904 0014 0843     		orr	r0, r1
 2905 0016 9860     		str	r0, [r3, #8]
 2906              	.L404:
 687:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2907              		.loc 1 687 0
 2908 0018 9968     		ldr	r1, [r3, #8]
 2909 001a 8022     		mov	r2, #128
 2910 001c 9000     		lsl	r0, r2, #2
 2911 001e 0843     		orr	r0, r1
 2912 0020 9860     		str	r0, [r3, #8]
 2913              	.L405:
 688:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2914              		.loc 1 688 0
 2915 0022 9968     		ldr	r1, [r3, #8]
 2916 0024 8022     		mov	r2, #128
 2917 0026 D000     		lsl	r0, r2, #3
 2918 0028 0843     		orr	r0, r1
 2919 002a 9860     		str	r0, [r3, #8]
 2920              	.L403:
 689:../Sources/main.c **** 				GPIOB_PCOR |= (1<<11);
 2921              		.loc 1 689 0
 2922 002c 9968     		ldr	r1, [r3, #8]
 2923 002e 8022     		mov	r2, #128
 2924 0030 1001     		lsl	r0, r2, #4
 2925 0032 0843     		orr	r0, r1
 2926 0034 9860     		str	r0, [r3, #8]
 2927              	.L395:
 690:../Sources/main.c **** 			}
 691:../Sources/main.c **** }
 2928              		.loc 1 691 0
 2929              		@ sp needed for prologue
 2930 0036 00BD     		pop	{pc}
 2931              	.LVL431:
 2932              	.L401:
 660:../Sources/main.c **** 		switch(i){
 2933              		.loc 1 660 0
 2934 0038 0328     		cmp	r0, #3
 2935 003a 17D0     		beq	.L399
 2936 003c 0428     		cmp	r0, #4
 2937 003e E5D1     		bne	.L396
 680:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2938              		.loc 1 680 0
 2939 0040 1C4B     		ldr	r3, .L407
 2940 0042 8022     		mov	r2, #128
 2941 0044 9968     		ldr	r1, [r3, #8]
 2942 0046 5000     		lsl	r0, r2, #1
 2943              	.LVL432:
 2944 0048 0843     		orr	r0, r1
 2945 004a 9860     		str	r0, [r3, #8]
 681:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2946              		.loc 1 681 0
 2947 004c 9968     		ldr	r1, [r3, #8]
 2948 004e 8022     		mov	r2, #128
 2949 0050 9000     		lsl	r0, r2, #2
 2950 0052 0843     		orr	r0, r1
 2951 0054 9860     		str	r0, [r3, #8]
 682:../Sources/main.c **** 				GPIOB_PCOR |= (1<<10);
 2952              		.loc 1 682 0
 2953 0056 9968     		ldr	r1, [r3, #8]
 2954 0058 8022     		mov	r2, #128
 2955 005a D000     		lsl	r0, r2, #3
 2956 005c 0843     		orr	r0, r1
 2957 005e 9860     		str	r0, [r3, #8]
 683:../Sources/main.c **** 				GPIOB_PSOR |= (1<<11);
 2958              		.loc 1 683 0
 2959 0060 5968     		ldr	r1, [r3, #4]
 2960 0062 8022     		mov	r2, #128
 2961 0064 1001     		lsl	r0, r2, #4
 2962 0066 0843     		orr	r0, r1
 2963 0068 5860     		str	r0, [r3, #4]
 684:../Sources/main.c **** 				break;
 2964              		.loc 1 684 0
 2965 006a E4E7     		b	.L395
 2966              	.LVL433:
 2967              	.L399:
 674:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2968              		.loc 1 674 0
 2969 006c 114B     		ldr	r3, .L407
 2970 006e 8022     		mov	r2, #128
 2971 0070 9968     		ldr	r1, [r3, #8]
 2972 0072 5000     		lsl	r0, r2, #1
 2973              	.LVL434:
 2974 0074 0843     		orr	r0, r1
 2975 0076 9860     		str	r0, [r3, #8]
 675:../Sources/main.c **** 				GPIOB_PCOR |= (1<<9);
 2976              		.loc 1 675 0
 2977 0078 9968     		ldr	r1, [r3, #8]
 2978 007a 8022     		mov	r2, #128
 2979 007c 9000     		lsl	r0, r2, #2
 2980 007e 0843     		orr	r0, r1
 2981 0080 9860     		str	r0, [r3, #8]
 676:../Sources/main.c **** 				GPIOB_PSOR |= (1<<10);
 2982              		.loc 1 676 0
 2983 0082 5968     		ldr	r1, [r3, #4]
 2984 0084 8022     		mov	r2, #128
 2985 0086 D000     		lsl	r0, r2, #3
 2986 0088 0843     		orr	r0, r1
 2987 008a 5860     		str	r0, [r3, #4]
 2988 008c CEE7     		b	.L403
 2989              	.LVL435:
 2990              	.L398:
 668:../Sources/main.c **** 				GPIOB_PCOR |= (1<<8);
 2991              		.loc 1 668 0
 2992 008e 094B     		ldr	r3, .L407
 2993 0090 8022     		mov	r2, #128
 2994 0092 9968     		ldr	r1, [r3, #8]
 2995 0094 5000     		lsl	r0, r2, #1
 2996              	.LVL436:
 2997 0096 0843     		orr	r0, r1
 2998 0098 9860     		str	r0, [r3, #8]
 669:../Sources/main.c **** 				GPIOB_PSOR |= (1<<9);
 2999              		.loc 1 669 0
 3000 009a 5968     		ldr	r1, [r3, #4]
 3001 009c 8022     		mov	r2, #128
 3002 009e 9000     		lsl	r0, r2, #2
 3003 00a0 0843     		orr	r0, r1
 3004 00a2 5860     		str	r0, [r3, #4]
 3005 00a4 BDE7     		b	.L405
 3006              	.LVL437:
 3007              	.L406:
 662:../Sources/main.c **** 				GPIOB_PSOR |= (1<<8);
 3008              		.loc 1 662 0
 3009 00a6 034B     		ldr	r3, .L407
 3010 00a8 8022     		mov	r2, #128
 3011 00aa 5968     		ldr	r1, [r3, #4]
 3012 00ac 5000     		lsl	r0, r2, #1
 3013              	.LVL438:
 3014 00ae 0843     		orr	r0, r1
 3015 00b0 5860     		str	r0, [r3, #4]
 3016 00b2 B1E7     		b	.L404
 3017              	.L408:
 3018              		.align	2
 3019              	.L407:
 3020 00b4 40F00F40 		.word	1074786368
 3021              		.cfi_endproc
 3022              	.LFE13:
 3024              		.section	.text.telemetryReadData,"ax",%progbits
 3025              		.align	2
 3026              		.global	telemetryReadData
 3027              		.code	16
 3028              		.thumb_func
 3030              	telemetryReadData:
 3031              	.LFB11:
 617:../Sources/main.c **** void telemetryReadData(){
 3032              		.loc 1 617 0
 3033              		.cfi_startproc
 3034 0000 38B5     		push	{r3, r4, r5, lr}
 3035              	.LCFI15:
 3036              		.cfi_def_cfa_offset 16
 3037              		.cfi_offset 3, -16
 3038              		.cfi_offset 4, -12
 3039              		.cfi_offset 5, -8
 3040              		.cfi_offset 14, -4
 619:../Sources/main.c **** 	if(count==0){
 3041              		.loc 1 619 0
 3042 0002 284C     		ldr	r4, .L427
 621:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3043              		.loc 1 621 0
 3044 0004 2848     		ldr	r0, .L427+4
 619:../Sources/main.c **** 	if(count==0){
 3045              		.loc 1 619 0
 3046 0006 2378     		ldrb	r3, [r4]
 3047 0008 002B     		cmp	r3, #0
 3048 000a 10D0     		beq	.L425
 631:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3049              		.loc 1 631 0
 3050 000c FFF7FEFF 		bl	uart_getchar_present
 3051              	.LVL439:
 3052 0010 0028     		cmp	r0, #0
 3053 0012 3BD1     		bne	.L413
 3054              	.L424:
 3055 0014 254A     		ldr	r2, .L427+8
 3056 0016 1578     		ldrb	r5, [r2]
 3057              	.L412:
 637:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3058              		.loc 1 637 0
 3059 0018 002D     		cmp	r5, #0
 3060 001a 07D0     		beq	.L409
 637:../Sources/main.c **** 	if(received_byte1!=0 && received_byte2!=0){
 3061              		.loc 1 637 0 is_stmt 0
 3062 001c 244C     		ldr	r4, .L427+12
 3063 001e 2078     		ldrb	r0, [r4]
 3064 0020 0028     		cmp	r0, #0
 3065 0022 03D0     		beq	.L409
 638:../Sources/main.c **** 		switch(received_byte1){
 3066              		.loc 1 638 0 is_stmt 1
 3067 0024 FB2D     		cmp	r5, #251
 3068 0026 39D0     		beq	.L417
 3069 0028 FF2D     		cmp	r5, #255
 3070 002a 23D0     		beq	.L426
 3071              	.L409:
 650:../Sources/main.c **** }
 3072              		.loc 1 650 0
 3073              		@ sp needed for prologue
 3074 002c 38BD     		pop	{r3, r4, r5, pc}
 3075              	.L425:
 621:../Sources/main.c **** 		if(uart_getchar_present(UART2_BASE_PTR)){
 3076              		.loc 1 621 0
 3077 002e FFF7FEFF 		bl	uart_getchar_present
 3078              	.LVL440:
 3079 0032 0028     		cmp	r0, #0
 3080 0034 EED0     		beq	.L424
 622:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3081              		.loc 1 622 0
 3082 0036 1C48     		ldr	r0, .L427+4
 3083 0038 FFF7FEFF 		bl	uart_getchar
 3084              	.LVL441:
 3085 003c 1B4B     		ldr	r3, .L427+8
 623:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3086              		.loc 1 623 0
 3087 003e 1D4A     		ldr	r2, .L427+16
 622:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3088              		.loc 1 622 0
 3089 0040 1870     		strb	r0, [r3]
 623:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3090              		.loc 1 623 0
 3091 0042 8021     		mov	r1, #128
 622:../Sources/main.c **** 			received_byte1 = uart_getchar(UART2_BASE_PTR);
 3092              		.loc 1 622 0
 3093 0044 051C     		mov	r5, r0
 623:../Sources/main.c **** 			GPIOB_PSOR |= (1<<8);
 3094              		.loc 1 623 0
 3095 0046 5068     		ldr	r0, [r2, #4]
 3096 0048 4B00     		lsl	r3, r1, #1
 3097 004a 0343     		orr	r3, r0
 3098 004c 5360     		str	r3, [r2, #4]
 624:../Sources/main.c **** 			GPIOB_PSOR |= (1<<9);
 3099              		.loc 1 624 0
 3100 004e 5068     		ldr	r0, [r2, #4]
 3101 0050 8021     		mov	r1, #128
 3102 0052 8B00     		lsl	r3, r1, #2
 3103 0054 0343     		orr	r3, r0
 3104 0056 5360     		str	r3, [r2, #4]
 625:../Sources/main.c **** 			GPIOB_PSOR |= (1<<10);
 3105              		.loc 1 625 0
 3106 0058 5068     		ldr	r0, [r2, #4]
 3107 005a 8021     		mov	r1, #128
 3108 005c CB00     		lsl	r3, r1, #3
 3109 005e 0343     		orr	r3, r0
 3110 0060 5360     		str	r3, [r2, #4]
 626:../Sources/main.c **** 			GPIOB_PSOR |= (1<<11);
 3111              		.loc 1 626 0
 3112 0062 5068     		ldr	r0, [r2, #4]
 3113 0064 8021     		mov	r1, #128
 3114 0066 0B01     		lsl	r3, r1, #4
 3115 0068 0343     		orr	r3, r0
 3116 006a 5360     		str	r3, [r2, #4]
 627:../Sources/main.c **** 			count++;
 3117              		.loc 1 627 0
 3118 006c 2278     		ldrb	r2, [r4]
 3119 006e 0132     		add	r2, r2, #1
 3120 0070 2270     		strb	r2, [r4]
 3121 0072 D1E7     		b	.L412
 3122              	.L426:
 3123              	.LVL442:
 3124              	.LBB16:
 3125              	.LBB17:
 653:../Sources/main.c **** 	max_speed_percent=i;
 3126              		.loc 1 653 0
 3127 0074 FFF7FEFF 		bl	__aeabi_ui2f
 3128              	.LVL443:
 654:../Sources/main.c **** 		if(max_speed_percent>100){
 3129              		.loc 1 654 0
 3130 0078 0F4D     		ldr	r5, .L427+20
 653:../Sources/main.c **** 	max_speed_percent=i;
 3131              		.loc 1 653 0
 3132 007a 104C     		ldr	r4, .L427+24
 654:../Sources/main.c **** 		if(max_speed_percent>100){
 3133              		.loc 1 654 0
 3134 007c 291C     		add	r1, r5, #0
 653:../Sources/main.c **** 	max_speed_percent=i;
 3135              		.loc 1 653 0
 3136 007e 2060     		str	r0, [r4]
 654:../Sources/main.c **** 		if(max_speed_percent>100){
 3137              		.loc 1 654 0
 3138 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 3139              	.LVL444:
 3140 0084 0028     		cmp	r0, #0
 3141 0086 D1D0     		beq	.L409
 655:../Sources/main.c **** 			max_speed_percent=100;
 3142              		.loc 1 655 0
 3143 0088 2560     		str	r5, [r4]
 3144 008a CFE7     		b	.L409
 3145              	.L413:
 3146              	.LBE17:
 3147              	.LBE16:
 632:../Sources/main.c **** 			received_byte2 = uart_getchar(UART2_BASE_PTR);
 3148              		.loc 1 632 0
 3149 008c 0648     		ldr	r0, .L427+4
 3150 008e FFF7FEFF 		bl	uart_getchar
 3151              	.LVL445:
 3152 0092 0749     		ldr	r1, .L427+12
 3153 0094 0870     		strb	r0, [r1]
 633:../Sources/main.c **** 			count=0;
 3154              		.loc 1 633 0
 3155 0096 0020     		mov	r0, #0
 3156 0098 2070     		strb	r0, [r4]
 3157 009a BBE7     		b	.L424
 3158              	.L417:
 643:../Sources/main.c **** 			BluetoothSetLED(received_byte2);
 3159              		.loc 1 643 0
 3160 009c FFF7FEFF 		bl	BluetoothSetLED
 3161              	.LVL446:
 644:../Sources/main.c **** 			break;
 3162              		.loc 1 644 0
 3163 00a0 C4E7     		b	.L409
 3164              	.L428:
 3165 00a2 C046     		.align	2
 3166              	.L427:
 3167 00a4 00000000 		.word	.LANCHOR8
 3168 00a8 00C00640 		.word	1074184192
 3169 00ac 00000000 		.word	.LANCHOR9
 3170 00b0 00000000 		.word	.LANCHOR10
 3171 00b4 40F00F40 		.word	1074786368
 3172 00b8 0000C842 		.word	1120403456
 3173 00bc 00000000 		.word	.LANCHOR7
 3174              		.cfi_endproc
 3175              	.LFE11:
 3177              		.global	__aeabi_fadd
 3178              		.global	__aeabi_f2uiz
 3179              		.global	__aeabi_dmul
 3180              		.global	__aeabi_d2f
 3181              		.global	__aeabi_fdiv
 3182              		.global	__aeabi_fcmplt
 3183              		.section	.text.lineFollowingMode,"ax",%progbits
 3184              		.align	2
 3185              		.global	lineFollowingMode
 3186              		.code	16
 3187              		.thumb_func
 3189              	lineFollowingMode:
 3190              	.LFB1:
 201:../Sources/main.c **** {
 3191              		.loc 1 201 0
 3192              		.cfi_startproc
 3193              	.LVL447:
 3194 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3195              	.LCFI16:
 3196              		.cfi_def_cfa_offset 24
 3197              		.cfi_offset 3, -24
 3198              		.cfi_offset 4, -20
 3199              		.cfi_offset 5, -16
 3200              		.cfi_offset 6, -12
 3201              		.cfi_offset 7, -8
 3202              		.cfi_offset 14, -4
 3203 0002 5F46     		mov	r7, fp
 3204 0004 5646     		mov	r6, sl
 3205 0006 4D46     		mov	r5, r9
 3206 0008 4446     		mov	r4, r8
 3207 000a F0B4     		push	{r4, r5, r6, r7}
 3208              	.LCFI17:
 3209              		.cfi_def_cfa_offset 40
 3210              		.cfi_offset 8, -40
 3211              		.cfi_offset 9, -36
 3212              		.cfi_offset 10, -32
 3213              		.cfi_offset 11, -28
 201:../Sources/main.c **** {
 3214              		.loc 1 201 0
 3215 000c 071C     		mov	r7, r0
 205:../Sources/main.c **** 	if(TFC_GetPush_Button(PUSH_BUTTON_1) == 1)	// Stop line detection reset
 3216              		.loc 1 205 0
 3217 000e 0120     		mov	r0, #1
 3218              	.LVL448:
 3219 0010 FFF7FEFF 		bl	TFC_GetPush_Button
 3220              	.LVL449:
 3221 0014 0128     		cmp	r0, #1
 3222 0016 00D1     		bne	.LCB2822
 3223 0018 C9E0     		b	.L458	@long jump
 3224              	.LCB2822:
 3225              	.L430:
 211:../Sources/main.c **** 	if (TFC_Ticker[6] >= 1000)	// Read battery every 100 ms
 3226              		.loc 1 211 0
 3227 001a CF4C     		ldr	r4, .L470+8
 3228 001c CF4D     		ldr	r5, .L470+12
 3229 001e A169     		ldr	r1, [r4, #24]
 3230 0020 A942     		cmp	r1, r5
 3231 0022 00D9     		bls	.LCB2828
 3232 0024 BCE0     		b	.L459	@long jump
 3233              	.LCB2828:
 3234              	.L431:
 218:../Sources/main.c **** 	if (TFC_Ticker[4] >= 50)	// Send telemetry every 5 ms
 3235              		.loc 1 218 0
 3236 0026 2369     		ldr	r3, [r4, #16]
 3237 0028 312B     		cmp	r3, #49
 3238 002a 00D9     		bls	.LCB2832
 3239 002c B1E0     		b	.L460	@long jump
 3240              	.LCB2832:
 3241              	.L432:
 239:../Sources/main.c **** 		incline_speed=max_speed_percent;
 3242              		.loc 1 239 0
 3243 002e CC4D     		ldr	r5, .L470+16
 3244 0030 CC49     		ldr	r1, .L470+20
 3245 0032 2E68     		ldr	r6, [r5]
 3246 0034 8946     		mov	r9, r1
 3247 0036 0E60     		str	r6, [r1]
 242:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY)
 3248              		.loc 1 242 0
 3249 0038 FB78     		ldrb	r3, [r7, #3]
 3250 003a 002B     		cmp	r3, #0
 3251 003c 00D1     		bne	.LCB2842
 3252 003e 8FE0     		b	.L461	@long jump
 3253              	.LCB2842:
 3254              	.L433:
 251:../Sources/main.c **** 	if (TFC_Ticker[0] >= 100)	// Update reduced to 10 ms from 20 ms because servoValue used for speed 
 3255              		.loc 1 251 0
 3256 0040 2268     		ldr	r2, [r4]
 3257 0042 632A     		cmp	r2, #99
 3258 0044 55D8     		bhi	.L462
 3259              	.L440:
 269:../Sources/main.c **** 	if (carState->lineScanState == LINESCAN_IMAGE_READY) //Stopline detection and exposure control are
 3260              		.loc 1 269 0
 3261 0046 FA78     		ldrb	r2, [r7, #3]
 3262 0048 002A     		cmp	r2, #0
 3263 004a 11D1     		bne	.L444
 272:../Sources/main.c **** 		if(stopline_enable == 1)
 3264              		.loc 1 272 0
 3265 004c C648     		ldr	r0, .L470+24
 271:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3266              		.loc 1 271 0
 3267 004e 0123     		mov	r3, #1
 272:../Sources/main.c **** 		if(stopline_enable == 1)
 3268              		.loc 1 272 0
 3269 0050 0678     		ldrb	r6, [r0]
 271:../Sources/main.c **** 		carState->lineScanState = NO_NEW_LINESCAN_IMAGE;
 3270              		.loc 1 271 0
 3271 0052 FB70     		strb	r3, [r7, #3]
 272:../Sources/main.c **** 		if(stopline_enable == 1)
 3272              		.loc 1 272 0
 3273 0054 012E     		cmp	r6, #1
 3274 0056 00D1     		bne	.LCB2856
 3275 0058 C4E0     		b	.L463	@long jump
 3276              	.LCB2856:
 3277              	.L445:
 276:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3278              		.loc 1 276 0
 3279 005a C449     		ldr	r1, .L470+28
 3280 005c 0868     		ldr	r0, [r1]
 3281 005e FFF7FEFF 		bl	getTotalIntensity
 3282              	.LVL450:
 3283 0062 C34D     		ldr	r5, .L470+32
 277:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3284              		.loc 1 277 0
 3285 0064 C349     		ldr	r1, .L470+36
 276:../Sources/main.c **** 		totalIntensity = getTotalIntensity(LineScanImage0);
 3286              		.loc 1 276 0
 3287 0066 2860     		str	r0, [r5]
 277:../Sources/main.c **** 		TFC_SetLineScanExposureTime(calculateNewExposure(totalIntensity, TARGET_TOTAL_INTENSITY));
 3288              		.loc 1 277 0
 3289 0068 FFF7FEFF 		bl	calculateNewExposure
 3290              	.LVL451:
 3291 006c FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 3292              	.LVL452:
 3293              	.L444:
 283:../Sources/main.c **** 	if (carState->lineDetectionState == LINE_FOUND || carState->lineDetectionState == LINE_TEMPORARILY
 3294              		.loc 1 283 0
 3295 0070 BA78     		ldrb	r2, [r7, #2]
 3296 0072 012A     		cmp	r2, #1
 3297 0074 00D8     		bhi	.LCB2873
 3298 0076 BEE0     		b	.L464	@long jump
 3299              	.LCB2873:
 325:../Sources/main.c **** 	else if (carState->lineDetectionState == LINE_LOST)
 3300              		.loc 1 325 0
 3301 0078 032A     		cmp	r2, #3
 3302 007a 00D1     		bne	.LCB2875
 3303 007c 32E1     		b	.L465	@long jump
 3304              	.LCB2875:
 330:../Sources/main.c **** 	else if (carState->lineDetectionState == STOPLINE_DETECTED)
 3305              		.loc 1 330 0
 3306 007e 022A     		cmp	r2, #2
 3307 0080 05D0     		beq	.L466
 3308              	.LVL453:
 3309              	.L429:
 367:../Sources/main.c **** }
 3310              		.loc 1 367 0
 3311              		@ sp needed for prologue
 3312 0082 3CBC     		pop	{r2, r3, r4, r5}
 3313 0084 9046     		mov	r8, r2
 3314 0086 9946     		mov	r9, r3
 3315 0088 A246     		mov	sl, r4
 3316 008a AB46     		mov	fp, r5
 3317 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3318              	.LVL454:
 3319              	.L466:
 332:../Sources/main.c **** 		if(stopline_enable == 1)
 3320              		.loc 1 332 0
 3321 008e B64F     		ldr	r7, .L470+24
 3322              	.LVL455:
 3323 0090 3B78     		ldrb	r3, [r7]
 3324 0092 012B     		cmp	r3, #1
 3325 0094 F5D1     		bne	.L429
 3326              	.LBB28:
 337:../Sources/main.c **** 			if(stoplineJustDetected == 0)
 3327              		.loc 1 337 0
 3328 0096 B848     		ldr	r0, .L470+40
 3329 0098 0678     		ldrb	r6, [r0]
 3330 009a 002E     		cmp	r6, #0
 3331 009c 00D0     		beq	.LCB2904
 3332 009e 2DE1     		b	.L451	@long jump
 3333              	.LCB2904:
 3334              	.LBB29:
 340:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3335              		.loc 1 340 0
 3336 00a0 6269     		ldr	r2, [r4, #20]
 339:../Sources/main.c **** 				stoplineJustDetected = 1;
 3337              		.loc 1 339 0
 3338 00a2 0370     		strb	r3, [r0]
 340:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3339              		.loc 1 340 0
 3340 00a4 B54F     		ldr	r7, .L470+44
 343:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3341              		.loc 1 343 0
 3342 00a6 B64B     		ldr	r3, .L470+48
 3343 00a8 B64E     		ldr	r6, .L470+52
 340:../Sources/main.c **** 				stoplineDetectedMoment = TFC_Ticker[5];
 3344              		.loc 1 340 0
 3345 00aa 3A60     		str	r2, [r7]
 3346              	.LVL456:
 343:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3347              		.loc 1 343 0
 3348 00ac 1868     		ldr	r0, [r3]
 3349 00ae 3168     		ldr	r1, [r6]
 3350 00b0 FC24     		mov	r4, #252
 3351 00b2 FFF7FEFF 		bl	__aeabi_fadd
 3352              	.LVL457:
 3353 00b6 A105     		lsl	r1, r4, #22
 3354 00b8 FFF7FEFF 		bl	__aeabi_fmul
 3355              	.LVL458:
 345:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3356              		.loc 1 345 0
 3357 00bc B249     		ldr	r1, .L470+56
 343:../Sources/main.c **** 				float lastSpeed = ((speedL+speedR)/2);
 3358              		.loc 1 343 0
 3359 00be 071C     		add	r7, r0, #0
 3360              	.LVL459:
 345:../Sources/main.c **** 				if(lastSpeed < 10.0f)
 3361              		.loc 1 345 0
 3362 00c0 FFF7FEFF 		bl	__aeabi_fcmplt
 3363              	.LVL460:
 3364 00c4 0028     		cmp	r0, #0
 3365 00c6 00D1     		bne	.LCB2928
 3366 00c8 3DE1     		b	.L467	@long jump
 3367              	.LCB2928:
 347:../Sources/main.c **** 					lookAhead = lookAhead + 0.25f;
 3368              		.loc 1 347 0
 3369 00ca B04D     		ldr	r5, .L470+60
 3370              	.L452:
 3371              	.LVL461:
 350:../Sources/main.c **** 				stopDelayTime = (uint32_t)(((lookAhead)/(lastSpeed*3.1416f/20.0f))*10000);
 3372              		.loc 1 350 0
 3373 00cc B049     		ldr	r1, .L470+64
 3374 00ce 381C     		add	r0, r7, #0
 3375 00d0 FFF7FEFF 		bl	__aeabi_fmul
 3376              	.LVL462:
 3377 00d4 AF49     		ldr	r1, .L470+68
 3378 00d6 FFF7FEFF 		bl	__aeabi_fdiv
 3379              	.LVL463:
 3380 00da 011C     		add	r1, r0, #0
 3381 00dc 281C     		add	r0, r5, #0
 3382 00de FFF7FEFF 		bl	__aeabi_fdiv
 3383              	.LVL464:
 3384 00e2 AD49     		ldr	r1, .L470+72
 3385 00e4 FFF7FEFF 		bl	__aeabi_fmul
 3386              	.LVL465:
 3387 00e8 FFF7FEFF 		bl	__aeabi_f2uiz
 3388              	.LVL466:
 3389 00ec AB49     		ldr	r1, .L470+76
 3390 00ee 0860     		str	r0, [r1]
 3391 00f0 C7E7     		b	.L429
 3392              	.LVL467:
 3393              	.L462:
 3394              	.LBE29:
 3395              	.LBE28:
 253:../Sources/main.c **** 		TFC_Ticker[0] = 0;
 3396              		.loc 1 253 0
 3397 00f2 0023     		mov	r3, #0
 3398 00f4 2360     		str	r3, [r4]
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3399              		.loc 1 254 0
 3400 00f6 0B25     		mov	r5, #11
 3401 00f8 7857     		ldrsb	r0, [r7, r5]
 3402 00fa 0021     		mov	r1, #0
 3403 00fc A84A     		ldr	r2, .L470+80
 3404 00fe FFF7FEFF 		bl	getDesiredServoValue
 3405              	.LVL468:
 256:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 3406              		.loc 1 256 0
 3407 0102 0021     		mov	r1, #0
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3408              		.loc 1 254 0
 3409 0104 051C     		add	r5, r0, #0
 256:../Sources/main.c **** 		if(servoValue>0){ //to offset not steering left enough
 3410              		.loc 1 256 0
 3411 0106 FFF7FEFF 		bl	__aeabi_fcmpgt
 3412              	.LVL469:
 3413 010a 0028     		cmp	r0, #0
 3414 010c 00D1     		bne	.LCB2973
 3415 010e F2E0     		b	.L468	@long jump
 3416              	.LCB2973:
 257:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 3417              		.loc 1 257 0
 3418 0110 281C     		add	r0, r5, #0
 3419 0112 A449     		ldr	r1, .L470+84
 3420 0114 FFF7FEFF 		bl	__aeabi_fmul
 3421              	.LVL470:
 3422 0118 011C     		add	r1, r0, #0
 3423 011a 281C     		add	r0, r5, #0
 3424 011c FFF7FEFF 		bl	__aeabi_fadd
 3425              	.LVL471:
 3426 0120 051C     		add	r5, r0, #0
 258:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 3427              		.loc 1 258 0
 3428 0122 A148     		ldr	r0, .L470+88
 3429 0124 8246     		mov	sl, r0
 3430 0126 5146     		mov	r1, sl
 3431 0128 281C     		add	r0, r5, #0
 3432 012a FFF7FEFF 		bl	__aeabi_fcmpgt
 3433              	.LVL472:
 260:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 3434              		.loc 1 260 0
 3435 012e 9F4E     		ldr	r6, .L470+92
 258:../Sources/main.c **** 				if(servoValue>STEERING_LIMIT_UPPER)
 3436              		.loc 1 258 0
 3437 0130 0028     		cmp	r0, #0
 3438 0132 53D1     		bne	.L443
 257:../Sources/main.c **** 				servoValue+=servoValue*0.3f; //
 3439              		.loc 1 257 0
 3440 0134 3560     		str	r5, [r6]
 3441              	.L442:
 265:../Sources/main.c **** 		TFC_SetServo(0, servoValue - SERVO_MOUNT_DIRECTION*STEERING_OFFSET);
 3442              		.loc 1 265 0
 3443 0136 291C     		add	r1, r5, #0
 3444 0138 0020     		mov	r0, #0
 3445 013a FFF7FEFF 		bl	TFC_SetServo
 3446              	.LVL473:
 3447              	.LBB33:
 3448              	.LBB34:
 692:../Sources/main.c **** 
 693:../Sources/main.c **** void processRaceLine(carState_s* carState)
 694:../Sources/main.c **** {
 695:../Sources/main.c **** 	if(s_mode_enable)
 696:../Sources/main.c **** 	{	
 697:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 698:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 699:../Sources/main.c **** 				&& carState->crossSection == NO)
 700:../Sources/main.c **** 		{
 701:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 702:../Sources/main.c **** 			{
 703:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 704:../Sources/main.c **** 			}
 705:../Sources/main.c **** 		}
 706:../Sources/main.c **** 		else
 707:../Sources/main.c **** 		{
 708:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 709:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 710:../Sources/main.c **** 		}
 711:../Sources/main.c **** 	}
 712:../Sources/main.c **** 	
 713:../Sources/main.c **** 	static float previousRaceLine = 0;
 714:../Sources/main.c **** 	
 715:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 716:../Sources/main.c **** 	{
 717:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 718:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 719:../Sources/main.c **** 	}
 720:../Sources/main.c **** 	else
 721:../Sources/main.c **** 	{
 722:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 723:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 724:../Sources/main.c **** 	}
 725:../Sources/main.c **** }
 726:../Sources/main.c **** 
 727:../Sources/main.c **** float targetSpeedAverage(float targetSpeed)
 728:../Sources/main.c **** {
 729:../Sources/main.c **** 	static float previousTargetSpeed = 0;
 730:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 731:../Sources/main.c **** 	return previousTargetSpeed;
 732:../Sources/main.c **** }
 733:../Sources/main.c **** 
 734:../Sources/main.c **** float servoValueAverage(float servoValue)
 735:../Sources/main.c **** {
 736:../Sources/main.c **** 	static float previousServoValue = 0;
 737:../Sources/main.c **** 	previousServoValue = SERVO_LOWPASS_COEFF*previousServoValue + (1-SERVO_LOWPASS_COEFF)*servoValue;
 3449              		.loc 1 737 0
 3450 013e 9C4D     		ldr	r5, .L470+96
 3451 0140 9C49     		ldr	r1, .L470+100
 3452 0142 2868     		ldr	r0, [r5]
 3453 0144 FFF7FEFF 		bl	__aeabi_fmul
 3454              	.LVL474:
 3455 0148 9B49     		ldr	r1, .L470+104
 3456 014a 8346     		mov	fp, r0
 3457 014c 3068     		ldr	r0, [r6]
 3458              	.LVL475:
 3459 014e FFF7FEFF 		bl	__aeabi_fmul
 3460              	.LVL476:
 3461 0152 011C     		add	r1, r0, #0
 3462 0154 5846     		mov	r0, fp
 3463 0156 FFF7FEFF 		bl	__aeabi_fadd
 3464              	.LVL477:
 3465 015a 2860     		str	r0, [r5]
 3466              	.LBE34:
 3467              	.LBE33:
 266:../Sources/main.c **** 		servoValue = servoValueAverage(servoValue);		// Low-pass of servoValue to be used for the radius 
 3468              		.loc 1 266 0
 3469 015c 3060     		str	r0, [r6]
 3470 015e 72E7     		b	.L440
 3471              	.L461:
 244:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3472              		.loc 1 244 0
 3473 0160 8F4A     		ldr	r2, .L470+80
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3474              		.loc 1 246 0
 3475 0162 8248     		ldr	r0, .L470+28
 3476 0164 9549     		ldr	r1, .L470+108
 244:../Sources/main.c **** 		steeringControlUpdate = LINESCAN_IMAGE_READY;	
 3477              		.loc 1 244 0
 3478 0166 1370     		strb	r3, [r2]
 246:../Sources/main.c **** 		findLine(LineScanImage0, LineScanImage1, carState);
 3479              		.loc 1 246 0
 3480 0168 0068     		ldr	r0, [r0]
 3481 016a 0968     		ldr	r1, [r1]
 3482 016c 3A1C     		mov	r2, r7
 3483 016e FFF7FEFF 		bl	findLine
 3484              	.LVL478:
 3485              	.LBB35:
 3486              	.LBB36:
 695:../Sources/main.c **** 	if(s_mode_enable)
 3487              		.loc 1 695 0
 3488 0172 934D     		ldr	r5, .L470+112
 3489 0174 2E78     		ldrb	r6, [r5]
 3490 0176 002E     		cmp	r6, #0
 3491 0178 1FD1     		bne	.L434
 3492 017a 7D7A     		ldrb	r5, [r7, #9]
 3493 017c BB7A     		ldrb	r3, [r7, #10]
 3494              	.L435:
 715:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 3495              		.loc 1 715 0
 3496 017e 012D     		cmp	r5, #1
 3497 0180 00D1     		bne	.LCB3051
 3498 0182 33E1     		b	.L469	@long jump
 3499              	.LCB3051:
 3500              	.L439:
 722:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 3501              		.loc 1 722 0
 3502 0184 FB72     		strb	r3, [r7, #11]
 723:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 3503              		.loc 1 723 0
 3504 0186 58B2     		sxtb	r0, r3
 3505 0188 FFF7FEFF 		bl	__aeabi_i2f
 3506              	.LVL479:
 3507 018c 8D4B     		ldr	r3, .L470+116
 3508 018e 1860     		str	r0, [r3]
 3509 0190 56E7     		b	.L433
 3510              	.LVL480:
 3511              	.L460:
 3512              	.LBE36:
 3513              	.LBE35:
 220:../Sources/main.c **** 		TFC_Ticker[4] = 0;
 3514              		.loc 1 220 0
 3515 0192 0020     		mov	r0, #0
 3516 0194 2061     		str	r0, [r4, #16]
 221:../Sources/main.c **** 		telemetrySendData();
 3517              		.loc 1 221 0
 3518 0196 FFF7FEFF 		bl	telemetrySendData
 3519              	.LVL481:
 222:../Sources/main.c **** 		telemetryReadData();
 3520              		.loc 1 222 0
 3521 019a FFF7FEFF 		bl	telemetryReadData
 3522              	.LVL482:
 3523 019e 46E7     		b	.L432
 3524              	.L459:
 213:../Sources/main.c **** 		TFC_Ticker[6] = 0;
 3525              		.loc 1 213 0
 3526 01a0 0026     		mov	r6, #0
 3527 01a2 A661     		str	r6, [r4, #24]
 214:../Sources/main.c **** 		batteryLevel = TFC_ReadBatteryVoltage();
 3528              		.loc 1 214 0
 3529 01a4 FFF7FEFF 		bl	TFC_ReadBatteryVoltage
 3530              	.LVL483:
 3531 01a8 874A     		ldr	r2, .L470+120
 3532 01aa 1060     		str	r0, [r2]
 3533 01ac 3BE7     		b	.L431
 3534              	.L458:
 207:../Sources/main.c **** 		stoplineJustDetected = 0;
 3535              		.loc 1 207 0
 3536 01ae 724B     		ldr	r3, .L470+40
 3537 01b0 0022     		mov	r2, #0
 208:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3538              		.loc 1 208 0
 3539 01b2 0320     		mov	r0, #3
 207:../Sources/main.c **** 		stoplineJustDetected = 0;
 3540              		.loc 1 207 0
 3541 01b4 1A70     		strb	r2, [r3]
 208:../Sources/main.c **** 		carState->lineDetectionState = LINE_LOST;
 3542              		.loc 1 208 0
 3543 01b6 B870     		strb	r0, [r7, #2]
 3544 01b8 2FE7     		b	.L430
 3545              	.LVL484:
 3546              	.L434:
 3547              	.LBB40:
 3548              	.LBB37:
 697:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 3549              		.loc 1 697 0
 3550 01ba BB7A     		ldrb	r3, [r7, #10]
 3551 01bc 5DB2     		sxtb	r5, r3
 3552 01be 092D     		cmp	r5, #9
 3553 01c0 14DC     		bgt	.L436
 698:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 3554              		.loc 1 698 0
 3555 01c2 3A7B     		ldrb	r2, [r7, #12]
 3556 01c4 462A     		cmp	r2, #70
 3557 01c6 11D9     		bls	.L436
 699:../Sources/main.c **** 				&& carState->crossSection == NO)
 3558              		.loc 1 699 0
 3559 01c8 B879     		ldrb	r0, [r7, #6]
 3560 01ca 0028     		cmp	r0, #0
 3561 01cc 0ED1     		bne	.L436
 701:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 3562              		.loc 1 701 0
 3563 01ce E669     		ldr	r6, [r4, #28]
 3564 01d0 7E4A     		ldr	r2, .L470+124
 3565 01d2 9642     		cmp	r6, r2
 3566 01d4 00D9     		bls	.LCB3113
 3567 01d6 23E1     		b	.L437	@long jump
 3568              	.LCB3113:
 3569 01d8 7D7A     		ldrb	r5, [r7, #9]
 3570 01da D0E7     		b	.L435
 3571              	.LVL485:
 3572              	.L443:
 3573              	.LBE37:
 3574              	.LBE40:
 260:../Sources/main.c **** 					servoValue=STEERING_LIMIT_UPPER;
 3575              		.loc 1 260 0
 3576 01dc 5146     		mov	r1, sl
 3577 01de 3160     		str	r1, [r6]
 3578 01e0 5546     		mov	r5, sl
 3579 01e2 A8E7     		b	.L442
 3580              	.L463:
 274:../Sources/main.c **** 			findStop(carState);
 3581              		.loc 1 274 0
 3582 01e4 381C     		mov	r0, r7
 3583 01e6 FFF7FEFF 		bl	findStop
 3584              	.LVL486:
 3585 01ea 36E7     		b	.L445
 3586              	.LVL487:
 3587              	.L436:
 3588              	.LBB41:
 3589              	.LBB38:
 708:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 3590              		.loc 1 708 0
 3591 01ec 0021     		mov	r1, #0
 3592 01ee 7972     		strb	r1, [r7, #9]
 709:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 3593              		.loc 1 709 0
 3594 01f0 E161     		str	r1, [r4, #28]
 3595 01f2 BB7A     		ldrb	r3, [r7, #10]
 3596 01f4 C6E7     		b	.L439
 3597              	.LVL488:
 3598              	.L464:
 3599              	.LBE38:
 3600              	.LBE41:
 3601              	.LBB42:
 285:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3602              		.loc 1 285 0
 3603 01f6 6D4E     		ldr	r6, .L470+92
 3604 01f8 3068     		ldr	r0, [r6]
 3605 01fa FFF7FEFF 		bl	getRadiusRoot
 3606              	.LVL489:
 3607 01fe 7449     		ldr	r1, .L470+128
 3608 0200 021C     		add	r2, r0, #0
 3609 0202 381C     		mov	r0, r7
 3610 0204 FFF7FEFF 		bl	getDesiredSpeed
 3611              	.LVL490:
 3612              	.LBB43:
 3613              	.LBB44:
 730:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3614              		.loc 1 730 0
 3615 0208 724C     		ldr	r4, .L470+132
 3616              	.LBE44:
 3617              	.LBE43:
 285:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3618              		.loc 1 285 0
 3619 020a 8046     		mov	r8, r0
 3620              	.LVL491:
 3621              	.LBB47:
 3622              	.LBB45:
 730:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3623              		.loc 1 730 0
 3624 020c 7249     		ldr	r1, .L470+136
 3625 020e 2068     		ldr	r0, [r4]
 3626              	.LVL492:
 3627 0210 FFF7FEFF 		bl	__aeabi_fmul
 3628              	.LVL493:
 3629 0214 FFF7FEFF 		bl	__aeabi_f2d
 3630              	.LVL494:
 3631 0218 A246     		mov	sl, r4
 3632 021a 041C     		mov	r4, r0
 3633 021c 4046     		mov	r0, r8
 3634 021e 0D1C     		mov	r5, r1
 3635 0220 FFF7FEFF 		bl	__aeabi_f2d
 3636              	.LVL495:
 3637 0224 4B4B     		ldr	r3, .L470+4
 3638 0226 4A4A     		ldr	r2, .L470
 3639 0228 FFF7FEFF 		bl	__aeabi_dmul
 3640              	.LVL496:
 3641 022c 021C     		mov	r2, r0
 3642 022e 0B1C     		mov	r3, r1
 3643 0230 201C     		mov	r0, r4
 3644 0232 291C     		mov	r1, r5
 3645 0234 FFF7FEFF 		bl	__aeabi_dadd
 3646              	.LVL497:
 3647 0238 FFF7FEFF 		bl	__aeabi_d2f
 3648              	.LVL498:
 3649              	.LBE45:
 3650              	.LBE47:
 285:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3651              		.loc 1 285 0
 3652 023c 674C     		ldr	r4, .L470+140
 3653              	.LBB48:
 3654              	.LBB46:
 730:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 3655              		.loc 1 730 0
 3656 023e 5146     		mov	r1, sl
 3657 0240 0860     		str	r0, [r1]
 3658              	.LBE46:
 3659              	.LBE48:
 285:../Sources/main.c **** 		targetSpeed = targetSpeedAverage(getDesiredSpeed(carState, ((500 + 1.0f)/2), getRadiusRoot(servoV
 3660              		.loc 1 285 0
 3661 0242 2060     		str	r0, [r4]
 288:../Sources/main.c **** 			{ getActiveDifferentialModifier(servoValue, CHANNEL_0), getActiveDifferentialModifier(servoValue
 3662              		.loc 1 288 0
 3663 0244 0021     		mov	r1, #0
 3664 0246 3068     		ldr	r0, [r6]
 3665 0248 FFF7FEFF 		bl	getActiveDifferentialModifier
 3666              	.LVL499:
 3667 024c 0121     		mov	r1, #1
 3668 024e 8346     		mov	fp, r0
 3669              	.LVL500:
 3670 0250 3068     		ldr	r0, [r6]
 3671              	.LVL501:
 3672 0252 FFF7FEFF 		bl	getActiveDifferentialModifier
 3673              	.LVL502:
 3674 0256 8246     		mov	sl, r0
 3675              	.LVL503:
 292:../Sources/main.c **** 			speedR = getSpeed(CHANNEL_0);
 3676              		.loc 1 292 0
 3677 0258 0020     		mov	r0, #0
 3678              	.LVL504:
 3679 025a FFF7FEFF 		bl	getSpeed
 3680              	.LVL505:
 3681 025e 494E     		ldr	r6, .L470+52
 3682 0260 3060     		str	r0, [r6]
 293:../Sources/main.c **** 			speedL = getSpeed(CHANNEL_1);
 3683              		.loc 1 293 0
 3684 0262 0120     		mov	r0, #1
 3685 0264 FFF7FEFF 		bl	getSpeed
 3686              	.LVL506:
 3687 0268 454D     		ldr	r5, .L470+48
 3688 026a 2860     		str	r0, [r5]
 305:../Sources/main.c **** 		if (carState->UARTSpeedState == DUAL_SPEED_NO_UART)
 3689              		.loc 1 305 0
 3690 026c 7F78     		ldrb	r7, [r7, #1]
 3691              	.LVL507:
 3692 026e 012F     		cmp	r7, #1
 3693 0270 00D0     		beq	.LCB3236
 3694 0272 06E7     		b	.L429	@long jump
 3695              	.LCB3236:
 316:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[0], speedR, is
 3696              		.loc 1 316 0
 3697 0274 4846     		mov	r0, r9
 3698 0276 0068     		ldr	r0, [r0]
 3699 0278 5949     		ldr	r1, .L470+144
 3700 027a FFF7FEFF 		bl	__aeabi_fdiv
 3701              	.LVL508:
 3702 027e 2168     		ldr	r1, [r4]
 3703 0280 8046     		mov	r8, r0
 3704              	.LVL509:
 3705 0282 5846     		mov	r0, fp
 3706 0284 FFF7FEFF 		bl	__aeabi_fmul
 3707              	.LVL510:
 3708 0288 071C     		add	r7, r0, #0
 3709 028a 0020     		mov	r0, #0
 3710 028c 3668     		ldr	r6, [r6]
 3711 028e FFF7FEFF 		bl	isANewmeasurementAvailable
 3712              	.LVL511:
 3713 0292 0023     		mov	r3, #0
 3714 0294 021C     		mov	r2, r0
 3715 0296 311C     		add	r1, r6, #0
 3716 0298 381C     		add	r0, r7, #0
 3717 029a FFF7FEFF 		bl	getDesiredMotorPWM
 3718              	.LVL512:
 3719 029e 011C     		add	r1, r0, #0
 315:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3720              		.loc 1 315 0
 3721 02a0 4046     		mov	r0, r8
 3722 02a2 FFF7FEFF 		bl	__aeabi_fmul
 3723              	.LVL513:
 317:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3724              		.loc 1 317 0
 3725 02a6 4A46     		mov	r2, r9
 315:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3726              		.loc 1 315 0
 3727 02a8 061C     		add	r6, r0, #0
 317:../Sources/main.c **** 					(incline_speed/100)*getDesiredMotorPWM(targetSpeed * activeDifferentialModifier[1], speedL, is
 3728              		.loc 1 317 0
 3729 02aa 4D49     		ldr	r1, .L470+144
 3730 02ac 1068     		ldr	r0, [r2]
 3731 02ae FFF7FEFF 		bl	__aeabi_fdiv
 3732              	.LVL514:
 3733 02b2 2168     		ldr	r1, [r4]
 3734 02b4 071C     		add	r7, r0, #0
 3735 02b6 5046     		mov	r0, sl
 3736 02b8 FFF7FEFF 		bl	__aeabi_fmul
 3737              	.LVL515:
 3738 02bc 8146     		mov	r9, r0
 3739 02be 0120     		mov	r0, #1
 3740 02c0 2C68     		ldr	r4, [r5]
 3741 02c2 FFF7FEFF 		bl	isANewmeasurementAvailable
 3742              	.LVL516:
 3743 02c6 211C     		add	r1, r4, #0
 3744 02c8 021C     		mov	r2, r0
 3745 02ca 0123     		mov	r3, #1
 3746 02cc 4846     		mov	r0, r9
 3747 02ce FFF7FEFF 		bl	getDesiredMotorPWM
 3748              	.LVL517:
 3749 02d2 011C     		add	r1, r0, #0
 315:../Sources/main.c **** 			TFC_SetMotorPWM( //(max_speed_percent/100)
 3750              		.loc 1 315 0
 3751 02d4 381C     		add	r0, r7, #0
 3752 02d6 FFF7FEFF 		bl	__aeabi_fmul
 3753              	.LVL518:
 3754 02da 011C     		add	r1, r0, #0
 3755 02dc 301C     		add	r0, r6, #0
 3756 02de FFF7FEFF 		bl	TFC_SetMotorPWM
 3757              	.LVL519:
 3758 02e2 CEE6     		b	.L429
 3759              	.LVL520:
 3760              	.L465:
 3761              	.LBE42:
 327:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 3762              		.loc 1 327 0
 3763 02e4 8020     		mov	r0, #128
 3764 02e6 3F4B     		ldr	r3, .L470+148
 3765 02e8 8203     		lsl	r2, r0, #14
 328:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 3766              		.loc 1 328 0
 3767 02ea 0020     		mov	r0, #0
 327:../Sources/main.c **** 		TFC_HBRIDGE_DISABLE;
 3768              		.loc 1 327 0
 3769 02ec 9A60     		str	r2, [r3, #8]
 328:../Sources/main.c **** 		TFC_SetMotorPWM(0, 0);
 3770              		.loc 1 328 0
 3771 02ee 011C     		add	r1, r0, #0
 3772 02f0 FFF7FEFF 		bl	TFC_SetMotorPWM
 3773              	.LVL521:
 3774 02f4 C5E6     		b	.L429
 3775              	.L468:
 254:../Sources/main.c **** 		servoValue = getDesiredServoValue(carState->raceLineCenter, 0, &steeringControlUpdate);
 3776              		.loc 1 254 0
 3777 02f6 2D4E     		ldr	r6, .L470+92
 3778 02f8 3560     		str	r5, [r6]
 3779 02fa 1CE7     		b	.L442
 3780              	.LVL522:
 3781              	.L451:
 3782              	.LBB49:
 352:../Sources/main.c **** 			else if((TFC_Ticker[5] - stoplineDetectedMoment) >= stopDelayTime)
 3783              		.loc 1 352 0
 3784 02fc 1F49     		ldr	r1, .L470+44
 3785 02fe 274F     		ldr	r7, .L470+76
 3786 0300 6469     		ldr	r4, [r4, #20]
 3787 0302 0D68     		ldr	r5, [r1]
 3788 0304 3B68     		ldr	r3, [r7]
 3789 0306 621B     		sub	r2, r4, r5
 3790 0308 9A42     		cmp	r2, r3
 3791 030a 00D2     		bcs	.LCB3330
 3792 030c B9E6     		b	.L429	@long jump
 3793              	.LCB3330:
 3794              	.LBB30:
 354:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3795              		.loc 1 354 0
 3796 030e 0020     		mov	r0, #0
 3797 0310 FFF7FEFF 		bl	getSpeed
 3798              	.LVL523:
 3799 0314 061C     		add	r6, r0, #0
 3800              	.LVL524:
 3801 0316 0120     		mov	r0, #1
 3802              	.LVL525:
 3803 0318 FFF7FEFF 		bl	getSpeed
 3804              	.LVL526:
 356:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3805              		.loc 1 356 0
 3806 031c 8021     		mov	r1, #128
 354:../Sources/main.c **** 				float speedMeasurement[] = { getSpeed(CHANNEL_0), getSpeed(CHANNEL_1) };
 3807              		.loc 1 354 0
 3808 031e 041C     		add	r4, r0, #0
 3809              	.LVL527:
 356:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3810              		.loc 1 356 0
 3811 0320 C905     		lsl	r1, r1, #23
 3812 0322 301C     		add	r0, r6, #0
 3813              	.LVL528:
 3814 0324 FFF7FEFF 		bl	__aeabi_fcmpgt
 3815              	.LVL529:
 3816 0328 0028     		cmp	r0, #0
 3817 032a 06D1     		bne	.L453
 356:../Sources/main.c **** 				if (speedMeasurement[0] > 2.0f || speedMeasurement[1] > 2.0f)
 3818              		.loc 1 356 0 is_stmt 0
 3819 032c 8025     		mov	r5, #128
 3820 032e 201C     		add	r0, r4, #0
 3821 0330 E905     		lsl	r1, r5, #23
 3822 0332 FFF7FEFF 		bl	__aeabi_fcmpgt
 3823              	.LVL530:
 3824 0336 0028     		cmp	r0, #0
 3825 0338 75D0     		beq	.L457
 3826              	.L453:
 358:../Sources/main.c **** 					TFC_SetMotorPWM(-0.5f, -0.5f);
 3827              		.loc 1 358 0 is_stmt 1
 3828 033a BF20     		mov	r0, #191
 3829 033c 0006     		lsl	r0, r0, #24
 3830 033e 011C     		add	r1, r0, #0
 3831 0340 FFF7FEFF 		bl	TFC_SetMotorPWM
 3832              	.LVL531:
 3833 0344 9DE6     		b	.L429
 3834              	.LVL532:
 3835              	.L467:
 3836              	.LBE30:
 3837              	.LBB31:
 342:../Sources/main.c **** 				float lookAhead = LOOK_AHEAD_DISTANCE;
 3838              		.loc 1 342 0
 3839 0346 284D     		ldr	r5, .L470+152
 3840 0348 C0E6     		b	.L452
 3841              	.L471:
 3842 034a C046C046 		.align	3
 3842      C046
 3843              	.L470:
 3844 0350 9A999999 		.word	-1717986918
 3845 0354 9999B93F 		.word	1069128089
 3846 0358 00000000 		.word	TFC_Ticker
 3847 035c E7030000 		.word	999
 3848 0360 00000000 		.word	.LANCHOR7
 3849 0364 00000000 		.word	incline_speed
 3850 0368 00000000 		.word	.LANCHOR16
 3851 036c 00000000 		.word	LineScanImage0
 3852 0370 00000000 		.word	.LANCHOR17
 3853 0374 E0930400 		.word	300000
 3854 0378 00000000 		.word	.LANCHOR11
 3855 037c 00000000 		.word	.LANCHOR21
 3856 0380 00000000 		.word	.LANCHOR20
 3857 0384 00000000 		.word	.LANCHOR19
 3858 0388 00002041 		.word	1092616192
 3859 038c 6666263F 		.word	1059481190
 3860 0390 F90F4940 		.word	1078530041
 3861 0394 0000A041 		.word	1101004800
 3862 0398 00401C46 		.word	1176256512
 3863 039c 00000000 		.word	.LANCHOR22
 3864 03a0 00000000 		.word	.LANCHOR12
 3865 03a4 9A99993E 		.word	1050253722
 3866 03a8 F628DC3E 		.word	1054615798
 3867 03ac 00000000 		.word	.LANCHOR5
 3868 03b0 00000000 		.word	.LANCHOR15
 3869 03b4 CDCC4C3F 		.word	1061997773
 3870 03b8 CCCC4C3E 		.word	1045220556
 3871 03bc 00000000 		.word	LineScanImage1
 3872 03c0 00000000 		.word	.LANCHOR13
 3873 03c4 00000000 		.word	.LANCHOR14
 3874 03c8 00000000 		.word	.LANCHOR3
 3875 03cc 94110000 		.word	4500
 3876 03d0 00807A43 		.word	1132101632
 3877 03d4 00000000 		.word	.LANCHOR18
 3878 03d8 6666663F 		.word	1063675494
 3879 03dc 00000000 		.word	.LANCHOR4
 3880 03e0 0000C842 		.word	1120403456
 3881 03e4 00F10F40 		.word	1074786560
 3882 03e8 CDCCCC3E 		.word	1053609165
 3883              	.LVL533:
 3884              	.L469:
 3885 03ec 5DB2     		sxtb	r5, r3
 3886              	.L438:
 3887              	.LBE31:
 3888              	.LBE49:
 3889              	.LBB50:
 3890              	.LBB39:
 717:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3891              		.loc 1 717 0
 3892 03ee 104E     		ldr	r6, .L472
 3893 03f0 1049     		ldr	r1, .L472+4
 3894 03f2 3068     		ldr	r0, [r6]
 3895 03f4 FFF7FEFF 		bl	__aeabi_fmul
 3896              	.LVL534:
 3897 03f8 8046     		mov	r8, r0
 3898 03fa 281C     		mov	r0, r5
 3899 03fc FFF7FEFF 		bl	__aeabi_i2f
 3900              	.LVL535:
 3901 0400 0D49     		ldr	r1, .L472+8
 3902 0402 FFF7FEFF 		bl	__aeabi_fmul
 3903              	.LVL536:
 3904 0406 011C     		add	r1, r0, #0
 3905 0408 4046     		mov	r0, r8
 3906 040a FFF7FEFF 		bl	__aeabi_fadd
 3907              	.LVL537:
 718:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3908              		.loc 1 718 0
 3909 040e FC21     		mov	r1, #252
 3910 0410 8905     		lsl	r1, r1, #22
 717:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 3911              		.loc 1 717 0
 3912 0412 3060     		str	r0, [r6]
 718:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 3913              		.loc 1 718 0
 3914 0414 FFF7FEFF 		bl	__aeabi_fadd
 3915              	.LVL538:
 3916 0418 FFF7FEFF 		bl	__aeabi_f2uiz
 3917              	.LVL539:
 3918 041c F872     		strb	r0, [r7, #11]
 3919 041e 0FE6     		b	.L433
 3920              	.L437:
 703:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 3921              		.loc 1 703 0
 3922 0420 0120     		mov	r0, #1
 3923 0422 7872     		strb	r0, [r7, #9]
 3924 0424 E3E7     		b	.L438
 3925              	.LVL540:
 3926              	.L457:
 3927              	.LBE39:
 3928              	.LBE50:
 3929              	.LBB51:
 3930              	.LBB32:
 362:../Sources/main.c **** 					TFC_SetMotorPWM(0, 0);
 3931              		.loc 1 362 0
 3932 0426 0020     		mov	r0, #0
 3933 0428 011C     		add	r1, r0, #0
 3934 042a FFF7FEFF 		bl	TFC_SetMotorPWM
 3935              	.LVL541:
 3936 042e 28E6     		b	.L429
 3937              	.L473:
 3938              		.align	2
 3939              	.L472:
 3940 0430 00000000 		.word	.LANCHOR14
 3941 0434 6666663F 		.word	1063675494
 3942 0438 D0CCCC3D 		.word	1036831952
 3943              	.LBE32:
 3944              	.LBE51:
 3945              		.cfi_endproc
 3946              	.LFE1:
 3948 043c C046C046 		.section	.text.processRaceLine,"ax",%progbits
 3949              		.align	2
 3950              		.global	processRaceLine
 3951              		.code	16
 3952              		.thumb_func
 3954              	processRaceLine:
 3955              	.LFB14:
 694:../Sources/main.c **** {
 3956              		.loc 1 694 0
 3957              		.cfi_startproc
 3958              	.LVL542:
 3959 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3960              	.LCFI18:
 3961              		.cfi_def_cfa_offset 24
 3962              		.cfi_offset 3, -24
 3963              		.cfi_offset 4, -20
 3964              		.cfi_offset 5, -16
 3965              		.cfi_offset 6, -12
 3966              		.cfi_offset 7, -8
 3967              		.cfi_offset 14, -4
 695:../Sources/main.c **** 	if(s_mode_enable)
 3968              		.loc 1 695 0
 3969 0002 234B     		ldr	r3, .L484
 694:../Sources/main.c **** {
 3970              		.loc 1 694 0
 3971 0004 041C     		mov	r4, r0
 695:../Sources/main.c **** 	if(s_mode_enable)
 3972              		.loc 1 695 0
 3973 0006 1878     		ldrb	r0, [r3]
 3974              	.LVL543:
 3975 0008 0028     		cmp	r0, #0
 3976 000a 0CD1     		bne	.L475
 3977 000c 617A     		ldrb	r1, [r4, #9]
 3978 000e A67A     		ldrb	r6, [r4, #10]
 3979              	.L476:
 715:../Sources/main.c **** 	if (carState->sMode == S_MODE_ON)
 3980              		.loc 1 715 0
 3981 0010 0129     		cmp	r1, #1
 3982 0012 20D0     		beq	.L482
 3983              	.L480:
 723:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 3984              		.loc 1 723 0
 3985 0014 70B2     		sxtb	r0, r6
 3986 0016 FFF7FEFF 		bl	__aeabi_i2f
 3987              	.LVL544:
 722:../Sources/main.c **** 		carState->raceLineCenter = carState->lineCenter;
 3988              		.loc 1 722 0
 3989 001a 351C     		mov	r5, r6
 3990 001c 1D4E     		ldr	r6, .L484+4
 723:../Sources/main.c **** 		previousRaceLine = (float)carState->lineCenter;
 3991              		.loc 1 723 0
 3992 001e 071C     		add	r7, r0, #0
 3993              	.L481:
 3994 0020 3760     		str	r7, [r6]
 3995 0022 E572     		strb	r5, [r4, #11]
 725:../Sources/main.c **** }
 3996              		.loc 1 725 0
 3997              		@ sp needed for prologue
 3998              	.LVL545:
 3999 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4000              	.LVL546:
 4001              	.L475:
 697:../Sources/main.c **** 		if (carState->lineCenter < S_LINE_THRESHOLD 
 4002              		.loc 1 697 0
 4003 0026 A67A     		ldrb	r6, [r4, #10]
 4004 0028 75B2     		sxtb	r5, r6
 4005 002a 092D     		cmp	r5, #9
 4006 002c 0DDC     		bgt	.L477
 698:../Sources/main.c **** 				&& carState->lineDistance > S_DISTANCE_THRESHOLD
 4007              		.loc 1 698 0
 4008 002e 227B     		ldrb	r2, [r4, #12]
 4009 0030 462A     		cmp	r2, #70
 4010 0032 0AD9     		bls	.L477
 699:../Sources/main.c **** 				&& carState->crossSection == NO)
 4011              		.loc 1 699 0
 4012 0034 A179     		ldrb	r1, [r4, #6]
 4013 0036 0029     		cmp	r1, #0
 4014 0038 07D1     		bne	.L477
 701:../Sources/main.c **** 			if(TFC_Ticker[7] > S_TIME_THRESHOLD)
 4015              		.loc 1 701 0
 4016 003a 174B     		ldr	r3, .L484+8
 4017 003c 174A     		ldr	r2, .L484+12
 4018 003e D869     		ldr	r0, [r3, #28]
 4019 0040 9042     		cmp	r0, r2
 4020 0042 22D9     		bls	.L483
 703:../Sources/main.c **** 				carState->sMode = S_MODE_ON;
 4021              		.loc 1 703 0
 4022 0044 0123     		mov	r3, #1
 4023 0046 6372     		strb	r3, [r4, #9]
 4024 0048 06E0     		b	.L479
 4025              	.L477:
 709:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 4026              		.loc 1 709 0
 4027 004a 134F     		ldr	r7, .L484+8
 708:../Sources/main.c **** 			carState->sMode = S_MODE_OFF;
 4028              		.loc 1 708 0
 4029 004c 0025     		mov	r5, #0
 4030 004e 6572     		strb	r5, [r4, #9]
 709:../Sources/main.c **** 			TFC_Ticker[7] = 0;
 4031              		.loc 1 709 0
 4032 0050 FD61     		str	r5, [r7, #28]
 4033 0052 A67A     		ldrb	r6, [r4, #10]
 4034 0054 DEE7     		b	.L480
 4035              	.L482:
 4036 0056 75B2     		sxtb	r5, r6
 4037              	.L479:
 717:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 4038              		.loc 1 717 0
 4039 0058 0E4E     		ldr	r6, .L484+4
 4040 005a 1149     		ldr	r1, .L484+16
 4041 005c 3068     		ldr	r0, [r6]
 4042 005e FFF7FEFF 		bl	__aeabi_fmul
 4043              	.LVL547:
 4044 0062 071C     		add	r7, r0, #0
 4045 0064 281C     		mov	r0, r5
 4046 0066 FFF7FEFF 		bl	__aeabi_i2f
 4047              	.LVL548:
 4048 006a 0E49     		ldr	r1, .L484+20
 4049 006c FFF7FEFF 		bl	__aeabi_fmul
 4050              	.LVL549:
 4051 0070 011C     		add	r1, r0, #0
 4052 0072 381C     		add	r0, r7, #0
 4053 0074 FFF7FEFF 		bl	__aeabi_fadd
 4054              	.LVL550:
 718:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 4055              		.loc 1 718 0
 4056 0078 FC22     		mov	r2, #252
 4057 007a 9105     		lsl	r1, r2, #22
 717:../Sources/main.c **** 		previousRaceLine = (S_LOWPASS_COEFF*previousRaceLine + (1 - S_LOWPASS_COEFF)*((float)carState->li
 4058              		.loc 1 717 0
 4059 007c 071C     		add	r7, r0, #0
 718:../Sources/main.c **** 		carState->raceLineCenter = (uint8_t)(previousRaceLine + 0.5f);
 4060              		.loc 1 718 0
 4061 007e FFF7FEFF 		bl	__aeabi_fadd
 4062              	.LVL551:
 4063 0082 FFF7FEFF 		bl	__aeabi_f2uiz
 4064              	.LVL552:
 4065 0086 C5B2     		uxtb	r5, r0
 4066 0088 CAE7     		b	.L481
 4067              	.L483:
 4068 008a 617A     		ldrb	r1, [r4, #9]
 4069 008c C0E7     		b	.L476
 4070              	.L485:
 4071 008e C046     		.align	2
 4072              	.L484:
 4073 0090 00000000 		.word	.LANCHOR13
 4074 0094 00000000 		.word	.LANCHOR14
 4075 0098 00000000 		.word	TFC_Ticker
 4076 009c 94110000 		.word	4500
 4077 00a0 6666663F 		.word	1063675494
 4078 00a4 D0CCCC3D 		.word	1036831952
 4079              		.cfi_endproc
 4080              	.LFE14:
 4082              		.section	.text.targetSpeedAverage,"ax",%progbits
 4083              		.align	2
 4084              		.global	targetSpeedAverage
 4085              		.code	16
 4086              		.thumb_func
 4088              	targetSpeedAverage:
 4089              	.LFB15:
 728:../Sources/main.c **** {
 4090              		.loc 1 728 0
 4091              		.cfi_startproc
 4092              	.LVL553:
 4093 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4094              	.LCFI19:
 4095              		.cfi_def_cfa_offset 24
 4096              		.cfi_offset 3, -24
 4097              		.cfi_offset 4, -20
 4098              		.cfi_offset 5, -16
 4099              		.cfi_offset 6, -12
 4100              		.cfi_offset 7, -8
 4101              		.cfi_offset 14, -4
 730:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 4102              		.loc 1 730 0
 4103 0002 0F4E     		ldr	r6, .L487+8
 728:../Sources/main.c **** {
 4104              		.loc 1 728 0
 4105 0004 071C     		add	r7, r0, #0
 730:../Sources/main.c **** 	previousTargetSpeed = 0.9f*previousTargetSpeed + 0.1*targetSpeed;
 4106              		.loc 1 730 0
 4107 0006 0F49     		ldr	r1, .L487+12
 4108 0008 3068     		ldr	r0, [r6]
 4109              	.LVL554:
 4110 000a FFF7FEFF 		bl	__aeabi_fmul
 4111              	.LVL555:
 4112 000e FFF7FEFF 		bl	__aeabi_f2d
 4113              	.LVL556:
 4114 0012 041C     		mov	r4, r0
 4115 0014 381C     		add	r0, r7, #0
 4116 0016 0D1C     		mov	r5, r1
 4117 0018 FFF7FEFF 		bl	__aeabi_f2d
 4118              	.LVL557:
 4119 001c 074B     		ldr	r3, .L487+4
 4120 001e 064A     		ldr	r2, .L487
 4121 0020 FFF7FEFF 		bl	__aeabi_dmul
 4122              	.LVL558:
 4123 0024 021C     		mov	r2, r0
 4124 0026 0B1C     		mov	r3, r1
 4125 0028 201C     		mov	r0, r4
 4126 002a 291C     		mov	r1, r5
 4127 002c FFF7FEFF 		bl	__aeabi_dadd
 4128              	.LVL559:
 4129 0030 FFF7FEFF 		bl	__aeabi_d2f
 4130              	.LVL560:
 4131 0034 3060     		str	r0, [r6]
 732:../Sources/main.c **** }
 4132              		.loc 1 732 0
 4133              		@ sp needed for prologue
 4134              	.LVL561:
 4135 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4136              	.L488:
 4137              		.align	3
 4138              	.L487:
 4139 0038 9A999999 		.word	-1717986918
 4140 003c 9999B93F 		.word	1069128089
 4141 0040 00000000 		.word	.LANCHOR18
 4142 0044 6666663F 		.word	1063675494
 4143              		.cfi_endproc
 4144              	.LFE15:
 4146              		.section	.text.servoValueAverage,"ax",%progbits
 4147              		.align	2
 4148              		.global	servoValueAverage
 4149              		.code	16
 4150              		.thumb_func
 4152              	servoValueAverage:
 4153              	.LFB16:
 735:../Sources/main.c **** {
 4154              		.loc 1 735 0
 4155              		.cfi_startproc
 4156              	.LVL562:
 4157 0000 70B5     		push	{r4, r5, r6, lr}
 4158              	.LCFI20:
 4159              		.cfi_def_cfa_offset 16
 4160              		.cfi_offset 4, -16
 4161              		.cfi_offset 5, -12
 4162              		.cfi_offset 6, -8
 4163              		.cfi_offset 14, -4
 4164              		.loc 1 737 0
 4165 0002 084C     		ldr	r4, .L490
 735:../Sources/main.c **** {
 4166              		.loc 1 735 0
 4167 0004 061C     		add	r6, r0, #0
 4168              		.loc 1 737 0
 4169 0006 0849     		ldr	r1, .L490+4
 4170 0008 2068     		ldr	r0, [r4]
 4171              	.LVL563:
 4172 000a FFF7FEFF 		bl	__aeabi_fmul
 4173              	.LVL564:
 4174 000e 0749     		ldr	r1, .L490+8
 4175 0010 051C     		add	r5, r0, #0
 4176 0012 301C     		add	r0, r6, #0
 4177 0014 FFF7FEFF 		bl	__aeabi_fmul
 4178              	.LVL565:
 4179 0018 011C     		add	r1, r0, #0
 4180 001a 281C     		add	r0, r5, #0
 4181 001c FFF7FEFF 		bl	__aeabi_fadd
 4182              	.LVL566:
 4183 0020 2060     		str	r0, [r4]
 738:../Sources/main.c **** 	return previousServoValue;
 739:../Sources/main.c **** }
 4184              		.loc 1 739 0
 4185              		@ sp needed for prologue
 4186              	.LVL567:
 4187 0022 70BD     		pop	{r4, r5, r6, pc}
 4188              	.L491:
 4189              		.align	2
 4190              	.L490:
 4191 0024 00000000 		.word	.LANCHOR15
 4192 0028 CDCC4C3F 		.word	1061997773
 4193 002c CCCC4C3E 		.word	1045220556
 4194              		.cfi_endproc
 4195              	.LFE16:
 4197              		.global	test_time
 4198              		.global	test_begin
 4199              		.global	stopline_enable
 4200              		.global	cross_section_enable
 4201              		.global	s_mode_enable
 4202              		.comm	camera_output,128,4
 4203              		.global	i
 4204              		.global	friction_correct
 4205              		.global	count
 4206              		.global	received_byte2
 4207              		.global	received_byte1
 4208              		.global	max_speed_percent
 4209              		.global	speedR
 4210              		.global	speedL
 4211              		.comm	incline_speed,4,4
 4212              		.global	batteryLevel
 4213              		.global	loop_begin
 4214              		.global	loop_time
 4215              		.section	.bss.count,"aw",%nobits
 4216              		.set	.LANCHOR8,. + 0
 4219              	count:
 4220 0000 00       		.space	1
 4221              		.section	.bss.stopDelayTime.6149,"aw",%nobits
 4222              		.align	2
 4223              		.set	.LANCHOR22,. + 0
 4226              	stopDelayTime.6149:
 4227 0000 00000000 		.space	4
 4228              		.section	.bss.totalIntensity.6146,"aw",%nobits
 4229              		.align	2
 4230              		.set	.LANCHOR17,. + 0
 4233              	totalIntensity.6146:
 4234 0000 00000000 		.space	4
 4235              		.section	.bss.loop_time,"aw",%nobits
 4236              		.align	1
 4237              		.set	.LANCHOR6,. + 0
 4240              	loop_time:
 4241 0000 0000     		.space	2
 4242              		.section	.bss.previousTargetSpeed.6211,"aw",%nobits
 4243              		.align	2
 4244              		.set	.LANCHOR18,. + 0
 4247              	previousTargetSpeed.6211:
 4248 0000 00000000 		.space	4
 4249              		.section	.bss.loop_begin,"aw",%nobits
 4250              		.align	1
 4253              	loop_begin:
 4254 0000 0000     		.space	2
 4255              		.section	.bss.speedL,"aw",%nobits
 4256              		.align	2
 4257              		.set	.LANCHOR20,. + 0
 4260              	speedL:
 4261 0000 00000000 		.space	4
 4262              		.section	.bss.stopline_enable,"aw",%nobits
 4263              		.set	.LANCHOR16,. + 0
 4266              	stopline_enable:
 4267 0000 00       		.space	1
 4268              		.section	.bss.batteryLevel,"aw",%nobits
 4269              		.align	2
 4270              		.set	.LANCHOR3,. + 0
 4273              	batteryLevel:
 4274 0000 00000000 		.space	4
 4275              		.section	.bss.test_begin,"aw",%nobits
 4276              		.align	2
 4277              		.set	.LANCHOR0,. + 0
 4280              	test_begin:
 4281 0000 00000000 		.space	4
 4282              		.section	.bss.speedR,"aw",%nobits
 4283              		.align	2
 4284              		.set	.LANCHOR19,. + 0
 4287              	speedR:
 4288 0000 00000000 		.space	4
 4289              		.section	.bss.received_byte1,"aw",%nobits
 4290              		.set	.LANCHOR9,. + 0
 4293              	received_byte1:
 4294 0000 00       		.space	1
 4295              		.section	.bss.received_byte2,"aw",%nobits
 4296              		.set	.LANCHOR10,. + 0
 4299              	received_byte2:
 4300 0000 00       		.space	1
 4301              		.section	.rodata.str1.4,"aMS",%progbits,1
 4302              		.align	2
 4303              	.LC3:
 4304 0000 25582C00 		.ascii	"%X,\000"
 4305              	.LC5:
 4306 0004 0D0A00   		.ascii	"\015\012\000"
 4307 0007 00       		.section	.bss.test_time,"aw",%nobits
 4308              		.align	2
 4309              		.set	.LANCHOR1,. + 0
 4312              	test_time:
 4313 0000 00000000 		.space	4
 4314              		.section	.bss.i,"aw",%nobits
 4315              		.align	2
 4318              	i:
 4319 0000 00000000 		.space	4
 4320              		.section	.data.max_speed_percent,"aw",%progbits
 4321              		.align	2
 4322              		.set	.LANCHOR7,. + 0
 4325              	max_speed_percent:
 4326 0000 0000F041 		.word	1106247680
 4327              		.section	.bss.stoplineJustDetected,"aw",%nobits
 4328              		.set	.LANCHOR11,. + 0
 4331              	stoplineJustDetected:
 4332 0000 00       		.space	1
 4333              		.section	.bss.friction_correct,"aw",%nobits
 4334              		.align	2
 4337              	friction_correct:
 4338 0000 00000000 		.space	4
 4339              		.section	.bss.previousRaceLine.6207,"aw",%nobits
 4340              		.align	2
 4341              		.set	.LANCHOR14,. + 0
 4344              	previousRaceLine.6207:
 4345 0000 00000000 		.space	4
 4346              		.section	.bss.stoplineDetectedMoment.6148,"aw",%nobits
 4347              		.align	2
 4348              		.set	.LANCHOR21,. + 0
 4351              	stoplineDetectedMoment.6148:
 4352 0000 00000000 		.space	4
 4353              		.section	.data.cross_section_enable,"aw",%progbits
 4356              	cross_section_enable:
 4357 0000 01       		.byte	1
 4358              		.section	.bss.s_mode_enable,"aw",%nobits
 4359              		.set	.LANCHOR13,. + 0
 4362              	s_mode_enable:
 4363 0000 00       		.space	1
 4364              		.section	.bss.previousServoValue.6215,"aw",%nobits
 4365              		.align	2
 4366              		.set	.LANCHOR15,. + 0
 4369              	previousServoValue.6215:
 4370 0000 00000000 		.space	4
 4371              		.section	.bss.servoValue,"aw",%nobits
 4372              		.align	2
 4373              		.set	.LANCHOR5,. + 0
 4376              	servoValue:
 4377 0000 00000000 		.space	4
 4378              		.section	.bss.steeringControlUpdate.6145,"aw",%nobits
 4379              		.set	.LANCHOR12,. + 0
 4382              	steeringControlUpdate.6145:
 4383 0000 00       		.space	1
 4384              		.section	.bss.targetSpeed,"aw",%nobits
 4385              		.align	2
 4386              		.set	.LANCHOR4,. + 0
 4389              	targetSpeed:
 4390 0000 00000000 		.space	4
 4391              		.section	.data.carState,"aw",%progbits
 4392              		.align	2
 4393              		.set	.LANCHOR2,. + 0
 4396              	carState:
 4397 0000 00       		.byte	0
 4398 0001 02       		.byte	2
 4399 0002 03       		.byte	3
 4400 0003 01       		.byte	1
 4401 0004 00       		.byte	0
 4402 0005 00       		.byte	0
 4403 0006 00       		.byte	0
 4404 0007 00       		.byte	0
 4405 0008 00       		.byte	0
 4406 0009 00       		.byte	0
 4407 000a 0000     		.space	2
 4408 000c 78       		.byte	120
 4409 000d 000000   		.text
 4410              	.Letext0:
 4411              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 4412              		.file 3 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 4413              		.file 4 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 4414              		.file 5 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 4415              		.file 6 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 4416              		.file 7 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 4417              		.file 8 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:18     .text.rawFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:23     .text.rawFocussingMode:00000000 rawFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:138    .text.rawFocussingMode:00000084 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:149    .text.derivativeFocussingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:154    .text.derivativeFocussingMode:00000000 derivativeFocussingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:295    .text.derivativeFocussingMode:000000a8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:309    .text.TFC_Init:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:314    .text.TFC_Init:00000000 TFC_Init
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:391    .text.TFC_Init:00000058 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:396    .text.startup.main:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:401    .text.startup.main:00000000 main
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:425    .text.startup.main:00000014 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:430    .text.TFC_Task:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:435    .text.TFC_Task:00000000 TFC_Task
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:458    .text.evaluateMotorState:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:463    .text.evaluateMotorState:00000000 evaluateMotorState
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:516    .text.evaluateMotorState:00000034 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:521    .text.evaluateUARTorSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:526    .text.evaluateUARTorSpeed:00000000 evaluateUARTorSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:623    .text.evaluateUARTorSpeed:0000007c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:630    .text.LEDfeedback:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:635    .text.LEDfeedback:00000000 LEDfeedback
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:874    .text.LEDfeedback:00000140 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:881    .text.servoAlignment:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:886    .text.servoAlignment:00000000 servoAlignment
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:918    .text.servoAlignment:00000018 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:934    .text.telemetrySendData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:939    .text.telemetrySendData:00000000 telemetrySendData
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:1488   .text.telemetrySendData:00000390 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:1497   .text.telemetrySendData:000003ac $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:1855   .text.telemetrySendData:00000608 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:1866   .text.telemetrySendData:0000062c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:2364   .text.telemetrySendData:00000968 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:2379   .text.telemetrySendData:0000099c $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:2814   .text.telemetrySendData:00000c70 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:2825   .text.BluetoothSetSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:2830   .text.BluetoothSetSpeed:00000000 BluetoothSetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:2871   .text.BluetoothSetSpeed:00000020 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:2877   .text.BluetoothSetLED:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:2882   .text.BluetoothSetLED:00000000 BluetoothSetLED
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3020   .text.BluetoothSetLED:000000b4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3025   .text.telemetryReadData:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3030   .text.telemetryReadData:00000000 telemetryReadData
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3167   .text.telemetryReadData:000000a4 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3184   .text.lineFollowingMode:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3189   .text.lineFollowingMode:00000000 lineFollowingMode
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3844   .text.lineFollowingMode:00000350 $d
                            *COM*:00000004 incline_speed
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3885   .text.lineFollowingMode:000003ec $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3940   .text.lineFollowingMode:00000430 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3949   .text.processRaceLine:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3954   .text.processRaceLine:00000000 processRaceLine
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4073   .text.processRaceLine:00000090 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4083   .text.targetSpeedAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4088   .text.targetSpeedAverage:00000000 targetSpeedAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4139   .text.targetSpeedAverage:00000038 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4147   .text.servoValueAverage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4152   .text.servoValueAverage:00000000 servoValueAverage
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4191   .text.servoValueAverage:00000024 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4312   .bss.test_time:00000000 test_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4280   .bss.test_begin:00000000 test_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4266   .bss.stopline_enable:00000000 stopline_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4356   .data.cross_section_enable:00000000 cross_section_enable
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4362   .bss.s_mode_enable:00000000 s_mode_enable
                            *COM*:00000080 camera_output
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4318   .bss.i:00000000 i
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4337   .bss.friction_correct:00000000 friction_correct
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4219   .bss.count:00000000 count
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4299   .bss.received_byte2:00000000 received_byte2
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4293   .bss.received_byte1:00000000 received_byte1
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4325   .data.max_speed_percent:00000000 max_speed_percent
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4287   .bss.speedR:00000000 speedR
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4260   .bss.speedL:00000000 speedL
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4273   .bss.batteryLevel:00000000 batteryLevel
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4253   .bss.loop_begin:00000000 loop_begin
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4240   .bss.loop_time:00000000 loop_time
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4220   .bss.count:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4222   .bss.stopDelayTime.6149:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4226   .bss.stopDelayTime.6149:00000000 stopDelayTime.6149
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4229   .bss.totalIntensity.6146:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4233   .bss.totalIntensity.6146:00000000 totalIntensity.6146
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4236   .bss.loop_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4243   .bss.previousTargetSpeed.6211:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4247   .bss.previousTargetSpeed.6211:00000000 previousTargetSpeed.6211
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4250   .bss.loop_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4256   .bss.speedL:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4267   .bss.stopline_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4269   .bss.batteryLevel:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4276   .bss.test_begin:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4283   .bss.speedR:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4294   .bss.received_byte1:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4300   .bss.received_byte2:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4302   .rodata.str1.4:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4308   .bss.test_time:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4315   .bss.i:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4321   .data.max_speed_percent:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4331   .bss.stoplineJustDetected:00000000 stoplineJustDetected
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4332   .bss.stoplineJustDetected:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4334   .bss.friction_correct:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4340   .bss.previousRaceLine.6207:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4344   .bss.previousRaceLine.6207:00000000 previousRaceLine.6207
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4347   .bss.stoplineDetectedMoment.6148:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4351   .bss.stoplineDetectedMoment.6148:00000000 stoplineDetectedMoment.6148
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4363   .bss.s_mode_enable:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4365   .bss.previousServoValue.6215:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4369   .bss.previousServoValue.6215:00000000 previousServoValue.6215
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4372   .bss.servoValue:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4376   .bss.servoValue:00000000 servoValue
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4382   .bss.steeringControlUpdate.6145:00000000 steeringControlUpdate.6145
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4383   .bss.steeringControlUpdate.6145:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4385   .bss.targetSpeed:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4389   .bss.targetSpeed:00000000 targetSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4392   .data.carState:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:4396   .data.carState:00000000 carState
                     .debug_frame:00000010 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccYyDGhU.s:3948   .text.lineFollowingMode:0000043c $t

UNDEFINED SYMBOLS
TFC_SetServo
TFC_SetMotorPWM
getTotalIntensity
calculateNewExposure
TFC_SetLineScanExposureTime
Qprintf
TFC_Ticker
LineScanImage0
SDA_SERIAL_OUTGOING_QUEUE
edgeDetection
TFC_InitClock
TFC_InitSysTick
TFC_InitGPIO
TFC_InitServos
TFC_InitMotorPWM
TFC_InitADCs
TFC_InitLineScanCamera
TFC_InitUARTs
TFC_InitTerminal
TFC_InitSpeedSensor
preloadProbabilityTables
generateKernel
TFC_UART_Process
TFC_ProcessTerminal
TFC_GetDIP_Switch
enable_irq
disable_irq
__aeabi_fcmpgt
__aeabi_fmul
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_f2iz
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dadd
__aeabi_d2iz
__aeabi_dsub
__aeabi_i2f
uart_putchar
getSpeed
TFC_GetMotorPWM
TFC_ReadMotorCurrent
newExposure
__aeabi_ui2f
uart_getchar_present
uart_getchar
__aeabi_fadd
__aeabi_f2uiz
__aeabi_dmul
__aeabi_d2f
__aeabi_fdiv
__aeabi_fcmplt
TFC_GetPush_Button
getDesiredServoValue
findLine
TFC_ReadBatteryVoltage
findStop
getRadiusRoot
getDesiredSpeed
getActiveDifferentialModifier
isANewmeasurementAvailable
getDesiredMotorPWM
LineScanImage1
