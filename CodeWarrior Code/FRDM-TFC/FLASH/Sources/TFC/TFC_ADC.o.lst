   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TFC_ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Cal,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Cal
  20              		.code	16
  21              		.thumb_func
  23              	ADC_Cal:
  24              	.LFB0:
  25              		.file 1 "../Sources/TFC/TFC_ADC.c"
   1:../Sources/TFC/TFC_ADC.c **** #include "TFC\TFC.h"
   2:../Sources/TFC/TFC_ADC.c **** #include "Settings.h"
   3:../Sources/TFC/TFC_ADC.c **** 
   4:../Sources/TFC/TFC_ADC.c **** #define TFC_POT_0_ADC_CHANNEL		13
   5:../Sources/TFC/TFC_ADC.c **** #define TFC_POT_1_ADC_CHANNEL		12
   6:../Sources/TFC/TFC_ADC.c **** #define TFC_MOTOR_CURRENT_0_CHANNEL 7 //7a
   7:../Sources/TFC/TFC_ADC.c **** #define TFC_MOTOR_CURRENT_1_CHANNEL 3
   8:../Sources/TFC/TFC_ADC.c **** #define TFC_BAT_SENSE_CHANNEL		4
   9:../Sources/TFC/TFC_ADC.c **** #define TFC_LINESCAN0_ADC_CHANNEL	6
  10:../Sources/TFC/TFC_ADC.c **** #define TFC_LINESCAN1_ADC_CHANNEL	7 //7b
  11:../Sources/TFC/TFC_ADC.c **** 
  12:../Sources/TFC/TFC_ADC.c **** #define ADC_MAX_CODE    (4095)
  13:../Sources/TFC/TFC_ADC.c **** 
  14:../Sources/TFC/TFC_ADC.c **** #define V_SUP 3.3f
  15:../Sources/TFC/TFC_ADC.c **** 
  16:../Sources/TFC/TFC_ADC.c **** #define ADC0_irq_no   57
  17:../Sources/TFC/TFC_ADC.c **** #define ADC1_irq_no   58
  18:../Sources/TFC/TFC_ADC.c **** 
  19:../Sources/TFC/TFC_ADC.c **** #define ADC0_CHANA    19                                    // set to desired ADC0 channel trigger 
  20:../Sources/TFC/TFC_ADC.c **** #define ADC0_CHANB    20                                    // set to desired ADC0 channel trigger 
  21:../Sources/TFC/TFC_ADC.c **** 
  22:../Sources/TFC/TFC_ADC.c **** #define ADC1_CHANA    20                                    // set to desired ADC1 channel trigger 
  23:../Sources/TFC/TFC_ADC.c **** #define ADC1_CHANB    20                                    // set to desired ADC1 channel trigger 
  24:../Sources/TFC/TFC_ADC.c **** 
  25:../Sources/TFC/TFC_ADC.c **** #define ADC0_DLYA     0x2000                                // ADC0 trigger A delay 
  26:../Sources/TFC/TFC_ADC.c **** #define ADC0_DLYB     0x4000                                // ADC0 trigger B delay 
  27:../Sources/TFC/TFC_ADC.c **** #define ADC1_DLYA     0x6000                                // ADC1 trigger A delay
  28:../Sources/TFC/TFC_ADC.c **** #define ADC1_DLYB     0x7fff                                // ADC1 trigger B delay 
  29:../Sources/TFC/TFC_ADC.c **** 
  30:../Sources/TFC/TFC_ADC.c **** 
  31:../Sources/TFC/TFC_ADC.c **** #define ADC0A_DONE   0x01       
  32:../Sources/TFC/TFC_ADC.c **** #define ADC0B_DONE   0x02       
  33:../Sources/TFC/TFC_ADC.c **** #define ADC1A_DONE   0x04       
  34:../Sources/TFC/TFC_ADC.c **** #define ADC1B_DONE   0x08       
  35:../Sources/TFC/TFC_ADC.c **** 
  36:../Sources/TFC/TFC_ADC.c **** 
  37:../Sources/TFC/TFC_ADC.c **** // Bit shifting of bitfiled is already taken into account so 
  38:../Sources/TFC/TFC_ADC.c **** // bitfiled values are always represented as relative to their position.
  39:../Sources/TFC/TFC_ADC.c ****   
  40:../Sources/TFC/TFC_ADC.c **** /************************* #Defines ******************************************/
  41:../Sources/TFC/TFC_ADC.c **** 
  42:../Sources/TFC/TFC_ADC.c **** 
  43:../Sources/TFC/TFC_ADC.c **** #define A                 0x0
  44:../Sources/TFC/TFC_ADC.c **** #define B                 0x1
  45:../Sources/TFC/TFC_ADC.c **** 
  46:../Sources/TFC/TFC_ADC.c **** 
  47:../Sources/TFC/TFC_ADC.c **** /////// NOTE: the following defines relate to the ADC register definitions
  48:../Sources/TFC/TFC_ADC.c **** /////// and the content follows the reference manual, using the same symbols.
  49:../Sources/TFC/TFC_ADC.c **** 
  50:../Sources/TFC/TFC_ADC.c **** 
  51:../Sources/TFC/TFC_ADC.c **** //// ADCSC1 (register)
  52:../Sources/TFC/TFC_ADC.c **** 
  53:../Sources/TFC/TFC_ADC.c **** // Conversion Complete (COCO) mask
  54:../Sources/TFC/TFC_ADC.c **** #define COCO_COMPLETE     ADC_SC1_COCO_MASK
  55:../Sources/TFC/TFC_ADC.c **** #define COCO_NOT          0x00
  56:../Sources/TFC/TFC_ADC.c **** 
  57:../Sources/TFC/TFC_ADC.c **** // ADC interrupts: enabled, or disabled.
  58:../Sources/TFC/TFC_ADC.c **** #define AIEN_ON           ADC_SC1_AIEN_MASK
  59:../Sources/TFC/TFC_ADC.c **** #define AIEN_OFF          0x00
  60:../Sources/TFC/TFC_ADC.c **** 
  61:../Sources/TFC/TFC_ADC.c **** // Differential or Single ended ADC input
  62:../Sources/TFC/TFC_ADC.c **** #define DIFF_SINGLE       0x00
  63:../Sources/TFC/TFC_ADC.c **** #define DIFF_DIFFERENTIAL ADC_SC1_DIFF_MASK
  64:../Sources/TFC/TFC_ADC.c **** 
  65:../Sources/TFC/TFC_ADC.c **** //// ADCCFG1
  66:../Sources/TFC/TFC_ADC.c **** 
  67:../Sources/TFC/TFC_ADC.c **** // Power setting of ADC
  68:../Sources/TFC/TFC_ADC.c **** #define ADLPC_LOW         ADC_CFG1_ADLPC_MASK
  69:../Sources/TFC/TFC_ADC.c **** #define ADLPC_NORMAL      0x00
  70:../Sources/TFC/TFC_ADC.c **** 
  71:../Sources/TFC/TFC_ADC.c **** // Clock divisor
  72:../Sources/TFC/TFC_ADC.c **** #define ADIV_1            0x00
  73:../Sources/TFC/TFC_ADC.c **** #define ADIV_2            0x01
  74:../Sources/TFC/TFC_ADC.c **** #define ADIV_4            0x02
  75:../Sources/TFC/TFC_ADC.c **** #define ADIV_8            0x03
  76:../Sources/TFC/TFC_ADC.c **** 
  77:../Sources/TFC/TFC_ADC.c **** // Long samle time, or Short sample time
  78:../Sources/TFC/TFC_ADC.c **** #define ADLSMP_LONG       ADC_CFG1_ADLSMP_MASK
  79:../Sources/TFC/TFC_ADC.c **** #define ADLSMP_SHORT      0x00
  80:../Sources/TFC/TFC_ADC.c **** 
  81:../Sources/TFC/TFC_ADC.c **** // How many bits for the conversion?  8, 12, 10, or 16 (single ended).
  82:../Sources/TFC/TFC_ADC.c **** #define MODE_8            0x00
  83:../Sources/TFC/TFC_ADC.c **** #define MODE_12           0x01
  84:../Sources/TFC/TFC_ADC.c **** #define MODE_10           0x02
  85:../Sources/TFC/TFC_ADC.c **** #define MODE_16           0x03
  86:../Sources/TFC/TFC_ADC.c **** 
  87:../Sources/TFC/TFC_ADC.c **** 
  88:../Sources/TFC/TFC_ADC.c **** 
  89:../Sources/TFC/TFC_ADC.c **** // ADC Input Clock Source choice? Bus clock, Bus clock/2, "altclk", or the 
  90:../Sources/TFC/TFC_ADC.c **** //                                ADC's own asynchronous clock for less noise
  91:../Sources/TFC/TFC_ADC.c **** #define ADICLK_BUS        0x00
  92:../Sources/TFC/TFC_ADC.c **** #define ADICLK_BUS_2      0x01
  93:../Sources/TFC/TFC_ADC.c **** #define ADICLK_ALTCLK     0x02
  94:../Sources/TFC/TFC_ADC.c **** #define ADICLK_ADACK      0x03
  95:../Sources/TFC/TFC_ADC.c **** 
  96:../Sources/TFC/TFC_ADC.c **** //// ADCCFG2
  97:../Sources/TFC/TFC_ADC.c **** 
  98:../Sources/TFC/TFC_ADC.c **** // Select between B or A channels
  99:../Sources/TFC/TFC_ADC.c **** #define MUXSEL_ADCB       ADC_CFG2_MUXSEL_MASK
 100:../Sources/TFC/TFC_ADC.c **** #define MUXSEL_ADCA       0x00
 101:../Sources/TFC/TFC_ADC.c **** 
 102:../Sources/TFC/TFC_ADC.c **** // Ansync clock output enable: enable, or disable the output of it
 103:../Sources/TFC/TFC_ADC.c **** #define ADACKEN_ENABLED   ADC_CFG2_ADACKEN_MASK
 104:../Sources/TFC/TFC_ADC.c **** #define ADACKEN_DISABLED  0x00
 105:../Sources/TFC/TFC_ADC.c **** 
 106:../Sources/TFC/TFC_ADC.c **** // High speed or low speed conversion mode
 107:../Sources/TFC/TFC_ADC.c **** #define ADHSC_HISPEED     ADC_CFG2_ADHSC_MASK
 108:../Sources/TFC/TFC_ADC.c **** #define ADHSC_NORMAL      0x00
 109:../Sources/TFC/TFC_ADC.c **** 
 110:../Sources/TFC/TFC_ADC.c **** // Long Sample Time selector: 20, 12, 6, or 2 extra clocks for a longer sample time
 111:../Sources/TFC/TFC_ADC.c **** #define ADLSTS_20          0x00
 112:../Sources/TFC/TFC_ADC.c **** #define ADLSTS_12          0x01
 113:../Sources/TFC/TFC_ADC.c **** #define ADLSTS_6           0x02
 114:../Sources/TFC/TFC_ADC.c **** #define ADLSTS_2           0x03
 115:../Sources/TFC/TFC_ADC.c **** 
 116:../Sources/TFC/TFC_ADC.c **** ////ADCSC2
 117:../Sources/TFC/TFC_ADC.c **** 
 118:../Sources/TFC/TFC_ADC.c **** // Read-only status bit indicating conversion status
 119:../Sources/TFC/TFC_ADC.c **** #define ADACT_ACTIVE       ADC_SC2_ADACT_MASK
 120:../Sources/TFC/TFC_ADC.c **** #define ADACT_INACTIVE     0x00
 121:../Sources/TFC/TFC_ADC.c **** 
 122:../Sources/TFC/TFC_ADC.c **** // Trigger for starting conversion: Hardware trigger, or software trigger.
 123:../Sources/TFC/TFC_ADC.c **** // For using PDB, the Hardware trigger option is selected.
 124:../Sources/TFC/TFC_ADC.c **** #define ADTRG_HW           ADC_SC2_ADTRG_MASK
 125:../Sources/TFC/TFC_ADC.c **** #define ADTRG_SW           0x00
 126:../Sources/TFC/TFC_ADC.c **** 
 127:../Sources/TFC/TFC_ADC.c **** // ADC Compare Function Enable: Disabled, or Enabled.
 128:../Sources/TFC/TFC_ADC.c **** #define ACFE_DISABLED      0x00
 129:../Sources/TFC/TFC_ADC.c **** #define ACFE_ENABLED       ADC_SC2_ACFE_MASK
 130:../Sources/TFC/TFC_ADC.c **** 
 131:../Sources/TFC/TFC_ADC.c **** // Compare Function Greater Than Enable: Greater, or Less.
 132:../Sources/TFC/TFC_ADC.c **** #define ACFGT_GREATER      ADC_SC2_ACFGT_MASK
 133:../Sources/TFC/TFC_ADC.c **** #define ACFGT_LESS         0x00
 134:../Sources/TFC/TFC_ADC.c **** 
 135:../Sources/TFC/TFC_ADC.c **** // Compare Function Range Enable: Enabled or Disabled.
 136:../Sources/TFC/TFC_ADC.c **** #define ACREN_ENABLED      ADC_SC2_ACREN_MASK
 137:../Sources/TFC/TFC_ADC.c **** #define ACREN_DISABLED     0x00
 138:../Sources/TFC/TFC_ADC.c **** 
 139:../Sources/TFC/TFC_ADC.c **** // DMA enable: enabled or disabled.
 140:../Sources/TFC/TFC_ADC.c **** #define DMAEN_ENABLED      ADC_SC2_DMAEN_MASK
 141:../Sources/TFC/TFC_ADC.c **** #define DMAEN_DISABLED     0x00
 142:../Sources/TFC/TFC_ADC.c **** 
 143:../Sources/TFC/TFC_ADC.c **** // Voltage Reference selection for the ADC conversions
 144:../Sources/TFC/TFC_ADC.c **** // (***not*** the PGA which uses VREFO only).
 145:../Sources/TFC/TFC_ADC.c **** // VREFH and VREFL (0) , or VREFO (1).
 146:../Sources/TFC/TFC_ADC.c **** 
 147:../Sources/TFC/TFC_ADC.c **** #define REFSEL_EXT         0x00
 148:../Sources/TFC/TFC_ADC.c **** #define REFSEL_ALT         0x01
 149:../Sources/TFC/TFC_ADC.c **** #define REFSEL_RES         0x02     /* reserved */
 150:../Sources/TFC/TFC_ADC.c **** #define REFSEL_RES_EXT     0x03     /* reserved but defaults to Vref */
 151:../Sources/TFC/TFC_ADC.c **** 
 152:../Sources/TFC/TFC_ADC.c **** ////ADCSC3
 153:../Sources/TFC/TFC_ADC.c **** 
 154:../Sources/TFC/TFC_ADC.c **** // Calibration begin or off
 155:../Sources/TFC/TFC_ADC.c **** #define CAL_BEGIN          ADC_SC3_CAL_MASK
 156:../Sources/TFC/TFC_ADC.c **** #define CAL_OFF            0x00
 157:../Sources/TFC/TFC_ADC.c **** 
 158:../Sources/TFC/TFC_ADC.c **** // Status indicating Calibration failed, or normal success
 159:../Sources/TFC/TFC_ADC.c **** #define CALF_FAIL          ADC_SC3_CALF_MASK
 160:../Sources/TFC/TFC_ADC.c **** #define CALF_NORMAL        0x00
 161:../Sources/TFC/TFC_ADC.c **** 
 162:../Sources/TFC/TFC_ADC.c **** // ADC to continously convert, or do a sinle conversion
 163:../Sources/TFC/TFC_ADC.c **** #define ADCO_CONTINUOUS    ADC_SC3_ADCO_MASK
 164:../Sources/TFC/TFC_ADC.c **** #define ADCO_SINGLE        0x00
 165:../Sources/TFC/TFC_ADC.c **** 
 166:../Sources/TFC/TFC_ADC.c **** // Averaging enabled in the ADC, or not.
 167:../Sources/TFC/TFC_ADC.c **** #define AVGE_ENABLED       ADC_SC3_AVGE_MASK
 168:../Sources/TFC/TFC_ADC.c **** #define AVGE_DISABLED      0x00
 169:../Sources/TFC/TFC_ADC.c **** 
 170:../Sources/TFC/TFC_ADC.c **** // How many to average prior to "interrupting" the MCU?  4, 8, 16, or 32
 171:../Sources/TFC/TFC_ADC.c **** #define AVGS_4             0x00
 172:../Sources/TFC/TFC_ADC.c **** #define AVGS_8             0x01
 173:../Sources/TFC/TFC_ADC.c **** #define AVGS_16            0x02
 174:../Sources/TFC/TFC_ADC.c **** #define AVGS_32            0x03
 175:../Sources/TFC/TFC_ADC.c **** 
 176:../Sources/TFC/TFC_ADC.c **** ////PGA
 177:../Sources/TFC/TFC_ADC.c **** 
 178:../Sources/TFC/TFC_ADC.c **** // PGA enabled or not?
 179:../Sources/TFC/TFC_ADC.c **** #define PGAEN_ENABLED      ADC_PGA_PGAEN_MASK
 180:../Sources/TFC/TFC_ADC.c **** #define PGAEN_DISABLED     0x00 
 181:../Sources/TFC/TFC_ADC.c **** 
 182:../Sources/TFC/TFC_ADC.c **** // Chopper stabilization of the amplifier, or not.
 183:../Sources/TFC/TFC_ADC.c **** #define PGACHP_CHOP        ADC_PGA_PGACHP_MASK 
 184:../Sources/TFC/TFC_ADC.c **** #define PGACHP_NOCHOP      0x00
 185:../Sources/TFC/TFC_ADC.c **** 
 186:../Sources/TFC/TFC_ADC.c **** // PGA in low power mode, or normal mode.
 187:../Sources/TFC/TFC_ADC.c **** #define PGALP_LOW          ADC_PGA_PGALP_MASK
 188:../Sources/TFC/TFC_ADC.c **** #define PGALP_NORMAL       0x00
 189:../Sources/TFC/TFC_ADC.c **** 
 190:../Sources/TFC/TFC_ADC.c **** // Gain of PGA.  Selectable from 1 to 64.
 191:../Sources/TFC/TFC_ADC.c **** #define PGAG_1             0x00
 192:../Sources/TFC/TFC_ADC.c **** #define PGAG_2             0x01
 193:../Sources/TFC/TFC_ADC.c **** #define PGAG_4             0x02
 194:../Sources/TFC/TFC_ADC.c **** #define PGAG_8             0x03
 195:../Sources/TFC/TFC_ADC.c **** #define PGAG_16            0x04
 196:../Sources/TFC/TFC_ADC.c **** #define PGAG_32            0x05
 197:../Sources/TFC/TFC_ADC.c **** #define PGAG_64            0x06
 198:../Sources/TFC/TFC_ADC.c **** 
 199:../Sources/TFC/TFC_ADC.c **** /////////// The above values fit into the structure below to select ADC/PGA
 200:../Sources/TFC/TFC_ADC.c **** /////////// configuration desired:
 201:../Sources/TFC/TFC_ADC.c **** 
 202:../Sources/TFC/TFC_ADC.c **** typedef struct adc_cfg {
 203:../Sources/TFC/TFC_ADC.c ****   uint8_t  CONFIG1; 
 204:../Sources/TFC/TFC_ADC.c ****   uint8_t  CONFIG2; 
 205:../Sources/TFC/TFC_ADC.c ****   uint16_t COMPARE1; 
 206:../Sources/TFC/TFC_ADC.c ****   uint16_t COMPARE2; 
 207:../Sources/TFC/TFC_ADC.c ****   uint8_t  STATUS2;
 208:../Sources/TFC/TFC_ADC.c ****   uint8_t  STATUS3; 
 209:../Sources/TFC/TFC_ADC.c ****   uint8_t  STATUS1A; 
 210:../Sources/TFC/TFC_ADC.c ****   uint8_t  STATUS1B;
 211:../Sources/TFC/TFC_ADC.c ****   uint32_t PGA;
 212:../Sources/TFC/TFC_ADC.c ****   } *tADC_ConfigPtr, tADC_Config ;  
 213:../Sources/TFC/TFC_ADC.c ****   
 214:../Sources/TFC/TFC_ADC.c **** 
 215:../Sources/TFC/TFC_ADC.c **** #define CAL_BLK_NUMREC 18 
 216:../Sources/TFC/TFC_ADC.c **** 
 217:../Sources/TFC/TFC_ADC.c **** typedef struct adc_cal {
 218:../Sources/TFC/TFC_ADC.c ****  
 219:../Sources/TFC/TFC_ADC.c **** uint16_t  OFS;
 220:../Sources/TFC/TFC_ADC.c **** uint16_t  PG;
 221:../Sources/TFC/TFC_ADC.c **** uint16_t  MG;
 222:../Sources/TFC/TFC_ADC.c **** uint8_t   CLPD;
 223:../Sources/TFC/TFC_ADC.c **** uint8_t   CLPS;
 224:../Sources/TFC/TFC_ADC.c **** uint16_t  CLP4;
 225:../Sources/TFC/TFC_ADC.c **** uint16_t  CLP3;
 226:../Sources/TFC/TFC_ADC.c **** uint8_t   CLP2;
 227:../Sources/TFC/TFC_ADC.c **** uint8_t   CLP1;
 228:../Sources/TFC/TFC_ADC.c **** uint8_t   CLP0;
 229:../Sources/TFC/TFC_ADC.c **** uint8_t   dummy;
 230:../Sources/TFC/TFC_ADC.c **** uint8_t   CLMD;
 231:../Sources/TFC/TFC_ADC.c **** uint8_t   CLMS;
 232:../Sources/TFC/TFC_ADC.c **** uint16_t  CLM4;
 233:../Sources/TFC/TFC_ADC.c **** uint16_t  CLM3;
 234:../Sources/TFC/TFC_ADC.c **** uint8_t   CLM2;
 235:../Sources/TFC/TFC_ADC.c **** uint8_t   CLM1;
 236:../Sources/TFC/TFC_ADC.c **** uint8_t   CLM0;
 237:../Sources/TFC/TFC_ADC.c **** } tADC_Cal_Blk ;  
 238:../Sources/TFC/TFC_ADC.c **** 
 239:../Sources/TFC/TFC_ADC.c **** 
 240:../Sources/TFC/TFC_ADC.c **** // function prototypes:
 241:../Sources/TFC/TFC_ADC.c **** 
 242:../Sources/TFC/TFC_ADC.c **** uint8_t ADC_Cal(ADC_MemMapPtr);
 243:../Sources/TFC/TFC_ADC.c **** 
 244:../Sources/TFC/TFC_ADC.c **** void ADC_Config_Alt(ADC_MemMapPtr, tADC_ConfigPtr);
 245:../Sources/TFC/TFC_ADC.c **** 
 246:../Sources/TFC/TFC_ADC.c **** void ADC_Read_Cal(ADC_MemMapPtr, tADC_Cal_Blk *);
 247:../Sources/TFC/TFC_ADC.c **** 
 248:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_INIT							0
 249:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_POT_0			        1
 250:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_POT_1			        2
 251:../Sources/TFC/TFC_ADC.c **** #define ADC_MOTOR_CURRENT_0						3
 252:../Sources/TFC/TFC_ADC.c **** #define ADC_MOTOR_CURRENT_1						4
 253:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_BATTERY_LEVEL			5
 254:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_LINE_SCAN		        6
 255:../Sources/TFC/TFC_ADC.c **** 
 256:../Sources/TFC/TFC_ADC.c **** 
 257:../Sources/TFC/TFC_ADC.c **** volatile uint16_t PotADC_Value[2];
 258:../Sources/TFC/TFC_ADC.c **** volatile uint16_t motorCurrent[2];
 259:../Sources/TFC/TFC_ADC.c **** volatile uint16_t BatSenseADC_Value;
 260:../Sources/TFC/TFC_ADC.c **** static uint8_t 	CurrentADC_State =	ADC_STATE_INIT;	
 261:../Sources/TFC/TFC_ADC.c **** 
 262:../Sources/TFC/TFC_ADC.c **** volatile uint8_t CurrentLineScanChannel = 0;
 263:../Sources/TFC/TFC_ADC.c **** volatile uint8_t CurrentLineScanPixel = 0;
 264:../Sources/TFC/TFC_ADC.c **** 
 265:../Sources/TFC/TFC_ADC.c **** static carState_s* carState;
 266:../Sources/TFC/TFC_ADC.c **** 
 267:../Sources/TFC/TFC_ADC.c **** void InitADC0();
 268:../Sources/TFC/TFC_ADC.c **** 
 269:../Sources/TFC/TFC_ADC.c **** /******************************************************************************
 270:../Sources/TFC/TFC_ADC.c **** Function 1. Name	AUTO CAL ROUTINE   
 271:../Sources/TFC/TFC_ADC.c **** 
 272:../Sources/TFC/TFC_ADC.c **** Parameters		ADC module pointer points to adc0 or adc1 register map 
 273:../Sources/TFC/TFC_ADC.c ****                          base address.
 274:../Sources/TFC/TFC_ADC.c **** Returns			Zero indicates success.
 275:../Sources/TFC/TFC_ADC.c **** Notes         		Calibrates the ADC16. Required to meet specifications 
 276:../Sources/TFC/TFC_ADC.c ****                         after reset and before a conversion is initiated.
 277:../Sources/TFC/TFC_ADC.c **** ******************************************************************************/
 278:../Sources/TFC/TFC_ADC.c **** unsigned char ADC_Cal(ADC_MemMapPtr adcmap)
 279:../Sources/TFC/TFC_ADC.c **** {
  26              		.loc 1 279 0
  27              		.cfi_startproc
  28              	.LVL0:
 280:../Sources/TFC/TFC_ADC.c **** 
 281:../Sources/TFC/TFC_ADC.c ****   unsigned short cal_var;
 282:../Sources/TFC/TFC_ADC.c ****   
 283:../Sources/TFC/TFC_ADC.c ****   ADC_SC2_REG(adcmap) &=  ~ADC_SC2_ADTRG_MASK ; // Enable Software Conversion Trigger for Calibrati
  29              		.loc 1 283 0
  30 0000 026A     		ldr	r2, [r0, #32]
  31 0002 4021     		mov	r1, #64
  32 0004 8A43     		bic	r2, r1
 279:../Sources/TFC/TFC_ADC.c **** {
  33              		.loc 1 279 0
  34 0006 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38              		.loc 1 283 0
  39 0008 0262     		str	r2, [r0, #32]
 279:../Sources/TFC/TFC_ADC.c **** {
  40              		.loc 1 279 0
  41 000a 031C     		mov	r3, r0
 284:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ( ~ADC_SC3_ADCO_MASK & ~ADC_SC3_AVGS_MASK ); // set single conversion, cle
  42              		.loc 1 284 0
  43 000c 406A     		ldr	r0, [r0, #36]
  44              	.LVL1:
  45 000e 0B22     		mov	r2, #11
  46 0010 9043     		bic	r0, r2
  47 0012 5862     		str	r0, [r3, #36]
 285:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32) );  // Turn averaging ON and s
  48              		.loc 1 285 0
  49 0014 596A     		ldr	r1, [r3, #36]
  50 0016 0720     		mov	r0, #7
  51 0018 0843     		orr	r0, r1
  52 001a 5862     		str	r0, [r3, #36]
 286:../Sources/TFC/TFC_ADC.c ****   
 287:../Sources/TFC/TFC_ADC.c ****   
 288:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
  53              		.loc 1 288 0
  54 001c 596A     		ldr	r1, [r3, #36]
  55 001e 8022     		mov	r2, #128
  56 0020 0A43     		orr	r2, r1
  57 0022 5A62     		str	r2, [r3, #36]
 289:../Sources/TFC/TFC_ADC.c ****   while ( (ADC_SC1_REG(adcmap,A) & ADC_SC1_COCO_MASK ) == COCO_NOT ); // Wait calibration end
  58              		.loc 1 289 0
  59 0024 8020     		mov	r0, #128
  60              	.L2:
  61              		.loc 1 289 0 is_stmt 0
  62 0026 1968     		ldr	r1, [r3]
  63 0028 0842     		tst	r0, r1
  64 002a FCD0     		beq	.L2
 290:../Sources/TFC/TFC_ADC.c ****   	
 291:../Sources/TFC/TFC_ADC.c ****   if ((ADC_SC3_REG(adcmap)& ADC_SC3_CALF_MASK) == CALF_FAIL )
  65              		.loc 1 291 0 is_stmt 1
  66 002c 5A6A     		ldr	r2, [r3, #36]
 292:../Sources/TFC/TFC_ADC.c ****   {  
 293:../Sources/TFC/TFC_ADC.c ****    return(1);    // Check for Calibration fail error and return 
  67              		.loc 1 293 0
  68 002e 0120     		mov	r0, #1
 291:../Sources/TFC/TFC_ADC.c ****   if ((ADC_SC3_REG(adcmap)& ADC_SC3_CALF_MASK) == CALF_FAIL )
  69              		.loc 1 291 0
  70 0030 5106     		lsl	r1, r2, #25
  71 0032 25D4     		bmi	.L3
  72              	.LVL2:
 294:../Sources/TFC/TFC_ADC.c ****   }
 295:../Sources/TFC/TFC_ADC.c ****   // Calculate plus-side calibration
 296:../Sources/TFC/TFC_ADC.c ****   cal_var = 0x00;
 297:../Sources/TFC/TFC_ADC.c ****   
 298:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLP0_REG(adcmap); 
  73              		.loc 1 298 0
  74 0034 D86C     		ldr	r0, [r3, #76]
  75              	.LVL3:
 299:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP1_REG(adcmap);
  76              		.loc 1 299 0
  77 0036 996C     		ldr	r1, [r3, #72]
 300:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP2_REG(adcmap);
  78              		.loc 1 300 0
  79 0038 5A6C     		ldr	r2, [r3, #68]
 299:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP1_REG(adcmap);
  80              		.loc 1 299 0
  81 003a 4018     		add	r0, r0, r1
  82              	.LVL4:
  83              		.loc 1 300 0
  84 003c 8118     		add	r1, r0, r2
  85              	.LVL5:
 301:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
  86              		.loc 1 301 0
  87 003e 186C     		ldr	r0, [r3, #64]
 302:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP4_REG(adcmap);
  88              		.loc 1 302 0
  89 0040 DA6B     		ldr	r2, [r3, #60]
 301:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
  90              		.loc 1 301 0
  91 0042 0918     		add	r1, r1, r0
  92              	.LVL6:
  93              		.loc 1 302 0
  94 0044 8818     		add	r0, r1, r2
  95              	.LVL7:
 303:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLPS_REG(adcmap);
  96              		.loc 1 303 0
  97 0046 996B     		ldr	r1, [r3, #56]
  98 0048 4218     		add	r2, r0, r1
  99 004a 90B2     		uxth	r0, r2
 100              	.LVL8:
 304:../Sources/TFC/TFC_ADC.c **** 
 305:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 306:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 101              		.loc 1 306 0
 102 004c 0D4A     		ldr	r2, .L10
 103              	.LVL9:
 305:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 104              		.loc 1 305 0
 105 004e 4108     		lsr	r1, r0, #1
 106              	.LVL10:
 107              		.loc 1 306 0
 108 0050 1143     		orr	r1, r2
 109              	.LVL11:
 307:../Sources/TFC/TFC_ADC.c **** 
 308:../Sources/TFC/TFC_ADC.c ****   ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
 110              		.loc 1 308 0
 111 0052 88B2     		uxth	r0, r1
 112              	.LVL12:
 113 0054 D862     		str	r0, [r3, #44]
 114              	.LVL13:
 309:../Sources/TFC/TFC_ADC.c ****  
 310:../Sources/TFC/TFC_ADC.c **** 
 311:../Sources/TFC/TFC_ADC.c ****   // Calculate minus-side calibration
 312:../Sources/TFC/TFC_ADC.c ****   cal_var = 0x00;
 313:../Sources/TFC/TFC_ADC.c **** 
 314:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLM0_REG(adcmap); 
 115              		.loc 1 314 0
 116 0056 D86E     		ldr	r0, [r3, #108]
 117              	.LVL14:
 315:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM1_REG(adcmap);
 118              		.loc 1 315 0
 119 0058 996E     		ldr	r1, [r3, #104]
 120 005a 4118     		add	r1, r0, r1
 121              	.LVL15:
 316:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM2_REG(adcmap);
 122              		.loc 1 316 0
 123 005c 586E     		ldr	r0, [r3, #100]
 124 005e 0918     		add	r1, r1, r0
 125              	.LVL16:
 317:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM3_REG(adcmap);
 126              		.loc 1 317 0
 127 0060 186E     		ldr	r0, [r3, #96]
 128 0062 0918     		add	r1, r1, r0
 129              	.LVL17:
 318:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM4_REG(adcmap);
 130              		.loc 1 318 0
 131 0064 D86D     		ldr	r0, [r3, #92]
 132 0066 0918     		add	r1, r1, r0
 133              	.LVL18:
 319:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLMS_REG(adcmap);
 134              		.loc 1 319 0
 135 0068 986D     		ldr	r0, [r3, #88]
 136 006a 0918     		add	r1, r1, r0
 137              	.LVL19:
 138 006c 88B2     		uxth	r0, r1
 139              	.LVL20:
 320:../Sources/TFC/TFC_ADC.c **** 
 321:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 140              		.loc 1 321 0
 141 006e 4108     		lsr	r1, r0, #1
 142              	.LVL21:
 322:../Sources/TFC/TFC_ADC.c **** 
 323:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 143              		.loc 1 323 0
 144 0070 0A43     		orr	r2, r1
 324:../Sources/TFC/TFC_ADC.c **** 
 325:../Sources/TFC/TFC_ADC.c ****   ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var); 
 145              		.loc 1 325 0
 146 0072 92B2     		uxth	r2, r2
 147 0074 1A63     		str	r2, [r3, #48]
 326:../Sources/TFC/TFC_ADC.c ****   
 327:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK ; /* Clear CAL bit */
 148              		.loc 1 327 0
 149 0076 586A     		ldr	r0, [r3, #36]
 150 0078 8021     		mov	r1, #128
 151              	.LVL22:
 152 007a 8843     		bic	r0, r1
 153 007c 5862     		str	r0, [r3, #36]
 328:../Sources/TFC/TFC_ADC.c **** 
 329:../Sources/TFC/TFC_ADC.c ****   return(0);
 154              		.loc 1 329 0
 155 007e 0020     		mov	r0, #0
 156              	.L3:
 330:../Sources/TFC/TFC_ADC.c **** }
 157              		.loc 1 330 0
 158              		@ sp needed for prologue
 159 0080 00BD     		pop	{pc}
 160              	.L11:
 161 0082 C046     		.align	2
 162              	.L10:
 163 0084 0080FFFF 		.word	-32768
 164              		.cfi_endproc
 165              	.LFE0:
 167              		.section	.text.ADC_Config_Alt,"ax",%progbits
 168              		.align	2
 169              		.global	ADC_Config_Alt
 170              		.code	16
 171              		.thumb_func
 173              	ADC_Config_Alt:
 174              	.LFB1:
 331:../Sources/TFC/TFC_ADC.c **** 
 332:../Sources/TFC/TFC_ADC.c **** 
 333:../Sources/TFC/TFC_ADC.c **** 
 334:../Sources/TFC/TFC_ADC.c **** 
 335:../Sources/TFC/TFC_ADC.c **** /******************************************************************************
 336:../Sources/TFC/TFC_ADC.c **** Function 2 Name 	ADC_Config_Alt 
 337:../Sources/TFC/TFC_ADC.c **** Parameters		the register values to be set in the adc in a structure
 338:../Sources/TFC/TFC_ADC.c **** Returns			NONE
 339:../Sources/TFC/TFC_ADC.c **** Notes         		Configures ADC0 or ADC1 depending on adcmap
 340:../Sources/TFC/TFC_ADC.c ****                         Prior to calling this function populate the structure
 341:../Sources/TFC/TFC_ADC.c ****                         elements with the desired ADC configuration.
 342:../Sources/TFC/TFC_ADC.c **** ******************************************************************************/
 343:../Sources/TFC/TFC_ADC.c **** 
 344:../Sources/TFC/TFC_ADC.c **** 
 345:../Sources/TFC/TFC_ADC.c **** void ADC_Config_Alt(ADC_MemMapPtr adcmap, tADC_ConfigPtr ADC_CfgPtr)
 346:../Sources/TFC/TFC_ADC.c **** {
 175              		.loc 1 346 0
 176              		.cfi_startproc
 177              	.LVL23:
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 178              		.loc 1 347 0
 179 0000 0B78     		ldrb	r3, [r1]
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 353:../Sources/TFC/TFC_ADC.c ****  //ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 356:../Sources/TFC/TFC_ADC.c **** }
 180              		.loc 1 356 0
 181              		@ sp needed for prologue
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 182              		.loc 1 347 0
 183 0002 8360     		str	r3, [r0, #8]
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 184              		.loc 1 348 0
 185 0004 4A78     		ldrb	r2, [r1, #1]
 186 0006 C260     		str	r2, [r0, #12]
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 187              		.loc 1 349 0
 188 0008 4B88     		ldrh	r3, [r1, #2]
 189 000a 8361     		str	r3, [r0, #24]
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 190              		.loc 1 350 0
 191 000c 8A88     		ldrh	r2, [r1, #4]
 192 000e C261     		str	r2, [r0, #28]
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 193              		.loc 1 351 0
 194 0010 8B79     		ldrb	r3, [r1, #6]
 195 0012 0362     		str	r3, [r0, #32]
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 196              		.loc 1 352 0
 197 0014 CA79     		ldrb	r2, [r1, #7]
 198 0016 4262     		str	r2, [r0, #36]
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 199              		.loc 1 354 0
 200 0018 0B7A     		ldrb	r3, [r1, #8]
 201 001a 0360     		str	r3, [r0]
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 202              		.loc 1 355 0
 203 001c 497A     		ldrb	r1, [r1, #9]
 204              	.LVL24:
 205 001e 4160     		str	r1, [r0, #4]
 206              		.loc 1 356 0
 207 0020 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE1:
 211 0022 C046     		.section	.text.ADC_Read_Cal,"ax",%progbits
 212              		.align	2
 213              		.global	ADC_Read_Cal
 214              		.code	16
 215              		.thumb_func
 217              	ADC_Read_Cal:
 218              	.LFB2:
 357:../Sources/TFC/TFC_ADC.c **** 
 358:../Sources/TFC/TFC_ADC.c **** 
 359:../Sources/TFC/TFC_ADC.c **** void ADC_Read_Cal(ADC_MemMapPtr adcmap, tADC_Cal_Blk *blk)
 360:../Sources/TFC/TFC_ADC.c **** {
 219              		.loc 1 360 0
 220              		.cfi_startproc
 221              	.LVL25:
 361:../Sources/TFC/TFC_ADC.c ****   blk->OFS  = ADC_OFS_REG(adcmap);
 222              		.loc 1 361 0
 223 0000 836A     		ldr	r3, [r0, #40]
 362:../Sources/TFC/TFC_ADC.c ****   blk->PG   = ADC_PG_REG(adcmap); 
 224              		.loc 1 362 0
 225 0002 C26A     		ldr	r2, [r0, #44]
 361:../Sources/TFC/TFC_ADC.c ****   blk->OFS  = ADC_OFS_REG(adcmap);
 226              		.loc 1 361 0
 227 0004 0B80     		strh	r3, [r1]
 228              		.loc 1 362 0
 229 0006 4A80     		strh	r2, [r1, #2]
 363:../Sources/TFC/TFC_ADC.c ****   blk->MG   = ADC_MG_REG(adcmap); 
 230              		.loc 1 363 0
 231 0008 036B     		ldr	r3, [r0, #48]
 364:../Sources/TFC/TFC_ADC.c ****   blk->CLPD = ADC_CLPD_REG(adcmap); 
 232              		.loc 1 364 0
 233 000a 426B     		ldr	r2, [r0, #52]
 363:../Sources/TFC/TFC_ADC.c ****   blk->MG   = ADC_MG_REG(adcmap); 
 234              		.loc 1 363 0
 235 000c 8B80     		strh	r3, [r1, #4]
 236              		.loc 1 364 0
 237 000e 8A71     		strb	r2, [r1, #6]
 365:../Sources/TFC/TFC_ADC.c ****   blk->CLPS = ADC_CLPS_REG(adcmap); 
 238              		.loc 1 365 0
 239 0010 836B     		ldr	r3, [r0, #56]
 366:../Sources/TFC/TFC_ADC.c ****   blk->CLP4 = ADC_CLP4_REG(adcmap);
 367:../Sources/TFC/TFC_ADC.c ****   blk->CLP3 = ADC_CLP3_REG(adcmap); 
 368:../Sources/TFC/TFC_ADC.c ****   blk->CLP2 = ADC_CLP2_REG(adcmap); 
 369:../Sources/TFC/TFC_ADC.c ****   blk->CLP1 = ADC_CLP1_REG(adcmap);
 370:../Sources/TFC/TFC_ADC.c ****   blk->CLP0 = ADC_CLP0_REG(adcmap);
 371:../Sources/TFC/TFC_ADC.c ****   blk->CLMD = ADC_CLMD_REG(adcmap); 
 372:../Sources/TFC/TFC_ADC.c ****   blk->CLMS = ADC_CLMS_REG(adcmap); 
 373:../Sources/TFC/TFC_ADC.c ****   blk->CLM4 = ADC_CLM4_REG(adcmap);
 374:../Sources/TFC/TFC_ADC.c ****   blk->CLM3 = ADC_CLM3_REG(adcmap); 
 375:../Sources/TFC/TFC_ADC.c ****   blk->CLM2 = ADC_CLM2_REG(adcmap); 
 376:../Sources/TFC/TFC_ADC.c ****   blk->CLM1 = ADC_CLM1_REG(adcmap);
 377:../Sources/TFC/TFC_ADC.c ****   blk->CLM0 = ADC_CLM0_REG(adcmap);
 378:../Sources/TFC/TFC_ADC.c ****   
 379:../Sources/TFC/TFC_ADC.c **** }
 240              		.loc 1 379 0
 241              		@ sp needed for prologue
 365:../Sources/TFC/TFC_ADC.c ****   blk->CLPS = ADC_CLPS_REG(adcmap); 
 242              		.loc 1 365 0
 243 0012 CB71     		strb	r3, [r1, #7]
 366:../Sources/TFC/TFC_ADC.c ****   blk->CLP4 = ADC_CLP4_REG(adcmap);
 244              		.loc 1 366 0
 245 0014 C26B     		ldr	r2, [r0, #60]
 367:../Sources/TFC/TFC_ADC.c ****   blk->CLP3 = ADC_CLP3_REG(adcmap); 
 246              		.loc 1 367 0
 247 0016 036C     		ldr	r3, [r0, #64]
 366:../Sources/TFC/TFC_ADC.c ****   blk->CLP4 = ADC_CLP4_REG(adcmap);
 248              		.loc 1 366 0
 249 0018 0A81     		strh	r2, [r1, #8]
 368:../Sources/TFC/TFC_ADC.c ****   blk->CLP2 = ADC_CLP2_REG(adcmap); 
 250              		.loc 1 368 0
 251 001a 426C     		ldr	r2, [r0, #68]
 367:../Sources/TFC/TFC_ADC.c ****   blk->CLP3 = ADC_CLP3_REG(adcmap); 
 252              		.loc 1 367 0
 253 001c 4B81     		strh	r3, [r1, #10]
 368:../Sources/TFC/TFC_ADC.c ****   blk->CLP2 = ADC_CLP2_REG(adcmap); 
 254              		.loc 1 368 0
 255 001e 0A73     		strb	r2, [r1, #12]
 369:../Sources/TFC/TFC_ADC.c ****   blk->CLP1 = ADC_CLP1_REG(adcmap);
 256              		.loc 1 369 0
 257 0020 836C     		ldr	r3, [r0, #72]
 258 0022 4B73     		strb	r3, [r1, #13]
 370:../Sources/TFC/TFC_ADC.c ****   blk->CLP0 = ADC_CLP0_REG(adcmap);
 259              		.loc 1 370 0
 260 0024 C26C     		ldr	r2, [r0, #76]
 261 0026 8A73     		strb	r2, [r1, #14]
 371:../Sources/TFC/TFC_ADC.c ****   blk->CLMD = ADC_CLMD_REG(adcmap); 
 262              		.loc 1 371 0
 263 0028 436D     		ldr	r3, [r0, #84]
 264 002a 0B74     		strb	r3, [r1, #16]
 372:../Sources/TFC/TFC_ADC.c ****   blk->CLMS = ADC_CLMS_REG(adcmap); 
 265              		.loc 1 372 0
 266 002c 826D     		ldr	r2, [r0, #88]
 267 002e 4A74     		strb	r2, [r1, #17]
 373:../Sources/TFC/TFC_ADC.c ****   blk->CLM4 = ADC_CLM4_REG(adcmap);
 268              		.loc 1 373 0
 269 0030 C36D     		ldr	r3, [r0, #92]
 374:../Sources/TFC/TFC_ADC.c ****   blk->CLM3 = ADC_CLM3_REG(adcmap); 
 270              		.loc 1 374 0
 271 0032 026E     		ldr	r2, [r0, #96]
 373:../Sources/TFC/TFC_ADC.c ****   blk->CLM4 = ADC_CLM4_REG(adcmap);
 272              		.loc 1 373 0
 273 0034 4B82     		strh	r3, [r1, #18]
 375:../Sources/TFC/TFC_ADC.c ****   blk->CLM2 = ADC_CLM2_REG(adcmap); 
 274              		.loc 1 375 0
 275 0036 436E     		ldr	r3, [r0, #100]
 374:../Sources/TFC/TFC_ADC.c ****   blk->CLM3 = ADC_CLM3_REG(adcmap); 
 276              		.loc 1 374 0
 277 0038 8A82     		strh	r2, [r1, #20]
 375:../Sources/TFC/TFC_ADC.c ****   blk->CLM2 = ADC_CLM2_REG(adcmap); 
 278              		.loc 1 375 0
 279 003a 8B75     		strb	r3, [r1, #22]
 376:../Sources/TFC/TFC_ADC.c ****   blk->CLM1 = ADC_CLM1_REG(adcmap);
 280              		.loc 1 376 0
 281 003c 826E     		ldr	r2, [r0, #104]
 282 003e CA75     		strb	r2, [r1, #23]
 377:../Sources/TFC/TFC_ADC.c ****   blk->CLM0 = ADC_CLM0_REG(adcmap);
 283              		.loc 1 377 0
 284 0040 C06E     		ldr	r0, [r0, #108]
 285              	.LVL26:
 286 0042 0876     		strb	r0, [r1, #24]
 287              		.loc 1 379 0
 288 0044 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE2:
 292 0046 C046     		.section	.text.InitADC0,"ax",%progbits
 293              		.align	2
 294              		.global	InitADC0
 295              		.code	16
 296              		.thumb_func
 298              	InitADC0:
 299              	.LFB3:
 380:../Sources/TFC/TFC_ADC.c **** 
 381:../Sources/TFC/TFC_ADC.c **** 
 382:../Sources/TFC/TFC_ADC.c **** 
 383:../Sources/TFC/TFC_ADC.c **** void InitADC0()
 384:../Sources/TFC/TFC_ADC.c **** {
 300              		.loc 1 384 0
 301              		.cfi_startproc
 385:../Sources/TFC/TFC_ADC.c **** 	tADC_Config Master_Adc0_Config;
 386:../Sources/TFC/TFC_ADC.c **** 	
 387:../Sources/TFC/TFC_ADC.c **** 	
 388:../Sources/TFC/TFC_ADC.c ****     SIM_SCGC6 |= (SIM_SCGC6_ADC0_MASK);
 302              		.loc 1 388 0
 303 0000 354A     		ldr	r2, .L21
 384:../Sources/TFC/TFC_ADC.c **** {
 304              		.loc 1 384 0
 305 0002 08B5     		push	{r3, lr}
 306              	.LCFI1:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 310              		.loc 1 388 0
 311 0004 354B     		ldr	r3, .L21+4
 312 0006 8021     		mov	r1, #128
 313 0008 D058     		ldr	r0, [r2, r3]
 314 000a 0905     		lsl	r1, r1, #20
 315 000c 0143     		orr	r1, r0
 316 000e D150     		str	r1, [r2, r3]
 389:../Sources/TFC/TFC_ADC.c ****     
 390:../Sources/TFC/TFC_ADC.c ****     //Lets calibrate the ADC. 1st setup how the channel will be used.
 391:../Sources/TFC/TFC_ADC.c **** 
 392:../Sources/TFC/TFC_ADC.c ****     disable_irq(INT_ADC0-16);   
 317              		.loc 1 392 0
 318 0010 0F20     		mov	r0, #15
 319 0012 FFF7FEFF 		bl	disable_irq
 320              	.LVL27:
 321              	.LBB16:
 322              	.LBB17:
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 323              		.loc 1 347 0
 324 0016 324B     		ldr	r3, .L21+8
 325 0018 5422     		mov	r2, #84
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 326              		.loc 1 349 0
 327 001a 3248     		ldr	r0, .L21+12
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 328              		.loc 1 347 0
 329 001c 9A60     		str	r2, [r3, #8]
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 330              		.loc 1 348 0
 331 001e 0721     		mov	r1, #7
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 332              		.loc 1 350 0
 333 0020 0022     		mov	r2, #0
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 334              		.loc 1 348 0
 335 0022 D960     		str	r1, [r3, #12]
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 336              		.loc 1 349 0
 337 0024 9861     		str	r0, [r3, #24]
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 338              		.loc 1 350 0
 339 0026 DA61     		str	r2, [r3, #28]
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 340              		.loc 1 351 0
 341 0028 5820     		mov	r0, #88
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 342              		.loc 1 352 0
 343 002a 0422     		mov	r2, #4
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 344              		.loc 1 351 0
 345 002c 1862     		str	r0, [r3, #32]
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 346              		.loc 1 352 0
 347 002e 5A62     		str	r2, [r3, #36]
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 348              		.loc 1 354 0
 349 0030 5F20     		mov	r0, #95
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 350              		.loc 1 355 0
 351 0032 0022     		mov	r2, #0
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 352              		.loc 1 354 0
 353 0034 1860     		str	r0, [r3]
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 354              		.loc 1 355 0
 355 0036 5A60     		str	r2, [r3, #4]
 356              	.LVL28:
 357              	.LBE17:
 358              	.LBE16:
 359              	.LBB18:
 360              	.LBB19:
 283:../Sources/TFC/TFC_ADC.c ****   ADC_SC2_REG(adcmap) &=  ~ADC_SC2_ADTRG_MASK ; // Enable Software Conversion Trigger for Calibrati
 361              		.loc 1 283 0
 362 0038 1A6A     		ldr	r2, [r3, #32]
 363 003a 4020     		mov	r0, #64
 364 003c 8243     		bic	r2, r0
 365 003e 1A62     		str	r2, [r3, #32]
 284:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ( ~ADC_SC3_ADCO_MASK & ~ADC_SC3_AVGS_MASK ); // set single conversion, cle
 366              		.loc 1 284 0
 367 0040 5A6A     		ldr	r2, [r3, #36]
 368 0042 0B20     		mov	r0, #11
 369 0044 8243     		bic	r2, r0
 370 0046 5A62     		str	r2, [r3, #36]
 285:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32) );  // Turn averaging ON and s
 371              		.loc 1 285 0
 372 0048 5A6A     		ldr	r2, [r3, #36]
 288:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
 373              		.loc 1 288 0
 374 004a 8020     		mov	r0, #128
 285:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32) );  // Turn averaging ON and s
 375              		.loc 1 285 0
 376 004c 1143     		orr	r1, r2
 377 004e 5962     		str	r1, [r3, #36]
 288:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
 378              		.loc 1 288 0
 379 0050 596A     		ldr	r1, [r3, #36]
 380 0052 0843     		orr	r0, r1
 381 0054 5862     		str	r0, [r3, #36]
 289:../Sources/TFC/TFC_ADC.c ****   while ( (ADC_SC1_REG(adcmap,A) & ADC_SC1_COCO_MASK ) == COCO_NOT ); // Wait calibration end
 382              		.loc 1 289 0
 383 0056 8021     		mov	r1, #128
 384 0058 181C     		mov	r0, r3
 385              	.L15:
 386 005a 0368     		ldr	r3, [r0]
 387 005c 204A     		ldr	r2, .L21+8
 388 005e 1942     		tst	r1, r3
 389 0060 FBD0     		beq	.L15
 291:../Sources/TFC/TFC_ADC.c ****   if ((ADC_SC3_REG(adcmap)& ADC_SC3_CALF_MASK) == CALF_FAIL )
 390              		.loc 1 291 0
 391 0062 506A     		ldr	r0, [r2, #36]
 392 0064 4106     		lsl	r1, r0, #25
 393 0066 24D4     		bmi	.L16
 394              	.LVL29:
 298:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLP0_REG(adcmap); 
 395              		.loc 1 298 0
 396 0068 D16C     		ldr	r1, [r2, #76]
 397              	.LVL30:
 299:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP1_REG(adcmap);
 398              		.loc 1 299 0
 399 006a 936C     		ldr	r3, [r2, #72]
 400 006c C818     		add	r0, r1, r3
 401              	.LVL31:
 300:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP2_REG(adcmap);
 402              		.loc 1 300 0
 403 006e 516C     		ldr	r1, [r2, #68]
 301:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
 404              		.loc 1 301 0
 405 0070 136C     		ldr	r3, [r2, #64]
 300:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP2_REG(adcmap);
 406              		.loc 1 300 0
 407 0072 4018     		add	r0, r0, r1
 408              	.LVL32:
 301:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
 409              		.loc 1 301 0
 410 0074 C118     		add	r1, r0, r3
 411              	.LVL33:
 302:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP4_REG(adcmap);
 412              		.loc 1 302 0
 413 0076 D06B     		ldr	r0, [r2, #60]
 303:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLPS_REG(adcmap);
 414              		.loc 1 303 0
 415 0078 936B     		ldr	r3, [r2, #56]
 302:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP4_REG(adcmap);
 416              		.loc 1 302 0
 417 007a 0918     		add	r1, r1, r0
 418              	.LVL34:
 303:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLPS_REG(adcmap);
 419              		.loc 1 303 0
 420 007c C818     		add	r0, r1, r3
 421 007e 81B2     		uxth	r1, r0
 422              	.LVL35:
 306:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 423              		.loc 1 306 0
 424 0080 194B     		ldr	r3, .L21+16
 305:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 425              		.loc 1 305 0
 426 0082 4808     		lsr	r0, r1, #1
 427              	.LVL36:
 306:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 428              		.loc 1 306 0
 429 0084 1843     		orr	r0, r3
 430              	.LVL37:
 308:../Sources/TFC/TFC_ADC.c ****   ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
 431              		.loc 1 308 0
 432 0086 81B2     		uxth	r1, r0
 433              	.LVL38:
 434 0088 D162     		str	r1, [r2, #44]
 435              	.LVL39:
 314:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLM0_REG(adcmap); 
 436              		.loc 1 314 0
 437 008a D06E     		ldr	r0, [r2, #108]
 438              	.LVL40:
 315:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM1_REG(adcmap);
 439              		.loc 1 315 0
 440 008c 916E     		ldr	r1, [r2, #104]
 441 008e 4118     		add	r1, r0, r1
 442              	.LVL41:
 316:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM2_REG(adcmap);
 443              		.loc 1 316 0
 444 0090 506E     		ldr	r0, [r2, #100]
 445 0092 0918     		add	r1, r1, r0
 446              	.LVL42:
 317:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM3_REG(adcmap);
 447              		.loc 1 317 0
 448 0094 106E     		ldr	r0, [r2, #96]
 449 0096 0918     		add	r1, r1, r0
 450              	.LVL43:
 318:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM4_REG(adcmap);
 451              		.loc 1 318 0
 452 0098 D06D     		ldr	r0, [r2, #92]
 453 009a 0918     		add	r1, r1, r0
 454              	.LVL44:
 319:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLMS_REG(adcmap);
 455              		.loc 1 319 0
 456 009c 906D     		ldr	r0, [r2, #88]
 457 009e 0918     		add	r1, r1, r0
 458              	.LVL45:
 459 00a0 88B2     		uxth	r0, r1
 460              	.LVL46:
 321:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 461              		.loc 1 321 0
 462 00a2 4108     		lsr	r1, r0, #1
 463              	.LVL47:
 323:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 464              		.loc 1 323 0
 465 00a4 0B43     		orr	r3, r1
 325:../Sources/TFC/TFC_ADC.c ****   ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var); 
 466              		.loc 1 325 0
 467 00a6 9BB2     		uxth	r3, r3
 468 00a8 1363     		str	r3, [r2, #48]
 327:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK ; /* Clear CAL bit */
 469              		.loc 1 327 0
 470 00aa 506A     		ldr	r0, [r2, #36]
 471 00ac 8021     		mov	r1, #128
 472              	.LVL48:
 473 00ae 8843     		bic	r0, r1
 474 00b0 5062     		str	r0, [r2, #36]
 475              	.L16:
 476              	.LVL49:
 477              	.LBE19:
 478              	.LBE18:
 479              	.LBB20:
 480              	.LBB21:
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 481              		.loc 1 347 0
 482 00b2 0B4B     		ldr	r3, .L21+8
 483 00b4 5422     		mov	r2, #84
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 484              		.loc 1 348 0
 485 00b6 0720     		mov	r0, #7
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 486              		.loc 1 349 0
 487 00b8 0A49     		ldr	r1, .L21+12
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 488              		.loc 1 347 0
 489 00ba 9A60     		str	r2, [r3, #8]
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 490              		.loc 1 348 0
 491 00bc D860     		str	r0, [r3, #12]
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 492              		.loc 1 350 0
 493 00be 0022     		mov	r2, #0
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 494              		.loc 1 351 0
 495 00c0 1820     		mov	r0, #24
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 496              		.loc 1 349 0
 497 00c2 9961     		str	r1, [r3, #24]
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 498              		.loc 1 350 0
 499 00c4 DA61     		str	r2, [r3, #28]
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 500              		.loc 1 352 0
 501 00c6 0021     		mov	r1, #0
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 502              		.loc 1 351 0
 503 00c8 1862     		str	r0, [r3, #32]
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 504              		.loc 1 354 0
 505 00ca 5F22     		mov	r2, #95
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 506              		.loc 1 355 0
 507 00cc 0020     		mov	r0, #0
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 508              		.loc 1 352 0
 509 00ce 5962     		str	r1, [r3, #36]
 510              	.LBE21:
 511              	.LBE20:
 393:../Sources/TFC/TFC_ADC.c ****      
 394:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.CONFIG1 = ADLPC_NORMAL 			//No low power mode
 395:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_ADIV(ADIV_4) //divide input by 4
 396:../Sources/TFC/TFC_ADC.c **** 								| ADLSMP_LONG 			//long sample time
 397:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_MODE(MODE_12)//single ended 12-bit conversion
 398:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_ADICLK(ADICLK_BUS);
 399:../Sources/TFC/TFC_ADC.c ****     
 400:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.CONFIG2 = MUXSEL_ADCA // select the A side of the ADC channel.
 401:../Sources/TFC/TFC_ADC.c **** 								| ADACKEN_DISABLED
 402:../Sources/TFC/TFC_ADC.c **** 								| ADHSC_HISPEED
 403:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG2_ADLSTS(ADLSTS_2);//Extra long sample Time (20 extra clocks)
 404:../Sources/TFC/TFC_ADC.c ****     
 405:../Sources/TFC/TFC_ADC.c ****     
 406:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.COMPARE1 = 00000; // Comparators don't matter for calibration
 407:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.COMPARE1 = 0xFFFF;
 408:../Sources/TFC/TFC_ADC.c ****     
 409:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS2  = ADTRG_HW //hardware triggers for calibration
 410:../Sources/TFC/TFC_ADC.c ****                                | ACFE_DISABLED //disable comparator
 411:../Sources/TFC/TFC_ADC.c ****                                | ACFGT_GREATER
 412:../Sources/TFC/TFC_ADC.c ****                                | ACREN_ENABLED
 413:../Sources/TFC/TFC_ADC.c ****                                | DMAEN_DISABLED //Disable DMA
 414:../Sources/TFC/TFC_ADC.c ****                                | ADC_SC2_REFSEL(REFSEL_EXT); //External Reference
 415:../Sources/TFC/TFC_ADC.c ****         
 416:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS3 = CAL_OFF  
 417:../Sources/TFC/TFC_ADC.c **** 								| ADCO_SINGLE
 418:../Sources/TFC/TFC_ADC.c ****     							| AVGE_ENABLED
 419:../Sources/TFC/TFC_ADC.c **** 								| ADC_SC3_AVGS(AVGS_4);
 420:../Sources/TFC/TFC_ADC.c **** 								
 421:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.PGA =     0; // Disable the PGA
 422:../Sources/TFC/TFC_ADC.c ****    
 423:../Sources/TFC/TFC_ADC.c ****    
 424:../Sources/TFC/TFC_ADC.c ****     // Configure ADC as it will be used, but because ADC_SC1_ADCH is 31,
 425:../Sources/TFC/TFC_ADC.c ****     // the ADC will be inactive.  Channel 31 is just disable function.
 426:../Sources/TFC/TFC_ADC.c ****     // There really is no channel 31.
 427:../Sources/TFC/TFC_ADC.c ****     
 428:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS1A = AIEN_ON | DIFF_SINGLE | ADC_SC1_ADCH(31);
 429:../Sources/TFC/TFC_ADC.c **** 
 430:../Sources/TFC/TFC_ADC.c ****     
 431:../Sources/TFC/TFC_ADC.c ****     ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc0_Config);  // config ADC
 432:../Sources/TFC/TFC_ADC.c ****  
 433:../Sources/TFC/TFC_ADC.c ****     // Calibrate the ADC in the configuration in which it will be used:
 434:../Sources/TFC/TFC_ADC.c ****      ADC_Cal(ADC0_BASE_PTR);                    // do the calibration
 435:../Sources/TFC/TFC_ADC.c ****      
 436:../Sources/TFC/TFC_ADC.c ****      
 437:../Sources/TFC/TFC_ADC.c ****      Master_Adc0_Config.STATUS2  = ACFE_DISABLED //disable comparator
 438:../Sources/TFC/TFC_ADC.c ****                                 | ACFGT_GREATER
 439:../Sources/TFC/TFC_ADC.c ****                                 | ACREN_ENABLED
 440:../Sources/TFC/TFC_ADC.c ****                                 | DMAEN_DISABLED //Disable DMA
 441:../Sources/TFC/TFC_ADC.c ****                                 | ADC_SC2_REFSEL(REFSEL_EXT); //External Reference
 442:../Sources/TFC/TFC_ADC.c ****     
 443:../Sources/TFC/TFC_ADC.c ****      Master_Adc0_Config.STATUS3 = CAL_OFF  
 444:../Sources/TFC/TFC_ADC.c ****      							| ADCO_SINGLE;
 445:../Sources/TFC/TFC_ADC.c ****      	 	 	 	 	 	 	
 446:../Sources/TFC/TFC_ADC.c ****      	 	 	 	 	 	 	
 447:../Sources/TFC/TFC_ADC.c ****      			
 448:../Sources/TFC/TFC_ADC.c ****      ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc0_Config);
 449:../Sources/TFC/TFC_ADC.c **** }
 512              		.loc 1 449 0
 513              		@ sp needed for prologue
 514              	.LBB23:
 515              	.LBB22:
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 516              		.loc 1 354 0
 517 00d0 1A60     		str	r2, [r3]
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 518              		.loc 1 355 0
 519 00d2 5860     		str	r0, [r3, #4]
 520              	.LBE22:
 521              	.LBE23:
 522              		.loc 1 449 0
 523 00d4 08BD     		pop	{r3, pc}
 524              	.L22:
 525 00d6 C046     		.align	2
 526              	.L21:
 527 00d8 00700440 		.word	1074032640
 528 00dc 3C100000 		.word	4156
 529 00e0 00B00340 		.word	1073983488
 530 00e4 FFFF0000 		.word	65535
 531 00e8 0080FFFF 		.word	-32768
 532              		.cfi_endproc
 533              	.LFE3:
 535              		.section	.text.TFC_InitADCs,"ax",%progbits
 536              		.align	2
 537              		.global	TFC_InitADCs
 538              		.code	16
 539              		.thumb_func
 541              	TFC_InitADCs:
 542              	.LFB4:
 450:../Sources/TFC/TFC_ADC.c **** 
 451:../Sources/TFC/TFC_ADC.c **** 
 452:../Sources/TFC/TFC_ADC.c **** 
 453:../Sources/TFC/TFC_ADC.c **** void TFC_InitADCs(carState_s* carStateInputPointer)
 454:../Sources/TFC/TFC_ADC.c **** {
 543              		.loc 1 454 0
 544              		.cfi_startproc
 545              	.LVL50:
 546 0000 38B5     		push	{r3, r4, r5, lr}
 547              	.LCFI2:
 548              		.cfi_def_cfa_offset 16
 549              		.cfi_offset 3, -16
 550              		.cfi_offset 4, -12
 551              		.cfi_offset 5, -8
 552              		.cfi_offset 14, -4
 553              	.LBB32:
 554              	.LBB33:
 388:../Sources/TFC/TFC_ADC.c ****     SIM_SCGC6 |= (SIM_SCGC6_ADC0_MASK);
 555              		.loc 1 388 0
 556 0002 4A4A     		ldr	r2, .L30
 557 0004 4A4B     		ldr	r3, .L30+4
 558 0006 8021     		mov	r1, #128
 559              	.LBE33:
 560              	.LBE32:
 561              		.loc 1 454 0
 562 0008 051C     		mov	r5, r0
 563              	.LBB41:
 564              	.LBB40:
 388:../Sources/TFC/TFC_ADC.c ****     SIM_SCGC6 |= (SIM_SCGC6_ADC0_MASK);
 565              		.loc 1 388 0
 566 000a D058     		ldr	r0, [r2, r3]
 567              	.LVL51:
 568 000c 0C05     		lsl	r4, r1, #20
 569 000e 0443     		orr	r4, r0
 570 0010 D450     		str	r4, [r2, r3]
 392:../Sources/TFC/TFC_ADC.c ****     disable_irq(INT_ADC0-16);   
 571              		.loc 1 392 0
 572 0012 0F20     		mov	r0, #15
 573 0014 FFF7FEFF 		bl	disable_irq
 574              	.LVL52:
 575              	.LBB34:
 576              	.LBB35:
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 577              		.loc 1 347 0
 578 0018 464B     		ldr	r3, .L30+8
 579 001a 5422     		mov	r2, #84
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 580              		.loc 1 349 0
 581 001c 4648     		ldr	r0, .L30+12
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 582              		.loc 1 347 0
 583 001e 9A60     		str	r2, [r3, #8]
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 584              		.loc 1 348 0
 585 0020 0721     		mov	r1, #7
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 586              		.loc 1 350 0
 587 0022 0024     		mov	r4, #0
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 588              		.loc 1 351 0
 589 0024 5822     		mov	r2, #88
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 590              		.loc 1 348 0
 591 0026 D960     		str	r1, [r3, #12]
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 592              		.loc 1 349 0
 593 0028 9861     		str	r0, [r3, #24]
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 594              		.loc 1 350 0
 595 002a DC61     		str	r4, [r3, #28]
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 596              		.loc 1 352 0
 597 002c 0420     		mov	r0, #4
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 598              		.loc 1 351 0
 599 002e 1A62     		str	r2, [r3, #32]
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 600              		.loc 1 354 0
 601 0030 5F24     		mov	r4, #95
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 602              		.loc 1 355 0
 603 0032 0022     		mov	r2, #0
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 604              		.loc 1 352 0
 605 0034 5862     		str	r0, [r3, #36]
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 606              		.loc 1 354 0
 607 0036 1C60     		str	r4, [r3]
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 608              		.loc 1 355 0
 609 0038 5A60     		str	r2, [r3, #4]
 610              	.LVL53:
 611              	.LBE35:
 612              	.LBE34:
 613              	.LBB36:
 614              	.LBB37:
 283:../Sources/TFC/TFC_ADC.c ****   ADC_SC2_REG(adcmap) &=  ~ADC_SC2_ADTRG_MASK ; // Enable Software Conversion Trigger for Calibrati
 615              		.loc 1 283 0
 616 003a 1C6A     		ldr	r4, [r3, #32]
 617 003c 4020     		mov	r0, #64
 618 003e 8443     		bic	r4, r0
 619 0040 1C62     		str	r4, [r3, #32]
 284:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ( ~ADC_SC3_ADCO_MASK & ~ADC_SC3_AVGS_MASK ); // set single conversion, cle
 620              		.loc 1 284 0
 621 0042 5A6A     		ldr	r2, [r3, #36]
 622 0044 0B24     		mov	r4, #11
 623 0046 A243     		bic	r2, r4
 624 0048 5A62     		str	r2, [r3, #36]
 285:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32) );  // Turn averaging ON and s
 625              		.loc 1 285 0
 626 004a 586A     		ldr	r0, [r3, #36]
 288:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
 627              		.loc 1 288 0
 628 004c 8022     		mov	r2, #128
 285:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32) );  // Turn averaging ON and s
 629              		.loc 1 285 0
 630 004e 0143     		orr	r1, r0
 631 0050 5962     		str	r1, [r3, #36]
 288:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
 632              		.loc 1 288 0
 633 0052 596A     		ldr	r1, [r3, #36]
 289:../Sources/TFC/TFC_ADC.c ****   while ( (ADC_SC1_REG(adcmap,A) & ADC_SC1_COCO_MASK ) == COCO_NOT ); // Wait calibration end
 634              		.loc 1 289 0
 635 0054 1C1C     		mov	r4, r3
 288:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
 636              		.loc 1 288 0
 637 0056 0A43     		orr	r2, r1
 638 0058 5A62     		str	r2, [r3, #36]
 289:../Sources/TFC/TFC_ADC.c ****   while ( (ADC_SC1_REG(adcmap,A) & ADC_SC1_COCO_MASK ) == COCO_NOT ); // Wait calibration end
 639              		.loc 1 289 0
 640 005a 8020     		mov	r0, #128
 641              	.L24:
 642 005c 2368     		ldr	r3, [r4]
 643 005e 354A     		ldr	r2, .L30+8
 644 0060 1842     		tst	r0, r3
 645 0062 FBD0     		beq	.L24
 291:../Sources/TFC/TFC_ADC.c ****   if ((ADC_SC3_REG(adcmap)& ADC_SC3_CALF_MASK) == CALF_FAIL )
 646              		.loc 1 291 0
 647 0064 516A     		ldr	r1, [r2, #36]
 648 0066 4906     		lsl	r1, r1, #25
 649 0068 24D4     		bmi	.L25
 650              	.LVL54:
 298:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLP0_REG(adcmap); 
 651              		.loc 1 298 0
 652 006a D46C     		ldr	r4, [r2, #76]
 653              	.LVL55:
 299:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP1_REG(adcmap);
 654              		.loc 1 299 0
 655 006c 906C     		ldr	r0, [r2, #72]
 300:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP2_REG(adcmap);
 656              		.loc 1 300 0
 657 006e 536C     		ldr	r3, [r2, #68]
 299:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP1_REG(adcmap);
 658              		.loc 1 299 0
 659 0070 2118     		add	r1, r4, r0
 660              	.LVL56:
 301:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
 661              		.loc 1 301 0
 662 0072 106C     		ldr	r0, [r2, #64]
 300:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP2_REG(adcmap);
 663              		.loc 1 300 0
 664 0074 CC18     		add	r4, r1, r3
 665              	.LVL57:
 302:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP4_REG(adcmap);
 666              		.loc 1 302 0
 667 0076 D36B     		ldr	r3, [r2, #60]
 301:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
 668              		.loc 1 301 0
 669 0078 2118     		add	r1, r4, r0
 670              	.LVL58:
 303:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLPS_REG(adcmap);
 671              		.loc 1 303 0
 672 007a 906B     		ldr	r0, [r2, #56]
 302:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP4_REG(adcmap);
 673              		.loc 1 302 0
 674 007c CC18     		add	r4, r1, r3
 675              	.LVL59:
 303:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLPS_REG(adcmap);
 676              		.loc 1 303 0
 677 007e 2118     		add	r1, r4, r0
 678 0080 8BB2     		uxth	r3, r1
 679              	.LVL60:
 305:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 680              		.loc 1 305 0
 681 0082 5C08     		lsr	r4, r3, #1
 682              	.LVL61:
 306:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 683              		.loc 1 306 0
 684 0084 2D4B     		ldr	r3, .L30+16
 685 0086 1C43     		orr	r4, r3
 686              	.LVL62:
 308:../Sources/TFC/TFC_ADC.c ****   ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
 687              		.loc 1 308 0
 688 0088 A0B2     		uxth	r0, r4
 689 008a D062     		str	r0, [r2, #44]
 690              	.LVL63:
 314:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLM0_REG(adcmap); 
 691              		.loc 1 314 0
 692 008c D46E     		ldr	r4, [r2, #108]
 693              	.LVL64:
 315:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM1_REG(adcmap);
 694              		.loc 1 315 0
 695 008e 916E     		ldr	r1, [r2, #104]
 316:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM2_REG(adcmap);
 696              		.loc 1 316 0
 697 0090 506E     		ldr	r0, [r2, #100]
 315:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM1_REG(adcmap);
 698              		.loc 1 315 0
 699 0092 6418     		add	r4, r4, r1
 700              	.LVL65:
 316:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM2_REG(adcmap);
 701              		.loc 1 316 0
 702 0094 2118     		add	r1, r4, r0
 703              	.LVL66:
 317:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM3_REG(adcmap);
 704              		.loc 1 317 0
 705 0096 146E     		ldr	r4, [r2, #96]
 318:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM4_REG(adcmap);
 706              		.loc 1 318 0
 707 0098 D06D     		ldr	r0, [r2, #92]
 317:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM3_REG(adcmap);
 708              		.loc 1 317 0
 709 009a 0919     		add	r1, r1, r4
 710              	.LVL67:
 318:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM4_REG(adcmap);
 711              		.loc 1 318 0
 712 009c 0C18     		add	r4, r1, r0
 713              	.LVL68:
 319:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLMS_REG(adcmap);
 714              		.loc 1 319 0
 715 009e 916D     		ldr	r1, [r2, #88]
 716 00a0 6018     		add	r0, r4, r1
 717 00a2 84B2     		uxth	r4, r0
 718              	.LVL69:
 321:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 719              		.loc 1 321 0
 720 00a4 6108     		lsr	r1, r4, #1
 721              	.LVL70:
 323:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 722              		.loc 1 323 0
 723 00a6 0B43     		orr	r3, r1
 325:../Sources/TFC/TFC_ADC.c ****   ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var); 
 724              		.loc 1 325 0
 725 00a8 9BB2     		uxth	r3, r3
 726 00aa 1363     		str	r3, [r2, #48]
 327:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK ; /* Clear CAL bit */
 727              		.loc 1 327 0
 728 00ac 506A     		ldr	r0, [r2, #36]
 729 00ae 8024     		mov	r4, #128
 730 00b0 A043     		bic	r0, r4
 731 00b2 5062     		str	r0, [r2, #36]
 732              	.LVL71:
 733              	.L25:
 734              	.LBE37:
 735              	.LBE36:
 736              	.LBB38:
 737              	.LBB39:
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 738              		.loc 1 347 0
 739 00b4 1F4B     		ldr	r3, .L30+8
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 740              		.loc 1 349 0
 741 00b6 2048     		ldr	r0, .L30+12
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 742              		.loc 1 347 0
 743 00b8 5422     		mov	r2, #84
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 744              		.loc 1 348 0
 745 00ba 0721     		mov	r1, #7
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 746              		.loc 1 350 0
 747 00bc 0024     		mov	r4, #0
 347:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 748              		.loc 1 347 0
 749 00be 9A60     		str	r2, [r3, #8]
 348:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 750              		.loc 1 348 0
 751 00c0 D960     		str	r1, [r3, #12]
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 752              		.loc 1 351 0
 753 00c2 1822     		mov	r2, #24
 349:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 754              		.loc 1 349 0
 755 00c4 9861     		str	r0, [r3, #24]
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 756              		.loc 1 352 0
 757 00c6 0021     		mov	r1, #0
 350:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 758              		.loc 1 350 0
 759 00c8 DC61     		str	r4, [r3, #28]
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 760              		.loc 1 354 0
 761 00ca 5F20     		mov	r0, #95
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 762              		.loc 1 355 0
 763 00cc 0024     		mov	r4, #0
 351:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 764              		.loc 1 351 0
 765 00ce 1A62     		str	r2, [r3, #32]
 352:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 766              		.loc 1 352 0
 767 00d0 5962     		str	r1, [r3, #36]
 354:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 768              		.loc 1 354 0
 769 00d2 1860     		str	r0, [r3]
 355:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 770              		.loc 1 355 0
 771 00d4 5C60     		str	r4, [r3, #4]
 772              	.LBE39:
 773              	.LBE38:
 774              	.LBE40:
 775              	.LBE41:
 455:../Sources/TFC/TFC_ADC.c **** 	 InitADC0();
 456:../Sources/TFC/TFC_ADC.c **** 	 
 457:../Sources/TFC/TFC_ADC.c **** 	 carState = carStateInputPointer;
 776              		.loc 1 457 0
 777 00d6 1A4B     		ldr	r3, .L30+20
 458:../Sources/TFC/TFC_ADC.c **** 
 459:../Sources/TFC/TFC_ADC.c **** 	
 460:../Sources/TFC/TFC_ADC.c **** 	//All Adc processing of the Pots and linescan will be done in the ADC0 IRQ!
 461:../Sources/TFC/TFC_ADC.c **** 	//A state machine will scan through the channels.
 462:../Sources/TFC/TFC_ADC.c **** 	//This is done to automate the linescan capture on Channel 0 to ensure that timing is very even
 463:../Sources/TFC/TFC_ADC.c **** 	CurrentADC_State =	ADC_STATE_INIT;	
 464:../Sources/TFC/TFC_ADC.c **** 
 465:../Sources/TFC/TFC_ADC.c ****     //The pump will be primed with the PIT interrupt.  upon timeout/interrupt it will set the SI si
 466:../Sources/TFC/TFC_ADC.c **** 	//for the camera and then start the conversions for the pots.
 467:../Sources/TFC/TFC_ADC.c **** 	
 468:../Sources/TFC/TFC_ADC.c **** 	//Enable clock to the PIT
 469:../Sources/TFC/TFC_ADC.c **** 	SIM_SCGC6 |= SIM_SCGC6_PIT_MASK;
 778              		.loc 1 469 0
 779 00d8 144A     		ldr	r2, .L30
 457:../Sources/TFC/TFC_ADC.c **** 	 carState = carStateInputPointer;
 780              		.loc 1 457 0
 781 00da 1D60     		str	r5, [r3]
 463:../Sources/TFC/TFC_ADC.c **** 	CurrentADC_State =	ADC_STATE_INIT;	
 782              		.loc 1 463 0
 783 00dc 194D     		ldr	r5, .L30+24
 784              	.LVL72:
 785              		.loc 1 469 0
 786 00de 144C     		ldr	r4, .L30+4
 463:../Sources/TFC/TFC_ADC.c **** 	CurrentADC_State =	ADC_STATE_INIT;	
 787              		.loc 1 463 0
 788 00e0 2970     		strb	r1, [r5]
 789              		.loc 1 469 0
 790 00e2 1059     		ldr	r0, [r2, r4]
 791 00e4 8021     		mov	r1, #128
 792 00e6 0B04     		lsl	r3, r1, #16
 793 00e8 0343     		orr	r3, r0
 794 00ea 1351     		str	r3, [r2, r4]
 470:../Sources/TFC/TFC_ADC.c **** 	
 471:../Sources/TFC/TFC_ADC.c **** 	//We will use PIT0
 472:../Sources/TFC/TFC_ADC.c **** 	TFC_SetLineScanExposureTime(TFC_DEFAULT_LINESCAN_EXPOSURE_TIME_uS);
 795              		.loc 1 472 0
 796 00ec 1648     		ldr	r0, .L30+28
 797 00ee FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 798              	.LVL73:
 473:../Sources/TFC/TFC_ADC.c **** 	//enable PIT0 and its interrupt
 474:../Sources/TFC/TFC_ADC.c **** 	PIT_TCTRL0 = PIT_TCTRL_TEN_MASK | PIT_TCTRL_TIE_MASK;
 799              		.loc 1 474 0
 800 00f2 164D     		ldr	r5, .L30+32
 801 00f4 8422     		mov	r2, #132
 802 00f6 5000     		lsl	r0, r2, #1
 803 00f8 0324     		mov	r4, #3
 804 00fa 2C50     		str	r4, [r5, r0]
 475:../Sources/TFC/TFC_ADC.c **** 
 476:../Sources/TFC/TFC_ADC.c **** 	PIT_MCR |= PIT_MCR_FRZ_MASK; // stop the pit when in debug mode
 805              		.loc 1 476 0
 806 00fc 2968     		ldr	r1, [r5]
 807 00fe 0123     		mov	r3, #1
 808 0100 0B43     		orr	r3, r1
 809 0102 2B60     		str	r3, [r5]
 477:../Sources/TFC/TFC_ADC.c **** 	//Enable the PIT module
 478:../Sources/TFC/TFC_ADC.c **** 	PIT_MCR &= ~PIT_MCR_MDIS_MASK;
 810              		.loc 1 478 0
 811 0104 2C68     		ldr	r4, [r5]
 812 0106 0222     		mov	r2, #2
 813 0108 9443     		bic	r4, r2
 814 010a 2C60     		str	r4, [r5]
 479:../Sources/TFC/TFC_ADC.c **** 	
 480:../Sources/TFC/TFC_ADC.c **** 
 481:../Sources/TFC/TFC_ADC.c **** 	set_irq_priority (INT_PIT - 16, 0); //Set to highest priority
 815              		.loc 1 481 0
 816 010c 1620     		mov	r0, #22
 817 010e 0021     		mov	r1, #0
 818 0110 FFF7FEFF 		bl	set_irq_priority
 819              	.LVL74:
 482:../Sources/TFC/TFC_ADC.c **** 	set_irq_priority (INT_ADC0 - 16, 1); //Set to second highest priority
 820              		.loc 1 482 0
 821 0114 0121     		mov	r1, #1
 822 0116 0F20     		mov	r0, #15
 823 0118 FFF7FEFF 		bl	set_irq_priority
 824              	.LVL75:
 483:../Sources/TFC/TFC_ADC.c **** 	
 484:../Sources/TFC/TFC_ADC.c **** 	enable_irq(INT_PIT-16);
 825              		.loc 1 484 0
 826 011c 1620     		mov	r0, #22
 827 011e FFF7FEFF 		bl	enable_irq
 828              	.LVL76:
 485:../Sources/TFC/TFC_ADC.c **** 	enable_irq(INT_ADC0-16);
 829              		.loc 1 485 0
 830 0122 0F20     		mov	r0, #15
 831 0124 FFF7FEFF 		bl	enable_irq
 832              	.LVL77:
 486:../Sources/TFC/TFC_ADC.c **** }
 833              		.loc 1 486 0
 834              		@ sp needed for prologue
 835 0128 38BD     		pop	{r3, r4, r5, pc}
 836              	.L31:
 837 012a C046     		.align	2
 838              	.L30:
 839 012c 00700440 		.word	1074032640
 840 0130 3C100000 		.word	4156
 841 0134 00B00340 		.word	1073983488
 842 0138 FFFF0000 		.word	65535
 843 013c 0080FFFF 		.word	-32768
 844 0140 00000000 		.word	.LANCHOR0
 845 0144 00000000 		.word	.LANCHOR1
 846 0148 10270000 		.word	10000
 847 014c 00700340 		.word	1073967104
 848              		.cfi_endproc
 849              	.LFE4:
 851              		.section	.text.PIT_IRQHandler,"ax",%progbits
 852              		.align	2
 853              		.global	PIT_IRQHandler
 854              		.code	16
 855              		.thumb_func
 857              	PIT_IRQHandler:
 858              	.LFB5:
 487:../Sources/TFC/TFC_ADC.c **** 
 488:../Sources/TFC/TFC_ADC.c **** void PIT_IRQHandler()
 489:../Sources/TFC/TFC_ADC.c **** {
 859              		.loc 1 489 0
 860              		.cfi_startproc
 490:../Sources/TFC/TFC_ADC.c **** 	PIT_TFLG0 = PIT_TFLG_TIF_MASK; //Turn off the Pit 0 Irq flag 
 861              		.loc 1 490 0
 862 0000 8622     		mov	r2, #134
 863 0002 0849     		ldr	r1, .L33
 864 0004 0123     		mov	r3, #1
 865 0006 5000     		lsl	r0, r2, #1
 866 0008 0B50     		str	r3, [r1, r0]
 491:../Sources/TFC/TFC_ADC.c **** 	
 492:../Sources/TFC/TFC_ADC.c **** 	TAOS_SI_HIGH;
 867              		.loc 1 492 0
 868 000a 074A     		ldr	r2, .L33+4
 493:../Sources/TFC/TFC_ADC.c **** 	//Prime the ADC pump and start capturing POT 0
 494:../Sources/TFC/TFC_ADC.c **** 	CurrentADC_State = ADC_STATE_CAPTURE_POT_0;
 869              		.loc 1 494 0
 870 000c 0749     		ldr	r1, .L33+8
 492:../Sources/TFC/TFC_ADC.c **** 	TAOS_SI_HIGH;
 871              		.loc 1 492 0
 872 000e 8020     		mov	r0, #128
 873 0010 5060     		str	r0, [r2, #4]
 874              		.loc 1 494 0
 875 0012 0B70     		strb	r3, [r1]
 495:../Sources/TFC/TFC_ADC.c **** 	
 496:../Sources/TFC/TFC_ADC.c **** 	ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 876              		.loc 1 496 0
 877 0014 064B     		ldr	r3, .L33+12
 878 0016 1022     		mov	r2, #16
 879 0018 D868     		ldr	r0, [r3, #12]
 497:../Sources/TFC/TFC_ADC.c **** 	ADC0_SC1A  =  TFC_POT_0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;  //Start the State machine at POT0
 880              		.loc 1 497 0
 881 001a 4D21     		mov	r1, #77
 496:../Sources/TFC/TFC_ADC.c **** 	ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 882              		.loc 1 496 0
 883 001c 9043     		bic	r0, r2
 884 001e D860     		str	r0, [r3, #12]
 498:../Sources/TFC/TFC_ADC.c **** }
 885              		.loc 1 498 0
 886              		@ sp needed for prologue
 497:../Sources/TFC/TFC_ADC.c **** 	ADC0_SC1A  =  TFC_POT_0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;  //Start the State machine at POT0
 887              		.loc 1 497 0
 888 0020 1960     		str	r1, [r3]
 889              		.loc 1 498 0
 890 0022 7047     		bx	lr
 891              	.L34:
 892              		.align	2
 893              	.L33:
 894 0024 00700340 		.word	1073967104
 895 0028 C0F00F40 		.word	1074786496
 896 002c 00000000 		.word	.LANCHOR1
 897 0030 00B00340 		.word	1073983488
 898              		.cfi_endproc
 899              	.LFE5:
 901              		.section	.text.ADC0_IRQHandler,"ax",%progbits
 902              		.align	2
 903              		.global	ADC0_IRQHandler
 904              		.code	16
 905              		.thumb_func
 907              	ADC0_IRQHandler:
 908              	.LFB6:
 499:../Sources/TFC/TFC_ADC.c **** 
 500:../Sources/TFC/TFC_ADC.c **** 
 501:../Sources/TFC/TFC_ADC.c **** 
 502:../Sources/TFC/TFC_ADC.c **** void ADC0_IRQHandler()
 503:../Sources/TFC/TFC_ADC.c **** {
 909              		.loc 1 503 0
 910              		.cfi_startproc
 911 0000 10B5     		push	{r4, lr}
 912              	.LCFI3:
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 4, -8
 915              		.cfi_offset 14, -4
 504:../Sources/TFC/TFC_ADC.c **** 	uint8_t Junk;
 505:../Sources/TFC/TFC_ADC.c **** 	switch(CurrentADC_State)
 916              		.loc 1 505 0
 917 0002 5B4B     		ldr	r3, .L50
 918 0004 1A78     		ldrb	r2, [r3]
 919 0006 062A     		cmp	r2, #6
 920 0008 02D9     		bls	.L49
 921              	.L36:
 506:../Sources/TFC/TFC_ADC.c **** 	{
 507:../Sources/TFC/TFC_ADC.c **** 		default:
 508:../Sources/TFC/TFC_ADC.c **** 			Junk =  ADC0_RA;
 922              		.loc 1 508 0
 923 000a 5A4B     		ldr	r3, .L50+4
 924 000c 1B69     		ldr	r3, [r3, #16]
 925              	.L35:
 509:../Sources/TFC/TFC_ADC.c **** 		break;
 510:../Sources/TFC/TFC_ADC.c **** 		
 511:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_POT_0:
 512:../Sources/TFC/TFC_ADC.c **** 				
 513:../Sources/TFC/TFC_ADC.c **** 			PotADC_Value[0] = ADC0_RA;
 514:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 515:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_POT_1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 516:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_STATE_CAPTURE_POT_1;
 517:../Sources/TFC/TFC_ADC.c **** 				
 518:../Sources/TFC/TFC_ADC.c **** 			break;
 519:../Sources/TFC/TFC_ADC.c **** 		
 520:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_POT_1:
 521:../Sources/TFC/TFC_ADC.c **** 		
 522:../Sources/TFC/TFC_ADC.c **** 			PotADC_Value[1] = ADC0_RA;				
 523:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 524:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A = TFC_MOTOR_CURRENT_0_CHANNEL | ADC_SC1_AIEN_MASK;
 525:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_MOTOR_CURRENT_0;	
 526:../Sources/TFC/TFC_ADC.c **** 			break;
 527:../Sources/TFC/TFC_ADC.c **** 			
 528:../Sources/TFC/TFC_ADC.c **** 		case ADC_MOTOR_CURRENT_0:
 529:../Sources/TFC/TFC_ADC.c **** 			motorCurrent[0] = ADC0_RA;
 530:../Sources/TFC/TFC_ADC.c **** 			
 531:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 532:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A = TFC_MOTOR_CURRENT_1_CHANNEL | ADC_SC1_AIEN_MASK;
 533:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_MOTOR_CURRENT_1;
 534:../Sources/TFC/TFC_ADC.c **** 			break;
 535:../Sources/TFC/TFC_ADC.c **** 			
 536:../Sources/TFC/TFC_ADC.c **** 		case ADC_MOTOR_CURRENT_1:
 537:../Sources/TFC/TFC_ADC.c **** 			motorCurrent[1] = ADC0_RA;
 538:../Sources/TFC/TFC_ADC.c **** 
 539:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 540:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_BAT_SENSE_CHANNEL| ADC_SC1_AIEN_MASK;
 541:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_STATE_CAPTURE_BATTERY_LEVEL;
 542:../Sources/TFC/TFC_ADC.c **** 			break;
 543:../Sources/TFC/TFC_ADC.c **** 		
 544:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_BATTERY_LEVEL:
 545:../Sources/TFC/TFC_ADC.c **** 			
 546:../Sources/TFC/TFC_ADC.c **** 			BatSenseADC_Value = ADC0_RA;
 547:../Sources/TFC/TFC_ADC.c **** 			
 548:../Sources/TFC/TFC_ADC.c **** 			//Now we will start the sequence for the Linescan camera
 549:../Sources/TFC/TFC_ADC.c **** 			
 550:../Sources/TFC/TFC_ADC.c **** 			TAOS_CLK_HIGH;
 551:../Sources/TFC/TFC_ADC.c **** 			
 552:../Sources/TFC/TFC_ADC.c **** 			for(Junk = 0;Junk<50;Junk++)
 553:../Sources/TFC/TFC_ADC.c **** 			{
 554:../Sources/TFC/TFC_ADC.c **** 			}
 555:../Sources/TFC/TFC_ADC.c **** 			
 556:../Sources/TFC/TFC_ADC.c **** 			TAOS_SI_LOW;
 557:../Sources/TFC/TFC_ADC.c **** 
 558:../Sources/TFC/TFC_ADC.c **** 			
 559:../Sources/TFC/TFC_ADC.c **** 			CurrentLineScanPixel = 0;
 560:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_STATE_CAPTURE_LINE_SCAN;
 561:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 562:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 563:../Sources/TFC/TFC_ADC.c **** 			break;
 564:../Sources/TFC/TFC_ADC.c **** 		
 565:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_LINE_SCAN:
 566:../Sources/TFC/TFC_ADC.c **** 					
 567:../Sources/TFC/TFC_ADC.c **** 			if(CurrentLineScanPixel<128)
 568:../Sources/TFC/TFC_ADC.c **** 			{
 569:../Sources/TFC/TFC_ADC.c **** 				#ifdef CAMERA_TWO_ENABLE
 570:../Sources/TFC/TFC_ADC.c **** 				
 571:../Sources/TFC/TFC_ADC.c **** 				if(CurrentLineScanChannel == 0)
 572:../Sources/TFC/TFC_ADC.c **** 				{
 573:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 574:../Sources/TFC/TFC_ADC.c **** 					ADC0_SC1A  =  TFC_LINESCAN1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 575:../Sources/TFC/TFC_ADC.c **** 					CurrentLineScanChannel = 1;
 576:../Sources/TFC/TFC_ADC.c **** 				}
 577:../Sources/TFC/TFC_ADC.c **** 				else
 578:../Sources/TFC/TFC_ADC.c **** 				{
 579:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 580:../Sources/TFC/TFC_ADC.c **** 					ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 581:../Sources/TFC/TFC_ADC.c **** 					CurrentLineScanChannel = 0;				
 582:../Sources/TFC/TFC_ADC.c **** 					CurrentLineScanPixel++;
 583:../Sources/TFC/TFC_ADC.c **** 					
 584:../Sources/TFC/TFC_ADC.c **** 					TAOS_CLK_LOW;
 585:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<10;Junk++)
 586:../Sources/TFC/TFC_ADC.c **** 							{
 587:../Sources/TFC/TFC_ADC.c **** 							}
 588:../Sources/TFC/TFC_ADC.c **** 					TAOS_CLK_HIGH;
 589:../Sources/TFC/TFC_ADC.c **** 				}
 590:../Sources/TFC/TFC_ADC.c **** 				#else
 591:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 592:../Sources/TFC/TFC_ADC.c **** 					ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 593:../Sources/TFC/TFC_ADC.c **** 					
 594:../Sources/TFC/TFC_ADC.c **** 					CurrentLineScanPixel++;
 595:../Sources/TFC/TFC_ADC.c **** 					
 596:../Sources/TFC/TFC_ADC.c **** 					TAOS_CLK_LOW;
 597:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<10;Junk++)
 598:../Sources/TFC/TFC_ADC.c **** 							{
 599:../Sources/TFC/TFC_ADC.c **** 							}
 600:../Sources/TFC/TFC_ADC.c **** 					TAOS_CLK_HIGH;
 601:../Sources/TFC/TFC_ADC.c **** 				#endif	
 602:../Sources/TFC/TFC_ADC.c **** 			}
 603:../Sources/TFC/TFC_ADC.c **** 			else
 604:../Sources/TFC/TFC_ADC.c **** 			{
 605:../Sources/TFC/TFC_ADC.c **** 				// done with the capture sequence.  we can wait for the PIT0 IRQ to restart
 606:../Sources/TFC/TFC_ADC.c **** 			
 607:../Sources/TFC/TFC_ADC.c **** 				TAOS_CLK_HIGH;
 608:../Sources/TFC/TFC_ADC.c **** 									
 609:../Sources/TFC/TFC_ADC.c **** 				for(Junk = 0;Junk<10;Junk++)
 610:../Sources/TFC/TFC_ADC.c **** 					{
 611:../Sources/TFC/TFC_ADC.c **** 					}
 612:../Sources/TFC/TFC_ADC.c **** 				
 613:../Sources/TFC/TFC_ADC.c **** 				TAOS_CLK_LOW;
 614:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_INIT;	 
 615:../Sources/TFC/TFC_ADC.c **** 				
 616:../Sources/TFC/TFC_ADC.c **** 				//swap the buffer
 617:../Sources/TFC/TFC_ADC.c **** 				
 618:../Sources/TFC/TFC_ADC.c **** 				if(LineScanWorkingBuffer == 0)
 619:../Sources/TFC/TFC_ADC.c **** 				{
 620:../Sources/TFC/TFC_ADC.c **** 					LineScanWorkingBuffer = 1;
 621:../Sources/TFC/TFC_ADC.c **** 					
 622:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer = &LineScanImage0Buffer[1][0];
 623:../Sources/TFC/TFC_ADC.c **** 					#ifdef CAMERA_TWO_ENABLE
 624:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer = &LineScanImage1Buffer[1][0];
 625:../Sources/TFC/TFC_ADC.c **** 					#endif
 626:../Sources/TFC/TFC_ADC.c **** 					
 627:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0 = &LineScanImage0Buffer[0][0];
 628:../Sources/TFC/TFC_ADC.c **** 					#ifdef CAMERA_TWO_ENABLE
 629:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1 = &LineScanImage1Buffer[0][0];
 630:../Sources/TFC/TFC_ADC.c **** 					#endif
 631:../Sources/TFC/TFC_ADC.c **** 				}
 632:../Sources/TFC/TFC_ADC.c **** 				else
 633:../Sources/TFC/TFC_ADC.c **** 				{
 634:../Sources/TFC/TFC_ADC.c **** 					LineScanWorkingBuffer = 0;
 635:../Sources/TFC/TFC_ADC.c **** 					
 636:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer = &LineScanImage0Buffer[0][0];
 637:../Sources/TFC/TFC_ADC.c **** 					#ifdef CAMERA_TWO_ENABLE
 638:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer = &LineScanImage1Buffer[0][0];
 639:../Sources/TFC/TFC_ADC.c **** 					#endif
 640:../Sources/TFC/TFC_ADC.c **** 					
 641:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0 = &LineScanImage0Buffer[1][0];
 642:../Sources/TFC/TFC_ADC.c **** 					#ifdef CAMERA_TWO_ENABLE
 643:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1 = &LineScanImage1Buffer[1][0];
 644:../Sources/TFC/TFC_ADC.c **** 					#endif
 645:../Sources/TFC/TFC_ADC.c **** 				}
 646:../Sources/TFC/TFC_ADC.c **** 				
 647:../Sources/TFC/TFC_ADC.c **** 				carState->lineScanState = LINESCAN_IMAGE_READY;
 648:../Sources/TFC/TFC_ADC.c **** 			}
 649:../Sources/TFC/TFC_ADC.c **** 			break;
 650:../Sources/TFC/TFC_ADC.c **** 	}
 651:../Sources/TFC/TFC_ADC.c **** }
 926              		.loc 1 651 0
 927              		@ sp needed for prologue
 928 000e 10BD     		pop	{r4, pc}
 929              	.L49:
 505:../Sources/TFC/TFC_ADC.c **** 	switch(CurrentADC_State)
 930              		.loc 1 505 0
 931 0010 5949     		ldr	r1, .L50+8
 932 0012 9000     		lsl	r0, r2, #2
 933 0014 0C58     		ldr	r4, [r1, r0]
 934 0016 A746     		mov	pc, r4
 935              		.section	.rodata.ADC0_IRQHandler,"a",%progbits
 936              		.align	2
 937              	.L43:
 938 0000 0A000000 		.word	.L36
 939 0004 46000000 		.word	.L37
 940 0008 62000000 		.word	.L38
 941 000c 7E000000 		.word	.L39
 942 0010 9A000000 		.word	.L40
 943 0014 B6000000 		.word	.L41
 944 0018 18000000 		.word	.L42
 945              		.section	.text.ADC0_IRQHandler
 946              	.L42:
 567:../Sources/TFC/TFC_ADC.c **** 			if(CurrentLineScanPixel<128)
 947              		.loc 1 567 0
 948 0018 584A     		ldr	r2, .L50+12
 949 001a 1078     		ldrb	r0, [r2]
 950 001c 41B2     		sxtb	r1, r0
 951 001e 0029     		cmp	r1, #0
 952 0020 76DB     		blt	.L45
 571:../Sources/TFC/TFC_ADC.c **** 				if(CurrentLineScanChannel == 0)
 953              		.loc 1 571 0
 954 0022 574B     		ldr	r3, .L50+16
 955 0024 1878     		ldrb	r0, [r3]
 956 0026 0028     		cmp	r0, #0
 957 0028 5CD1     		bne	.L46
 573:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 958              		.loc 1 573 0
 959 002a 5648     		ldr	r0, .L50+20
 960 002c 1178     		ldrb	r1, [r2]
 961 002e 0268     		ldr	r2, [r0]
 962 0030 4C00     		lsl	r4, r1, #1
 963 0032 1119     		add	r1, r2, r4
 964 0034 4F4C     		ldr	r4, .L50+4
 965 0036 2069     		ldr	r0, [r4, #16]
 966 0038 82B2     		uxth	r2, r0
 967 003a 0A80     		strh	r2, [r1]
 574:../Sources/TFC/TFC_ADC.c **** 					ADC0_SC1A  =  TFC_LINESCAN1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 968              		.loc 1 574 0
 969 003c 4721     		mov	r1, #71
 970 003e 2160     		str	r1, [r4]
 575:../Sources/TFC/TFC_ADC.c **** 					CurrentLineScanChannel = 1;
 971              		.loc 1 575 0
 972 0040 0124     		mov	r4, #1
 973 0042 1C70     		strb	r4, [r3]
 974 0044 E3E7     		b	.L35
 975              	.L37:
 513:../Sources/TFC/TFC_ADC.c **** 			PotADC_Value[0] = ADC0_RA;
 976              		.loc 1 513 0
 977 0046 4B4C     		ldr	r4, .L50+4
 978 0048 4F4A     		ldr	r2, .L50+24
 979 004a 2169     		ldr	r1, [r4, #16]
 980 004c 88B2     		uxth	r0, r1
 981 004e 1080     		strh	r0, [r2]
 514:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 982              		.loc 1 514 0
 983 0050 E168     		ldr	r1, [r4, #12]
 984 0052 1020     		mov	r0, #16
 985 0054 8143     		bic	r1, r0
 515:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_POT_1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 986              		.loc 1 515 0
 987 0056 4C22     		mov	r2, #76
 514:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 988              		.loc 1 514 0
 989 0058 E160     		str	r1, [r4, #12]
 515:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_POT_1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 990              		.loc 1 515 0
 991 005a 2260     		str	r2, [r4]
 516:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_STATE_CAPTURE_POT_1;
 992              		.loc 1 516 0
 993 005c 0224     		mov	r4, #2
 994 005e 1C70     		strb	r4, [r3]
 518:../Sources/TFC/TFC_ADC.c **** 			break;
 995              		.loc 1 518 0
 996 0060 D5E7     		b	.L35
 997              	.L38:
 522:../Sources/TFC/TFC_ADC.c **** 			PotADC_Value[1] = ADC0_RA;				
 998              		.loc 1 522 0
 999 0062 444A     		ldr	r2, .L50+4
 1000 0064 484C     		ldr	r4, .L50+24
 1001 0066 1169     		ldr	r1, [r2, #16]
 1002 0068 88B2     		uxth	r0, r1
 1003 006a 6080     		strh	r0, [r4, #2]
 523:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 1004              		.loc 1 523 0
 1005 006c D168     		ldr	r1, [r2, #12]
 1006 006e 1020     		mov	r0, #16
 1007 0070 8143     		bic	r1, r0
 524:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A = TFC_MOTOR_CURRENT_0_CHANNEL | ADC_SC1_AIEN_MASK;
 1008              		.loc 1 524 0
 1009 0072 4724     		mov	r4, #71
 523:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 1010              		.loc 1 523 0
 1011 0074 D160     		str	r1, [r2, #12]
 524:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A = TFC_MOTOR_CURRENT_0_CHANNEL | ADC_SC1_AIEN_MASK;
 1012              		.loc 1 524 0
 1013 0076 1460     		str	r4, [r2]
 525:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_MOTOR_CURRENT_0;	
 1014              		.loc 1 525 0
 1015 0078 0322     		mov	r2, #3
 1016 007a 1A70     		strb	r2, [r3]
 526:../Sources/TFC/TFC_ADC.c **** 			break;
 1017              		.loc 1 526 0
 1018 007c C7E7     		b	.L35
 1019              	.L39:
 529:../Sources/TFC/TFC_ADC.c **** 			motorCurrent[0] = ADC0_RA;
 1020              		.loc 1 529 0
 1021 007e 3D4C     		ldr	r4, .L50+4
 1022 0080 424A     		ldr	r2, .L50+28
 1023 0082 2169     		ldr	r1, [r4, #16]
 1024 0084 88B2     		uxth	r0, r1
 1025 0086 1080     		strh	r0, [r2]
 531:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 1026              		.loc 1 531 0
 1027 0088 E168     		ldr	r1, [r4, #12]
 1028 008a 1020     		mov	r0, #16
 1029 008c 8143     		bic	r1, r0
 532:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A = TFC_MOTOR_CURRENT_1_CHANNEL | ADC_SC1_AIEN_MASK;
 1030              		.loc 1 532 0
 1031 008e 4322     		mov	r2, #67
 531:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 1032              		.loc 1 531 0
 1033 0090 E160     		str	r1, [r4, #12]
 532:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A = TFC_MOTOR_CURRENT_1_CHANNEL | ADC_SC1_AIEN_MASK;
 1034              		.loc 1 532 0
 1035 0092 2260     		str	r2, [r4]
 533:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_MOTOR_CURRENT_1;
 1036              		.loc 1 533 0
 1037 0094 0424     		mov	r4, #4
 1038 0096 1C70     		strb	r4, [r3]
 534:../Sources/TFC/TFC_ADC.c **** 			break;
 1039              		.loc 1 534 0
 1040 0098 B9E7     		b	.L35
 1041              	.L40:
 537:../Sources/TFC/TFC_ADC.c **** 			motorCurrent[1] = ADC0_RA;
 1042              		.loc 1 537 0
 1043 009a 364A     		ldr	r2, .L50+4
 1044 009c 3B48     		ldr	r0, .L50+28
 1045 009e 1169     		ldr	r1, [r2, #16]
 1046 00a0 8CB2     		uxth	r4, r1
 1047 00a2 4480     		strh	r4, [r0, #2]
 539:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 1048              		.loc 1 539 0
 1049 00a4 D468     		ldr	r4, [r2, #12]
 1050 00a6 1021     		mov	r1, #16
 1051 00a8 2143     		orr	r1, r4
 540:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_BAT_SENSE_CHANNEL| ADC_SC1_AIEN_MASK;
 1052              		.loc 1 540 0
 1053 00aa 4420     		mov	r0, #68
 539:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 1054              		.loc 1 539 0
 1055 00ac D160     		str	r1, [r2, #12]
 540:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_BAT_SENSE_CHANNEL| ADC_SC1_AIEN_MASK;
 1056              		.loc 1 540 0
 1057 00ae 1060     		str	r0, [r2]
 541:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_STATE_CAPTURE_BATTERY_LEVEL;
 1058              		.loc 1 541 0
 1059 00b0 0522     		mov	r2, #5
 1060 00b2 1A70     		strb	r2, [r3]
 542:../Sources/TFC/TFC_ADC.c **** 			break;
 1061              		.loc 1 542 0
 1062 00b4 ABE7     		b	.L35
 1063              	.L41:
 546:../Sources/TFC/TFC_ADC.c **** 			BatSenseADC_Value = ADC0_RA;
 1064              		.loc 1 546 0
 1065 00b6 2F4A     		ldr	r2, .L50+4
 1066 00b8 3549     		ldr	r1, .L50+32
 1067 00ba 1069     		ldr	r0, [r2, #16]
 1068 00bc 84B2     		uxth	r4, r0
 1069 00be 0C80     		strh	r4, [r1]
 550:../Sources/TFC/TFC_ADC.c **** 			TAOS_CLK_HIGH;
 1070              		.loc 1 550 0
 1071 00c0 344C     		ldr	r4, .L50+36
 1072 00c2 0220     		mov	r0, #2
 556:../Sources/TFC/TFC_ADC.c **** 			TAOS_SI_LOW;
 1073              		.loc 1 556 0
 1074 00c4 3449     		ldr	r1, .L50+40
 550:../Sources/TFC/TFC_ADC.c **** 			TAOS_CLK_HIGH;
 1075              		.loc 1 550 0
 1076 00c6 6060     		str	r0, [r4, #4]
 1077              	.LVL78:
 556:../Sources/TFC/TFC_ADC.c **** 			TAOS_SI_LOW;
 1078              		.loc 1 556 0
 1079 00c8 8020     		mov	r0, #128
 1080 00ca 8860     		str	r0, [r1, #8]
 559:../Sources/TFC/TFC_ADC.c **** 			CurrentLineScanPixel = 0;
 1081              		.loc 1 559 0
 1082 00cc 2B48     		ldr	r0, .L50+12
 1083 00ce 0024     		mov	r4, #0
 560:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_STATE_CAPTURE_LINE_SCAN;
 1084              		.loc 1 560 0
 1085 00d0 0621     		mov	r1, #6
 559:../Sources/TFC/TFC_ADC.c **** 			CurrentLineScanPixel = 0;
 1086              		.loc 1 559 0
 1087 00d2 0470     		strb	r4, [r0]
 560:../Sources/TFC/TFC_ADC.c **** 			CurrentADC_State = ADC_STATE_CAPTURE_LINE_SCAN;
 1088              		.loc 1 560 0
 1089 00d4 1970     		strb	r1, [r3]
 561:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 1090              		.loc 1 561 0
 1091 00d6 D468     		ldr	r4, [r2, #12]
 1092 00d8 1023     		mov	r3, #16
 1093 00da 2343     		orr	r3, r4
 562:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 1094              		.loc 1 562 0
 1095 00dc 4620     		mov	r0, #70
 561:../Sources/TFC/TFC_ADC.c **** 			ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 1096              		.loc 1 561 0
 1097 00de D360     		str	r3, [r2, #12]
 562:../Sources/TFC/TFC_ADC.c **** 			ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 1098              		.loc 1 562 0
 1099 00e0 1060     		str	r0, [r2]
 563:../Sources/TFC/TFC_ADC.c **** 			break;
 1100              		.loc 1 563 0
 1101 00e2 94E7     		b	.L35
 1102              	.LVL79:
 1103              	.L46:
 579:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 1104              		.loc 1 579 0
 1105 00e4 1478     		ldrb	r4, [r2]
 1106 00e6 2D49     		ldr	r1, .L50+44
 1107 00e8 6000     		lsl	r0, r4, #1
 1108 00ea 0C68     		ldr	r4, [r1]
 1109 00ec 2149     		ldr	r1, .L50+4
 1110 00ee 2018     		add	r0, r4, r0
 1111 00f0 0C69     		ldr	r4, [r1, #16]
 1112 00f2 A4B2     		uxth	r4, r4
 1113 00f4 0480     		strh	r4, [r0]
 580:../Sources/TFC/TFC_ADC.c **** 					ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 1114              		.loc 1 580 0
 1115 00f6 4620     		mov	r0, #70
 1116 00f8 0860     		str	r0, [r1]
 581:../Sources/TFC/TFC_ADC.c **** 					CurrentLineScanChannel = 0;				
 1117              		.loc 1 581 0
 1118 00fa 0021     		mov	r1, #0
 1119 00fc 1970     		strb	r1, [r3]
 582:../Sources/TFC/TFC_ADC.c **** 					CurrentLineScanPixel++;
 1120              		.loc 1 582 0
 1121 00fe 1378     		ldrb	r3, [r2]
 584:../Sources/TFC/TFC_ADC.c **** 					TAOS_CLK_LOW;
 1122              		.loc 1 584 0
 1123 0100 2448     		ldr	r0, .L50+36
 582:../Sources/TFC/TFC_ADC.c **** 					CurrentLineScanPixel++;
 1124              		.loc 1 582 0
 1125 0102 0133     		add	r3, r3, #1
 1126 0104 DCB2     		uxtb	r4, r3
 1127 0106 1470     		strb	r4, [r2]
 584:../Sources/TFC/TFC_ADC.c **** 					TAOS_CLK_LOW;
 1128              		.loc 1 584 0
 1129 0108 0222     		mov	r2, #2
 1130 010a 8260     		str	r2, [r0, #8]
 1131              	.LVL80:
 588:../Sources/TFC/TFC_ADC.c **** 					TAOS_CLK_HIGH;
 1132              		.loc 1 588 0
 1133 010c 4260     		str	r2, [r0, #4]
 1134 010e 7EE7     		b	.L35
 1135              	.LVL81:
 1136              	.L45:
 607:../Sources/TFC/TFC_ADC.c **** 				TAOS_CLK_HIGH;
 1137              		.loc 1 607 0
 1138 0110 204C     		ldr	r4, .L50+36
 1139 0112 0222     		mov	r2, #2
 614:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_INIT;	 
 1140              		.loc 1 614 0
 1141 0114 0020     		mov	r0, #0
 607:../Sources/TFC/TFC_ADC.c **** 				TAOS_CLK_HIGH;
 1142              		.loc 1 607 0
 1143 0116 6260     		str	r2, [r4, #4]
 1144              	.LVL82:
 613:../Sources/TFC/TFC_ADC.c **** 				TAOS_CLK_LOW;
 1145              		.loc 1 613 0
 1146 0118 A260     		str	r2, [r4, #8]
 614:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_INIT;	 
 1147              		.loc 1 614 0
 1148 011a 1870     		strb	r0, [r3]
 618:../Sources/TFC/TFC_ADC.c **** 				if(LineScanWorkingBuffer == 0)
 1149              		.loc 1 618 0
 1150 011c 204B     		ldr	r3, .L50+48
 1151 011e 1978     		ldrb	r1, [r3]
 1152 0120 0029     		cmp	r1, #0
 1153 0122 14D1     		bne	.L47
 620:../Sources/TFC/TFC_ADC.c **** 					LineScanWorkingBuffer = 1;
 1154              		.loc 1 620 0
 1155 0124 0122     		mov	r2, #1
 1156 0126 1A70     		strb	r2, [r3]
 622:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer = &LineScanImage0Buffer[1][0];
 1157              		.loc 1 622 0
 1158 0128 1E48     		ldr	r0, .L50+52
 1159 012a 164B     		ldr	r3, .L50+20
 624:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer = &LineScanImage1Buffer[1][0];
 1160              		.loc 1 624 0
 1161 012c 1E4C     		ldr	r4, .L50+56
 622:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer = &LineScanImage0Buffer[1][0];
 1162              		.loc 1 622 0
 1163 012e 1860     		str	r0, [r3]
 624:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer = &LineScanImage1Buffer[1][0];
 1164              		.loc 1 624 0
 1165 0130 1A49     		ldr	r1, .L50+44
 627:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0 = &LineScanImage0Buffer[0][0];
 1166              		.loc 1 627 0
 1167 0132 0138     		sub	r0, r0, #1
 1168 0134 1D4A     		ldr	r2, .L50+60
 1169 0136 FF38     		sub	r0, r0, #255
 624:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer = &LineScanImage1Buffer[1][0];
 1170              		.loc 1 624 0
 1171 0138 0C60     		str	r4, [r1]
 627:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0 = &LineScanImage0Buffer[0][0];
 1172              		.loc 1 627 0
 1173 013a 1060     		str	r0, [r2]
 629:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1 = &LineScanImage1Buffer[0][0];
 1174              		.loc 1 629 0
 1175 013c 013C     		sub	r4, r4, #1
 1176 013e 1C48     		ldr	r0, .L50+64
 1177 0140 FF3C     		sub	r4, r4, #255
 1178 0142 0460     		str	r4, [r0]
 1179              	.L48:
 647:../Sources/TFC/TFC_ADC.c **** 				carState->lineScanState = LINESCAN_IMAGE_READY;
 1180              		.loc 1 647 0
 1181 0144 1B4B     		ldr	r3, .L50+68
 1182 0146 0021     		mov	r1, #0
 1183 0148 1C68     		ldr	r4, [r3]
 1184 014a E170     		strb	r1, [r4, #3]
 1185 014c 5FE7     		b	.L35
 1186              	.L47:
 636:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer = &LineScanImage0Buffer[0][0];
 1187              		.loc 1 636 0
 1188 014e 1A4C     		ldr	r4, .L50+72
 1189 0150 0C4A     		ldr	r2, .L50+20
 634:../Sources/TFC/TFC_ADC.c **** 					LineScanWorkingBuffer = 0;
 1190              		.loc 1 634 0
 1191 0152 1870     		strb	r0, [r3]
 636:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0WorkingBuffer = &LineScanImage0Buffer[0][0];
 1192              		.loc 1 636 0
 1193 0154 1460     		str	r4, [r2]
 638:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer = &LineScanImage1Buffer[0][0];
 1194              		.loc 1 638 0
 1195 0156 1948     		ldr	r0, .L50+76
 1196 0158 104B     		ldr	r3, .L50+44
 641:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0 = &LineScanImage0Buffer[1][0];
 1197              		.loc 1 641 0
 1198 015a 0134     		add	r4, r4, #1
 1199 015c 1349     		ldr	r1, .L50+60
 1200 015e FF34     		add	r4, r4, #255
 638:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1WorkingBuffer = &LineScanImage1Buffer[0][0];
 1201              		.loc 1 638 0
 1202 0160 1860     		str	r0, [r3]
 641:../Sources/TFC/TFC_ADC.c **** 					LineScanImage0 = &LineScanImage0Buffer[1][0];
 1203              		.loc 1 641 0
 1204 0162 0C60     		str	r4, [r1]
 643:../Sources/TFC/TFC_ADC.c **** 					LineScanImage1 = &LineScanImage1Buffer[1][0];
 1205              		.loc 1 643 0
 1206 0164 0130     		add	r0, r0, #1
 1207 0166 124C     		ldr	r4, .L50+64
 1208 0168 FF30     		add	r0, r0, #255
 1209 016a 2060     		str	r0, [r4]
 1210 016c EAE7     		b	.L48
 1211              	.L51:
 1212 016e C046     		.align	2
 1213              	.L50:
 1214 0170 00000000 		.word	.LANCHOR1
 1215 0174 00B00340 		.word	1073983488
 1216 0178 00000000 		.word	.L43
 1217 017c 00000000 		.word	.LANCHOR2
 1218 0180 00000000 		.word	.LANCHOR3
 1219 0184 00000000 		.word	LineScanImage0WorkingBuffer
 1220 0188 00000000 		.word	PotADC_Value
 1221 018c 00000000 		.word	motorCurrent
 1222 0190 00000000 		.word	BatSenseADC_Value
 1223 0194 00F10F40 		.word	1074786560
 1224 0198 C0F00F40 		.word	1074786496
 1225 019c 00000000 		.word	LineScanImage1WorkingBuffer
 1226 01a0 00000000 		.word	LineScanWorkingBuffer
 1227 01a4 00010000 		.word	LineScanImage0Buffer+256
 1228 01a8 00010000 		.word	LineScanImage1Buffer+256
 1229 01ac 00000000 		.word	LineScanImage0
 1230 01b0 00000000 		.word	LineScanImage1
 1231 01b4 00000000 		.word	.LANCHOR0
 1232 01b8 00000000 		.word	LineScanImage0Buffer
 1233 01bc 00000000 		.word	LineScanImage1Buffer
 1234              		.cfi_endproc
 1235              	.LFE6:
 1237              		.global	__aeabi_ui2f
 1238              		.global	__aeabi_f2d
 1239              		.global	__aeabi_ddiv
 1240              		.global	__aeabi_dadd
 1241              		.global	__aeabi_d2f
 1242              		.section	.text.TFC_ReadPot,"ax",%progbits
 1243              		.align	2
 1244              		.global	TFC_ReadPot
 1245              		.code	16
 1246              		.thumb_func
 1248              	TFC_ReadPot:
 1249              	.LFB7:
 652:../Sources/TFC/TFC_ADC.c **** 
 653:../Sources/TFC/TFC_ADC.c **** //Pot Reading is Scaled to return a value of -1.0 to 1.0
 654:../Sources/TFC/TFC_ADC.c **** float TFC_ReadPot(uint8_t Channel)
 655:../Sources/TFC/TFC_ADC.c **** {
 1250              		.loc 1 655 0
 1251              		.cfi_startproc
 1252              	.LVL83:
 1253 0000 08B5     		push	{r3, lr}
 1254              	.LCFI4:
 1255              		.cfi_def_cfa_offset 8
 1256              		.cfi_offset 3, -8
 1257              		.cfi_offset 14, -4
 656:../Sources/TFC/TFC_ADC.c ****     if(Channel == 0)
 657:../Sources/TFC/TFC_ADC.c ****         return ((float)PotADC_Value[0]/-((float)ADC_MAX_CODE/2.0))+1.0;
 1258              		.loc 1 657 0
 1259 0002 0F4B     		ldr	r3, .L57+16
 656:../Sources/TFC/TFC_ADC.c ****     if(Channel == 0)
 1260              		.loc 1 656 0
 1261 0004 0028     		cmp	r0, #0
 1262 0006 0FD0     		beq	.L56
 658:../Sources/TFC/TFC_ADC.c ****     else
 659:../Sources/TFC/TFC_ADC.c ****         return ((float)PotADC_Value[1]/-((float)ADC_MAX_CODE/2.0))+1.0;
 1263              		.loc 1 659 0
 1264 0008 5888     		ldrh	r0, [r3, #2]
 1265              	.LVL84:
 1266              	.L55:
 1267 000a FFF7FEFF 		bl	__aeabi_ui2f
 1268              	.LVL85:
 1269 000e FFF7FEFF 		bl	__aeabi_f2d
 1270              	.LVL86:
 1271 0012 084B     		ldr	r3, .L57+4
 1272 0014 064A     		ldr	r2, .L57
 1273 0016 FFF7FEFF 		bl	__aeabi_ddiv
 1274              	.LVL87:
 1275 001a 074A     		ldr	r2, .L57+8
 1276 001c 074B     		ldr	r3, .L57+12
 1277 001e FFF7FEFF 		bl	__aeabi_dadd
 1278              	.LVL88:
 1279 0022 FFF7FEFF 		bl	__aeabi_d2f
 1280              	.LVL89:
 660:../Sources/TFC/TFC_ADC.c **** }
 1281              		.loc 1 660 0
 1282              		@ sp needed for prologue
 1283 0026 08BD     		pop	{r3, pc}
 1284              	.LVL90:
 1285              	.L56:
 657:../Sources/TFC/TFC_ADC.c ****         return ((float)PotADC_Value[0]/-((float)ADC_MAX_CODE/2.0))+1.0;
 1286              		.loc 1 657 0
 1287 0028 1888     		ldrh	r0, [r3]
 1288              	.LVL91:
 1289 002a EEE7     		b	.L55
 1290              	.L58:
 1291 002c C046C046 		.align	3
 1292              	.L57:
 1293 0030 00000000 		.word	0
 1294 0034 00FE9FC0 		.word	-1063256576
 1295 0038 00000000 		.word	0
 1296 003c 0000F03F 		.word	1072693248
 1297 0040 00000000 		.word	PotADC_Value
 1298              		.cfi_endproc
 1299              	.LFE7:
 1301              		.global	__aeabi_fdiv
 1302              		.global	__aeabi_fmul
 1303 0044 C046C046 		.section	.text.TFC_ReadMotorCurrent,"ax",%progbits
 1304              		.align	2
 1305              		.global	TFC_ReadMotorCurrent
 1306              		.code	16
 1307              		.thumb_func
 1309              	TFC_ReadMotorCurrent:
 1310              	.LFB8:
 661:../Sources/TFC/TFC_ADC.c **** 
 662:../Sources/TFC/TFC_ADC.c **** float TFC_ReadMotorCurrent(uint8_t channel) //Amps
 663:../Sources/TFC/TFC_ADC.c **** {
 1311              		.loc 1 663 0
 1312              		.cfi_startproc
 1313              	.LVL92:
 1314 0000 08B5     		push	{r3, lr}
 1315              	.LCFI5:
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 3, -8
 1318              		.cfi_offset 14, -4
 664:../Sources/TFC/TFC_ADC.c **** 	if(channel == 0)
 665:../Sources/TFC/TFC_ADC.c **** 		return ((float)motorCurrent[0] / (float)ADC_MAX_CODE) * 3.3f * 2.62f; //2.62 is empirically measu
 1319              		.loc 1 665 0
 1320 0002 094B     		ldr	r3, .L64
 664:../Sources/TFC/TFC_ADC.c **** 	if(channel == 0)
 1321              		.loc 1 664 0
 1322 0004 0028     		cmp	r0, #0
 1323 0006 0CD0     		beq	.L63
 666:../Sources/TFC/TFC_ADC.c **** 	else
 667:../Sources/TFC/TFC_ADC.c **** 		return ((float)motorCurrent[1] / (float)ADC_MAX_CODE) * 3.3f * 2.62f;
 1324              		.loc 1 667 0
 1325 0008 5888     		ldrh	r0, [r3, #2]
 1326              	.LVL93:
 1327              	.L62:
 1328 000a FFF7FEFF 		bl	__aeabi_ui2f
 1329              	.LVL94:
 1330 000e 0749     		ldr	r1, .L64+4
 1331 0010 FFF7FEFF 		bl	__aeabi_fdiv
 1332              	.LVL95:
 1333 0014 0649     		ldr	r1, .L64+8
 1334 0016 FFF7FEFF 		bl	__aeabi_fmul
 1335              	.LVL96:
 1336 001a 0649     		ldr	r1, .L64+12
 1337 001c FFF7FEFF 		bl	__aeabi_fmul
 1338              	.LVL97:
 668:../Sources/TFC/TFC_ADC.c **** }
 1339              		.loc 1 668 0
 1340              		@ sp needed for prologue
 1341 0020 08BD     		pop	{r3, pc}
 1342              	.LVL98:
 1343              	.L63:
 665:../Sources/TFC/TFC_ADC.c **** 		return ((float)motorCurrent[0] / (float)ADC_MAX_CODE) * 3.3f * 2.62f; //2.62 is empirically measu
 1344              		.loc 1 665 0
 1345 0022 1888     		ldrh	r0, [r3]
 1346              	.LVL99:
 1347 0024 F1E7     		b	.L62
 1348              	.L65:
 1349 0026 C046     		.align	2
 1350              	.L64:
 1351 0028 00000000 		.word	motorCurrent
 1352 002c 00F07F45 		.word	1166012416
 1353 0030 33335340 		.word	1079194419
 1354 0034 14AE2740 		.word	1076342292
 1355              		.cfi_endproc
 1356              	.LFE8:
 1358              		.section	.text.TFC_ReadBatteryVoltage,"ax",%progbits
 1359              		.align	2
 1360              		.global	TFC_ReadBatteryVoltage
 1361              		.code	16
 1362              		.thumb_func
 1364              	TFC_ReadBatteryVoltage:
 1365              	.LFB9:
 669:../Sources/TFC/TFC_ADC.c **** 
 670:../Sources/TFC/TFC_ADC.c **** float TFC_ReadBatteryVoltage()
 671:../Sources/TFC/TFC_ADC.c **** {
 1366              		.loc 1 671 0
 1367              		.cfi_startproc
 1368 0000 08B5     		push	{r3, lr}
 1369              	.LCFI6:
 1370              		.cfi_def_cfa_offset 8
 1371              		.cfi_offset 3, -8
 1372              		.cfi_offset 14, -4
 672:../Sources/TFC/TFC_ADC.c ****     return (((float)BatSenseADC_Value/(float)(ADC_MAX_CODE)) * 3.3f * 5.745f);// ME: 5.745 manually
 1373              		.loc 1 672 0
 1374 0002 074B     		ldr	r3, .L67
 673:../Sources/TFC/TFC_ADC.c **** }
 1375              		.loc 1 673 0
 1376              		@ sp needed for prologue
 672:../Sources/TFC/TFC_ADC.c ****     return (((float)BatSenseADC_Value/(float)(ADC_MAX_CODE)) * 3.3f * 5.745f);// ME: 5.745 manually
 1377              		.loc 1 672 0
 1378 0004 1888     		ldrh	r0, [r3]
 1379 0006 FFF7FEFF 		bl	__aeabi_ui2f
 1380              	.LVL100:
 1381 000a 0649     		ldr	r1, .L67+4
 1382 000c FFF7FEFF 		bl	__aeabi_fdiv
 1383              	.LVL101:
 1384 0010 0549     		ldr	r1, .L67+8
 1385 0012 FFF7FEFF 		bl	__aeabi_fmul
 1386              	.LVL102:
 1387 0016 0549     		ldr	r1, .L67+12
 1388 0018 FFF7FEFF 		bl	__aeabi_fmul
 1389              	.LVL103:
 1390              		.loc 1 673 0
 1391 001c 08BD     		pop	{r3, pc}
 1392              	.L68:
 1393 001e C046     		.align	2
 1394              	.L67:
 1395 0020 00000000 		.word	BatSenseADC_Value
 1396 0024 00F07F45 		.word	1166012416
 1397 0028 33335340 		.word	1079194419
 1398 002c 0AD7B740 		.word	1085789962
 1399              		.cfi_endproc
 1400              	.LFE9:
 1402              		.global	CurrentLineScanPixel
 1403              		.global	CurrentLineScanChannel
 1404              		.comm	BatSenseADC_Value,2,2
 1405              		.comm	motorCurrent,4,4
 1406              		.comm	PotADC_Value,4,4
 1407              		.section	.bss.carState,"aw",%nobits
 1408              		.align	2
 1409              		.set	.LANCHOR0,. + 0
 1412              	carState:
 1413 0000 00000000 		.space	4
 1414              		.section	.bss.CurrentADC_State,"aw",%nobits
 1415              		.set	.LANCHOR1,. + 0
 1418              	CurrentADC_State:
 1419 0000 00       		.space	1
 1420              		.section	.bss.CurrentLineScanPixel,"aw",%nobits
 1421              		.set	.LANCHOR2,. + 0
 1424              	CurrentLineScanPixel:
 1425 0000 00       		.space	1
 1426              		.section	.bss.CurrentLineScanChannel,"aw",%nobits
 1427              		.set	.LANCHOR3,. + 0
 1430              	CurrentLineScanChannel:
 1431 0000 00       		.space	1
 1432              		.text
 1433              	.Letext0:
 1434              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 1435              		.file 3 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 1436              		.file 4 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 1437              		.file 5 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
DEFINED SYMBOLS
                            *ABS*:00000000 TFC_ADC.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:18     .text.ADC_Cal:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:23     .text.ADC_Cal:00000000 ADC_Cal
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:163    .text.ADC_Cal:00000084 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:168    .text.ADC_Config_Alt:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:173    .text.ADC_Config_Alt:00000000 ADC_Config_Alt
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:212    .text.ADC_Read_Cal:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:217    .text.ADC_Read_Cal:00000000 ADC_Read_Cal
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:293    .text.InitADC0:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:298    .text.InitADC0:00000000 InitADC0
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:527    .text.InitADC0:000000d8 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:536    .text.TFC_InitADCs:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:541    .text.TFC_InitADCs:00000000 TFC_InitADCs
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:839    .text.TFC_InitADCs:0000012c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:852    .text.PIT_IRQHandler:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:857    .text.PIT_IRQHandler:00000000 PIT_IRQHandler
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:894    .text.PIT_IRQHandler:00000024 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:902    .text.ADC0_IRQHandler:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:907    .text.ADC0_IRQHandler:00000000 ADC0_IRQHandler
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:936    .rodata.ADC0_IRQHandler:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1214   .text.ADC0_IRQHandler:00000170 $d
                            *COM*:00000004 PotADC_Value
                            *COM*:00000004 motorCurrent
                            *COM*:00000002 BatSenseADC_Value
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1243   .text.TFC_ReadPot:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1248   .text.TFC_ReadPot:00000000 TFC_ReadPot
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1293   .text.TFC_ReadPot:00000030 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1304   .text.TFC_ReadMotorCurrent:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1309   .text.TFC_ReadMotorCurrent:00000000 TFC_ReadMotorCurrent
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1351   .text.TFC_ReadMotorCurrent:00000028 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1359   .text.TFC_ReadBatteryVoltage:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1364   .text.TFC_ReadBatteryVoltage:00000000 TFC_ReadBatteryVoltage
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1395   .text.TFC_ReadBatteryVoltage:00000020 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1424   .bss.CurrentLineScanPixel:00000000 CurrentLineScanPixel
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1430   .bss.CurrentLineScanChannel:00000000 CurrentLineScanChannel
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1408   .bss.carState:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1412   .bss.carState:00000000 carState
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1418   .bss.CurrentADC_State:00000000 CurrentADC_State
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1419   .bss.CurrentADC_State:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1425   .bss.CurrentLineScanPixel:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1431   .bss.CurrentLineScanChannel:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccTC1RyP.s:1303   .text.TFC_ReadPot:00000044 $t

UNDEFINED SYMBOLS
disable_irq
TFC_SetLineScanExposureTime
set_irq_priority
enable_irq
LineScanImage0WorkingBuffer
LineScanImage1WorkingBuffer
LineScanWorkingBuffer
LineScanImage0Buffer
LineScanImage1Buffer
LineScanImage0
LineScanImage1
__aeabi_ui2f
__aeabi_f2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2f
__aeabi_fdiv
__aeabi_fmul
