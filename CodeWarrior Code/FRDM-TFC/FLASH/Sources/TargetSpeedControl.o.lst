   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TargetSpeedControl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_fadd
  18              		.global	__aeabi_fmul
  19              		.global	__aeabi_fcmpgt
  20              		.global	__aeabi_fcmplt
  21              		.section	.text.getDesiredSpeed,"ax",%progbits
  22              		.align	2
  23              		.global	getDesiredSpeed
  24              		.code	16
  25              		.thumb_func
  27              	getDesiredSpeed:
  28              	.LFB0:
  29              		.file 1 "../Sources/TargetSpeedControl.c"
   1:../Sources/TargetSpeedControl.c **** /*
   2:../Sources/TargetSpeedControl.c ****  * TargetSpeedControl.c
   3:../Sources/TargetSpeedControl.c ****  *
   4:../Sources/TargetSpeedControl.c ****  *  Created on: Feb 20, 2014
   5:../Sources/TargetSpeedControl.c ****  *      Author: Matt and Miroslav Dobrev
   6:../Sources/TargetSpeedControl.c ****  */
   7:../Sources/TargetSpeedControl.c **** 
   8:../Sources/TargetSpeedControl.c **** #include "TargetSpeedControl.h"
   9:../Sources/TargetSpeedControl.c **** #include "Settings.h"
  10:../Sources/TargetSpeedControl.c **** 
  11:../Sources/TargetSpeedControl.c **** extern float friction_correct;
  12:../Sources/TargetSpeedControl.c **** 
  13:../Sources/TargetSpeedControl.c **** float getDesiredSpeed(carState_s* carState, float speedPercent, float radiusRoot)
  14:../Sources/TargetSpeedControl.c **** {
  30              		.loc 1 14 0
  31              		.cfi_startproc
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 14 0
  41 0002 031C     		mov	r3, r0
  15:../Sources/TargetSpeedControl.c **** 	float speed;
  16:../Sources/TargetSpeedControl.c **** 	float minSpeed = MIN_SPEED;
  17:../Sources/TargetSpeedControl.c **** 	float maxSpeed = MAX_SPEED;
  18:../Sources/TargetSpeedControl.c **** 	
  19:../Sources/TargetSpeedControl.c **** 	if(carState->carMode == STRAIGHT_MODE)
  42              		.loc 1 19 0
  43 0004 007A     		ldrb	r0, [r0, #8]
  44              	.LVL1:
  14:../Sources/TargetSpeedControl.c **** {
  45              		.loc 1 14 0
  46 0006 0E1C     		add	r6, r1, #0
  47 0008 151C     		add	r5, r2, #0
  48              		.loc 1 19 0
  49 000a 0128     		cmp	r0, #1
  50 000c 2BD0     		beq	.L6
  17:../Sources/TargetSpeedControl.c **** 	float maxSpeed = MAX_SPEED;
  51              		.loc 1 17 0
  52 000e 174C     		ldr	r4, .L9
  53              	.L2:
  54              	.LVL2:
  20:../Sources/TargetSpeedControl.c **** 	{
  21:../Sources/TargetSpeedControl.c **** 		maxSpeed = MAX_STRAIGHT_SPEED;
  22:../Sources/TargetSpeedControl.c **** 	}
  23:../Sources/TargetSpeedControl.c **** 	
  24:../Sources/TargetSpeedControl.c **** 	if(abs(carState->raceLineCenter) > ERROR_THRESHOLD)
  55              		.loc 1 24 0
  56 0010 D97A     		ldrb	r1, [r3, #11]
  57              	.LVL3:
  58 0012 4AB2     		sxtb	r2, r1
  59              	.LVL4:
  60 0014 002A     		cmp	r2, #0
  61 0016 18D0     		beq	.L3
  25:../Sources/TargetSpeedControl.c **** 	{
  26:../Sources/TargetSpeedControl.c **** 		#ifdef SPEED_MAP_ENABLE
  27:../Sources/TargetSpeedControl.c **** 		speed = (FRICTION_COEFF_ROOT + friction_correct)*radiusRoot*20.0f; // sqrt(fric_coef*g*R) rescale
  62              		.loc 1 27 0
  63 0018 154B     		ldr	r3, .L9+4
  64              	.LVL5:
  65 001a 1649     		ldr	r1, .L9+8
  66 001c 1868     		ldr	r0, [r3]
  67 001e FFF7FEFF 		bl	__aeabi_fadd
  68              	.LVL6:
  69 0022 291C     		add	r1, r5, #0
  70 0024 FFF7FEFF 		bl	__aeabi_fmul
  71              	.LVL7:
  72 0028 1349     		ldr	r1, .L9+12
  73 002a FFF7FEFF 		bl	__aeabi_fmul
  74              	.LVL8:
  28:../Sources/TargetSpeedControl.c **** 																		   // simplified as sqrt(g) = PI (approx)
  29:../Sources/TargetSpeedControl.c **** 		#else
  30:../Sources/TargetSpeedControl.c **** 		speed = (speedPercent * maxSpeed * (1 - (K_LIN * abs(carState->raceLineCenter))));
  31:../Sources/TargetSpeedControl.c **** 		#endif
  32:../Sources/TargetSpeedControl.c **** 	}
  33:../Sources/TargetSpeedControl.c **** 	else
  34:../Sources/TargetSpeedControl.c **** 	{
  35:../Sources/TargetSpeedControl.c **** 		speed = speedPercent*maxSpeed;
  36:../Sources/TargetSpeedControl.c **** 	}
  37:../Sources/TargetSpeedControl.c **** 	
  38:../Sources/TargetSpeedControl.c **** 	if(speed > (speedPercent*maxSpeed))
  75              		.loc 1 38 0
  76 002e 211C     		add	r1, r4, #0
  27:../Sources/TargetSpeedControl.c **** 		speed = (FRICTION_COEFF_ROOT + friction_correct)*radiusRoot*20.0f; // sqrt(fric_coef*g*R) rescale
  77              		.loc 1 27 0
  78 0030 051C     		add	r5, r0, #0
  79              	.LVL9:
  80              		.loc 1 38 0
  81 0032 301C     		add	r0, r6, #0
  82              	.LVL10:
  83 0034 FFF7FEFF 		bl	__aeabi_fmul
  84              	.LVL11:
  85 0038 061C     		add	r6, r0, #0
  86              	.LVL12:
  87 003a 311C     		add	r1, r6, #0
  88 003c 281C     		add	r0, r5, #0
  89 003e FFF7FEFF 		bl	__aeabi_fcmpgt
  90              	.LVL13:
  91 0042 0028     		cmp	r0, #0
  92 0044 06D0     		beq	.L5
  93              	.L4:
  94              	.LVL14:
  39:../Sources/TargetSpeedControl.c **** 		speed = (speedPercent*maxSpeed);
  40:../Sources/TargetSpeedControl.c **** 	else if(speed < minSpeed)
  41:../Sources/TargetSpeedControl.c **** 		speed = minSpeed;
  42:../Sources/TargetSpeedControl.c **** 	
  43:../Sources/TargetSpeedControl.c **** 	return speed;
  44:../Sources/TargetSpeedControl.c **** }
  95              		.loc 1 44 0
  96 0046 301C     		add	r0, r6, #0
  97              		@ sp needed for prologue
  98              	.LVL15:
  99              	.LVL16:
 100 0048 70BD     		pop	{r4, r5, r6, pc}
 101              	.LVL17:
 102              	.L3:
  35:../Sources/TargetSpeedControl.c **** 		speed = speedPercent*maxSpeed;
 103              		.loc 1 35 0
 104 004a 301C     		add	r0, r6, #0
 105 004c 211C     		add	r1, r4, #0
 106 004e FFF7FEFF 		bl	__aeabi_fmul
 107              	.LVL18:
 108 0052 051C     		add	r5, r0, #0
 109              	.LVL19:
 110              	.L5:
  40:../Sources/TargetSpeedControl.c **** 	else if(speed < minSpeed)
 111              		.loc 1 40 0
 112 0054 281C     		add	r0, r5, #0
 113 0056 0949     		ldr	r1, .L9+16
 114 0058 FFF7FEFF 		bl	__aeabi_fcmplt
 115              	.LVL20:
 116 005c 2E1C     		add	r6, r5, #0
 117 005e 0028     		cmp	r0, #0
 118 0060 F1D0     		beq	.L4
  41:../Sources/TargetSpeedControl.c **** 		speed = minSpeed;
 119              		.loc 1 41 0
 120 0062 064E     		ldr	r6, .L9+16
 121 0064 EFE7     		b	.L4
 122              	.LVL21:
 123              	.L6:
  21:../Sources/TargetSpeedControl.c **** 		maxSpeed = MAX_STRAIGHT_SPEED;
 124              		.loc 1 21 0
 125 0066 064C     		ldr	r4, .L9+20
 126 0068 D2E7     		b	.L2
 127              	.L10:
 128 006a C046     		.align	2
 129              	.L9:
 130 006c 0000A841 		.word	1101529088
 131 0070 00000000 		.word	friction_correct
 132 0074 CDCC8C3F 		.word	1066192077
 133 0078 0000A041 		.word	1101004800
 134 007c 00001041 		.word	1091567616
 135 0080 0000F041 		.word	1106247680
 136              		.cfi_endproc
 137              	.LFE0:
 139              		.text
 140              	.Letext0:
 141              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 142              		.file 3 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
DEFINED SYMBOLS
                            *ABS*:00000000 TargetSpeedControl.c
C:\Users\BENTR_~1\AppData\Local\Temp\cc5lh0l9.s:22     .text.getDesiredSpeed:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\cc5lh0l9.s:27     .text.getDesiredSpeed:00000000 getDesiredSpeed
C:\Users\BENTR_~1\AppData\Local\Temp\cc5lh0l9.s:130    .text.getDesiredSpeed:0000006c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fadd
__aeabi_fmul
__aeabi_fcmpgt
__aeabi_fcmplt
friction_correct
