   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Accelerometer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_i2f
  18              		.global	__aeabi_fmul
  19              		.global	__aeabi_fsub
  20              		.global	__aeabi_fadd
  21              		.global	__aeabi_fdiv
  22              		.section	.text.zeroAccelerometer,"ax",%progbits
  23              		.align	2
  24              		.global	zeroAccelerometer
  25              		.code	16
  26              		.thumb_func
  28              	zeroAccelerometer:
  29              	.LFB1:
  30              		.file 1 "../Sources/Accelerometer.c"
   1:../Sources/Accelerometer.c **** /*
   2:../Sources/Accelerometer.c ****  * Accelerometer.c
   3:../Sources/Accelerometer.c ****  *
   4:../Sources/Accelerometer.c ****  *  Created on: Nov 18, 2015
   5:../Sources/Accelerometer.c ****  *      Author: bentr_000
   6:../Sources/Accelerometer.c ****  */
   7:../Sources/Accelerometer.c **** 
   8:../Sources/Accelerometer.c **** #include "Accelerometer.h"
   9:../Sources/Accelerometer.c **** 
  10:../Sources/Accelerometer.c **** #define MMA8451_ADDRESS 0x1d
  11:../Sources/Accelerometer.c **** 
  12:../Sources/Accelerometer.c **** 
  13:../Sources/Accelerometer.c **** 
  14:../Sources/Accelerometer.c **** //MMA8451_CTRL_REG_1
  15:../Sources/Accelerometer.c **** #define MMA8451_ACTIVE_BIT_MASK 	0x01
  16:../Sources/Accelerometer.c **** #define MMA8451_F_READ_BIT_MASK 	0x02
  17:../Sources/Accelerometer.c **** #define MMA8451_50HZ_ODR_BIT_MASK	0x20
  18:../Sources/Accelerometer.c **** #define MMA8451_LNOISE_BIT_MASK		0x04
  19:../Sources/Accelerometer.c **** 
  20:../Sources/Accelerometer.c **** //MMA8451_CTRL_REG_2
  21:../Sources/Accelerometer.c **** #define MMA8641_HIGH_RES 0x02
  22:../Sources/Accelerometer.c **** 
  23:../Sources/Accelerometer.c **** #define MMA8451_OUT_X_MSB 	0x01
  24:../Sources/Accelerometer.c **** #define MMA8451_OUT_X_LSB 	0x02
  25:../Sources/Accelerometer.c **** #define MMA8451_OUT_Y_MSB 	0x03
  26:../Sources/Accelerometer.c **** #define MMA8451_OUT_Y_LSB 	0x04
  27:../Sources/Accelerometer.c **** #define MMA8451_OUT_Z_MSB 	0x05
  28:../Sources/Accelerometer.c **** #define MMA8451_OUT_Z_LSB 	0x06
  29:../Sources/Accelerometer.c **** #define WHO_AM_I			0x0D
  30:../Sources/Accelerometer.c **** #define MMA8451_CTRL_REG_1 	0x2A
  31:../Sources/Accelerometer.c **** #define MMA8451_CTRL_REG_2	0x2B
  32:../Sources/Accelerometer.c **** #define XYZ_DATA_CFG		0x0E
  33:../Sources/Accelerometer.c **** 
  34:../Sources/Accelerometer.c **** static uint8_t buf[16];
  35:../Sources/Accelerometer.c **** static float xBias, yBias, zBias;
  36:../Sources/Accelerometer.c **** 
  37:../Sources/Accelerometer.c **** void Init_Accelerometer()
  38:../Sources/Accelerometer.c **** {
  39:../Sources/Accelerometer.c **** 	I2CWriteRegister(0x1d, MMA8451_CTRL_REG_2, 0x00 | MMA8641_HIGH_RES);
  40:../Sources/Accelerometer.c **** 	I2CWriteRegister(0x1d, MMA8451_CTRL_REG_1, 0x00 | MMA8451_50HZ_ODR_BIT_MASK | MMA8451_ACTIVE_BIT_M
  41:../Sources/Accelerometer.c **** 	TERMINAL_PRINTF("MMA8451 address: %x", getID());
  42:../Sources/Accelerometer.c **** 	zeroAccelerometer();
  43:../Sources/Accelerometer.c **** }
  44:../Sources/Accelerometer.c **** 
  45:../Sources/Accelerometer.c **** void zeroAccelerometer()
  46:../Sources/Accelerometer.c **** {
  31              		.loc 1 46 0
  32              		.cfi_startproc
  33              	.LVL0:
  34 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 3, -24
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  47:../Sources/Accelerometer.c **** 	float xAccSum = 0;
  48:../Sources/Accelerometer.c **** 	float yAccSum = 0;
  49:../Sources/Accelerometer.c **** 	float zAccSum = 0;
  50:../Sources/Accelerometer.c **** 	xBias = 0;
  51:../Sources/Accelerometer.c **** 	yBias = 0;
  43              		.loc 1 51 0
  44 0002 5148     		ldr	r0, .L8
  46:../Sources/Accelerometer.c **** {
  45              		.loc 1 46 0
  46 0004 5F46     		mov	r7, fp
  47 0006 5646     		mov	r6, sl
  48 0008 4D46     		mov	r5, r9
  49 000a 4446     		mov	r4, r8
  50:../Sources/Accelerometer.c **** 	xBias = 0;
  50              		.loc 1 50 0
  51 000c 4F4B     		ldr	r3, .L8+4
  52:../Sources/Accelerometer.c **** 	zBias = 0;
  52              		.loc 1 52 0
  53 000e 5049     		ldr	r1, .L8+8
  46:../Sources/Accelerometer.c **** {
  54              		.loc 1 46 0
  55 0010 F0B4     		push	{r4, r5, r6, r7}
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 40
  58              		.cfi_offset 8, -40
  59              		.cfi_offset 9, -36
  60              		.cfi_offset 10, -32
  61              		.cfi_offset 11, -28
  50:../Sources/Accelerometer.c **** 	xBias = 0;
  62              		.loc 1 50 0
  63 0012 0027     		mov	r7, #0
  64 0014 4F4C     		ldr	r4, .L8+12
  65 0016 504D     		ldr	r5, .L8+16
  66 0018 9B46     		mov	fp, r3
  67 001a 1F60     		str	r7, [r3]
  51:../Sources/Accelerometer.c **** 	yBias = 0;
  68              		.loc 1 51 0
  69 001c 8246     		mov	sl, r0
  70 001e 0760     		str	r7, [r0]
  71              		.loc 1 52 0
  72 0020 0F60     		str	r7, [r1]
  73              	.LVL1:
  74 0022 6426     		mov	r6, #100
  48:../Sources/Accelerometer.c **** 	float yAccSum = 0;
  75              		.loc 1 48 0
  76 0024 B846     		mov	r8, r7
  47:../Sources/Accelerometer.c **** 	float xAccSum = 0;
  77              		.loc 1 47 0
  78 0026 B946     		mov	r9, r7
  79              	.LVL2:
  80              	.L6:
  81              	.LBB9:
  53:../Sources/Accelerometer.c **** 	for (int i = 0; i < 100; i++)
  54:../Sources/Accelerometer.c **** 	{
  55:../Sources/Accelerometer.c **** 		while(TFC_Ticker[0] <= 20){}		
  82              		.loc 1 55 0
  83 0028 2268     		ldr	r2, [r4]
  84 002a 142A     		cmp	r2, #20
  85 002c FCD9     		bls	.L6
  56:../Sources/Accelerometer.c **** 		TFC_Ticker[0] = 0;
  86              		.loc 1 56 0
  87 002e 0023     		mov	r3, #0
  88              	.LBB10:
  89              	.LBB11:
  57:../Sources/Accelerometer.c **** 		xAccSum += getXAcc();
  58:../Sources/Accelerometer.c **** 		yAccSum += getYAcc();
  59:../Sources/Accelerometer.c **** 		zAccSum += getZAcc();
  60:../Sources/Accelerometer.c **** 	}	
  61:../Sources/Accelerometer.c **** 	xBias = xAccSum / 100.0f;
  62:../Sources/Accelerometer.c **** 	yBias = yAccSum / 100.0f;
  63:../Sources/Accelerometer.c **** 	zBias = zAccSum / 100.0f;
  64:../Sources/Accelerometer.c **** }
  65:../Sources/Accelerometer.c **** 
  66:../Sources/Accelerometer.c **** float getXAcc()
  67:../Sources/Accelerometer.c **** {
  68:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_MSB);
  90              		.loc 1 68 0
  91 0030 0121     		mov	r1, #1
  92 0032 1D20     		mov	r0, #29
  93              	.LBE11:
  94              	.LBE10:
  56:../Sources/Accelerometer.c **** 		TFC_Ticker[0] = 0;
  95              		.loc 1 56 0
  96 0034 2360     		str	r3, [r4]
  97              	.LBB13:
  98              	.LBB12:
  99              		.loc 1 68 0
 100 0036 FFF7FEFF 		bl	I2CReadRegister
 101              	.LVL3:
  69:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_LSB);
 102              		.loc 1 69 0
 103 003a 0221     		mov	r1, #2
  68:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_MSB);
 104              		.loc 1 68 0
 105 003c 2870     		strb	r0, [r5]
 106              		.loc 1 69 0
 107 003e 1D20     		mov	r0, #29
 108 0040 FFF7FEFF 		bl	I2CReadRegister
 109              	.LVL4:
  70:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - xBias;
 110              		.loc 1 70 0
 111 0044 0021     		mov	r1, #0
  69:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_LSB);
 112              		.loc 1 69 0
 113 0046 6870     		strb	r0, [r5, #1]
 114              		.loc 1 70 0
 115 0048 6A56     		ldrsb	r2, [r5, r1]
 116 004a 40B2     		sxtb	r0, r0
 117 004c 1302     		lsl	r3, r2, #8
 118 004e 1918     		add	r1, r3, r0
 119 0050 CA17     		asr	r2, r1, #31
 120 0052 930F     		lsr	r3, r2, #30
 121 0054 5818     		add	r0, r3, r1
 122 0056 8010     		asr	r0, r0, #2
 123 0058 FFF7FEFF 		bl	__aeabi_i2f
 124              	.LVL5:
 125 005c E621     		mov	r1, #230
 126 005e 8905     		lsl	r1, r1, #22
 127 0060 FFF7FEFF 		bl	__aeabi_fmul
 128              	.LVL6:
 129 0064 3D49     		ldr	r1, .L8+20
 130 0066 FFF7FEFF 		bl	__aeabi_fmul
 131              	.LVL7:
 132 006a 5A46     		mov	r2, fp
 133 006c 1168     		ldr	r1, [r2]
 134 006e FFF7FEFF 		bl	__aeabi_fsub
 135              	.LVL8:
 136 0072 011C     		add	r1, r0, #0
 137              	.LBE12:
 138              	.LBE13:
  57:../Sources/Accelerometer.c **** 		xAccSum += getXAcc();
 139              		.loc 1 57 0
 140 0074 4846     		mov	r0, r9
 141 0076 FFF7FEFF 		bl	__aeabi_fadd
 142              	.LVL9:
 143              	.LBB14:
 144              	.LBB15:
  71:../Sources/Accelerometer.c **** }
  72:../Sources/Accelerometer.c **** 
  73:../Sources/Accelerometer.c **** float getYAcc()
  74:../Sources/Accelerometer.c **** {
  75:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_MSB);
 145              		.loc 1 75 0
 146 007a 0321     		mov	r1, #3
 147              	.LBE15:
 148              	.LBE14:
  57:../Sources/Accelerometer.c **** 		xAccSum += getXAcc();
 149              		.loc 1 57 0
 150 007c 8146     		mov	r9, r0
 151              	.LVL10:
 152              	.LBB17:
 153              	.LBB16:
 154              		.loc 1 75 0
 155 007e 1D20     		mov	r0, #29
 156              	.LVL11:
 157 0080 FFF7FEFF 		bl	I2CReadRegister
 158              	.LVL12:
  76:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_LSB);
 159              		.loc 1 76 0
 160 0084 0421     		mov	r1, #4
  75:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_MSB);
 161              		.loc 1 75 0
 162 0086 2870     		strb	r0, [r5]
 163              		.loc 1 76 0
 164 0088 1D20     		mov	r0, #29
 165 008a FFF7FEFF 		bl	I2CReadRegister
 166              	.LVL13:
  77:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - yBias;
 167              		.loc 1 77 0
 168 008e 0023     		mov	r3, #0
  76:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_LSB);
 169              		.loc 1 76 0
 170 0090 6870     		strb	r0, [r5, #1]
 171              		.loc 1 77 0
 172 0092 E956     		ldrsb	r1, [r5, r3]
 173 0094 40B2     		sxtb	r0, r0
 174 0096 0A02     		lsl	r2, r1, #8
 175 0098 1118     		add	r1, r2, r0
 176 009a CB17     		asr	r3, r1, #31
 177 009c 9A0F     		lsr	r2, r3, #30
 178 009e 5018     		add	r0, r2, r1
 179 00a0 8010     		asr	r0, r0, #2
 180 00a2 FFF7FEFF 		bl	__aeabi_i2f
 181              	.LVL14:
 182 00a6 E621     		mov	r1, #230
 183 00a8 8905     		lsl	r1, r1, #22
 184 00aa FFF7FEFF 		bl	__aeabi_fmul
 185              	.LVL15:
 186 00ae 2B49     		ldr	r1, .L8+20
 187 00b0 FFF7FEFF 		bl	__aeabi_fmul
 188              	.LVL16:
 189 00b4 5346     		mov	r3, sl
 190 00b6 1968     		ldr	r1, [r3]
 191 00b8 FFF7FEFF 		bl	__aeabi_fsub
 192              	.LVL17:
 193 00bc 011C     		add	r1, r0, #0
 194              	.LBE16:
 195              	.LBE17:
  58:../Sources/Accelerometer.c **** 		yAccSum += getYAcc();
 196              		.loc 1 58 0
 197 00be 4046     		mov	r0, r8
 198 00c0 FFF7FEFF 		bl	__aeabi_fadd
 199              	.LVL18:
 200              	.LBB18:
 201              	.LBB19:
  78:../Sources/Accelerometer.c **** }
  79:../Sources/Accelerometer.c **** 
  80:../Sources/Accelerometer.c **** float getZAcc()
  81:../Sources/Accelerometer.c **** {
  82:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_MSB);
 202              		.loc 1 82 0
 203 00c4 0521     		mov	r1, #5
 204              	.LBE19:
 205              	.LBE18:
  58:../Sources/Accelerometer.c **** 		yAccSum += getYAcc();
 206              		.loc 1 58 0
 207 00c6 8046     		mov	r8, r0
 208              	.LVL19:
 209              	.LBB21:
 210              	.LBB20:
 211              		.loc 1 82 0
 212 00c8 1D20     		mov	r0, #29
 213              	.LVL20:
 214 00ca FFF7FEFF 		bl	I2CReadRegister
 215              	.LVL21:
  83:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_LSB);
 216              		.loc 1 83 0
 217 00ce 0621     		mov	r1, #6
  82:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_MSB);
 218              		.loc 1 82 0
 219 00d0 2870     		strb	r0, [r5]
 220              		.loc 1 83 0
 221 00d2 1D20     		mov	r0, #29
 222 00d4 FFF7FEFF 		bl	I2CReadRegister
 223              	.LVL22:
  84:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - zBias;
 224              		.loc 1 84 0
 225 00d8 0022     		mov	r2, #0
  83:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_LSB);
 226              		.loc 1 83 0
 227 00da 6870     		strb	r0, [r5, #1]
 228              		.loc 1 84 0
 229 00dc A956     		ldrsb	r1, [r5, r2]
 230 00de 40B2     		sxtb	r0, r0
 231 00e0 0B02     		lsl	r3, r1, #8
 232 00e2 1A18     		add	r2, r3, r0
 233 00e4 D117     		asr	r1, r2, #31
 234 00e6 8B0F     		lsr	r3, r1, #30
 235 00e8 9818     		add	r0, r3, r2
 236 00ea 8010     		asr	r0, r0, #2
 237 00ec FFF7FEFF 		bl	__aeabi_i2f
 238              	.LVL23:
 239 00f0 E622     		mov	r2, #230
 240 00f2 9105     		lsl	r1, r2, #22
 241 00f4 FFF7FEFF 		bl	__aeabi_fmul
 242              	.LVL24:
 243 00f8 1849     		ldr	r1, .L8+20
 244 00fa FFF7FEFF 		bl	__aeabi_fmul
 245              	.LVL25:
 246 00fe 1449     		ldr	r1, .L8+8
 247 0100 013E     		sub	r6, r6, #1
 248 0102 0968     		ldr	r1, [r1]
 249 0104 FFF7FEFF 		bl	__aeabi_fsub
 250              	.LVL26:
 251 0108 011C     		add	r1, r0, #0
 252              	.LBE20:
 253              	.LBE21:
  59:../Sources/Accelerometer.c **** 		zAccSum += getZAcc();
 254              		.loc 1 59 0
 255 010a 381C     		add	r0, r7, #0
 256 010c FFF7FEFF 		bl	__aeabi_fadd
 257              	.LVL27:
 258 0110 071C     		add	r7, r0, #0
 259              	.LVL28:
  53:../Sources/Accelerometer.c **** 	for (int i = 0; i < 100; i++)
 260              		.loc 1 53 0
 261 0112 002E     		cmp	r6, #0
 262 0114 88D1     		bne	.L6
 263              	.LBE9:
  61:../Sources/Accelerometer.c **** 	xBias = xAccSum / 100.0f;
 264              		.loc 1 61 0
 265 0116 4846     		mov	r0, r9
 266              	.LVL29:
 267 0118 1149     		ldr	r1, .L8+24
 268 011a FFF7FEFF 		bl	__aeabi_fdiv
 269              	.LVL30:
 270 011e 5E46     		mov	r6, fp
 271 0120 3060     		str	r0, [r6]
  62:../Sources/Accelerometer.c **** 	yBias = yAccSum / 100.0f;
 272              		.loc 1 62 0
 273 0122 0F49     		ldr	r1, .L8+24
 274 0124 4046     		mov	r0, r8
 275 0126 FFF7FEFF 		bl	__aeabi_fdiv
 276              	.LVL31:
 277 012a 5446     		mov	r4, sl
 278 012c 2060     		str	r0, [r4]
  63:../Sources/Accelerometer.c **** 	zBias = zAccSum / 100.0f;
 279              		.loc 1 63 0
 280 012e 0C49     		ldr	r1, .L8+24
 281 0130 381C     		add	r0, r7, #0
 282 0132 FFF7FEFF 		bl	__aeabi_fdiv
 283              	.LVL32:
 284 0136 064D     		ldr	r5, .L8+8
  64:../Sources/Accelerometer.c **** }
 285              		.loc 1 64 0
 286              		@ sp needed for prologue
  63:../Sources/Accelerometer.c **** 	zBias = zAccSum / 100.0f;
 287              		.loc 1 63 0
 288 0138 2860     		str	r0, [r5]
 289              	.LVL33:
 290              	.LVL34:
 291              	.LVL35:
  64:../Sources/Accelerometer.c **** }
 292              		.loc 1 64 0
 293 013a 3CBC     		pop	{r2, r3, r4, r5}
 294 013c 9046     		mov	r8, r2
 295 013e 9946     		mov	r9, r3
 296 0140 A246     		mov	sl, r4
 297 0142 AB46     		mov	fp, r5
 298 0144 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 299              	.L9:
 300 0146 C046     		.align	2
 301              	.L8:
 302 0148 00000000 		.word	.LANCHOR1
 303 014c 00000000 		.word	.LANCHOR0
 304 0150 00000000 		.word	.LANCHOR2
 305 0154 00000000 		.word	TFC_Ticker
 306 0158 00000000 		.word	.LANCHOR3
 307 015c C3F51C41 		.word	1092416963
 308 0160 0000C842 		.word	1120403456
 309              		.cfi_endproc
 310              	.LFE1:
 312              		.section	.text.Init_Accelerometer,"ax",%progbits
 313              		.align	2
 314              		.global	Init_Accelerometer
 315              		.code	16
 316              		.thumb_func
 318              	Init_Accelerometer:
 319              	.LFB0:
  38:../Sources/Accelerometer.c **** {
 320              		.loc 1 38 0
 321              		.cfi_startproc
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI2:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
  39:../Sources/Accelerometer.c **** 	I2CWriteRegister(0x1d, MMA8451_CTRL_REG_2, 0x00 | MMA8641_HIGH_RES);
 327              		.loc 1 39 0
 328 0002 1D20     		mov	r0, #29
 329 0004 2B21     		mov	r1, #43
 330 0006 0222     		mov	r2, #2
 331 0008 FFF7FEFF 		bl	I2CWriteRegister
 332              	.LVL36:
  40:../Sources/Accelerometer.c **** 	I2CWriteRegister(0x1d, MMA8451_CTRL_REG_1, 0x00 | MMA8451_50HZ_ODR_BIT_MASK | MMA8451_ACTIVE_BIT_M
 333              		.loc 1 40 0
 334 000c 2A21     		mov	r1, #42
 335 000e 2522     		mov	r2, #37
 336 0010 1D20     		mov	r0, #29
 337 0012 FFF7FEFF 		bl	I2CWriteRegister
 338              	.LVL37:
  41:../Sources/Accelerometer.c **** 	TERMINAL_PRINTF("MMA8451 address: %x", getID());
 339              		.loc 1 41 0
 340 0016 FFF7FEFF 		bl	getID
 341              	.LVL38:
 342 001a 0449     		ldr	r1, .L11
 343 001c 021C     		mov	r2, r0
 344 001e 0448     		ldr	r0, .L11+4
 345 0020 FFF7FEFF 		bl	Qprintf
 346              	.LVL39:
  43:../Sources/Accelerometer.c **** }
 347              		.loc 1 43 0
 348              		@ sp needed for prologue
  42:../Sources/Accelerometer.c **** 	zeroAccelerometer();
 349              		.loc 1 42 0
 350 0024 FFF7FEFF 		bl	zeroAccelerometer
 351              	.LVL40:
  43:../Sources/Accelerometer.c **** }
 352              		.loc 1 43 0
 353 0028 08BD     		pop	{r3, pc}
 354              	.L12:
 355 002a C046     		.align	2
 356              	.L11:
 357 002c 00000000 		.word	.LC7
 358 0030 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 359              		.cfi_endproc
 360              	.LFE0:
 362              		.section	.text.getXAcc,"ax",%progbits
 363              		.align	2
 364              		.global	getXAcc
 365              		.code	16
 366              		.thumb_func
 368              	getXAcc:
 369              	.LFB2:
  67:../Sources/Accelerometer.c **** {
 370              		.loc 1 67 0
 371              		.cfi_startproc
 372 0000 10B5     		push	{r4, lr}
 373              	.LCFI3:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
  68:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_MSB);
 377              		.loc 1 68 0
 378 0002 0121     		mov	r1, #1
 379 0004 1D20     		mov	r0, #29
 380 0006 FFF7FEFF 		bl	I2CReadRegister
 381              	.LVL41:
 382 000a 0F4C     		ldr	r4, .L14
  69:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_LSB);
 383              		.loc 1 69 0
 384 000c 0221     		mov	r1, #2
  68:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_MSB);
 385              		.loc 1 68 0
 386 000e 2070     		strb	r0, [r4]
  69:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_LSB);
 387              		.loc 1 69 0
 388 0010 1D20     		mov	r0, #29
 389 0012 FFF7FEFF 		bl	I2CReadRegister
 390              	.LVL42:
  70:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - xBias;
 391              		.loc 1 70 0
 392 0016 0023     		mov	r3, #0
  69:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_X_LSB);
 393              		.loc 1 69 0
 394 0018 6070     		strb	r0, [r4, #1]
  70:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - xBias;
 395              		.loc 1 70 0
 396 001a E156     		ldrsb	r1, [r4, r3]
 397 001c 40B2     		sxtb	r0, r0
 398 001e 0A02     		lsl	r2, r1, #8
 399 0020 1418     		add	r4, r2, r0
 400 0022 E317     		asr	r3, r4, #31
 401 0024 990F     		lsr	r1, r3, #30
 402 0026 0A19     		add	r2, r1, r4
 403 0028 9010     		asr	r0, r2, #2
 404 002a E624     		mov	r4, #230
 405 002c FFF7FEFF 		bl	__aeabi_i2f
 406              	.LVL43:
 407 0030 A105     		lsl	r1, r4, #22
 408 0032 FFF7FEFF 		bl	__aeabi_fmul
 409              	.LVL44:
 410 0036 0549     		ldr	r1, .L14+4
 411 0038 FFF7FEFF 		bl	__aeabi_fmul
 412              	.LVL45:
 413 003c 044B     		ldr	r3, .L14+8
  71:../Sources/Accelerometer.c **** }
 414              		.loc 1 71 0
 415              		@ sp needed for prologue
  70:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - xBias;
 416              		.loc 1 70 0
 417 003e 1968     		ldr	r1, [r3]
 418 0040 FFF7FEFF 		bl	__aeabi_fsub
 419              	.LVL46:
  71:../Sources/Accelerometer.c **** }
 420              		.loc 1 71 0
 421 0044 10BD     		pop	{r4, pc}
 422              	.L15:
 423 0046 C046     		.align	2
 424              	.L14:
 425 0048 00000000 		.word	.LANCHOR3
 426 004c C3F51C41 		.word	1092416963
 427 0050 00000000 		.word	.LANCHOR0
 428              		.cfi_endproc
 429              	.LFE2:
 431              		.section	.text.getYAcc,"ax",%progbits
 432              		.align	2
 433              		.global	getYAcc
 434              		.code	16
 435              		.thumb_func
 437              	getYAcc:
 438              	.LFB3:
  74:../Sources/Accelerometer.c **** {
 439              		.loc 1 74 0
 440              		.cfi_startproc
 441 0000 10B5     		push	{r4, lr}
 442              	.LCFI4:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 4, -8
 445              		.cfi_offset 14, -4
  75:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_MSB);
 446              		.loc 1 75 0
 447 0002 0321     		mov	r1, #3
 448 0004 1D20     		mov	r0, #29
 449 0006 FFF7FEFF 		bl	I2CReadRegister
 450              	.LVL47:
 451 000a 0F4C     		ldr	r4, .L17
  76:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_LSB);
 452              		.loc 1 76 0
 453 000c 0421     		mov	r1, #4
  75:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_MSB);
 454              		.loc 1 75 0
 455 000e 2070     		strb	r0, [r4]
  76:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_LSB);
 456              		.loc 1 76 0
 457 0010 1D20     		mov	r0, #29
 458 0012 FFF7FEFF 		bl	I2CReadRegister
 459              	.LVL48:
  77:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - yBias;
 460              		.loc 1 77 0
 461 0016 0023     		mov	r3, #0
  76:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Y_LSB);
 462              		.loc 1 76 0
 463 0018 6070     		strb	r0, [r4, #1]
  77:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - yBias;
 464              		.loc 1 77 0
 465 001a E156     		ldrsb	r1, [r4, r3]
 466 001c 40B2     		sxtb	r0, r0
 467 001e 0A02     		lsl	r2, r1, #8
 468 0020 1418     		add	r4, r2, r0
 469 0022 E317     		asr	r3, r4, #31
 470 0024 990F     		lsr	r1, r3, #30
 471 0026 0A19     		add	r2, r1, r4
 472 0028 9010     		asr	r0, r2, #2
 473 002a E624     		mov	r4, #230
 474 002c FFF7FEFF 		bl	__aeabi_i2f
 475              	.LVL49:
 476 0030 A105     		lsl	r1, r4, #22
 477 0032 FFF7FEFF 		bl	__aeabi_fmul
 478              	.LVL50:
 479 0036 0549     		ldr	r1, .L17+4
 480 0038 FFF7FEFF 		bl	__aeabi_fmul
 481              	.LVL51:
 482 003c 044B     		ldr	r3, .L17+8
  78:../Sources/Accelerometer.c **** }
 483              		.loc 1 78 0
 484              		@ sp needed for prologue
  77:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - yBias;
 485              		.loc 1 77 0
 486 003e 1968     		ldr	r1, [r3]
 487 0040 FFF7FEFF 		bl	__aeabi_fsub
 488              	.LVL52:
  78:../Sources/Accelerometer.c **** }
 489              		.loc 1 78 0
 490 0044 10BD     		pop	{r4, pc}
 491              	.L18:
 492 0046 C046     		.align	2
 493              	.L17:
 494 0048 00000000 		.word	.LANCHOR3
 495 004c C3F51C41 		.word	1092416963
 496 0050 00000000 		.word	.LANCHOR1
 497              		.cfi_endproc
 498              	.LFE3:
 500              		.section	.text.getZAcc,"ax",%progbits
 501              		.align	2
 502              		.global	getZAcc
 503              		.code	16
 504              		.thumb_func
 506              	getZAcc:
 507              	.LFB4:
  81:../Sources/Accelerometer.c **** {
 508              		.loc 1 81 0
 509              		.cfi_startproc
 510 0000 10B5     		push	{r4, lr}
 511              	.LCFI5:
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 4, -8
 514              		.cfi_offset 14, -4
  82:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_MSB);
 515              		.loc 1 82 0
 516 0002 0521     		mov	r1, #5
 517 0004 1D20     		mov	r0, #29
 518 0006 FFF7FEFF 		bl	I2CReadRegister
 519              	.LVL53:
 520 000a 0F4C     		ldr	r4, .L20
  83:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_LSB);
 521              		.loc 1 83 0
 522 000c 0621     		mov	r1, #6
  82:../Sources/Accelerometer.c **** 	buf[0] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_MSB);
 523              		.loc 1 82 0
 524 000e 2070     		strb	r0, [r4]
  83:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_LSB);
 525              		.loc 1 83 0
 526 0010 1D20     		mov	r0, #29
 527 0012 FFF7FEFF 		bl	I2CReadRegister
 528              	.LVL54:
 529              		.loc 1 84 0
 530 0016 0023     		mov	r3, #0
  83:../Sources/Accelerometer.c **** 	buf[1] = I2CReadRegister(MMA8451_ADDRESS, MMA8451_OUT_Z_LSB);
 531              		.loc 1 83 0
 532 0018 6070     		strb	r0, [r4, #1]
 533              		.loc 1 84 0
 534 001a E156     		ldrsb	r1, [r4, r3]
 535 001c 40B2     		sxtb	r0, r0
 536 001e 0A02     		lsl	r2, r1, #8
 537 0020 1418     		add	r4, r2, r0
 538 0022 E317     		asr	r3, r4, #31
 539 0024 990F     		lsr	r1, r3, #30
 540 0026 0A19     		add	r2, r1, r4
 541 0028 9010     		asr	r0, r2, #2
 542 002a E624     		mov	r4, #230
 543 002c FFF7FEFF 		bl	__aeabi_i2f
 544              	.LVL55:
 545 0030 A105     		lsl	r1, r4, #22
 546 0032 FFF7FEFF 		bl	__aeabi_fmul
 547              	.LVL56:
 548 0036 0549     		ldr	r1, .L20+4
 549 0038 FFF7FEFF 		bl	__aeabi_fmul
 550              	.LVL57:
 551 003c 044B     		ldr	r3, .L20+8
  85:../Sources/Accelerometer.c **** }
 552              		.loc 1 85 0
 553              		@ sp needed for prologue
  84:../Sources/Accelerometer.c **** 	return ((((((int8_t)buf[0])*256 + (int8_t)buf[1]) / 4) / 4096.0f) * 9.81f) - zBias;
 554              		.loc 1 84 0
 555 003e 1968     		ldr	r1, [r3]
 556 0040 FFF7FEFF 		bl	__aeabi_fsub
 557              	.LVL58:
 558              		.loc 1 85 0
 559 0044 10BD     		pop	{r4, pc}
 560              	.L21:
 561 0046 C046     		.align	2
 562              	.L20:
 563 0048 00000000 		.word	.LANCHOR3
 564 004c C3F51C41 		.word	1092416963
 565 0050 00000000 		.word	.LANCHOR2
 566              		.cfi_endproc
 567              	.LFE4:
 569              		.section	.bss.xBias,"aw",%nobits
 570              		.align	2
 571              		.set	.LANCHOR0,. + 0
 574              	xBias:
 575 0000 00000000 		.space	4
 576              		.section	.bss.yBias,"aw",%nobits
 577              		.align	2
 578              		.set	.LANCHOR1,. + 0
 581              	yBias:
 582 0000 00000000 		.space	4
 583              		.section	.rodata.str1.4,"aMS",%progbits,1
 584              		.align	2
 585              	.LC7:
 586 0000 4D4D4138 		.ascii	"MMA8451 address: %x\000"
 586      34353120 
 586      61646472 
 586      6573733A 
 586      20257800 
 587              		.section	.bss.zBias,"aw",%nobits
 588              		.align	2
 589              		.set	.LANCHOR2,. + 0
 592              	zBias:
 593 0000 00000000 		.space	4
 594              		.section	.bss.buf,"aw",%nobits
 595              		.align	2
 596              		.set	.LANCHOR3,. + 0
 599              	buf:
 600 0000 00000000 		.space	16
 600      00000000 
 600      00000000 
 600      00000000 
 601              		.text
 602              	.Letext0:
 603              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 604              		.file 3 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 605              		.file 4 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
 606              		.file 5 "C:/Users/bentr_000/Google Drive/GitHub/TFC-Group2-2016/CodeWarrior Code/FRDM-TFC/Project_
DEFINED SYMBOLS
                            *ABS*:00000000 Accelerometer.c
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:23     .text.zeroAccelerometer:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:28     .text.zeroAccelerometer:00000000 zeroAccelerometer
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:302    .text.zeroAccelerometer:00000148 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:313    .text.Init_Accelerometer:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:318    .text.Init_Accelerometer:00000000 Init_Accelerometer
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:357    .text.Init_Accelerometer:0000002c $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:363    .text.getXAcc:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:368    .text.getXAcc:00000000 getXAcc
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:425    .text.getXAcc:00000048 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:432    .text.getYAcc:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:437    .text.getYAcc:00000000 getYAcc
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:494    .text.getYAcc:00000048 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:501    .text.getZAcc:00000000 $t
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:506    .text.getZAcc:00000000 getZAcc
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:563    .text.getZAcc:00000048 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:570    .bss.xBias:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:574    .bss.xBias:00000000 xBias
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:577    .bss.yBias:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:581    .bss.yBias:00000000 yBias
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:584    .rodata.str1.4:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:588    .bss.zBias:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:592    .bss.zBias:00000000 zBias
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:595    .bss.buf:00000000 $d
C:\Users\BENTR_~1\AppData\Local\Temp\ccN85WJN.s:599    .bss.buf:00000000 buf
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fmul
__aeabi_fsub
__aeabi_fadd
__aeabi_fdiv
I2CReadRegister
TFC_Ticker
I2CWriteRegister
getID
Qprintf
SDA_SERIAL_OUTGOING_QUEUE
